[
    {
        "name": "ln303",
        "result": "{\"name\": \"ln303\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 17 * x ^ 7 + 3 * x ^ 2) (Icc (0: \\u211d) (3: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 17 * x ^ 7 + 3 * x ^ 2\\nlet D := Icc (0: \\u211d) (3: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (3: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 6 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 119 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln349",
        "result": "{\"name\": \"ln349\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 7 + 13 * x ^ 6 + 8 * x ^ 5 + 19 * x ^ 4 + 15 * x ^ 3 + 8 * x ^ 2 + 19 * x + 5) (Icc (0: \\u211d) (1: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 7 + 13 * x ^ 6 + 8 * x ^ 5 + 19 * x ^ 4 + 15 * x ^ 3 + 8 * x ^ 2 + 19 * x + 5\\nlet D := Icc (0: \\u211d) (1: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (1: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 19 := by linarith [hx.1]\\n  have h2: 0 < 16 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 40 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 60 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 40 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 78 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h7: 0 < 35 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6, h7]\\n  repeat (first | exact differentiableAt_id | exact differentiableAt_const _ | exact differentiableAt_pow _)\\n  repeat (first | exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _) | exact DifferentiableAt.add _ _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (continuous_id)))\\n    (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln468",
        "result": "{\"name\": \"ln468\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 16 * x ^ 7 + 8 * x ^ 6 + 4 * x ^ 5 + 16 * x ^ 4 + 12 * x ^ 2 + 20) (Icc (0: \\u211d) (8: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 16 * x ^ 7 + 8 * x ^ 6 + 4 * x ^ 5 + 16 * x ^ 4 + 12 * x ^ 2 + 20\\nlet D := Icc (0: \\u211d) (8: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (8: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 24 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 48 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 20 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 64 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 56 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 112 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln563",
        "result": "{\"name\": \"ln563\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 10 * x ^ 5 + 9 * x ^ 3 + 12 * x ^ 2 + 2 * x + 12) (Icc (0: \\u211d) (5: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 10 * x ^ 5 + 9 * x ^ 3 + 12 * x ^ 2 + 2 * x + 12) (Icc (0: \\u211d) (5: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 10 * x ^ 5 + 9 * x ^ 3 + 12 * x ^ 2 + 2 * x + 12\\n  let D := Icc (0: \\u211d) (5: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (5: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 2 := by linarith [hx.1]\\n    have h2: 0 < 24 * x ^ 1 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 27 * x ^ 2 := by\\n      have power_pos: 0 < x ^ 2 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h4: 0 < 50 * x ^ 4 := by\\n      have power_pos: 0 < x ^ 4 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1, h2, h3, h4]\\n    exact differentiableAt_const _\\n    exact differentiableAt_id\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))) (differentiableAt_const _)\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln637",
        "result": "{\"name\": \"ln637\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 12 * x ^ 7 + 4 * x ^ 6 + 5 * x ^ 5 + 20 * x ^ 4 + 19 * x ^ 3 + 4 * x ^ 2) (Icc (0: \\u211d) (8: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 12 * x ^ 7 + 4 * x ^ 6 + 5 * x ^ 5 + 20 * x ^ 4 + 19 * x ^ 3 + 4 * x ^ 2\\nlet D := Icc (0: \\u211d) (8: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (8: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 8 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 20 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 57 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 20 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 35 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 24 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h7: 0 < 84 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6, h7]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln743",
        "result": "{\"name\": \"ln743\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 20 * x ^ 7 + 2 * x ^ 4 + 7 * x ^ 3 + 8 * x ^ 2 + 19 * x + 12) (Icc (0: \\u211d) (7: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 20 * x ^ 7 + 2 * x ^ 4 + 7 * x ^ 3 + 8 * x ^ 2 + 19 * x + 12\\nlet D := Icc (0: \\u211d) (7: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (7: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 19 := by linarith [hx.1]\\n  have h2: 0 < 16 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 21 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 8 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 28 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 140 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6]\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln832",
        "result": "{\"name\": \"ln832\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 12 * x ^ 7 + 18 * x ^ 6 + 5 * x ^ 5 + 20 * x ^ 2) (Icc (0: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 12 * x ^ 7 + 18 * x ^ 6 + 5 * x ^ 5 + 20 * x ^ 2\\n  let D := Icc (0: \\u211d) (10: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (10: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 40 * x ^ 1 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h2: 0 < 30 * x ^ 4 := by\\n      have power_pos: 0 < x ^ 4 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 108 * x ^ 5 := by\\n      have power_pos: 0 < x ^ 5 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h4: 0 < 84 * x ^ 6 := by\\n      have power_pos: 0 < x ^ 6 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1, h2, h3, h4]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln908",
        "result": "{\"name\": \"ln908\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 11 * x ^ 7 + 18 * x ^ 6 + 2 * x ^ 5 + 17 * x ^ 3 + 7 * x) (Icc (0: \\u211d) (4: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 11 * x ^ 7 + 18 * x ^ 6 + 2 * x ^ 5 + 17 * x ^ 3 + 7 * x) (Icc (0: \\u211d) (4: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 11 * x ^ 7 + 18 * x ^ 6 + 2 * x ^ 5 + 17 * x ^ 3 + 7 * x\\n  let D := Icc (0: \\u211d) (4: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (4: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    ring\\n    rw [interior_Icc] at hx\\n    have h0: 0 < 7 := by linarith\\n    have h1: 0 < 14 * x ^ 1 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h2: 0 < 51 * x ^ 2 := by\\n      have power_pos: 0 < x ^ 2 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 10 * x ^ 4 := by\\n      have power_pos: 0 < x ^ 4 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h4: 0 < 108 * x ^ 5 := by\\n      have power_pos: 0 < x ^ 5 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h5: 0 < 77 * x ^ 6 := by\\n      have power_pos: 0 < x ^ 6 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h0, h1, h2, h3, h4, h5]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln993",
        "result": "{\"name\": \"ln993\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 10 * x ^ 7 + 18 * x ^ 6 + 11 * x ^ 5 + 14 * x ^ 4 + 20 * x ^ 3 + 13 * x ^ 2 + 5 * x + 8) (Icc (0: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 10 * x ^ 7 + 18 * x ^ 6 + 11 * x ^ 5 + 14 * x ^ 4 + 20 * x ^ 3 + 13 * x ^ 2 + 5 * x + 8\\nlet D := Icc (0: \\u211d) (10: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (10: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  -- Continue with similar rewrites for each term\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 5 := by linarith\\n  have h2: 0 < 26 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 60 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 80 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 55 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 108 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h7: 0 < 70 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6, h7]\\n  -- Add all required differentiability proofs\\n  all_goals (first | exact differentiableAt_id | exact differentiableAt_const _ | exact differentiableAt_pow _)\\n  all_goals (first | exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (continuous_id)))\\n    (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln1112",
        "result": "{\"name\": \"ln1112\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 16 * x ^ 6 + 12 * x ^ 5 + 6 * x ^ 3 + 15 * x ^ 2 + 8 * x) (Icc (0: \\u211d) (8: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 16 * x ^ 6 + 12 * x ^ 5 + 6 * x ^ 3 + 15 * x ^ 2 + 8 * x\\nlet D := Icc (0: \\u211d) (8: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (8: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 8 := by linarith [hx.1]\\n  have h2: 0 < 30 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 18 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 60 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 96 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5]\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln1197",
        "result": "{\"name\": \"ln1197\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 7 + 15 * x ^ 6 + 9 * x ^ 4 + 8 * x ^ 2 + 17 * x + 15) (Icc (0: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 7 + 15 * x ^ 6 + 9 * x ^ 4 + 8 * x ^ 2 + 17 * x + 15) (Icc (0: \\u211d) (10: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 4 * x ^ 7 + 15 * x ^ 6 + 9 * x ^ 4 + 8 * x ^ 2 + 17 * x + 15\\n  let D := Icc (0: \\u211d) (10: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (10: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 17 := by linarith\\n    have h2: 0 < 16 * x ^ 1 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 36 * x ^ 3 := by\\n      have power_pos: 0 < x ^ 3 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h4: 0 < 90 * x ^ 5 := by\\n      have power_pos: 0 < x ^ 5 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h5: 0 < 28 * x ^ 6 := by\\n      have power_pos: 0 < x ^ 6 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1, h2, h3, h4, h5]\\n    exact differentiableAt_const _\\n    exact differentiableAt_id\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (differentiableAt_const _))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln1286",
        "result": "{\"name\": \"ln1286\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 6 + 8 * x ^ 5 + 15 * x ^ 2) (Icc (0: \\u211d) (6: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 8 * x ^ 6 + 8 * x ^ 5 + 15 * x ^ 2\\nlet D := Icc (0: \\u211d) (6: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (6: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 30 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 48 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 48 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln1347",
        "result": "{\"name\": \"ln1347\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 12 * x ^ 6 + 6 * x ^ 2 + 5 * x + 4) (Icc (0: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 12 * x ^ 6 + 6 * x ^ 2 + 5 * x + 4\\nlet D := Icc (0: \\u211d) (10: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (10: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 5 := by linarith [hx.1]\\n  have h2: 0 < 12 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 12 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3]\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln1406",
        "result": "{\"name\": \"ln1406\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 16 * x ^ 7 + 11 * x ^ 6 + 2 * x ^ 4 + 19 * x ^ 2) (Icc (0: \\u211d) (7: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 16 * x ^ 7 + 11 * x ^ 6 + 2 * x ^ 4 + 19 * x ^ 2\\nlet D := Icc (0: \\u211d) (7: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (7: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 38 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 8 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 66 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 112 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln1482",
        "result": "{\"name\": \"ln1482\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 12 * x ^ 7 + 7 * x ^ 6 + 13 * x ^ 5 + 13 * x ^ 3) (Icc (0: \\u211d) (2: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 12 * x ^ 7 + 7 * x ^ 6 + 13 * x ^ 5 + 13 * x ^ 3) (Icc (0: \\u211d) (2: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 12 * x ^ 7 + 7 * x ^ 6 + 13 * x ^ 5 + 13 * x ^ 3\\n  let D := Icc (0: \\u211d) (2: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (2: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 39 * x ^ 2 := by\\n      have power_pos: 0 < x ^ 2 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h2: 0 < 42 * x ^ 3 := by\\n      have power_pos: 0 < x ^ 3 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 84 * x ^ 5 := by\\n      have power_pos: 0 < x ^ 5 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h4: 0 < 84 * x ^ 6 := by\\n      have power_pos: 0 < x ^ 6 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1, h2, h3, h4]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln1558",
        "result": "{\"name\": \"ln1558\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 6 * x ^ 7 + 3 * x ^ 6 + 17 * x ^ 4 + 13 * x ^ 3 + 2 * x ^ 2 + 18 * x + 13) (Icc (0: \\u211d) (2: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 6 * x ^ 7 + 3 * x ^ 6 + 17 * x ^ 4 + 13 * x ^ 3 + 2 * x ^ 2 + 18 * x + 13\\nlet D := Icc (0: \\u211d) (2: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (2: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 18 := by linarith\\n  have h2: 0 < 4 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 51 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 39 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 68 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 21 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h7: 0 < 42 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6, h7]\\n  repeat (first | exact differentiableAt_id | exact differentiableAt_const _ | exact differentiableAt_pow _)\\n  repeat (first | exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _) | exact DifferentiableAt.add _ _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln1662",
        "result": "{\"name\": \"ln1662\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 2 * x ^ 3 + 11 * x + 4) (Icc (0: \\u211d) (6: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 2 * x ^ 3 + 11 * x + 4\\nlet D := Icc (0: \\u211d) (6: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (6: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 11 := by linarith\\n  have h2: 0 < 6 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (differentiableAt_const _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln1706",
        "result": "{\"name\": \"ln1706\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 14 * x ^ 7 + 3 * x ^ 5 + 6 * x ^ 4 + 14 * x ^ 3 + 2 * x ^ 2 + 18 * x + 19) (Icc (0: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 14 * x ^ 7 + 3 * x ^ 5 + 6 * x ^ 4 + 14 * x ^ 3 + 2 * x ^ 2 + 18 * x + 19) (Icc (0: \\u211d) (10: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 14 * x ^ 7 + 3 * x ^ 5 + 6 * x ^ 4 + 14 * x ^ 3 + 2 * x ^ 2 + 18 * x + 19\\n  let D := Icc (0: \\u211d) (10: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (10: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 18 := by linarith [hx.1]\\n    have h2: 0 < 4 * x ^ 1 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 14 * x ^ 2 := by\\n      have power_pos: 0 < x ^ 2 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h4: 0 < 42 * x ^ 3 := by\\n      have power_pos: 0 < x ^ 3 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h5: 0 < 24 * x ^ 4 := by\\n      have power_pos: 0 < x ^ 4 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h6: 0 < 15 * x ^ 4 := by\\n      have power_pos: 0 < x ^ 4 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h7: 0 < 98 * x ^ 6 := by\\n      have power_pos: 0 < x ^ 6 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1, h2, h3, h4, h5, h6, h7]\\n    repeat (first | exact differentiableAt_id | exact differentiableAt_const _ | exact differentiableAt_pow _)\\n    repeat (first | exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _) | \\n                   exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) |\\n                   exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add \\n      (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) \\n      (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n      (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n      (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n      (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n      (Continuous.mul (continuous_const) (continuous_id))) \\n      (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln1810",
        "result": "{\"name\": \"ln1810\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 9 * x ^ 4 + 3 * x ^ 2 + 19 * x + 12) (Icc (0: \\u211d) (5: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 9 * x ^ 4 + 3 * x ^ 2 + 19 * x + 12\\nlet D := Icc (0: \\u211d) (5: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (5: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 19 := by linarith\\n  have h2: 0 < 6 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 36 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3]\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln1869",
        "result": "{\"name\": \"ln1869\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 2 * x ^ 7 + 14 * x ^ 6 + 3 * x ^ 3 + 20 * x ^ 2 + 13 * x) (Icc (0: \\u211d) (5: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 2 * x ^ 7 + 14 * x ^ 6 + 3 * x ^ 3 + 20 * x ^ 2 + 13 * x) (Icc (0: \\u211d) (5: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 2 * x ^ 7 + 14 * x ^ 6 + 3 * x ^ 3 + 20 * x ^ 2 + 13 * x\\n  let D := Icc (0: \\u211d) (5: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (5: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 13 := by linarith [hx.1]\\n    have h2: 0 < 40 * x ^ 1 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 9 * x ^ 2 := by\\n      have power_pos: 0 < x ^ 2 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h4: 0 < 84 * x ^ 5 := by\\n      have power_pos: 0 < x ^ 5 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h5: 0 < 14 * x ^ 6 := by\\n      have power_pos: 0 < x ^ 6 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1, h2, h3, h4, h5]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_id\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln1954",
        "result": "{\"name\": \"ln1954\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 15 * x ^ 7 + 4 * x ^ 5 + 9 * x ^ 2 + 6) (Icc (0: \\u211d) (4: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 15 * x ^ 7 + 4 * x ^ 5 + 9 * x ^ 2 + 6\\nlet D := Icc (0: \\u211d) (4: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (4: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 18 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 20 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 105 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln2019",
        "result": "{\"name\": \"ln2019\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 15 * x ^ 6 + 6 * x ^ 2 + 12 * x + 4) (Icc (0: \\u211d) (7: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 15 * x ^ 6 + 6 * x ^ 2 + 12 * x + 4\\nlet D := Icc (0: \\u211d) (7: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (7: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 12 := by linarith [hx.1]\\n  have h2: 0 < 12 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 12 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 90 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4]\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln2078",
        "result": "{\"name\": \"ln2078\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 6 + 11 * x ^ 5 + 19 * x + 10) (Icc (0: \\u211d) (6: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 8 * x ^ 6 + 11 * x ^ 5 + 19 * x + 10\\nlet D := Icc (0: \\u211d) (6: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (6: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 19 := by linarith\\n  have h2: 0 < 48 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 66 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3]\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln2137",
        "result": "{\"name\": \"ln2137\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 15 * x ^ 6 + 18 * x ^ 5 + 9 * x ^ 3 + 4 * x ^ 2 + 3 * x) (Icc (0: \\u211d) (8: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 15 * x ^ 6 + 18 * x ^ 5 + 9 * x ^ 3 + 4 * x ^ 2 + 3 * x\\nlet D := Icc (0: \\u211d) (8: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (8: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 3 := by linarith\\n  have h2: 0 < 8 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 27 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 90 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 108 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln2222",
        "result": "{\"name\": \"ln2222\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 11 * x ^ 7 + 19 * x ^ 6 + 7 * x ^ 5 + 12 * x ^ 4 + 18) (Icc (0: \\u211d) (5: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 11 * x ^ 7 + 19 * x ^ 6 + 7 * x ^ 5 + 12 * x ^ 4 + 18\\nlet D := Icc (0: \\u211d) (5: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (5: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 48 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 35 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 114 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 132 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln2302",
        "result": "{\"name\": \"ln2302\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 12 * x ^ 6 + 11 * x ^ 5 + 17 * x ^ 4 + 5 * x ^ 3 + 18 * x ^ 2 + 13 * x) (Icc (0: \\u211d) (1: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 12 * x ^ 6 + 11 * x ^ 5 + 17 * x ^ 4 + 5 * x ^ 3 + 18 * x ^ 2 + 13 * x) (Icc (0: \\u211d) (1: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 12 * x ^ 6 + 11 * x ^ 5 + 17 * x ^ 4 + 5 * x ^ 3 + 18 * x ^ 2 + 13 * x\\n  let D := Icc (0: \\u211d) (1: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (1: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 13 := by linarith\\n    have h2: 0 < 36 * x ^ 1 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 5 * x ^ 2 := by\\n      have power_pos: 0 < x ^ 2 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h4: 0 < 68 * x ^ 3 := by\\n      have power_pos: 0 < x ^ 3 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h5: 0 < 55 * x ^ 4 := by\\n      have power_pos: 0 < x ^ 4 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h6: 0 < 72 * x ^ 5 := by\\n      have power_pos: 0 < x ^ 5 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1, h2, h3, h4, h5, h6]\\n    all_goals {\\n      try { exact differentiableAt_id }\\n      try { exact differentiableAt_const _ }\\n      try { exact differentiableAt_pow _ }\\n      try { exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _) }\\n      try { exact DifferentiableAt.add _ _ }\\n    }\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add \\n      (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) \\n      (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n      (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n      (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n      (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n      (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln2402",
        "result": "{\"name\": \"ln2402\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 15 * x ^ 7 + 7 * x ^ 6 + 17 * x ^ 5 + 9 * x ^ 4 + 9 * x ^ 2 + 16 * x) (Icc (0: \\u211d) (4: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 15 * x ^ 7 + 7 * x ^ 6 + 17 * x ^ 5 + 9 * x ^ 4 + 9 * x ^ 2 + 16 * x\\nlet D := Icc (0: \\u211d) (4: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (4: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h0: 0 < 32 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h1: 0 < 18 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 85 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 42 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 105 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h0, h1, h2, h3, h4]\\n  repeat' (first | exact differentiableAt_id | exact differentiableAt_const _ | exact differentiableAt_pow _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln2502",
        "result": "{\"name\": \"ln2502\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 18 * x ^ 6 + 4 * x ^ 5 + 20 * x ^ 4 + 11 * x ^ 3 + 2 * x ^ 2 + 9 * x + 7) (Icc (0: \\u211d) (3: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 18 * x ^ 6 + 4 * x ^ 5 + 20 * x ^ 4 + 11 * x ^ 3 + 2 * x ^ 2 + 9 * x + 7\\nlet D := Icc (0: \\u211d) (3: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (3: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 9 := by linarith\\n  have h2: 0 < 4 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 2 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 33 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 80 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 24 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h7: 0 < 108 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6, h7]\\n  all_goals { try exact differentiableAt_id; try exact differentiableAt_const _; try exact differentiableAt_pow _ }\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add \\n    (Continuous.add \\n      (Continuous.add \\n        (Continuous.add \\n          (Continuous.add \\n            (Continuous.add \\n              (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) \\n              (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n            (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n          (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n        (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n      (Continuous.mul (continuous_const) (continuous_id))) \\n    (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln2606",
        "result": "{\"name\": \"ln2606\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 7 + 10 * x ^ 6 + 20 * x ^ 5 + 8 * x ^ 3 + 15 * x ^ 2 + 19 * x) (Icc (0: \\u211d) (3: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 4 * x ^ 7 + 10 * x ^ 6 + 20 * x ^ 5 + 8 * x ^ 3 + 15 * x ^ 2 + 19 * x\\nlet D := Icc (0: \\u211d) (3: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (3: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 19 := by linarith\\n  have h2: 0 < 30 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 40 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 24 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 100 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 60 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h7: 0 < 28 * x ^ 7 := by\\n    have power_pos: 0 < x ^ 7 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6, h7]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln2706",
        "result": "{\"name\": \"ln2706\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 7 + 17 * x ^ 6 + 10 * x ^ 2 + 12 * x + 13) (Icc (0: \\u211d) (3: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 8 * x ^ 7 + 17 * x ^ 6 + 10 * x ^ 2 + 12 * x + 13\\nlet D := Icc (0: \\u211d) (3: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (3: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 12 := by linarith\\n  have h2: 0 < 20 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 102 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 56 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4]\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln2780",
        "result": "{\"name\": \"ln2780\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 11 * x ^ 7 + 8 * x + 14) (Icc (0: \\u211d) (7: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 11 * x ^ 7 + 8 * x + 14\\nlet D := Icc (0: \\u211d) (7: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (7: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 8 := by linarith\\n  have h2: 0 < 77 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln2824",
        "result": "{\"name\": \"ln2824\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 6 * x ^ 4 + 20 * x ^ 3 + 5 * x ^ 2 + 19 * x) (Icc (0: \\u211d) (3: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 6 * x ^ 4 + 20 * x ^ 3 + 5 * x ^ 2 + 19 * x) (Icc (0: \\u211d) (3: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 6 * x ^ 4 + 20 * x ^ 3 + 5 * x ^ 2 + 19 * x\\n  let D := Icc (0: \\u211d) (3: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (3: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 19 := by linarith\\n    have h2: 0 < 10 * x ^ 1 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 60 * x ^ 2 := by\\n      have power_pos: 0 < x ^ 2 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h4: 0 < 24 * x ^ 3 := by\\n      have power_pos: 0 < x ^ 3 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1, h2, h3, h4]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln2894",
        "result": "{\"name\": \"ln2894\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 17 * x ^ 7 + 15 * x ^ 6 + 8 * x ^ 5 + 2 * x ^ 4 + 7 * x ^ 2 + 18 * x + 13) (Icc (0: \\u211d) (4: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 17 * x ^ 7 + 15 * x ^ 6 + 8 * x ^ 5 + 2 * x ^ 4 + 7 * x ^ 2 + 18 * x + 13\\nlet D := Icc (0: \\u211d) (4: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (4: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 18 := by linarith\\n  have h2: 0 < 14 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 8 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 40 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 90 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 105 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h7: 0 < 119 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6, h7]\\n  all_goals (try exact differentiableAt_id; try exact differentiableAt_const _; try exact differentiableAt_pow _)\\n  all_goals (try exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  all_goals (try exact DifferentiableAt.add _ _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n    (Continuous.mul (continuous_const) (continuous_id))) \\n    (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln2998",
        "result": "{\"name\": \"ln2998\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 9 * x ^ 7 + 7 * x ^ 5 + 19 * x ^ 3 + 7 * x) (Icc (0: \\u211d) (5: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 9 * x ^ 7 + 7 * x ^ 5 + 19 * x ^ 3 + 7 * x) (Icc (0: \\u211d) (5: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 9 * x ^ 7 + 7 * x ^ 5 + 19 * x ^ 3 + 7 * x\\n  let D := Icc (0: \\u211d) (5: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (5: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 7 := by linarith [hx.1]\\n    have h2: 0 < 57 * x ^ 2 := by\\n      have power_pos: 0 < x ^ 2 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 35 * x ^ 4 := by\\n      have power_pos: 0 < x ^ 4 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h4: 0 < 63 * x ^ 6 := by\\n      have power_pos: 0 < x ^ 6 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1, h2, h3, h4]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_id\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln3068",
        "result": "{\"name\": \"ln3068\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 4 + 15 * x ^ 2 + 18 * x) (Icc (0: \\u211d) (5: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 8 * x ^ 4 + 15 * x ^ 2 + 18 * x\\nlet D := Icc (0: \\u211d) (5: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (5: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 18 := by linarith\\n  have h2: 0 < 30 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 32 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln3123",
        "result": "{\"name\": \"ln3123\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 3 * x ^ 6 + 14 * x ^ 5 + 14 * x ^ 4) (Icc (0: \\u211d) (5: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 3 * x ^ 6 + 14 * x ^ 5 + 14 * x ^ 4\\nlet D := Icc (0: \\u211d) (5: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (5: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 42 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 70 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 18 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln3184",
        "result": "{\"name\": \"ln3184\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 19 * x ^ 7 + 6 * x ^ 5 + 3 * x ^ 4 + 6 * x ^ 3 + 16 * x + 14) (Icc (0: \\u211d) (4: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 19 * x ^ 7 + 6 * x ^ 5 + 3 * x ^ 4 + 6 * x ^ 3 + 16 * x + 14\\nlet D := Icc (0: \\u211d) (4: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (4: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h0: 0 < 16 := by linarith\\n  have h1: 0 < 18 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 12 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 30 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 133 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h0, h1, h2, h3, h4]\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln3273",
        "result": "{\"name\": \"ln3273\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 12 * x ^ 7 + 15 * x ^ 6 + 20 * x ^ 5 + 17 * x ^ 4 + 4 * x ^ 2) (Icc (0: \\u211d) (8: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 12 * x ^ 7 + 15 * x ^ 6 + 20 * x ^ 5 + 17 * x ^ 4 + 4 * x ^ 2) (Icc (0: \\u211d) (8: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 12 * x ^ 7 + 15 * x ^ 6 + 20 * x ^ 5 + 17 * x ^ 4 + 4 * x ^ 2\\n  let D := Icc (0: \\u211d) (8: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (8: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 8 * x ^ 1 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h2: 0 < 68 * x ^ 3 := by\\n      have power_pos: 0 < x ^ 3 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 100 * x ^ 4 := by\\n      have power_pos: 0 < x ^ 4 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h4: 0 < 90 * x ^ 5 := by\\n      have power_pos: 0 < x ^ 5 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h5: 0 < 84 * x ^ 6 := by\\n      have power_pos: 0 < x ^ 6 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1, h2, h3, h4, h5]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln3364",
        "result": "{\"name\": \"ln3364\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 10 * x ^ 5 + 3 * x ^ 3 + 6 * x ^ 2 + 17 * x + 6) (Icc (0: \\u211d) (1: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 10 * x ^ 5 + 3 * x ^ 3 + 6 * x ^ 2 + 17 * x + 6\\nlet D := Icc (0: \\u211d) (1: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (1: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 17 := by linarith\\n  have h2: 0 < 12 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 9 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 50 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4]\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))) (differentiableAt_const _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln3438",
        "result": "{\"name\": \"ln3438\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 20 * x ^ 7 + 11 * x ^ 5 + 17 * x ^ 4 + 9 * x ^ 3 + 12 * x + 18) (Icc (0: \\u211d) (5: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 20 * x ^ 7 + 11 * x ^ 5 + 17 * x ^ 4 + 9 * x ^ 3 + 12 * x + 18\\nlet D := Icc (0: \\u211d) (5: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (5: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 12 := by linarith [hx.1]\\n  have h2: 0 < 27 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 36 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 68 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 55 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 140 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6]\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln3527",
        "result": "{\"name\": \"ln3527\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 12 * x ^ 7 + 9 * x ^ 6 + 3 * x ^ 4 + 8 * x ^ 3 + 12 * x ^ 2 + 18 * x) (Icc (0: \\u211d) (6: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 12 * x ^ 7 + 9 * x ^ 6 + 3 * x ^ 4 + 8 * x ^ 3 + 12 * x ^ 2 + 18 * x\\nlet D := Icc (0: \\u211d) (6: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (6: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 18 := by linarith\\n  have h2: 0 < 24 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 24 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 24 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 12 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 54 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h7: 0 < 84 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6, h7]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln3627",
        "result": "{\"name\": \"ln3627\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 7 + 12 * x ^ 6 + 14 * x ^ 5 + 13 * x ^ 4 + 18 * x ^ 3 + 5 * x ^ 2 + 18 * x) (Icc (0: \\u211d) (5: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 7 + 12 * x ^ 6 + 14 * x ^ 5 + 13 * x ^ 4 + 18 * x ^ 3 + 5 * x ^ 2 + 18 * x\\nlet D := Icc (0: \\u211d) (5: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (5: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 18 := by linarith [hx.1]\\n  have h2: 0 < 10 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 54 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 72 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 70 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 84 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h7: 0 < 35 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6, h7]\\n  repeat' (first | exact differentiableAt_id | exact differentiableAt_const _ | exact differentiableAt_pow _)\\n  repeat' (first | exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _) | exact DifferentiableAt.add _ _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln3742",
        "result": "{\"name\": \"ln3742\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 11 * x ^ 7 + 4 * x ^ 6 + 19 * x ^ 5 + 10 * x ^ 4 + 10 * x ^ 3 + 4 * x ^ 2) (Icc (0: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 11 * x ^ 7 + 4 * x ^ 6 + 19 * x ^ 5 + 10 * x ^ 4 + 10 * x ^ 3 + 4 * x ^ 2\\nlet D := Icc (0: \\u211d) (10: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (10: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 8 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 40 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 30 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 95 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 24 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 77 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln3848",
        "result": "{\"name\": \"ln3848\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 13 * x ^ 7 + 13 * x ^ 6 + 9 * x ^ 5 + 16 * x ^ 4 + 15 * x ^ 3 + 5 * x ^ 2) (Icc (0: \\u211d) (3: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 13 * x ^ 7 + 13 * x ^ 6 + 9 * x ^ 5 + 16 * x ^ 4 + 15 * x ^ 3 + 5 * x ^ 2) (Icc (0: \\u211d) (3: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 13 * x ^ 7 + 13 * x ^ 6 + 9 * x ^ 5 + 16 * x ^ 4 + 15 * x ^ 3 + 5 * x ^ 2\\n  let D := Icc (0: \\u211d) (3: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (3: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 10 * x ^ 1 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h2: 0 < 45 * x ^ 2 := by\\n      have power_pos: 0 < x ^ 2 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 64 * x ^ 3 := by\\n      have power_pos: 0 < x ^ 3 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h4: 0 < 45 * x ^ 4 := by\\n      have power_pos: 0 < x ^ 4 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h5: 0 < 78 * x ^ 5 := by\\n      have power_pos: 0 < x ^ 5 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h6: 0 < 91 * x ^ 6 := by\\n      have power_pos: 0 < x ^ 6 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1, h2, h3, h4, h5, h6]\\n    repeat (first | exact differentiableAt_id | exact differentiableAt_const _ | exact differentiableAt_pow _)\\n    repeat (first | exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _) | exact DifferentiableAt.add _ _)\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln3954",
        "result": "{\"name\": \"ln3954\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 5 + 15 * x ^ 3 + 20 * x ^ 2) (Icc (0: \\u211d) (1: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 5 + 15 * x ^ 3 + 20 * x ^ 2\\nlet D := Icc (0: \\u211d) (1: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (1: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 40 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 45 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 25 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln4015",
        "result": "{\"name\": \"ln4015\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 7 + 12 * x ^ 5 + 15 * x ^ 4 + 4 * x ^ 2 + 11 * x + 4) (Icc (0: \\u211d) (5: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 8 * x ^ 7 + 12 * x ^ 5 + 15 * x ^ 4 + 4 * x ^ 2 + 11 * x + 4\\nlet D := Icc (0: \\u211d) (5: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (5: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 11 := by linarith [hx.1]\\n  have h2: 0 < 8 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 60 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 8 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 60 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5]\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln4104",
        "result": "{\"name\": \"ln4104\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 17 * x ^ 4 + 6 * x ^ 3 + 2 * x ^ 2 + 7 * x) (Icc (0: \\u211d) (5: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 17 * x ^ 4 + 6 * x ^ 3 + 2 * x ^ 2 + 7 * x\\nlet D := Icc (0: \\u211d) (5: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (5: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 7 := by linarith [hx.1]\\n  have h2: 0 < 4 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 18 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 68 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln4174",
        "result": "{\"name\": \"ln4174\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 18 * x ^ 7 + 10 * x ^ 5 + 13 * x ^ 4 + 3 * x) (Icc (0: \\u211d) (9: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 18 * x ^ 7 + 10 * x ^ 5 + 13 * x ^ 4 + 3 * x\\nlet D := Icc (0: \\u211d) (9: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (9: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 3 := by linarith\\n  have h2: 0 < 52 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 50 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 126 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln4244",
        "result": "{\"name\": \"ln4244\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 7 + 12 * x ^ 5 + 14 * x ^ 4 + 12 * x ^ 2 + 7 * x) (Icc (0: \\u211d) (6: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 7 + 12 * x ^ 5 + 14 * x ^ 4 + 12 * x ^ 2 + 7 * x) (Icc (0: \\u211d) (6: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 7 + 12 * x ^ 5 + 14 * x ^ 4 + 12 * x ^ 2 + 7 * x\\n  let D := Icc (0: \\u211d) (6: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (6: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 7 := by linarith\\n    have h2: 0 < 24 * x ^ 1 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 56 * x ^ 3 := by\\n      have power_pos: 0 < x ^ 3 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h4: 0 < 60 * x ^ 4 := by\\n      have power_pos: 0 < x ^ 4 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h5: 0 < 84 * x ^ 6 := by\\n      have power_pos: 0 < x ^ 6 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1, h2, h3, h4, h5]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_id\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln4329",
        "result": "{\"name\": \"ln4329\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 6 * x ^ 7 + 12 * x ^ 4 + 18 * x ^ 3 + 8) (Icc (0: \\u211d) (6: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 6 * x ^ 7 + 12 * x ^ 4 + 18 * x ^ 3 + 8\\nlet D := Icc (0: \\u211d) (6: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (6: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 54 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 48 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 42 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln4394",
        "result": "{\"name\": \"ln4394\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 7 + 9 * x ^ 5 + 5 * x ^ 3) (Icc (0: \\u211d) (3: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 7 + 9 * x ^ 5 + 5 * x ^ 3\\nlet D := Icc (0: \\u211d) (3: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (3: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 15 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 45 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 35 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln4455",
        "result": "{\"name\": \"ln4455\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 19 * x ^ 7 + 15 * x ^ 5 + 15 * x ^ 3 + 15 * x ^ 2 + 7 * x + 3) (Icc (0: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 19 * x ^ 7 + 15 * x ^ 5 + 15 * x ^ 3 + 15 * x ^ 2 + 7 * x + 3\\n  let D := Icc (0: \\u211d) (10: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (10: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 7 := by linarith\\n    have h2: 0 < 30 * x ^ 1 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 45 * x ^ 2 := by\\n      have power_pos: 0 < x ^ 2 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h4: 0 < 45 * x ^ 3 := by\\n      have power_pos: 0 < x ^ 3 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h5: 0 < 75 * x ^ 4 := by\\n      have power_pos: 0 < x ^ 4 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h6: 0 < 133 * x ^ 6 := by\\n      have power_pos: 0 < x ^ 6 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1, h2, h3, h4, h5, h6]\\n    exact differentiableAt_const _\\n    exact differentiableAt_id\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln4544",
        "result": "{\"name\": \"ln4544\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 12 * x ^ 7 + 11 * x ^ 6 + 13 * x ^ 5 + 8 * x ^ 4 + 5 * x ^ 3 + 8 * x ^ 2 + 7 * x) (Icc (0: \\u211d) (2: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 12 * x ^ 7 + 11 * x ^ 6 + 13 * x ^ 5 + 8 * x ^ 4 + 5 * x ^ 3 + 8 * x ^ 2 + 7 * x\\nlet D := Icc (0: \\u211d) (2: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (2: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 7 := by linarith\\n  have h2: 0 < 16 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 40 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 60 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 65 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 66 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h7: 0 < 84 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6, h7]\\n  all_goals {\\n    try exact differentiableAt_id\\n    try exact differentiableAt_const _\\n    try exact differentiableAt_pow _\\n  }\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln4659",
        "result": "{\"name\": \"ln4659\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 6 + 7 * x ^ 5 + 12 * x ^ 4 + 9 * x ^ 3 + 18 * x ^ 2 + 12 * x + 16) (Icc (0: \\u211d) (1: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 6 + 7 * x ^ 5 + 12 * x ^ 4 + 9 * x ^ 3 + 18 * x ^ 2 + 12 * x + 16) (Icc (0: \\u211d) (1: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 8 * x ^ 6 + 7 * x ^ 5 + 12 * x ^ 4 + 9 * x ^ 3 + 18 * x ^ 2 + 12 * x + 16\\n  let D := Icc (0: \\u211d) (1: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (1: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 12 := by linarith [hx.1]\\n    have h2: 0 < 36 * x ^ 1 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 54 * x ^ 2 := by\\n      have power_pos: 0 < x ^ 2 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h4: 0 < 48 * x ^ 3 := by\\n      have power_pos: 0 < x ^ 3 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h5: 0 < 35 * x ^ 4 := by\\n      have power_pos: 0 < x ^ 4 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h6: 0 < 48 * x ^ 5 := by\\n      have power_pos: 0 < x ^ 5 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1, h2, h3, h4, h5, h6]\\n    exact differentiableAt_const _\\n    exact differentiableAt_id\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln4763",
        "result": "{\"name\": \"ln4763\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 15 * x ^ 7 + 6 * x ^ 6 + 17 * x ^ 3 + 12 * x ^ 2 + 9 * x) (Icc (0: \\u211d) (6: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 15 * x ^ 7 + 6 * x ^ 6 + 17 * x ^ 3 + 12 * x ^ 2 + 9 * x\\nlet D := Icc (0: \\u211d) (6: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (6: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 9 := by linarith [hx.1]\\n  have h2: 0 < 24 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 51 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 42 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 105 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln4848",
        "result": "{\"name\": \"ln4848\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 20 * x ^ 7 + 12 * x ^ 6 + 12 * x ^ 5 + 3 * x ^ 4 + 7 * x) (Icc (0: \\u211d) (8: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 20 * x ^ 7 + 12 * x ^ 6 + 12 * x ^ 5 + 3 * x ^ 4 + 7 * x\\nlet D := Icc (0: \\u211d) (8: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (8: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 7 := by linarith\\n  have h2: 0 < 12 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 60 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 84 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 140 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln4933",
        "result": "{\"name\": \"ln4933\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 15 * x ^ 6 + 5 * x ^ 3 + 16 * x ^ 2 + 7) (Icc (0: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 15 * x ^ 6 + 5 * x ^ 3 + 16 * x ^ 2 + 7\\nlet D := Icc (0: \\u211d) (10: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (10: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 32 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 15 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 15 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln4998",
        "result": "{\"name\": \"ln4998\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 16 * x ^ 7 + 20 * x ^ 4 + 4 * x ^ 2 + 18 * x + 15) (Icc (0: \\u211d) (5: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 16 * x ^ 7 + 20 * x ^ 4 + 4 * x ^ 2 + 18 * x + 15\\nlet D := Icc (0: \\u211d) (5: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (5: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 18 := by linarith\\n  have h2: 0 < 8 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 80 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 112 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4]\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln5072",
        "result": "{\"name\": \"ln5072\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 2 * x ^ 7 + 19 * x ^ 5 + 4 * x ^ 3 + 20 * x) (Icc (0: \\u211d) (7: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 2 * x ^ 7 + 19 * x ^ 5 + 4 * x ^ 3 + 20 * x\\nlet D := Icc (0: \\u211d) (7: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (7: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 20 := by linarith\\n  have h2: 0 < 12 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 95 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 14 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln5142",
        "result": "{\"name\": \"ln5142\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 17 * x ^ 7 + 5 * x ^ 6 + 12 * x ^ 5 + 17 * x ^ 4 + 8 * x ^ 3) (Icc (0: \\u211d) (6: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 17 * x ^ 7 + 5 * x ^ 6 + 12 * x ^ 5 + 17 * x ^ 4 + 8 * x ^ 3\\nlet D := Icc (0: \\u211d) (6: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (6: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 24 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 60 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 30 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 68 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 35 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln5233",
        "result": "{\"name\": \"ln5233\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 13 * x ^ 6 + 13 * x ^ 5 + 17 * x ^ 4 + 17 * x ^ 3 + 7 * x ^ 2 + 10 * x + 2) (Icc (0: \\u211d) (7: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 13 * x ^ 6 + 13 * x ^ 5 + 17 * x ^ 4 + 17 * x ^ 3 + 7 * x ^ 2 + 10 * x + 2) (Icc (0: \\u211d) (7: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 13 * x ^ 6 + 13 * x ^ 5 + 17 * x ^ 4 + 17 * x ^ 3 + 7 * x ^ 2 + 10 * x + 2\\n  let D := Icc (0: \\u211d) (7: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (7: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h0: 0 < 10 := by linarith\\n    have h1: 0 < 14 * x ^ 1 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h2: 0 < 14 * x ^ 2 := by\\n      have power_pos: 0 < x ^ 2 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 68 * x ^ 3 := by\\n      have power_pos: 0 < x ^ 3 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h4: 0 < 78 * x ^ 4 := by\\n      have power_pos: 0 < x ^ 4 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h5: 0 < 78 * x ^ 5 := by\\n      have power_pos: 0 < x ^ 5 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h0, h1, h2, h3, h4, h5]\\n    all_goals {\\n      try { exact differentiableAt_id }\\n      try { exact differentiableAt_const _ }\\n      try { exact differentiableAt_pow _ }\\n      try { exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _) }\\n      try { exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) }\\n    }\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add \\n      (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) \\n      (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n      (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n      (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n      (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n      (Continuous.mul (continuous_const) (continuous_id))) \\n      (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln5337",
        "result": "{\"name\": \"ln5337\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 9 * x ^ 5 + 11 * x ^ 4 + 8 * x ^ 2 + 20 * x) (Icc (0: \\u211d) (5: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 9 * x ^ 5 + 11 * x ^ 4 + 8 * x ^ 2 + 20 * x\\nlet D := Icc (0: \\u211d) (5: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (5: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 20 := by linarith\\n  have h2: 0 < 16 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 45 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 44 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4]\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln5407",
        "result": "{\"name\": \"ln5407\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 2 * x ^ 6 + 4 * x ^ 4 + 11 * x ^ 2 + 19 * x + 3) (Icc (0: \\u211d) (1: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 2 * x ^ 6 + 4 * x ^ 4 + 11 * x ^ 2 + 19 * x + 3\\nlet D := Icc (0: \\u211d) (1: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (1: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 19 := by linarith\\n  have h2: 0 < 22 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 12 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 12 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4]\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln5481",
        "result": "{\"name\": \"ln5481\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 9 * x ^ 5 + 14 * x ^ 4 + 12 * x + 10) (Icc (0: \\u211d) (2: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 9 * x ^ 5 + 14 * x ^ 4 + 12 * x + 10) (Icc (0: \\u211d) (2: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 9 * x ^ 5 + 14 * x ^ 4 + 12 * x + 10\\n  let D := Icc (0: \\u211d) (2: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (2: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 12 := by linarith\\n    have h2: 0 < 56 * x ^ 3 := by\\n      have power_pos: 0 < x ^ 3 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 45 * x ^ 4 := by\\n      have power_pos: 0 < x ^ 4 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1, h2, h3]\\n    exact differentiableAt_const _\\n    exact differentiableAt_id\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln5540",
        "result": "{\"name\": \"ln5540\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 20 * x ^ 6 + 4 * x ^ 5 + 8 * x ^ 4 + 3 * x ^ 3 + 20 * x ^ 2 + 8 * x) (Icc (0: \\u211d) (9: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 20 * x ^ 6 + 4 * x ^ 5 + 8 * x ^ 4 + 3 * x ^ 3 + 20 * x ^ 2 + 8 * x) (Icc (0: \\u211d) (9: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 20 * x ^ 6 + 4 * x ^ 5 + 8 * x ^ 4 + 3 * x ^ 3 + 20 * x ^ 2 + 8 * x\\n  let D := Icc (0: \\u211d) (9: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (9: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 8 := by linarith [hx.1]\\n    have h2: 0 < 40 * x ^ 1 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 60 * x ^ 2 := by\\n      have power_pos: 0 < x ^ 2 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h4: 0 < 32 * x ^ 3 := by\\n      have power_pos: 0 < x ^ 3 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h5: 0 < 20 * x ^ 4 := by\\n      have power_pos: 0 < x ^ 4 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h6: 0 < 120 * x ^ 5 := by\\n      have power_pos: 0 < x ^ 5 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1, h2, h3, h4, h5, h6]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln5640",
        "result": "{\"name\": \"ln5640\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 20 * x ^ 5 + 16 * x ^ 4) (Icc (0: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 20 * x ^ 5 + 16 * x ^ 4\\nlet D := Icc (0: \\u211d) (10: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (10: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 80 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 100 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln5686",
        "result": "{\"name\": \"ln5686\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 7 + 4 * x ^ 5 + 9 * x ^ 3 + 20 * x ^ 2 + 17 * x + 8) (Icc (0: \\u211d) (1: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 4 * x ^ 7 + 4 * x ^ 5 + 9 * x ^ 3 + 20 * x ^ 2 + 17 * x + 8\\nlet D := Icc (0: \\u211d) (1: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (1: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 17 := by linarith\\n  have h2: 0 < 40 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 27 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 20 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 28 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 28 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln5775",
        "result": "{\"name\": \"ln5775\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 16 * x ^ 4 + 10 * x ^ 3 + 13 * x ^ 2) (Icc (0: \\u211d) (9: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 16 * x ^ 4 + 10 * x ^ 3 + 13 * x ^ 2\\nlet D := Icc (0: \\u211d) (9: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (9: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 26 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 30 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 64 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln5836",
        "result": "{\"name\": \"ln5836\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 7 + 6 * x ^ 4 + 7 * x ^ 3 + 12 * x ^ 2 + 6 * x) (Icc (0: \\u211d) (1: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 4 * x ^ 7 + 6 * x ^ 4 + 7 * x ^ 3 + 12 * x ^ 2 + 6 * x\\nlet D := Icc (0: \\u211d) (1: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (1: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 6 := by linarith [hx.1]\\n  have h2: 0 < 24 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 21 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 24 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 28 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln5921",
        "result": "{\"name\": \"ln5921\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 18 * x ^ 7 + 5 * x ^ 6 + 15 * x ^ 4 + 3 * x ^ 2 + 7 * x) (Icc (0: \\u211d) (5: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 18 * x ^ 7 + 5 * x ^ 6 + 15 * x ^ 4 + 3 * x ^ 2 + 7 * x\\nlet D := Icc (0: \\u211d) (5: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (5: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 7 := by linarith\\n  have h2: 0 < 6 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 6 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 60 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 30 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 126 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln6006",
        "result": "{\"name\": \"ln6006\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 6 + 7 * x ^ 4 + 5 * x ^ 2 + 14) (Icc (0: \\u211d) (7: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 6 + 7 * x ^ 4 + 5 * x ^ 2 + 14\\nlet D := Icc (0: \\u211d) (7: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (7: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 10 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 28 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 42 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln6071",
        "result": "{\"name\": \"ln6071\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 7 + 3 * x ^ 5 + 6 * x ^ 4 + 20 * x ^ 2 + 14 * x + 20) (Icc (0: \\u211d) (3: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 7 + 3 * x ^ 5 + 6 * x ^ 4 + 20 * x ^ 2 + 14 * x + 20\\nlet D := Icc (0: \\u211d) (3: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (3: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 14 := by linarith [hx.1]\\n  have h2: 0 < 40 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 24 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 15 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 35 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5]\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln6160",
        "result": "{\"name\": \"ln6160\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 6 + 16 * x ^ 4 + 5 * x ^ 3 + 19 * x ^ 2) (Icc (0: \\u211d) (6: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 6 + 16 * x ^ 4 + 5 * x ^ 3 + 19 * x ^ 2\\nlet D := Icc (0: \\u211d) (6: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (6: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 38 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 15 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 64 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 42 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln6236",
        "result": "{\"name\": \"ln6236\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 10 * x ^ 7 + 7 * x ^ 6 + 3 * x ^ 5 + 19 * x ^ 4 + 6 * x ^ 3 + 12 * x + 14) (Icc (0: \\u211d) (9: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 10 * x ^ 7 + 7 * x ^ 6 + 3 * x ^ 5 + 19 * x ^ 4 + 6 * x ^ 3 + 12 * x + 14\\nlet D := Icc (0: \\u211d) (9: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (9: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h0: 0 < 12 := by linarith [hx.1]\\n  have h1: 0 < 18 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 18 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 15 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 76 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 42 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 70 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h0, h1, h2, h3, h4, h5, h6]\\n  all_goals (try (exact differentiableAt_id <|> exact differentiableAt_const _ <|> exact differentiableAt_pow _))\\n  all_goals (try (exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)))\\n  repeat (try (exact DifferentiableAt.add _ _))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n    (Continuous.mul (continuous_const) (continuous_id))) \\n    (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln6340",
        "result": "{\"name\": \"ln6340\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 12 * x ^ 7 + 3 * x ^ 5 + 8 * x ^ 4 + 4 * x ^ 3 + 20 * x) (Icc (0: \\u211d) (4: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 12 * x ^ 7 + 3 * x ^ 5 + 8 * x ^ 4 + 4 * x ^ 3 + 20 * x\\nlet D := Icc (0: \\u211d) (4: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (4: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 20 := by linarith\\n  have h2: 0 < 12 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 15 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 32 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 12 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln6425",
        "result": "{\"name\": \"ln6425\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 7 + 2 * x ^ 6 + 9 * x ^ 5 + 10 * x + 13) (Icc (0: \\u211d) (9: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 7 + 2 * x ^ 6 + 9 * x ^ 5 + 10 * x + 13\\nlet D := Icc (0: \\u211d) (9: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (9: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 10 := by linarith\\n  have h2: 0 < 35 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 12 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 42 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln6499",
        "result": "{\"name\": \"ln6499\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 17 * x ^ 7 + 11 * x ^ 5 + 20 * x ^ 4 + 7 * x ^ 3 + 6 * x ^ 2 + 12 * x + 3) (Icc (0: \\u211d) (3: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 17 * x ^ 7 + 11 * x ^ 5 + 20 * x ^ 4 + 7 * x ^ 3 + 6 * x ^ 2 + 12 * x + 3\\nlet D := Icc (0: \\u211d) (3: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (3: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 12 := by linarith [hx.1]\\n  have h2: 0 < 12 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 12 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 21 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 80 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 55 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h7: 0 < 119 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6, h7]\\n  \\n  -- Differentiability proofs\\n  repeat (first | exact differentiableAt_id | exact differentiableAt_const _ | exact differentiableAt_pow _)\\n  repeat (first | exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _) | exact DifferentiableAt.add _ _)\\n\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (continuous_id)))\\n    (continuous_const)).continuousOn\\n\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln6603",
        "result": "{\"name\": \"ln6603\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 15 * x ^ 4 + 19 * x + 13) (Icc (0: \\u211d) (7: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 15 * x ^ 4 + 19 * x + 13\\nlet D := Icc (0: \\u211d) (7: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (7: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 19 := by linarith\\n  have h2: 0 < 60 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (differentiableAt_const _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln6647",
        "result": "{\"name\": \"ln6647\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 4 + 6 * x ^ 3 + 14 * x ^ 2 + 6) (Icc (0: \\u211d) (5: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 4 + 6 * x ^ 3 + 14 * x ^ 2 + 6) (Icc (0: \\u211d) (5: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 4 + 6 * x ^ 3 + 14 * x ^ 2 + 6\\n  let D := Icc (0: \\u211d) (5: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (5: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 28 * x ^ 1 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h2: 0 < 18 * x ^ 2 := by\\n      have power_pos: 0 < x ^ 2 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 28 * x ^ 3 := by\\n      have power_pos: 0 < x ^ 3 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1, h2, h3]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln6712",
        "result": "{\"name\": \"ln6712\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 10 * x ^ 6 + 9 * x ^ 5 + 14 * x ^ 4 + 3 * x ^ 2 + 17) (Icc (0: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 10 * x ^ 6 + 9 * x ^ 5 + 14 * x ^ 4 + 3 * x ^ 2 + 17\\nlet D := Icc (0: \\u211d) (10: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (10: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 6 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 45 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 60 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 60 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln6792",
        "result": "{\"name\": \"ln6792\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 11 * x ^ 7 + 14 * x ^ 4 + 18 * x ^ 3 + 3 * x ^ 2 + 8 * x) (Icc (0: \\u211d) (7: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 11 * x ^ 7 + 14 * x ^ 4 + 18 * x ^ 3 + 3 * x ^ 2 + 8 * x\\nlet D := Icc (0: \\u211d) (7: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (7: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 8 := by linarith\\n  have h2: 0 < 6 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 54 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 56 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 77 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5]\\n  \\n  -- Differentiability proofs\\n  repeat' (first | exact differentiableAt_id | exact differentiableAt_const _ | exact differentiableAt_pow _)\\n  repeat' (first | exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _) | \\n                   exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) |\\n                   exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\n\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln6877",
        "result": "{\"name\": \"ln6877\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 3 * x ^ 7 + 19 * x ^ 5 + 13 * x ^ 4 + 4 * x ^ 2 + 8 * x + 12) (Icc (0: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 3 * x ^ 7 + 19 * x ^ 5 + 13 * x ^ 4 + 4 * x ^ 2 + 8 * x + 12\\nlet D := Icc (0: \\u211d) (10: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (10: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 8 := by linarith\\n  have h2: 0 < 8 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 8 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 52 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 95 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 21 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6]\\n  repeat' (first | exact differentiableAt_id | exact differentiableAt_const _ | exact differentiableAt_pow _)\\n  repeat' (first | exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n           | exact DifferentiableAt.add _ _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)))\\n    (Continuous.mul (continuous_const) (continuous_id)))\\n    (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln6966",
        "result": "{\"name\": \"ln6966\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 13 * x ^ 2 + 12 * x) (Icc (0: \\u211d) (8: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 13 * x ^ 2 + 12 * x\\nlet D := Icc (0: \\u211d) (8: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (8: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 12 := by linarith\\n  have h2: 0 < 26 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln7006",
        "result": "{\"name\": \"ln7006\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 3 * x ^ 7 + 13 * x ^ 6 + 18 * x ^ 5 + 15 * x ^ 4 + 9 * x ^ 3 + 17 * x ^ 2 + 6 * x) (Icc (0: \\u211d) (1: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 3 * x ^ 7 + 13 * x ^ 6 + 18 * x ^ 5 + 15 * x ^ 4 + 9 * x ^ 3 + 17 * x ^ 2 + 6 * x\\nlet D := Icc (0: \\u211d) (1: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (1: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h0: 0 < 6 := by linarith [hx.1]\\n  have h1: 0 < 34 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 27 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 60 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 90 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 108 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 78 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h0, h1, h2, h3, h4, h5, h6]\\n  all_goals {\\n    try exact differentiableAt_id\\n    try exact differentiableAt_const _\\n    try exact differentiableAt_pow _\\n  }\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln7121",
        "result": "{\"name\": \"ln7121\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 20 * x ^ 6 + 14 * x ^ 5 + 3 * x ^ 4 + 13 * x ^ 2) (Icc (0: \\u211d) (6: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 20 * x ^ 6 + 14 * x ^ 5 + 3 * x ^ 4 + 13 * x ^ 2) (Icc (0: \\u211d) (6: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 20 * x ^ 6 + 14 * x ^ 5 + 3 * x ^ 4 + 13 * x ^ 2\\n  let D := Icc (0: \\u211d) (6: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (6: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 26 * x ^ 1 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h2: 0 < 12 * x ^ 3 := by\\n      have power_pos: 0 < x ^ 3 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 70 * x ^ 4 := by\\n      have power_pos: 0 < x ^ 4 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h4: 0 < 120 * x ^ 5 := by\\n      have power_pos: 0 < x ^ 5 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1, h2, h3, h4]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln7197",
        "result": "{\"name\": \"ln7197\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 7 + 8 * x ^ 5 + 3 * x ^ 3 + 18 * x ^ 2 + 2 * x) (Icc (0: \\u211d) (7: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 7 + 8 * x ^ 5 + 3 * x ^ 3 + 18 * x ^ 2 + 2 * x\\nlet D := Icc (0: \\u211d) (7: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (7: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 2 := by linarith\\n  have h2: 0 < 36 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 9 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 24 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 49 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln7282",
        "result": "{\"name\": \"ln7282\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 7 + 7 * x ^ 6 + 3 * x ^ 2 + 8 * x + 7) (Icc (0: \\u211d) (1: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 4 * x ^ 7 + 7 * x ^ 6 + 3 * x ^ 2 + 8 * x + 7\\nlet D := Icc (0: \\u211d) (1: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (1: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 8 := by linarith\\n  have h2: 0 < 6 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 28 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 28 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4]\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln7356",
        "result": "{\"name\": \"ln7356\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 13 * x ^ 7 + 4 * x ^ 6 + 16 * x ^ 5 + 11 * x ^ 4 + 5 * x ^ 3 + 15 * x ^ 2 + 20) (Icc (0: \\u211d) (1: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 13 * x ^ 7 + 4 * x ^ 6 + 16 * x ^ 5 + 11 * x ^ 4 + 5 * x ^ 3 + 15 * x ^ 2 + 20\\nlet D := Icc (0: \\u211d) (1: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (1: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 30 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 15 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 44 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 80 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 24 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 42 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6]\\n  repeat first | exact differentiableAt_id | exact differentiableAt_const _ | exact differentiableAt_pow _\\n  repeat first | exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  repeat first | exact DifferentiableAt.add .. \\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n    (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) \\n    (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln7466",
        "result": "{\"name\": \"ln7466\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 18 * x ^ 4 + 14 * x ^ 3 + 8 * x ^ 2 + 13 * x + 11) (Icc (0: \\u211d) (1: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 18 * x ^ 4 + 14 * x ^ 3 + 8 * x ^ 2 + 13 * x + 11) (Icc (0: \\u211d) (1: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 18 * x ^ 4 + 14 * x ^ 3 + 8 * x ^ 2 + 13 * x + 11\\n  let D := Icc (0: \\u211d) (1: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (1: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 13 := by linarith [hx.1]\\n    have h2: 0 < 16 * x ^ 1 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 42 * x ^ 2 := by\\n      have power_pos: 0 < x ^ 2 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h4: 0 < 72 * x ^ 3 := by\\n      have power_pos: 0 < x ^ 3 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1, h2, h3, h4]\\n    exact differentiableAt_const _\\n    exact differentiableAt_id\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln7540",
        "result": "{\"name\": \"ln7540\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 7 + 10 * x ^ 6 + 11 * x ^ 4 + 10 * x ^ 3 + 13) (Icc (0: \\u211d) (1: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 8 * x ^ 7 + 10 * x ^ 6 + 11 * x ^ 4 + 10 * x ^ 3 + 13\\nlet D := Icc (0: \\u211d) (1: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (1: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 56 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 40 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 44 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln7620",
        "result": "{\"name\": \"ln7620\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 7 + 17 * x ^ 6 + 12 * x ^ 5 + 6 * x ^ 2 + 2 * x + 10) (Icc (0: \\u211d) (1: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 7 + 17 * x ^ 6 + 12 * x ^ 5 + 6 * x ^ 2 + 2 * x + 10\\nlet D := Icc (0: \\u211d) (1: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (1: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 2 := by linarith\\n  have h2: 0 < 12 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 42 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 102 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 35 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln7709",
        "result": "{\"name\": \"ln7709\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 10 * x ^ 6 + 12 * x ^ 5 + 20 * x ^ 2) (Icc (0: \\u211d) (6: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 10 * x ^ 6 + 12 * x ^ 5 + 20 * x ^ 2\\nlet D := Icc (0: \\u211d) (6: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (6: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 40 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 60 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 60 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln7770",
        "result": "{\"name\": \"ln7770\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 7 + 6 * x ^ 6 + 6 * x ^ 5 + 10 * x ^ 4 + 2 * x ^ 3 + 12 * x ^ 2 + 9 * x) (Icc (0: \\u211d) (8: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 7 + 6 * x ^ 6 + 6 * x ^ 5 + 10 * x ^ 4 + 2 * x ^ 3 + 12 * x ^ 2 + 9 * x\\nlet D := Icc (0: \\u211d) (8: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (8: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 9 := by linarith\\n  have h2: 0 < 24 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 6 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 40 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 30 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 42 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h7: 0 < 35 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6, h7]\\n  all_goals (try (exact differentiableAt_id); try (exact differentiableAt_const _); try (exact differentiableAt_pow _))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln7885",
        "result": "{\"name\": \"ln7885\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 12 * x ^ 6 + 17 * x ^ 5 + 9 * x ^ 2 + 8 * x) (Icc (0: \\u211d) (5: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 12 * x ^ 6 + 17 * x ^ 5 + 9 * x ^ 2 + 8 * x) (Icc (0: \\u211d) (5: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 12 * x ^ 6 + 17 * x ^ 5 + 9 * x ^ 2 + 8 * x\\n  let D := Icc (0: \\u211d) (5: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (0: \\u211d) (5: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 8 := by linarith\\n    have h2: 0 < 18 * x ^ 1 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h3: 0 < 85 * x ^ 4 := by\\n      have power_pos: 0 < x ^ 4 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    have h4: 0 < 72 * x ^ 5 := by\\n      have power_pos: 0 < x ^ 5 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1, h2, h3, h4]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_id\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln7955",
        "result": "{\"name\": \"ln7955\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 14 * x ^ 7 + 15 * x ^ 5 + 5 * x ^ 4 + 4 * x ^ 3) (Icc (0: \\u211d) (6: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 14 * x ^ 7 + 15 * x ^ 5 + 5 * x ^ 4 + 4 * x ^ 3\\nlet D := Icc (0: \\u211d) (6: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (6: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 12 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 20 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 75 * x ^ 4 := by\\n    have power_pos: 0 < x ^ 4 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 98 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8031",
        "result": "{\"name\": \"ln8031\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 20 * x ^ 7 + 11 * x ^ 6 + 16 * x ^ 3 + 17 * x ^ 2 + 18 * x + 11) (Icc (0: \\u211d) (6: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 20 * x ^ 7 + 11 * x ^ 6 + 16 * x ^ 3 + 17 * x ^ 2 + 18 * x + 11\\nlet D := Icc (0: \\u211d) (6: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (0: \\u211d) (6: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 18 := by linarith [hx.1]\\n  have h2: 0 < 34 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h3: 0 < 48 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h4: 0 < 48 * x ^ 3 := by\\n    have power_pos: 0 < x ^ 3 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h5: 0 < 66 * x ^ 5 := by\\n    have power_pos: 0 < x ^ 5 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h6: 0 < 140 * x ^ 6 := by\\n    have power_pos: 0 < x ^ 6 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2, h3, h4, h5, h6]\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8120",
        "result": "{\"name\": \"ln8120\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 2 - 80 * x + 1600) (Icc (10: \\u211d) (13: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 4 * x ^ 2 - 80 * x + 1600\\nlet D := Icc (10: \\u211d) (13: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (10: \\u211d) (13: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 8 * x := by\\n    have power_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [power_pos]\\n  have h2: 0 < 80 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (differentiableAt_const _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8158",
        "result": "{\"name\": \"ln8158\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 2 - 32 * x + 64) (Icc (4: \\u211d) (13: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 4 * x ^ 2 - 32 * x + 64\\nlet D := Icc (4: \\u211d) (13: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (4: \\u211d) (13: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 8 * x := by\\n    have x_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [x_pos]\\n  linarith [h1]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8196",
        "result": "{\"name\": \"ln8196\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 2 - 50 * x + 625) (Icc (5: \\u211d) (6: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 2 - 50 * x + 625) (Icc (5: \\u211d) (6: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 2 - 50 * x + 625\\n  let D := Icc (5: \\u211d) (6: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (5: \\u211d) (6: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 10 * x := by\\n      have power_pos: 0 < x := by\\n        linarith [hx.1]\\n      linarith [power_pos]\\n    have h2: 0 < 10 * x - 50 := by linarith\\n    linarith [h1, h2]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8234",
        "result": "{\"name\": \"ln8234\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 2 - 40 * x + 200) (Icc (5: \\u211d) (15: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 4 * x ^ 2 - 40 * x + 200\\nlet D := Icc (5: \\u211d) (15: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (5: \\u211d) (15: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 8 * x := by\\n    have x_pos: 0 < x := by linarith [hx.1]\\n    linarith [x_pos]\\n  have h2: 0 < -40 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8272",
        "result": "{\"name\": \"ln8272\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 9 * x ^ 2 - 162 * x + 6561) (Icc (9: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 9 * x ^ 2 - 162 * x + 6561) (Icc (9: \\u211d) (10: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 9 * x ^ 2 - 162 * x + 6561\\n  let D := Icc (9: \\u211d) (10: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (9: \\u211d) (10: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 18 * x := by\\n      have x_pos: 0 < x := by linarith [hx.1]\\n      linarith [x_pos]\\n    linarith [h1]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8310",
        "result": "{\"name\": \"ln8310\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 2 - 140 * x + 700) (Icc (10: \\u211d) (19: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 2 - 140 * x + 700\\nlet D := Icc (10: \\u211d) (19: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (10: \\u211d) (19: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 14 * x := by\\n    have power_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [power_pos]\\n  linarith [h1]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (differentiableAt_const _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8348",
        "result": "{\"name\": \"ln8348\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 3 * x ^ 2 - 54 * x + 486) (Icc (9: \\u211d) (16: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 3 * x ^ 2 - 54 * x + 486\\nlet D := Icc (9: \\u211d) (16: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (9: \\u211d) (16: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 6 * x := by\\n    have x_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [x_pos]\\n  linarith [h1]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8386",
        "result": "{\"name\": \"ln8386\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 6 * x ^ 2 - 108 * x + 3402) (Icc (9: \\u211d) (12: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 6 * x ^ 2 - 108 * x + 3402\\nlet D := Icc (9: \\u211d) (12: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (9: \\u211d) (12: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 12 * x := by\\n    have x_pos: 0 < x := by linarith [hx.1]\\n    linarith\\n  have h2: 0 < -108 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8424",
        "result": "{\"name\": \"ln8424\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 2 - 30 * x + 270) (Icc (3: \\u211d) (5: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 2 - 30 * x + 270) (Icc (3: \\u211d) (5: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 2 - 30 * x + 270\\n  let D := Icc (3: \\u211d) (5: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (3: \\u211d) (5: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 10 * x := by\\n      have x_pos: 0 < x := by linarith [hx.1]\\n      linarith [x_pos]\\n    have h2: 0 < -30 := by linarith\\n    linarith [h1, h2]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8462",
        "result": "{\"name\": \"ln8462\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 2 * x ^ 2 - 36 * x + 972) (Icc (9: \\u211d) (13: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 2 * x ^ 2 - 36 * x + 972\\nlet D := Icc (9: \\u211d) (13: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (9: \\u211d) (13: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 4 * x := by\\n    have power_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [power_pos]\\n  have h2: 0 < 4 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (Differentiable.differentiableAt (differentiable_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8500",
        "result": "{\"name\": \"ln8500\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 3 * x ^ 2 - 18 * x + 270) (Icc (3: \\u211d) (4: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 3 * x ^ 2 - 18 * x + 270\\nlet D := Icc (3: \\u211d) (4: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (3: \\u211d) (4: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 6 * x - 18 := by linarith\\n  linarith\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (differentiableAt_mul_const _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8538",
        "result": "{\"name\": \"ln8538\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 2 - 48 * x + 576) (Icc (6: \\u211d) (14: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 2 - 48 * x + 576) (Icc (6: \\u211d) (14: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 4 * x ^ 2 - 48 * x + 576\\n  let D := Icc (6: \\u211d) (14: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (6: \\u211d) (14: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 8 * x := by\\n      have pos_x: 0 < x := by linarith [hx.1]\\n      linarith [pos_x]\\n    have h2: 0 < -48 := by linarith\\n    linarith [h1, h2]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8576",
        "result": "{\"name\": \"ln8576\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 2 - 32 * x + 160) (Icc (2: \\u211d) (9: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 8 * x ^ 2 - 32 * x + 160\\nlet D := Icc (2: \\u211d) (9: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (2: \\u211d) (9: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 16 * x := by\\n    have pos_range: 0 < x := by linarith [hx.1]\\n    linarith [pos_range]\\n  have h2: 0 < 8 := by linarith\\n  linarith\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8614",
        "result": "{\"name\": \"ln8614\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 9 * x ^ 2 - 126 * x + 3528) (Icc (7: \\u211d) (9: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 9 * x ^ 2 - 126 * x + 3528\\nlet D := Icc (7: \\u211d) (9: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (7: \\u211d) (9: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 18 * x := by\\n    have x_pos: 0 < x := by linarith\\n    linarith [x_pos]\\n  have h2: 0 < -126 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8652",
        "result": "{\"name\": \"ln8652\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 2 - 70 * x + 245) (Icc (7: \\u211d) (16: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 2 - 70 * x + 245\\nlet D := Icc (7: \\u211d) (16: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (7: \\u211d) (16: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 10 * x := by\\n    have x_pos: 0 < x := by linarith [hx.1]\\n    linarith [x_pos]\\n  have h2: 0 < -70 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8690",
        "result": "{\"name\": \"ln8690\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 2 - 72 * x + 324) (Icc (9: \\u211d) (16: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 2 - 72 * x + 324) (Icc (9: \\u211d) (16: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 4 * x ^ 2 - 72 * x + 324\\n  let D := Icc (9: \\u211d) (16: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (9: \\u211d) (16: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 8 * x := by\\n      have x_pos: 0 < x := by linarith [hx.1]\\n      linarith [x_pos]\\n    linarith [h1]\\n    exact differentiableAt_const _\\n    exact differentiableAt_id\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8728",
        "result": "{\"name\": \"ln8728\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 2 - 14 * x + 28) (Icc (1: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 2 - 14 * x + 28\\nlet D := Icc (1: \\u211d) (10: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (1: \\u211d) (10: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 14 * x := by\\n    have power_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [power_pos]\\n  have h2: 0 < 14 := by linarith\\n  have h3: 0 < 14 * x := by \\n    have power_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [power_pos]\\n  linarith [h1, h2, h3]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (Continuous.differentiableAt (Continuous.pow continuous_id _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8766",
        "result": "{\"name\": \"ln8766\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 6 * x ^ 2 - 96 * x + 768) (Icc (8: \\u211d) (15: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 6 * x ^ 2 - 96 * x + 768) (Icc (8: \\u211d) (15: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 6 * x ^ 2 - 96 * x + 768\\n  let D := Icc (8: \\u211d) (15: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (8: \\u211d) (15: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 12 * x := by\\n      have x_pos: 0 < x := by linarith [hx.1]\\n      linarith [x_pos]\\n    have h2: 0 < -96 := by linarith\\n    linarith [h1, h2]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8804",
        "result": "{\"name\": \"ln8804\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 2 - 40 * x + 700) (Icc (5: \\u211d) (9: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 2 - 40 * x + 700) (Icc (5: \\u211d) (9: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 4 * x ^ 2 - 40 * x + 700\\n  let D := Icc (5: \\u211d) (9: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (5: \\u211d) (9: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 8 * x := by\\n      have x_pos: 0 < x := by linarith [hx.1]\\n      linarith [x_pos]\\n    have h2: -40 > 0 := by linarith\\n    linarith [h1, h2]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8842",
        "result": "{\"name\": \"ln8842\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 9 * x ^ 2 - 72 * x + 1008) (Icc (4: \\u211d) (6: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 9 * x ^ 2 - 72 * x + 1008\\nlet D := Icc (4: \\u211d) (6: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (4: \\u211d) (6: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 18 * x - 72 := by\\n    have x_range: 4 \\u2264 x \\u2227 x \\u2264 6 := hx\\n    have h_pos: 18 * x - 72 = 18 * (x - 4) := by\\n      ring\\n    rw [h_pos]\\n    apply mul_pos (by linarith) (by linarith)\\n  linarith\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8880",
        "result": "{\"name\": \"ln8880\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 2 - 80 * x + 3600) (Icc (10: \\u211d) (19: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 4 * x ^ 2 - 80 * x + 3600\\nlet D := Icc (10: \\u211d) (19: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (10: \\u211d) (19: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 8 * x := by\\n    have x_pos: 0 < x := by linarith [hx.1]\\n    linarith [x_pos]\\n  have h2: 0 < 80 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8918",
        "result": "{\"name\": \"ln8918\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 2 - 80 * x + 1000) (Icc (5: \\u211d) (15: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 2 - 80 * x + 1000) (Icc (5: \\u211d) (15: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 8 * x ^ 2 - 80 * x + 1000\\n  let D := Icc (5: \\u211d) (15: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (5: \\u211d) (15: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 16 * x := by\\n      have power_pos: 0 < x := by\\n        linarith [hx.1]\\n      linarith [power_pos]\\n    linarith [h1]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_const _\\n    exact differentiableAt_id\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8956",
        "result": "{\"name\": \"ln8956\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 3 * x ^ 2 - 48 * x + 1344) (Icc (8: \\u211d) (11: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 3 * x ^ 2 - 48 * x + 1344\\nlet D := Icc (8: \\u211d) (11: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (8: \\u211d) (11: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 6 * x := by\\n    have x_pos: 0 < x := by linarith\\n    linarith\\n  have h2: 0 < -48 := by linarith\\n  linarith\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (differentiableAt_const _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln8994",
        "result": "{\"name\": \"ln8994\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 2 - 70 * x + 2205) (Icc (7: \\u211d) (11: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 2 - 70 * x + 2205) (Icc (7: \\u211d) (11: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 2 - 70 * x + 2205\\n  let D := Icc (7: \\u211d) (11: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (7: \\u211d) (11: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 10 * x - 70 := by linarith [hx.1, hx.2]\\n    linarith [h1]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9032",
        "result": "{\"name\": \"ln9032\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 2 - 48 * x + 216) (Icc (3: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 8 * x ^ 2 - 48 * x + 216\\nlet D := Icc (3: \\u211d) (10: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (3: \\u211d) (10: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 16 * x := by\\n    have x_pos: 0 < x := by linarith [hx.1]\\n    linarith [x_pos]\\n  have h2: 0 < -48 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9070",
        "result": "{\"name\": \"ln9070\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 2 - 64 * x + 1152) (Icc (4: \\u211d) (7: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 8 * x ^ 2 - 64 * x + 1152\\nlet D := Icc (4: \\u211d) (7: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (4: \\u211d) (7: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 16 * x := by\\n    have power_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [power_pos]\\n  have h2: 0 < 64 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9108",
        "result": "{\"name\": \"ln9108\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 2 - 56 * x + 448) (Icc (4: \\u211d) (6: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 2 - 56 * x + 448) (Icc (4: \\u211d) (6: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 2 - 56 * x + 448\\n  let D := Icc (4: \\u211d) (6: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (4: \\u211d) (6: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 14 * x - 56 := by linarith\\n    linarith [h1]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9146",
        "result": "{\"name\": \"ln9146\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 2 - 10 * x + 45) (Icc (1: \\u211d) (6: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 2 - 10 * x + 45) (Icc (1: \\u211d) (6: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 2 - 10 * x + 45\\n  let D := Icc (1: \\u211d) (6: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (1: \\u211d) (6: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 10 * x := by\\n      have pos_x: 0 < x := by linarith [hx.1]\\n      linarith [pos_x]\\n    have h2: 0 < 10 := by linarith\\n    linarith [h1, h2]\\n    exact differentiableAt_const _\\n    exact differentiableAt_id\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9184",
        "result": "{\"name\": \"ln9184\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 10 * x ^ 2 - 40 * x + 240) (Icc (2: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 10 * x ^ 2 - 40 * x + 240\\nlet D := Icc (2: \\u211d) (10: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (2: \\u211d) (10: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 20 * x := by\\n    have power_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [power_pos]\\n  linarith [h1]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (differentiableAt_mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9222",
        "result": "{\"name\": \"ln9222\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 10 * x ^ 2 - 60 * x + 810) (Icc (3: \\u211d) (13: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 10 * x ^ 2 - 60 * x + 810) (Icc (3: \\u211d) (13: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 10 * x ^ 2 - 60 * x + 810\\n  let D := Icc (3: \\u211d) (13: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (3: \\u211d) (13: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 20 * x ^ 1 - 60 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (differentiableAt_const _)\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9260",
        "result": "{\"name\": \"ln9260\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 3 * x ^ 2 - 12 * x + 60) (Icc (2: \\u211d) (9: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 3 * x ^ 2 - 12 * x + 60\\nlet D := Icc (2: \\u211d) (9: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (2: \\u211d) (9: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 6 * x := by\\n    have power_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [power_pos]\\n  have h2: 0 < -12 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9298",
        "result": "{\"name\": \"ln9298\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 2 - 8 * x + 4) (Icc (1: \\u211d) (11: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 4 * x ^ 2 - 8 * x + 4\\nlet D := Icc (1: \\u211d) (11: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (1: \\u211d) (11: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 8 * x := by\\n    have x_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [x_pos]\\n  have h2: 0 < 8 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9336",
        "result": "{\"name\": \"ln9336\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 2 - 144 * x + 2592) (Icc (9: \\u211d) (19: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 8 * x ^ 2 - 144 * x + 2592\\nlet D := Icc (9: \\u211d) (19: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (9: \\u211d) (19: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 16 * x := by\\n    have power_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [power_pos]\\n  linarith [h1]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_mul\\n  exact differentiableAt_const _\\n  exact differentiableAt_mul\\n  exact differentiableAt_add\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9374",
        "result": "{\"name\": \"ln9374\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 2 - 112 * x + 3136) (Icc (8: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 2 - 112 * x + 3136\\nlet D := Icc (8: \\u211d) (10: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (8: \\u211d) (10: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 14 * x - 112 := by\\n    have x_pos: 8 < x := by linarith [hx.1]\\n    linarith\\n  linarith\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9412",
        "result": "{\"name\": \"ln9412\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 2 - 80 * x + 200) (Icc (5: \\u211d) (14: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 8 * x ^ 2 - 80 * x + 200\\nlet D := Icc (5: \\u211d) (14: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (5: \\u211d) (14: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 16 * x := by\\n    have x_pos: 0 < x := by linarith [hx.1]\\n    linarith [x_pos]\\n  have h2: 0 < -80 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9450",
        "result": "{\"name\": \"ln9450\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 2 - 16 * x + 48) (Icc (2: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 4 * x ^ 2 - 16 * x + 48\\nlet D := Icc (2: \\u211d) (10: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (2: \\u211d) (10: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 8 * x := by\\n    have x_pos: 0 < x := by linarith [hx.1]\\n    linarith [x_pos]\\n  linarith [h1]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9488",
        "result": "{\"name\": \"ln9488\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 2 - 48 * x + 432) (Icc (3: \\u211d) (8: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 2 - 48 * x + 432) (Icc (3: \\u211d) (8: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 8 * x ^ 2 - 48 * x + 432\\n  let D := Icc (3: \\u211d) (8: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (3: \\u211d) (8: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 16 * x ^ 1 - 48 := by\\n      have power_pos: 0 < x ^ 1 := by\\n        apply pow_pos (hx.1)\\n      linarith [power_pos]\\n    linarith [h1]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9526",
        "result": "{\"name\": \"ln9526\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 2 - 84 * x + 252) (Icc (6: \\u211d) (16: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 2 - 84 * x + 252\\nlet D := Icc (6: \\u211d) (16: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (6: \\u211d) (16: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 14 * x := by\\n    have x_pos: 0 < x := by linarith [hx.1]\\n    linarith [x_pos]\\n  have h2: 0 < 7 * x ^ 2 := by\\n    have x_pos: 0 < x := by linarith [hx.1]\\n    apply mul_pos (by norm_num) (pow_pos x_pos _)\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9564",
        "result": "{\"name\": \"ln9564\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 2 * x ^ 2 - 40 * x + 400) (Icc (10: \\u211d) (16: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 2 * x ^ 2 - 40 * x + 400\\nlet D := Icc (10: \\u211d) (16: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (10: \\u211d) (16: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 4 * x := by\\n    have power_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [power_pos]\\n  have h2: 0 < -40 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9602",
        "result": "{\"name\": \"ln9602\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 6 * x ^ 2 - 36 * x + 324) (Icc (3: \\u211d) (7: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 6 * x ^ 2 - 36 * x + 324\\nlet D := Icc (3: \\u211d) (7: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (3: \\u211d) (7: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 12 * x := by\\n    have x_pos: 0 < x := by linarith [hx.1]\\n    linarith [x_pos]\\n  have h2: 0 < -36 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9640",
        "result": "{\"name\": \"ln9640\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 2 - 112 * x + 2744) (Icc (7: \\u211d) (13: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 2 - 112 * x + 2744) (Icc (7: \\u211d) (13: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 8 * x ^ 2 - 112 * x + 2744\\n  let D := Icc (7: \\u211d) (13: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (7: \\u211d) (13: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 16 * x := by\\n      have power_pos: 0 < x := by\\n        linarith [hx.1]\\n      linarith [power_pos]\\n    have h2: 0 < -112 := by linarith\\n    linarith [h1, h2]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9678",
        "result": "{\"name\": \"ln9678\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 2 - 160 * x + 4000) (Icc (10: \\u211d) (15: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 8 * x ^ 2 - 160 * x + 4000\\nlet D := Icc (10: \\u211d) (15: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (10: \\u211d) (15: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 16 * x := by\\n    have power_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [power_pos]\\n  linarith [h1]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9716",
        "result": "{\"name\": \"ln9716\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 2 * x ^ 2 - 24 * x + 648) (Icc (6: \\u211d) (7: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 2 * x ^ 2 - 24 * x + 648\\nlet D := Icc (6: \\u211d) (7: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (6: \\u211d) (7: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 4 * x - 24 := by linarith\\n  have h2: 0 < 2 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9754",
        "result": "{\"name\": \"ln9754\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 2 - 70 * x + 245) (Icc (7: \\u211d) (17: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 2 - 70 * x + 245\\nlet D := Icc (7: \\u211d) (17: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (7: \\u211d) (17: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 10 * x := by\\n    have x_pos: 0 < x := by linarith [hx.1]\\n    linarith [x_pos]\\n  have h2: 0 < 70 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9792",
        "result": "{\"name\": \"ln9792\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 2 - 48 * x + 432) (Icc (6: \\u211d) (7: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 4 * x ^ 2 - 48 * x + 432\\nlet D := Icc (6: \\u211d) (7: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (6: \\u211d) (7: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 8 * x := by\\n    have pos_x: 0 < x := by linarith [hx.1]\\n    linarith [pos_x]\\n  have h2: 0 < -48 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (differentiableAt_mul_const _)\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9830",
        "result": "{\"name\": \"ln9830\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 9 * x ^ 2 - 36 * x + 108) (Icc (2: \\u211d) (8: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 9 * x ^ 2 - 36 * x + 108\\nlet D := Icc (2: \\u211d) (8: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (2: \\u211d) (8: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 18 * x - 36 := by\\n    have power_pos: 2 \\u2264 x := by\\n      linarith [hx.1]\\n    linarith [power_pos]\\n  linarith [h1]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9868",
        "result": "{\"name\": \"ln9868\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 2 * x ^ 2 - 24 * x + 360) (Icc (6: \\u211d) (12: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 2 * x ^ 2 - 24 * x + 360\\nlet D := Icc (6: \\u211d) (12: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (6: \\u211d) (12: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 4 * x := by\\n    have power_pos: 0 < x := by\\n      linarith [hx.1, hx.2]\\n    linarith [power_pos]\\n  have h2: 0 < -24 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9906",
        "result": "{\"name\": \"ln9906\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 2 - 40 * x + 320) (Icc (4: \\u211d) (14: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 2 - 40 * x + 320\\nlet D := Icc (4: \\u211d) (14: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (4: \\u211d) (14: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 10 * x := by\\n    have x_pos: 0 < x := by linarith\\n    linarith [x_pos]\\n  have h2: 0 < 40 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_mul (differentiableAt_const _) differentiableAt_id\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9944",
        "result": "{\"name\": \"ln9944\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 10 * x ^ 2 - 140 * x + 4410) (Icc (7: \\u211d) (16: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 10 * x ^ 2 - 140 * x + 4410\\nlet D := Icc (7: \\u211d) (16: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (7: \\u211d) (16: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 20 * x - 140 := by linarith\\n  linarith\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln9982",
        "result": "{\"name\": \"ln9982\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 6 * x ^ 2 - 24 * x + 48) (Icc (2: \\u211d) (12: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 6 * x ^ 2 - 24 * x + 48) (Icc (2: \\u211d) (12: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 6 * x ^ 2 - 24 * x + 48\\n  let D := Icc (2: \\u211d) (12: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (2: \\u211d) (12: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 12 * x := by\\n      have power_pos: 0 < x := by\\n        linarith [hx.1]\\n      linarith [power_pos]\\n    have h2: 0 < 12 := by linarith\\n    linarith [h1, h2]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10020",
        "result": "{\"name\": \"ln10020\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 2 - 32 * x + 64) (Icc (2: \\u211d) (9: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 8 * x ^ 2 - 32 * x + 64\\nlet D := Icc (2: \\u211d) (9: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (2: \\u211d) (9: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 16 * x := by\\n    have xpos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [xpos]\\n  have h2: 0 < 16 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10058",
        "result": "{\"name\": \"ln10058\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 2 - 160 * x + 4000) (Icc (10: \\u211d) (17: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 8 * x ^ 2 - 160 * x + 4000\\nlet D := Icc (10: \\u211d) (17: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (10: \\u211d) (17: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 16 * x := by\\n    have power_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [power_pos]\\n  linarith\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (Differentiable.differentiableAt (differentiableAt_pow _))) (differentiableAt_const _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10096",
        "result": "{\"name\": \"ln10096\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 3 * x ^ 2 - 12 * x + 48) (Icc (2: \\u211d) (3: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 3 * x ^ 2 - 12 * x + 48\\n  let D := Icc (2: \\u211d) (3: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (2: \\u211d) (3: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 6 * x := by\\n      have power_pos: 0 < x := by\\n        linarith [hx.1]\\n      linarith [power_pos]\\n    have h2: 0 < -12 := by linarith\\n    linarith [h1, h2]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10134",
        "result": "{\"name\": \"ln10134\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 6 * x ^ 2 - 36 * x + 108) (Icc (3: \\u211d) (12: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 6 * x ^ 2 - 36 * x + 108) (Icc (3: \\u211d) (12: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 6 * x ^ 2 - 36 * x + 108\\n  let D := Icc (3: \\u211d) (12: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (3: \\u211d) (12: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 12 * x := by\\n      have pos_x: 0 < x := by\\n        linarith [hx.1]\\n      linarith [pos_x]\\n    linarith [h1]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10172",
        "result": "{\"name\": \"ln10172\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 2 - 28 * x + 224) (Icc (2: \\u211d) (6: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 2 - 28 * x + 224) (Icc (2: \\u211d) (6: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 2 - 28 * x + 224\\n  let D := Icc (2: \\u211d) (6: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (2: \\u211d) (6: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 14 * x := by\\n      have x_pos: 0 < x := by linarith [hx.1]\\n      linarith [x_pos]\\n    have h2: 0 < 14 := by linarith\\n    linarith [h1, h2]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10210",
        "result": "{\"name\": \"ln10210\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 2 - 90 * x + 2025) (Icc (9: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 2 - 90 * x + 2025\\nlet D := Icc (9: \\u211d) (10: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (9: \\u211d) (10: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 10 * x := by\\n    have x_pos: 0 < x := by linarith [hx.1]\\n    linarith [x_pos]\\n  have h2: 0 < 5 * 2 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_mul\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10248",
        "result": "{\"name\": \"ln10248\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 9 * x ^ 2 - 36 * x + 108) (Icc (2: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 9 * x ^ 2 - 36 * x + 108) (Icc (2: \\u211d) (10: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 9 * x ^ 2 - 36 * x + 108\\n  let D := Icc (2: \\u211d) (10: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (2: \\u211d) (10: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 18 * x - 36 := by\\n      have power_pos: 0 < 18 * x := by\\n        linarith [hx.1]\\n      linarith [power_pos]\\n    linarith [h1]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (differentiableAt_const _)\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10286",
        "result": "{\"name\": \"ln10286\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 6 * x ^ 2 - 84 * x + 1176) (Icc (7: \\u211d) (11: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 6 * x ^ 2 - 84 * x + 1176) (Icc (7: \\u211d) (11: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 6 * x ^ 2 - 84 * x + 1176\\n  let D := Icc (7: \\u211d) (11: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (7: \\u211d) (11: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 12 * x := by\\n      have x_pos: 0 < x := by linarith [hx.1]\\n      linarith\\n    have h2: 0 < -84 := by linarith\\n    linarith [h1, h2]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10324",
        "result": "{\"name\": \"ln10324\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 9 * x ^ 2 - 54 * x + 162) (Icc (3: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 9 * x ^ 2 - 54 * x + 162\\nlet D := Icc (3: \\u211d) (10: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (3: \\u211d) (10: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 18 * x := by\\n    have x_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [x_pos]\\n  have h2: 0 < 18 * x - 54 := by\\n    linarith [h1]\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10362",
        "result": "{\"name\": \"ln10362\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 9 * x ^ 2 - 108 * x + 324) (Icc (6: \\u211d) (13: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 9 * x ^ 2 - 108 * x + 324\\nlet D := Icc (6: \\u211d) (13: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (6: \\u211d) (13: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 18 * x := by\\n    have pos_x: 0 < x := by linarith [hx.1]\\n    linarith [pos_x]\\n  linarith [h1]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10400",
        "result": "{\"name\": \"ln10400\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 2 * x ^ 2 - 4 * x + 12) (Icc (1: \\u211d) (5: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 2 * x ^ 2 - 4 * x + 12\\nlet D := Icc (1: \\u211d) (5: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (1: \\u211d) (5: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 4 * x := by\\n    have power_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [power_pos]\\n  linarith\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10438",
        "result": "{\"name\": \"ln10438\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 2 - 10 * x + 10) (Icc (1: \\u211d) (2: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 2 - 10 * x + 10\\nlet D := Icc (1: \\u211d) (2: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (1: \\u211d) (2: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 10 * x - 10 := by linarith [hx.1, hx.2]\\n  have h2: 0 < 10 * x := by linarith [hx.1]\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10476",
        "result": "{\"name\": \"ln10476\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 6 * x ^ 2 - 12 * x + 12) (Icc (1: \\u211d) (6: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 6 * x ^ 2 - 12 * x + 12\\nlet D := Icc (1: \\u211d) (6: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (1: \\u211d) (6: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 12 * x ^ 1 - 12 := by\\n    have x_pos: 0 < 12 * x := by\\n      have power_pos: 0 < x := by\\n        linarith [hx.1]\\n      linarith [power_pos]\\n    linarith\\n  exact h1\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10514",
        "result": "{\"name\": \"ln10514\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 2 - 64 * x + 768) (Icc (4: \\u211d) (7: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 2 - 64 * x + 768) (Icc (4: \\u211d) (7: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 8 * x ^ 2 - 64 * x + 768\\n  let D := Icc (4: \\u211d) (7: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (4: \\u211d) (7: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 16 * x := by\\n      have: 0 < x := by linarith [hx.1]\\n      linarith\\n    have h2: 0 < -64 := by linarith\\n    linarith [h1, h2]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10552",
        "result": "{\"name\": \"ln10552\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 6 * x ^ 2 - 12 * x + 24) (Icc (1: \\u211d) (9: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 6 * x ^ 2 - 12 * x + 24) (Icc (1: \\u211d) (9: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 6 * x ^ 2 - 12 * x + 24\\n  let D := Icc (1: \\u211d) (9: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (1: \\u211d) (9: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 12 * x := by\\n      have power_pos: 0 < x := by\\n        linarith [hx.1]\\n      linarith [power_pos]\\n    have h2: 0 < 12 := by linarith\\n    linarith [h1, h2]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10590",
        "result": "{\"name\": \"ln10590\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 2 - 50 * x + 750) (Icc (5: \\u211d) (9: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 2 - 50 * x + 750\\nlet D := Icc (5: \\u211d) (9: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (5: \\u211d) (9: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 10 * x - 50 := by linarith [hx.1, hx.2]\\n  linarith [h1]\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10628",
        "result": "{\"name\": \"ln10628\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 2 - 140 * x + 4200) (Icc (10: \\u211d) (13: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 2 - 140 * x + 4200\\nlet D := Icc (10: \\u211d) (13: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (10: \\u211d) (13: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 14 * x := by\\n    have power_pos: 0 < x := by linarith [hx.1]\\n    linarith [power_pos]\\n  linarith\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10666",
        "result": "{\"name\": \"ln10666\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 10 * x ^ 2 - 100 * x + 2000) (Icc (5: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 10 * x ^ 2 - 100 * x + 2000) (Icc (5: \\u211d) (10: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 10 * x ^ 2 - 100 * x + 2000\\n  let D := Icc (5: \\u211d) (10: \\u211d)\\n  \\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (5: \\u211d) (10: \\u211d)\\n  \\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 20 * x := by\\n      have x_pos: 0 < x := by linarith [hx.1]\\n      linarith [x_pos]\\n    have h2: 0 < -100 := by linarith\\n    linarith [h1, h2]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  \\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  \\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10704",
        "result": "{\"name\": \"ln10704\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 10 * x ^ 2 - 160 * x + 1920) (Icc (8: \\u211d) (15: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 10 * x ^ 2 - 160 * x + 1920) (Icc (8: \\u211d) (15: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 10 * x ^ 2 - 160 * x + 1920\\n  let D := Icc (8: \\u211d) (15: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (8: \\u211d) (15: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 20 * x := by\\n      have range_pos: 8 \\u2264 x := by\\n        exact hx.1\\n      linarith [range_pos]\\n    have h2: 0 < -160 := by linarith\\n    linarith [h1, h2]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_mul (differentiableAt_const _) (differentiableAt_id)\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10742",
        "result": "{\"name\": \"ln10742\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 2 - 90 * x + 4050) (Icc (9: \\u211d) (11: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 2 - 90 * x + 4050) (Icc (9: \\u211d) (11: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 2 - 90 * x + 4050\\n  let D := Icc (9: \\u211d) (11: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (9: \\u211d) (11: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 10 * x - 90 := by\\n      linarith [hx.1, hx.2]\\n    linarith [h1]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10780",
        "result": "{\"name\": \"ln10780\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 10 * x ^ 2 - 180 * x + 6480) (Icc (9: \\u211d) (18: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 10 * x ^ 2 - 180 * x + 6480\\nlet D := Icc (9: \\u211d) (18: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (9: \\u211d) (18: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 20 * x := by\\n    have power_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [power_pos]\\n  have h2: 0 < -180 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (Differentiable.differentiableAt (differentiable_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10818",
        "result": "{\"name\": \"ln10818\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 2 * x ^ 2 - 32 * x + 512) (Icc (8: \\u211d) (14: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 2 * x ^ 2 - 32 * x + 512) (Icc (8: \\u211d) (14: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 2 * x ^ 2 - 32 * x + 512\\n  let D := Icc (8: \\u211d) (14: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (8: \\u211d) (14: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 4 * x := by\\n      have x_pos: 0 < x := by linarith [hx.1]\\n      linarith [x_pos]\\n    have h2: 0 < -32 := by linarith\\n    linarith [h1, h2]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10856",
        "result": "{\"name\": \"ln10856\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 10 * x ^ 2 - 20 * x + 70) (Icc (1: \\u211d) (4: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 10 * x ^ 2 - 20 * x + 70\\nlet D := Icc (1: \\u211d) (4: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (1: \\u211d) (4: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 20 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 10 * x ^ 2 := by\\n    have power_pos: 0 < x ^ 2 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10894",
        "result": "{\"name\": \"ln10894\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 2 - 14 * x + 63) (Icc (1: \\u211d) (3: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 2 - 14 * x + 63) (Icc (1: \\u211d) (3: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 2 - 14 * x + 63\\n  let D := Icc (1: \\u211d) (3: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (1: \\u211d) (3: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 14 * x := by\\n      have power_pos: 0 < x := by\\n        linarith [hx.1]\\n      linarith [power_pos]\\n    have h2: 0 < 14 := by linarith\\n    linarith [h1, h2]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10932",
        "result": "{\"name\": \"ln10932\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 6 * x ^ 2 - 84 * x + 882) (Icc (7: \\u211d) (11: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 6 * x ^ 2 - 84 * x + 882\\nlet D := Icc (7: \\u211d) (11: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (7: \\u211d) (11: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 12 * x := by\\n    have x_pos: 0 < x := by linarith [hx.1]\\n    linarith [x_pos]\\n  have h2: 0 < 12 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln10970",
        "result": "{\"name\": \"ln10970\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 2 * x ^ 2 - 16 * x + 224) (Icc (4: \\u211d) (8: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 2 * x ^ 2 - 16 * x + 224\\nlet D := Icc (4: \\u211d) (8: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (4: \\u211d) (8: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 4 * x := by\\n    have x_pos: 0 < x := by linarith [hx.1]\\n    linarith [x_pos]\\n  linarith [h1]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11008",
        "result": "{\"name\": \"ln11008\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 2 - 70 * x + 1050) (Icc (5: \\u211d) (7: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 2 - 70 * x + 1050\\nlet D := Icc (5: \\u211d) (7: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (5: \\u211d) (7: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 14 * x - 70 := by\\n    linarith [hx.1, hx.2]\\n  linarith [h1]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11046",
        "result": "{\"name\": \"ln11046\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 2 - 90 * x + 1215) (Icc (9: \\u211d) (17: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 2 - 90 * x + 1215\\nlet D := Icc (9: \\u211d) (17: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (9: \\u211d) (17: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 10 * x - 90 := by linarith\\n  linarith\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (differentiableAt_const _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11084",
        "result": "{\"name\": \"ln11084\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 9 * x ^ 2 - 144 * x + 2880) (Icc (8: \\u211d) (11: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 9 * x ^ 2 - 144 * x + 2880\\nlet D := Icc (8: \\u211d) (11: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (8: \\u211d) (11: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 18 * x - 144 := by\\n    linarith [hx.1, hx.2]\\n  linarith\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_mul (differentiableAt_const _) (differentiableAt_id)\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11122",
        "result": "{\"name\": \"ln11122\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 6 * x ^ 2 - 48 * x + 768) (Icc (4: \\u211d) (8: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 6 * x ^ 2 - 48 * x + 768\\nlet D := Icc (4: \\u211d) (8: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (4: \\u211d) (8: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 12 * x := by\\n    have x_pos: 0 < x := by linarith\\n    linarith\\n  have h2: 0 < -48 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11160",
        "result": "{\"name\": \"ln11160\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 9 * x ^ 2 - 144 * x + 2880) (Icc (8: \\u211d) (14: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 9 * x ^ 2 - 144 * x + 2880\\nlet D := Icc (8: \\u211d) (14: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (8: \\u211d) (14: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 18 * x := by\\n    have power_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [power_pos]\\n  have h2: 0 < -144 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (differentiableAt_const _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11198",
        "result": "{\"name\": \"ln11198\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 10 * x ^ 2 - 80 * x + 800) (Icc (4: \\u211d) (8: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 10 * x ^ 2 - 80 * x + 800\\nlet D := Icc (4: \\u211d) (8: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (4: \\u211d) (8: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 20 * x := by\\n    have pos_x: 0 < x := by linarith [hx.1]\\n    linarith [pos_x]\\n  have h2: 0 < -80 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_id\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11236",
        "result": "{\"name\": \"ln11236\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 2 - 24 * x + 324) (Icc (3: \\u211d) (7: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 4 * x ^ 2 - 24 * x + 324\\nlet D := Icc (3: \\u211d) (7: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (3: \\u211d) (7: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 8 * x := by\\n    have pos_x: 0 < x := by linarith [hx.1]\\n    linarith [pos_x]\\n  have h2: 0 < -24 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (differentiableAt_const _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11274",
        "result": "{\"name\": \"ln11274\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 10 * x ^ 2 - 20 * x + 100) (Icc (1: \\u211d) (6: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 10 * x ^ 2 - 20 * x + 100\\nlet D := Icc (1: \\u211d) (6: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (1: \\u211d) (6: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 20 * x ^ 1 := by\\n    have power_pos: 0 < x ^ 1 := by\\n      apply pow_pos (hx.1)\\n    linarith [power_pos]\\n  have h2: 0 < 20 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11312",
        "result": "{\"name\": \"ln11312\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 2 - 98 * x + 1372) (Icc (7: \\u211d) (12: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 2 - 98 * x + 1372\\nlet D := Icc (7: \\u211d) (12: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (7: \\u211d) (12: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 14 * x := by\\n    have x_pos: 0 < x := by linarith [hx.1]\\n    linarith [x_pos]\\n  have h2: 0 < -98 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (Differentiable.differentiableAt (differentiable_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11350",
        "result": "{\"name\": \"ln11350\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 2 - 42 * x + 252) (Icc (3: \\u211d) (12: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 2 - 42 * x + 252\\nlet D := Icc (3: \\u211d) (12: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (3: \\u211d) (12: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 14 * x - 42 := by\\n    have h_x_pos: 0 < 14 * x := by linarith [hx.1]\\n    linarith\\n  linarith\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11388",
        "result": "{\"name\": \"ln11388\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 2 - 56 * x + 112) (Icc (4: \\u211d) (14: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 2 - 56 * x + 112\\nlet D := Icc (4: \\u211d) (14: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (4: \\u211d) (14: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 14 * x := by\\n    have x_pos: 0 < x := by linarith [hx.1]\\n    linarith [x_pos]\\n  have h2: 0 < 7 * x * 2 := by \\n    have x_pos: 0 < x := by linarith [hx.1]\\n    linarith [x_pos]\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_const _\\n  exact differentiableAt_id\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11426",
        "result": "{\"name\": \"ln11426\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 2 * x ^ 2 - 4 * x + 8) (Icc (1: \\u211d) (11: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 2 * x ^ 2 - 4 * x + 8\\nlet D := Icc (1: \\u211d) (11: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (1: \\u211d) (11: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 4 * x := by\\n    have power_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [power_pos]\\n  have h2: 0 < 4 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11464",
        "result": "{\"name\": \"ln11464\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 2 - 70 * x + 1750) (Icc (5: \\u211d) (8: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 2 - 70 * x + 1750\\nlet D := Icc (5: \\u211d) (8: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (5: \\u211d) (8: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 14 * x := by\\n    have pos_x: 0 < x := by linarith\\n    linarith [pos_x]\\n  have h2: 0 < -70 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (differentiableAt_const _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11502",
        "result": "{\"name\": \"ln11502\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 6 * x ^ 2 - 72 * x + 1296) (Icc (6: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 6 * x ^ 2 - 72 * x + 1296\\nlet D := Icc (6: \\u211d) (10: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (6: \\u211d) (10: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 12 * x - 72 := by linarith [hx.1, hx.2]\\n  linarith [h1]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11540",
        "result": "{\"name\": \"ln11540\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 2 - 64 * x + 128) (Icc (4: \\u211d) (12: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 8 * x ^ 2 - 64 * x + 128) (Icc (4: \\u211d) (12: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 8 * x ^ 2 - 64 * x + 128\\n  let D := Icc (4: \\u211d) (12: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (4: \\u211d) (12: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 16 * x := by\\n      have power_pos: 0 < x := by\\n        linarith [hx.1]\\n      linarith [power_pos]\\n    linarith [h1]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11578",
        "result": "{\"name\": \"ln11578\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 2 - 32 * x + 192) (Icc (4: \\u211d) (13: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 2 - 32 * x + 192) (Icc (4: \\u211d) (13: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 4 * x ^ 2 - 32 * x + 192\\n  let D := Icc (4: \\u211d) (13: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (4: \\u211d) (13: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 8 * x := by\\n      have power_pos: 0 \\u2264 x := by\\n        linarith [hx.1]\\n      linarith [power_pos]\\n    have h2: 0 < -32 := by linarith\\n    linarith [h1, h2]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11616",
        "result": "{\"name\": \"ln11616\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 3 * x ^ 2 - 18 * x + 189) (Icc (3: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 3 * x ^ 2 - 18 * x + 189\\nlet D := Icc (3: \\u211d) (10: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (3: \\u211d) (10: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 6 * x := by\\n    have x_pos: 0 < x := by linarith [hx.1]\\n    linarith\\n  have h2: 0 < -18 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11654",
        "result": "{\"name\": \"ln11654\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 2 - 8 * x + 12) (Icc (1: \\u211d) (9: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 2 - 8 * x + 12) (Icc (1: \\u211d) (9: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 4 * x ^ 2 - 8 * x + 12\\n  let D := Icc (1: \\u211d) (9: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (1: \\u211d) (9: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 8 * x := by\\n      have x_pos: 0 < x := by linarith [hx.1]\\n      linarith [x_pos]\\n    have h2: 0 < 8 * x + 0 := by linarith [h1]\\n    linarith [h1]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (differentiableAt_id.neg)\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id).neg)) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11692",
        "result": "{\"name\": \"ln11692\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 2 - 126 * x + 5670) (Icc (9: \\u211d) (16: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 2 - 126 * x + 5670\\nlet D := Icc (9: \\u211d) (16: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (9: \\u211d) (16: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 14 * x := by\\n    have power_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [power_pos]\\n  have h2: 0 < 126 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11730",
        "result": "{\"name\": \"ln11730\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 5 * x ^ 2 - 60 * x + 1080) (Icc (6: \\u211d) (8: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 5 * x ^ 2 - 60 * x + 1080\\nlet D := Icc (6: \\u211d) (8: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (6: \\u211d) (8: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 10 * x := by\\n    have x_pos: 0 < x := by\\n      linarith [hx.1, hx.2]\\n    linarith [x_pos]\\n  have h2: 0 < -60 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (differentiableAt_const _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11768",
        "result": "{\"name\": \"ln11768\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 4 * x ^ 2 - 40 * x + 300) (Icc (5: \\u211d) (7: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 4 * x ^ 2 - 40 * x + 300\\nlet D := Icc (5: \\u211d) (7: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (5: \\u211d) (7: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 8 * x := by\\n    have power_pos: 0 < x := by\\n      linarith [hx.1]\\n    linarith [power_pos]\\n  have h2: 0 < -40 := by linarith\\n  linarith [h1, h2]\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (differentiableAt_const _)\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11806",
        "result": "{\"name\": \"ln11806\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 3 * x ^ 2 - 48 * x + 576) (Icc (8: \\u211d) (11: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 3 * x ^ 2 - 48 * x + 576) (Icc (8: \\u211d) (11: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 3 * x ^ 2 - 48 * x + 576\\n  let D := Icc (8: \\u211d) (11: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (8: \\u211d) (11: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 6 * x := by\\n      have power_pos: 0 < x := by\\n        linarith [hx.1]\\n      linarith [power_pos]\\n    have h2: 0 < -48 := by linarith\\n    linarith [h1, h2]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11844",
        "result": "{\"name\": \"ln11844\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 2 - 28 * x + 168) (Icc (2: \\u211d) (10: \\u211d)) := by\\n\", \"proof\": [\"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 2 - 28 * x + 168) (Icc (2: \\u211d) (10: \\u211d)) := by\\n  let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 2 - 28 * x + 168\\n  let D := Icc (2: \\u211d) (10: \\u211d)\\n  have hD: Convex \\u211d D := by\\n    apply convex_Icc (2: \\u211d) (10: \\u211d)\\n  have hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n    intro x hx\\n    unfold f\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_add]\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_pow'']\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_mul]\\n    nth_rewrite 1 [deriv_const]\\n    nth_rewrite 1 [deriv_id'']\\n    nth_rewrite 1 [deriv_const]\\n    ring\\n    rw [interior_Icc] at hx\\n    have h1: 0 < 14 * x := by\\n      have power_pos: 0 < x := by\\n        linarith [hx.1]\\n      linarith [power_pos]\\n    linarith [h1]\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact differentiableAt_pow _\\n    exact differentiableAt_id\\n    exact differentiableAt_const _\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n    exact differentiableAt_const _\\n  have hf: ContinuousOn f D := by\\n    simp [f]\\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\n  change MonotoneOn f D\\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    },
    {
        "name": "ln11882",
        "result": "{\"name\": \"ln11882\", \"problem\": \"example: MonotoneOn (\\u03bb x \\u21a6 7 * x ^ 2 - 56 * x + 336) (Icc (4: \\u211d) (8: \\u211d)) := by\\n\", \"proof\": [\"let f := \\u03bb x : \\u211d \\u21a6 7 * x ^ 2 - 56 * x + 336\\nlet D := Icc (4: \\u211d) (8: \\u211d)\\nhave hD: Convex \\u211d D := by\\n  apply convex_Icc (4: \\u211d) (8: \\u211d)\\nhave hf': \\u2200 x0 \\u2208 interior D, 0 < deriv f x0 := by\\n  intro x hx\\n  unfold f\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_add]\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_pow'']\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_mul]\\n  nth_rewrite 1 [deriv_const]\\n  nth_rewrite 1 [deriv_id'']\\n  nth_rewrite 1 [deriv_const]\\n  ring\\n  rw [interior_Icc] at hx\\n  have h1: 0 < 14 * x := by\\n    have x_pos: 0 < x := by linarith\\n    linarith\\n  linarith\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact differentiableAt_pow _\\n  exact differentiableAt_id\\n  exact differentiableAt_const _\\n  exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\\n  exact differentiableAt_const _\\nhave hf: ContinuousOn f D := by\\n  simp [f]\\n  apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\\nchange MonotoneOn f D\\napply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\"], \"complete\": true, \"out\": [], \"informal_hints\": \"\"}"
    }
]