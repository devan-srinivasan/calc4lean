[
    {
        "theorem": "example (x: \u211d) (p q : \u211d \u2192 \u211d) (h0 : p 0 = q 0 \u2227 q 0 > 0) (hf': \u2200 y:\u211d, (deriv p y) * (deriv q y) = 17)\n  (hqDeriv: Differentiable \u211d q) (hpDeriv: Differentiable \u211d p)\n  (hP: \u2200 y:\u211d, deriv p y > 0) (hD: x \u2208 Icc (0: \u211d) (1: \u211d)): p x + 17 * q x > 34 * x := by",
        "proof": "\n  let f := (\u03bb x \u21a6 p x + 17 * q x - 34 * x)\n  let D := Icc (0: \u211d) (1: \u211d)\n\n  have gt_zero: f 0 > 0 := by\n    simp [f, h0.left]\n    rw [\u2190 one_add_mul]\n    apply mul_pos\n    \u00b7 norm_num\n    \u00b7 exact h0.right\n  have monotonic: MonotoneOn f D := by\n    have hfDifferentiableInReal : Differentiable \u211d f := by\n        exact ((hpDeriv).add (hqDeriv.const_mul _)).sub (differentiable_id.const_mul _)\n    have hfDifferentiable: DifferentiableOn \u211d f (interior D) := by\n      exact hfDifferentiableInReal.differentiableOn.mono interior_subset\n    have hfContinuous: ContinuousOn f D:= by\n      exact hfDifferentiableInReal.continuous.continuousOn\n\n    have interior_increasing: \u2200 x2 \u2208 interior D, deriv f x2 \u2265 0 := by\n      intros x2 hx2\n      let hpX2 := hP x2\n      have reciprocal_deriv: deriv q x2 = 17 / deriv p x2 := by\n        have hf'_iff: deriv p x2 * deriv q x2 = 17 \u2194 deriv q x2 = 17 / deriv p x2 := by\n          field_simp [hpX2]\n          ring\n        exact hf'_iff.mp (hf' x2)\n      rw [deriv_sub]\n      rw [deriv_add]\n      rw [deriv_const_mul]\n      rw [reciprocal_deriv]\n      rw [deriv_const_mul]\n      rw [deriv_id'']\n      have sq_iff : 0 \u2264 deriv p x2 * (deriv p x2 + 17 * (17 / deriv p x2) - 34) \u2194\n        0 \u2264 deriv p x2 + 17 * (17 / deriv p x2) - 34 := by\n        apply mul_nonneg_iff_of_pos_left (hP x2)\n      have quad_eq : deriv p x2 * (deriv p x2 + 17 * (17 / deriv p x2) - 34)\n              = deriv p x2 ^ 2 + 17 * 17 - 34 * deriv p x2 := by\n        field_simp [hpX2]\n        ring\n      have quad_sq : deriv p x2 ^ 2 + 17 * 17 - 34 * deriv p x2 = (deriv p x2 - 17) ^ 2 := by ring\n      have simplify: deriv p x2 + 17 * (17 / deriv p x2) - 34 * (fun x2 \u21a6 1) x = deriv p x2 + 17 * (17 / deriv p x2) - 34 := by ring\n      rw [quad_eq, quad_sq] at sq_iff\n      rw [simplify]\n      exact sq_iff.mp (by apply sq_nonneg)\n      exact differentiableAt_id\n      exact hqDeriv x2\n      exact hpDeriv x2\n      exact DifferentiableAt.const_mul (hqDeriv x2) _\n      exact DifferentiableAt.add (hpDeriv x2) (DifferentiableAt.const_mul (hqDeriv x2) _)\n      exact DifferentiableAt.const_mul differentiableAt_id _\n\n    apply monotoneOn_of_deriv_nonneg (convex_Icc (0: \u211d) 1) (hfContinuous) (hfDifferentiable) (interior_increasing)\n  have f_pos: f x > 0 := by\n    have x_pos: x \u2265 0 := by\n      apply (mem_Icc.mp hD).1\n    have fx_gt_f_zero: f x \u2265 f 0 := by\n      apply monotonic (left_mem_Icc.mpr (by norm_num)) hD\n      exact x_pos\n    apply lt_of_lt_of_le gt_zero fx_gt_f_zero\n  have equiv: p x + 17 * q x > 34 * x \u2194 p x + 17 * q x - 34 * x > 0 := by constructor <;> intro h <;> linarith\n  rw [equiv]\n  exact f_pos\n\n\n",
        "annotation": "To prove the inequality p(x) + 17 * q(x) > 34 * x for all x in the interval D = [0, 1], define the function f(x) = p(x) + 17 * q(x) - 34 * x. First, show that f(0) > 0 using the assumptions about p(0) and q(0). Next, demonstrate that f is monotonic on D by establishing its differentiability and showing that its derivative f'(x) is nonnegative. This involves expressing q'(x) in terms of p'(x) and confirming the nonnegativity of the resulting expression. Use the monotonicity of f to conclude that f(x) \u2265 f(0) and thus f(x) > 0 for all x in D. Finally, relate f(x) > 0 back to the original inequality, completing the proof."
    },
    {
        "theorem": "example (x: \u211d) (p q : \u211d \u2192 \u211d) (h0 : p 0 = q 0 \u2227 q 0 > 0) (hf': \u2200 y:\u211d, (deriv p y) * (deriv q y) = 200)\n  (hqDeriv: Differentiable \u211d q) (hpDeriv: Differentiable \u211d p)\n  (hP: \u2200 y:\u211d, deriv p y > 0) (hD: x \u2208 Icc (0: \u211d) (1: \u211d)): p x + 2 * q x > 40 * x := by",
        "proof": "\n  let f := (\u03bb x \u21a6 p x + 2 * q x - 40 * x)\n  let D := Icc (0: \u211d) (1: \u211d)\n\n  have gt_zero: f 0 > 0 := by\n    simp [f, h0.left]\n    rw [\u2190 one_add_mul]\n    apply mul_pos\n    \u00b7 norm_num\n    \u00b7 exact h0.right\n  have monotonic: MonotoneOn f D := by\n    have hfDifferentiableInReal : Differentiable \u211d f := by\n        exact ((hpDeriv).add (hqDeriv.const_mul _)).sub (differentiable_id.const_mul _)\n    have hfDifferentiable: DifferentiableOn \u211d f (interior D) := by\n      exact hfDifferentiableInReal.differentiableOn.mono interior_subset\n    have hfContinuous: ContinuousOn f D:= by\n      exact hfDifferentiableInReal.continuous.continuousOn\n\n    have interior_increasing: \u2200 x2 \u2208 interior D, deriv f x2 \u2265 0 := by\n      intros x2 hx2\n      let hpX2 := hP x2\n      have reciprocal_deriv: deriv q x2 = 200 / deriv p x2 := by\n        have hf'_iff: deriv p x2 * deriv q x2 = 200 \u2194 deriv q x2 = 200 / deriv p x2 := by\n          field_simp [hpX2]\n          ring\n        exact hf'_iff.mp (hf' x2)\n      rw [deriv_sub]\n      rw [deriv_add]\n      rw [deriv_const_mul]\n      rw [reciprocal_deriv]\n      rw [deriv_const_mul]\n      rw [deriv_id'']\n      have sq_iff : 0 \u2264 deriv p x2 * (deriv p x2 + 2 * (200 / deriv p x2) - 40) \u2194\n        0 \u2264 deriv p x2 + 2 * (200 / deriv p x2) - 40 := by\n        apply mul_nonneg_iff_of_pos_left (hP x2)\n      have quad_eq : deriv p x2 * (deriv p x2 + 2 * (200 / deriv p x2) - 40)\n              = deriv p x2 ^ 2 + 2 * 200 - 40 * deriv p x2 := by\n        field_simp [hpX2]\n        ring\n      have quad_sq : deriv p x2 ^ 2 + 2 * 200 - 40 * deriv p x2 = (deriv p x2 - 20) ^ 2 := by ring\n      have simplify: deriv p x2 + 2 * (200 / deriv p x2) - 40 * (fun x2 \u21a6 1) x = deriv p x2 + 2 * (200 / deriv p x2) - 40 := by ring\n      rw [quad_eq, quad_sq] at sq_iff\n      rw [simplify]\n      exact sq_iff.mp (by apply sq_nonneg)\n      exact differentiableAt_id\n      exact hqDeriv x2\n      exact hpDeriv x2\n      exact DifferentiableAt.const_mul (hqDeriv x2) _\n      exact DifferentiableAt.add (hpDeriv x2) (DifferentiableAt.const_mul (hqDeriv x2) _)\n      exact DifferentiableAt.const_mul differentiableAt_id _\n\n    apply monotoneOn_of_deriv_nonneg (convex_Icc (0: \u211d) 1) (hfContinuous) (hfDifferentiable) (interior_increasing)\n  have f_pos: f x > 0 := by\n    have x_pos: x \u2265 0 := by\n      apply (mem_Icc.mp hD).1\n    have fx_gt_f_zero: f x \u2265 f 0 := by\n      apply monotonic (left_mem_Icc.mpr (by norm_num)) hD\n      exact x_pos\n    apply lt_of_lt_of_le gt_zero fx_gt_f_zero\n  have equiv: p x + 2 * q x > 40 * x \u2194 p x + 2 * q x - 40 * x > 0 := by constructor <;> intro h <;> linarith\n  rw [equiv]\n  exact f_pos\n\n\n",
        "annotation": "The goal is to prove that the inequality p(x) + 2 * q(x) > 40 * x holds for x in [0,1] under certain assumptions. We define the function f(x) = p(x) + 2 * q(x) - 40 * x and show that f(0) > 0 and that f is non-decreasing on the interval. To demonstrate f(0) > 0, we substitute x = 0 and use the given conditions. We then prove f's monotonicity by showing it is differentiable and that its derivative is nonnegative, utilizing the relationship between p' and q'. Since f is non-decreasing and f(0) > 0, it follows that f(x) > 0 for all x in [0,1]. This implies the original inequality, completing the proof."
    },
    {
        "theorem": "example (x: \u211d) (p q : \u211d \u2192 \u211d) (h0 : p 0 = q 0 \u2227 q 0 > 0) (hf': \u2200 y:\u211d, (deriv p y) * (deriv q y) = 2)\n  (hqDeriv: Differentiable \u211d q) (hpDeriv: Differentiable \u211d p)\n  (hP: \u2200 y:\u211d, deriv p y > 0) (hD: x \u2208 Icc (0: \u211d) (1: \u211d)): p x + 2 * q x > 4 * x := by",
        "proof": "\n  let f := (\u03bb x \u21a6 p x + 2 * q x - 4 * x)\n  let D := Icc (0: \u211d) (1: \u211d)\n\n  have gt_zero: f 0 > 0 := by\n    simp [f, h0.left]\n    rw [\u2190 one_add_mul]\n    apply mul_pos\n    \u00b7 norm_num\n    \u00b7 exact h0.right\n  have monotonic: MonotoneOn f D := by\n    have hfDifferentiableInReal : Differentiable \u211d f := by\n        exact ((hpDeriv).add (hqDeriv.const_mul _)).sub (differentiable_id.const_mul _)\n    have hfDifferentiable: DifferentiableOn \u211d f (interior D) := by\n      exact hfDifferentiableInReal.differentiableOn.mono interior_subset\n    have hfContinuous: ContinuousOn f D:= by\n      exact hfDifferentiableInReal.continuous.continuousOn\n\n    have interior_increasing: \u2200 x2 \u2208 interior D, deriv f x2 \u2265 0 := by\n      intros x2 hx2\n      let hpX2 := hP x2\n      have reciprocal_deriv: deriv q x2 = 2 / deriv p x2 := by\n        have hf'_iff: deriv p x2 * deriv q x2 = 2 \u2194 deriv q x2 = 2 / deriv p x2 := by\n          field_simp [hpX2]\n          ring\n        exact hf'_iff.mp (hf' x2)\n      rw [deriv_sub]\n      rw [deriv_add]\n      rw [deriv_const_mul]\n      rw [reciprocal_deriv]\n      rw [deriv_const_mul]\n      rw [deriv_id'']\n      have sq_iff : 0 \u2264 deriv p x2 * (deriv p x2 + 2 * (2 / deriv p x2) - 4) \u2194\n        0 \u2264 deriv p x2 + 2 * (2 / deriv p x2) - 4 := by\n        apply mul_nonneg_iff_of_pos_left (hP x2)\n      have quad_eq : deriv p x2 * (deriv p x2 + 2 * (2 / deriv p x2) - 4)\n              = deriv p x2 ^ 2 + 2 * 2 - 4 * deriv p x2 := by\n        field_simp [hpX2]\n        ring\n      have quad_sq : deriv p x2 ^ 2 + 2 * 2 - 4 * deriv p x2 = (deriv p x2 - 2) ^ 2 := by ring\n      have simplify: deriv p x2 + 2 * (2 / deriv p x2) - 4 * (fun x2 \u21a6 1) x = deriv p x2 + 2 * (2 / deriv p x2) - 4 := by ring\n      rw [quad_eq, quad_sq] at sq_iff\n      rw [simplify]\n      exact sq_iff.mp (by apply sq_nonneg)\n      exact differentiableAt_id\n      exact hqDeriv x2\n      exact hpDeriv x2\n      exact DifferentiableAt.const_mul (hqDeriv x2) _\n      exact DifferentiableAt.add (hpDeriv x2) (DifferentiableAt.const_mul (hqDeriv x2) _)\n      exact DifferentiableAt.const_mul differentiableAt_id _\n\n    apply monotoneOn_of_deriv_nonneg (convex_Icc (0: \u211d) 1) (hfContinuous) (hfDifferentiable) (interior_increasing)\n  have f_pos: f x > 0 := by\n    have x_pos: x \u2265 0 := by\n      apply (mem_Icc.mp hD).1\n    have fx_gt_f_zero: f x \u2265 f 0 := by\n      apply monotonic (left_mem_Icc.mpr (by norm_num)) hD\n      exact x_pos\n    apply lt_of_lt_of_le gt_zero fx_gt_f_zero\n  have equiv: p x + 2 * q x > 4 * x \u2194 p x + 2 * q x - 4 * x > 0 := by constructor <;> intro h <;> linarith\n  rw [equiv]\n  exact f_pos\n\n\n",
        "annotation": "The goal is to prove that for functions p(x) and q(x) with p(0) = q(0) > 0 and p'(y) * q'(y) = 2 for all real y, it holds that p(x) + 2 * q(x) > 4 * x for x in [0, 1]. We define f(x) = p(x) + 2 * q(x) - 4 * x and show f(0) > 0. We establish that f is differentiable and continuous on [0, 1], and prove its monotonicity by demonstrating that its derivative is non-negative. This involves expressing the derivative in terms of p'(x) and showing it is always non-negative. Using monotonicity, we conclude f(x) > 0 for all x in [0, 1], which is equivalent to the original inequality, thus proving the statement."
    },
    {
        "theorem": "example (x: \u211d) (p q : \u211d \u2192 \u211d) (h0 : p 0 = q 0 \u2227 q 0 > 0) (hf': \u2200 y:\u211d, (deriv p y) * (deriv q y) = 17)\n  (hqDeriv: Differentiable \u211d q) (hpDeriv: Differentiable \u211d p)\n  (hP: \u2200 y:\u211d, deriv p y > 0) (hD: x \u2208 Icc (0: \u211d) (1: \u211d)): p x + 17 * q x > 34 * x := by",
        "proof": "\n  let f := (\u03bb x \u21a6 p x + 17 * q x - 34 * x)\n  let D := Icc (0: \u211d) (1: \u211d)\n\n  have gt_zero: f 0 > 0 := by\n    simp [f, h0.left]\n    rw [\u2190 one_add_mul]\n    apply mul_pos\n    \u00b7 norm_num\n    \u00b7 exact h0.right\n  have monotonic: MonotoneOn f D := by\n    have hfDifferentiableInReal : Differentiable \u211d f := by\n        exact ((hpDeriv).add (hqDeriv.const_mul _)).sub (differentiable_id.const_mul _)\n    have hfDifferentiable: DifferentiableOn \u211d f (interior D) := by\n      exact hfDifferentiableInReal.differentiableOn.mono interior_subset\n    have hfContinuous: ContinuousOn f D:= by\n      exact hfDifferentiableInReal.continuous.continuousOn\n\n    have interior_increasing: \u2200 x2 \u2208 interior D, deriv f x2 \u2265 0 := by\n      intros x2 hx2\n      let hpX2 := hP x2\n      have reciprocal_deriv: deriv q x2 = 17 / deriv p x2 := by\n        have hf'_iff: deriv p x2 * deriv q x2 = 17 \u2194 deriv q x2 = 17 / deriv p x2 := by\n          field_simp [hpX2]\n          ring\n        exact hf'_iff.mp (hf' x2)\n      rw [deriv_sub]\n      rw [deriv_add]\n      rw [deriv_const_mul]\n      rw [reciprocal_deriv]\n      rw [deriv_const_mul]\n      rw [deriv_id'']\n      have sq_iff : 0 \u2264 deriv p x2 * (deriv p x2 + 17 * (17 / deriv p x2) - 34) \u2194\n        0 \u2264 deriv p x2 + 17 * (17 / deriv p x2) - 34 := by\n        apply mul_nonneg_iff_of_pos_left (hP x2)\n      have quad_eq : deriv p x2 * (deriv p x2 + 17 * (17 / deriv p x2) - 34)\n              = deriv p x2 ^ 2 + 17 * 17 - 34 * deriv p x2 := by\n        field_simp [hpX2]\n        ring\n      have quad_sq : deriv p x2 ^ 2 + 17 * 17 - 34 * deriv p x2 = (deriv p x2 - 17) ^ 2 := by ring\n      have simplify: deriv p x2 + 17 * (17 / deriv p x2) - 34 * (fun x2 \u21a6 1) x = deriv p x2 + 17 * (17 / deriv p x2) - 34 := by ring\n      rw [quad_eq, quad_sq] at sq_iff\n      rw [simplify]\n      exact sq_iff.mp (by apply sq_nonneg)\n      exact differentiableAt_id\n      exact hqDeriv x2\n      exact hpDeriv x2\n      exact DifferentiableAt.const_mul (hqDeriv x2) _\n      exact DifferentiableAt.add (hpDeriv x2) (DifferentiableAt.const_mul (hqDeriv x2) _)\n      exact DifferentiableAt.const_mul differentiableAt_id _\n\n    apply monotoneOn_of_deriv_nonneg (convex_Icc (0: \u211d) 1) (hfContinuous) (hfDifferentiable) (interior_increasing)\n  have f_pos: f x > 0 := by\n    have x_pos: x \u2265 0 := by\n      apply (mem_Icc.mp hD).1\n    have fx_gt_f_zero: f x \u2265 f 0 := by\n      apply monotonic (left_mem_Icc.mpr (by norm_num)) hD\n      exact x_pos\n    apply lt_of_lt_of_le gt_zero fx_gt_f_zero\n  have equiv: p x + 17 * q x > 34 * x \u2194 p x + 17 * q x - 34 * x > 0 := by constructor <;> intro h <;> linarith\n  rw [equiv]\n  exact f_pos\n\n\n",
        "annotation": "The goal is to prove that for differentiable functions p and q, with p(0) = q(0) > 0 and p'(x) * q'(x) = 17 for all x, it follows that p(x) + 17 * q(x) > 34 * x on the interval D = [0,1]. The proof involves defining the function f(x) = p(x) + 17 * q(x) - 34 * x and showing that f(x) is positive on D. First, f(0) is established as positive. Next, it is shown that f is differentiable and continuous on D, with a nonnegative derivative, indicating that f is monotone. Finally, using the monotonicity and the positivity of f(0), it is concluded that f(x) > 0 for all x in D, which confirms the desired inequality."
    },
    {
        "theorem": "example (x: \u211d) (p q : \u211d \u2192 \u211d) (h0 : p 0 = q 0 \u2227 q 0 > 0) (hf': \u2200 y:\u211d, (deriv p y) * (deriv q y) = 18)\n  (hqDeriv: Differentiable \u211d q) (hpDeriv: Differentiable \u211d p)\n  (hP: \u2200 y:\u211d, deriv p y > 0) (hD: x \u2208 Icc (0: \u211d) (1: \u211d)): p x + 2 * q x > 12 * x := by",
        "proof": "\n  let f := (\u03bb x \u21a6 p x + 2 * q x - 12 * x)\n  let D := Icc (0: \u211d) (1: \u211d)\n\n  have gt_zero: f 0 > 0 := by\n    simp [f, h0.left]\n    rw [\u2190 one_add_mul]\n    apply mul_pos\n    \u00b7 norm_num\n    \u00b7 exact h0.right\n  have monotonic: MonotoneOn f D := by\n    have hfDifferentiableInReal : Differentiable \u211d f := by\n        exact ((hpDeriv).add (hqDeriv.const_mul _)).sub (differentiable_id.const_mul _)\n    have hfDifferentiable: DifferentiableOn \u211d f (interior D) := by\n      exact hfDifferentiableInReal.differentiableOn.mono interior_subset\n    have hfContinuous: ContinuousOn f D:= by\n      exact hfDifferentiableInReal.continuous.continuousOn\n\n    have interior_increasing: \u2200 x2 \u2208 interior D, deriv f x2 \u2265 0 := by\n      intros x2 hx2\n      let hpX2 := hP x2\n      have reciprocal_deriv: deriv q x2 = 18 / deriv p x2 := by\n        have hf'_iff: deriv p x2 * deriv q x2 = 18 \u2194 deriv q x2 = 18 / deriv p x2 := by\n          field_simp [hpX2]\n          ring\n        exact hf'_iff.mp (hf' x2)\n      rw [deriv_sub]\n      rw [deriv_add]\n      rw [deriv_const_mul]\n      rw [reciprocal_deriv]\n      rw [deriv_const_mul]\n      rw [deriv_id'']\n      have sq_iff : 0 \u2264 deriv p x2 * (deriv p x2 + 2 * (18 / deriv p x2) - 12) \u2194\n        0 \u2264 deriv p x2 + 2 * (18 / deriv p x2) - 12 := by\n        apply mul_nonneg_iff_of_pos_left (hP x2)\n      have quad_eq : deriv p x2 * (deriv p x2 + 2 * (18 / deriv p x2) - 12)\n              = deriv p x2 ^ 2 + 2 * 18 - 12 * deriv p x2 := by\n        field_simp [hpX2]\n        ring\n      have quad_sq : deriv p x2 ^ 2 + 2 * 18 - 12 * deriv p x2 = (deriv p x2 - 6) ^ 2 := by ring\n      have simplify: deriv p x2 + 2 * (18 / deriv p x2) - 12 * (fun x2 \u21a6 1) x = deriv p x2 + 2 * (18 / deriv p x2) - 12 := by ring\n      rw [quad_eq, quad_sq] at sq_iff\n      rw [simplify]\n      exact sq_iff.mp (by apply sq_nonneg)\n      exact differentiableAt_id\n      exact hqDeriv x2\n      exact hpDeriv x2\n      exact DifferentiableAt.const_mul (hqDeriv x2) _\n      exact DifferentiableAt.add (hpDeriv x2) (DifferentiableAt.const_mul (hqDeriv x2) _)\n      exact DifferentiableAt.const_mul differentiableAt_id _\n\n    apply monotoneOn_of_deriv_nonneg (convex_Icc (0: \u211d) 1) (hfContinuous) (hfDifferentiable) (interior_increasing)\n  have f_pos: f x > 0 := by\n    have x_pos: x \u2265 0 := by\n      apply (mem_Icc.mp hD).1\n    have fx_gt_f_zero: f x \u2265 f 0 := by\n      apply monotonic (left_mem_Icc.mpr (by norm_num)) hD\n      exact x_pos\n    apply lt_of_lt_of_le gt_zero fx_gt_f_zero\n  have equiv: p x + 2 * q x > 12 * x \u2194 p x + 2 * q x - 12 * x > 0 := by constructor <;> intro h <;> linarith\n  rw [equiv]\n  exact f_pos\n\n\n",
        "annotation": "The objective is to demonstrate that for functions p(x) and q(x) with specific conditions, the inequality p(x) + 2q(x) > 12x holds for x in the interval [0,1]. This is achieved by defining f(x) = p(x) + 2q(x) - 12x and proving that f(x) is strictly positive on [0,1]. The proof involves several steps: first, showing f(0) > 0 using the given values; then establishing that f is monotonic by proving it is differentiable and its derivative is nonnegative on the interval. Finally, since f is nondecreasing and f(0) > 0, it follows that f(x) > 0 for all x in [0,1], leading to the conclusion that p(x) + 2q(x) > 12x."
    },
    {
        "theorem": "example (x: \u211d) (p q : \u211d \u2192 \u211d) (h0 : p 0 = q 0 \u2227 q 0 > 0) (hf': \u2200 y:\u211d, (deriv p y) * (deriv q y) = 8)\n  (hqDeriv: Differentiable \u211d q) (hpDeriv: Differentiable \u211d p)\n  (hP: \u2200 y:\u211d, deriv p y > 0) (hD: x \u2208 Icc (0: \u211d) (1: \u211d)): p x + 2 * q x > 8 * x := by",
        "proof": "\n  let f := (\u03bb x \u21a6 p x + 2 * q x - 8 * x)\n  let D := Icc (0: \u211d) (1: \u211d)\n\n  have gt_zero: f 0 > 0 := by\n    simp [f, h0.left]\n    rw [\u2190 one_add_mul]\n    apply mul_pos\n    \u00b7 norm_num\n    \u00b7 exact h0.right\n  have monotonic: MonotoneOn f D := by\n    have hfDifferentiableInReal : Differentiable \u211d f := by\n        exact ((hpDeriv).add (hqDeriv.const_mul _)).sub (differentiable_id.const_mul _)\n    have hfDifferentiable: DifferentiableOn \u211d f (interior D) := by\n      exact hfDifferentiableInReal.differentiableOn.mono interior_subset\n    have hfContinuous: ContinuousOn f D:= by\n      exact hfDifferentiableInReal.continuous.continuousOn\n\n    have interior_increasing: \u2200 x2 \u2208 interior D, deriv f x2 \u2265 0 := by\n      intros x2 hx2\n      let hpX2 := hP x2\n      have reciprocal_deriv: deriv q x2 = 8 / deriv p x2 := by\n        have hf'_iff: deriv p x2 * deriv q x2 = 8 \u2194 deriv q x2 = 8 / deriv p x2 := by\n          field_simp [hpX2]\n          ring\n        exact hf'_iff.mp (hf' x2)\n      rw [deriv_sub]\n      rw [deriv_add]\n      rw [deriv_const_mul]\n      rw [reciprocal_deriv]\n      rw [deriv_const_mul]\n      rw [deriv_id'']\n      have sq_iff : 0 \u2264 deriv p x2 * (deriv p x2 + 2 * (8 / deriv p x2) - 8) \u2194\n        0 \u2264 deriv p x2 + 2 * (8 / deriv p x2) - 8 := by\n        apply mul_nonneg_iff_of_pos_left (hP x2)\n      have quad_eq : deriv p x2 * (deriv p x2 + 2 * (8 / deriv p x2) - 8)\n              = deriv p x2 ^ 2 + 2 * 8 - 8 * deriv p x2 := by\n        field_simp [hpX2]\n        ring\n      have quad_sq : deriv p x2 ^ 2 + 2 * 8 - 8 * deriv p x2 = (deriv p x2 - 4) ^ 2 := by ring\n      have simplify: deriv p x2 + 2 * (8 / deriv p x2) - 8 * (fun x2 \u21a6 1) x = deriv p x2 + 2 * (8 / deriv p x2) - 8 := by ring\n      rw [quad_eq, quad_sq] at sq_iff\n      rw [simplify]\n      exact sq_iff.mp (by apply sq_nonneg)\n      exact differentiableAt_id\n      exact hqDeriv x2\n      exact hpDeriv x2\n      exact DifferentiableAt.const_mul (hqDeriv x2) _\n      exact DifferentiableAt.add (hpDeriv x2) (DifferentiableAt.const_mul (hqDeriv x2) _)\n      exact DifferentiableAt.const_mul differentiableAt_id _\n\n    apply monotoneOn_of_deriv_nonneg (convex_Icc (0: \u211d) 1) (hfContinuous) (hfDifferentiable) (interior_increasing)\n  have f_pos: f x > 0 := by\n    have x_pos: x \u2265 0 := by\n      apply (mem_Icc.mp hD).1\n    have fx_gt_f_zero: f x \u2265 f 0 := by\n      apply monotonic (left_mem_Icc.mpr (by norm_num)) hD\n      exact x_pos\n    apply lt_of_lt_of_le gt_zero fx_gt_f_zero\n  have equiv: p x + 2 * q x > 8 * x \u2194 p x + 2 * q x - 8 * x > 0 := by constructor <;> intro h <;> linarith\n  rw [equiv]\n  exact f_pos\n\n\n",
        "annotation": "The task is to prove that for two differentiable functions p and q, with p' > 0 and the condition p'(y) * q'(y) = 8, the inequality p(x) + 2 * q(x) > 8 * x holds for any x in [0, 1]. We define the function f(x) = p(x) + 2 * q(x) - 8 * x and show that f(x) > 0 for x in [0, 1]. We start by proving f(0) > 0 using initial values. Then, we demonstrate that f is monotonic by establishing its differentiability and showing that its derivative f'(x) is nonnegative. Since f is continuous and non-decreasing, we conclude that f(x) > 0 for all x in the interval, thus proving the original claim."
    },
    {
        "theorem": "example (x: \u211d) (p q : \u211d \u2192 \u211d) (h0 : p 0 = q 0 \u2227 q 0 > 0) (hf': \u2200 y:\u211d, (deriv p y) * (deriv q y) = 98)\n  (hqDeriv: Differentiable \u211d q) (hpDeriv: Differentiable \u211d p)\n  (hP: \u2200 y:\u211d, deriv p y > 0) (hD: x \u2208 Icc (0: \u211d) (1: \u211d)): p x + 2 * q x > 28 * x := by",
        "proof": "\n  let f := (\u03bb x \u21a6 p x + 2 * q x - 28 * x)\n  let D := Icc (0: \u211d) (1: \u211d)\n\n  have gt_zero: f 0 > 0 := by\n    simp [f, h0.left]\n    rw [\u2190 one_add_mul]\n    apply mul_pos\n    \u00b7 norm_num\n    \u00b7 exact h0.right\n  have monotonic: MonotoneOn f D := by\n    have hfDifferentiableInReal : Differentiable \u211d f := by\n        exact ((hpDeriv).add (hqDeriv.const_mul _)).sub (differentiable_id.const_mul _)\n    have hfDifferentiable: DifferentiableOn \u211d f (interior D) := by\n      exact hfDifferentiableInReal.differentiableOn.mono interior_subset\n    have hfContinuous: ContinuousOn f D:= by\n      exact hfDifferentiableInReal.continuous.continuousOn\n\n    have interior_increasing: \u2200 x2 \u2208 interior D, deriv f x2 \u2265 0 := by\n      intros x2 hx2\n      let hpX2 := hP x2\n      have reciprocal_deriv: deriv q x2 = 98 / deriv p x2 := by\n        have hf'_iff: deriv p x2 * deriv q x2 = 98 \u2194 deriv q x2 = 98 / deriv p x2 := by\n          field_simp [hpX2]\n          ring\n        exact hf'_iff.mp (hf' x2)\n      rw [deriv_sub]\n      rw [deriv_add]\n      rw [deriv_const_mul]\n      rw [reciprocal_deriv]\n      rw [deriv_const_mul]\n      rw [deriv_id'']\n      have sq_iff : 0 \u2264 deriv p x2 * (deriv p x2 + 2 * (98 / deriv p x2) - 28) \u2194\n        0 \u2264 deriv p x2 + 2 * (98 / deriv p x2) - 28 := by\n        apply mul_nonneg_iff_of_pos_left (hP x2)\n      have quad_eq : deriv p x2 * (deriv p x2 + 2 * (98 / deriv p x2) - 28)\n              = deriv p x2 ^ 2 + 2 * 98 - 28 * deriv p x2 := by\n        field_simp [hpX2]\n        ring\n      have quad_sq : deriv p x2 ^ 2 + 2 * 98 - 28 * deriv p x2 = (deriv p x2 - 14) ^ 2 := by ring\n      have simplify: deriv p x2 + 2 * (98 / deriv p x2) - 28 * (fun x2 \u21a6 1) x = deriv p x2 + 2 * (98 / deriv p x2) - 28 := by ring\n      rw [quad_eq, quad_sq] at sq_iff\n      rw [simplify]\n      exact sq_iff.mp (by apply sq_nonneg)\n      exact differentiableAt_id\n      exact hqDeriv x2\n      exact hpDeriv x2\n      exact DifferentiableAt.const_mul (hqDeriv x2) _\n      exact DifferentiableAt.add (hpDeriv x2) (DifferentiableAt.const_mul (hqDeriv x2) _)\n      exact DifferentiableAt.const_mul differentiableAt_id _\n\n    apply monotoneOn_of_deriv_nonneg (convex_Icc (0: \u211d) 1) (hfContinuous) (hfDifferentiable) (interior_increasing)\n  have f_pos: f x > 0 := by\n    have x_pos: x \u2265 0 := by\n      apply (mem_Icc.mp hD).1\n    have fx_gt_f_zero: f x \u2265 f 0 := by\n      apply monotonic (left_mem_Icc.mpr (by norm_num)) hD\n      exact x_pos\n    apply lt_of_lt_of_le gt_zero fx_gt_f_zero\n  have equiv: p x + 2 * q x > 28 * x \u2194 p x + 2 * q x - 28 * x > 0 := by constructor <;> intro h <;> linarith\n  rw [equiv]\n  exact f_pos\n\n\n",
        "annotation": "The instructions outline a proof demonstrating that for differentiable functions p and q, under specific conditions, the inequality p(x) + 2 * q(x) > 28x holds on the interval [0, 1]. The proof begins by defining the function f(x) = p(x) + 2 * q(x) - 28x and showing that f(0) > 0 using the positivity of q(0). It then establishes that f is monotonic on [0, 1] by proving its differentiability and nonnegative derivative through manipulations of the derivatives of p and q. The monotonicity of f leads to the conclusion that f(x) > 0 for all x in [0, 1]. Finally, the original inequality is confirmed as equivalent to f(x) > 0, completing the proof."
    },
    {
        "theorem": "example (x: \u211d) (p q : \u211d \u2192 \u211d) (h0 : p 0 = q 0 \u2227 q 0 > 0) (hf': \u2200 y:\u211d, (deriv p y) * (deriv q y) = 75)\n  (hqDeriv: Differentiable \u211d q) (hpDeriv: Differentiable \u211d p)\n  (hP: \u2200 y:\u211d, deriv p y > 0) (hD: x \u2208 Icc (0: \u211d) (1: \u211d)): p x + 3 * q x > 30 * x := by",
        "proof": "\n  let f := (\u03bb x \u21a6 p x + 3 * q x - 30 * x)\n  let D := Icc (0: \u211d) (1: \u211d)\n\n  have gt_zero: f 0 > 0 := by\n    simp [f, h0.left]\n    rw [\u2190 one_add_mul]\n    apply mul_pos\n    \u00b7 norm_num\n    \u00b7 exact h0.right\n  have monotonic: MonotoneOn f D := by\n    have hfDifferentiableInReal : Differentiable \u211d f := by\n        exact ((hpDeriv).add (hqDeriv.const_mul _)).sub (differentiable_id.const_mul _)\n    have hfDifferentiable: DifferentiableOn \u211d f (interior D) := by\n      exact hfDifferentiableInReal.differentiableOn.mono interior_subset\n    have hfContinuous: ContinuousOn f D:= by\n      exact hfDifferentiableInReal.continuous.continuousOn\n\n    have interior_increasing: \u2200 x2 \u2208 interior D, deriv f x2 \u2265 0 := by\n      intros x2 hx2\n      let hpX2 := hP x2\n      have reciprocal_deriv: deriv q x2 = 75 / deriv p x2 := by\n        have hf'_iff: deriv p x2 * deriv q x2 = 75 \u2194 deriv q x2 = 75 / deriv p x2 := by\n          field_simp [hpX2]\n          ring\n        exact hf'_iff.mp (hf' x2)\n      rw [deriv_sub]\n      rw [deriv_add]\n      rw [deriv_const_mul]\n      rw [reciprocal_deriv]\n      rw [deriv_const_mul]\n      rw [deriv_id'']\n      have sq_iff : 0 \u2264 deriv p x2 * (deriv p x2 + 3 * (75 / deriv p x2) - 30) \u2194\n        0 \u2264 deriv p x2 + 3 * (75 / deriv p x2) - 30 := by\n        apply mul_nonneg_iff_of_pos_left (hP x2)\n      have quad_eq : deriv p x2 * (deriv p x2 + 3 * (75 / deriv p x2) - 30)\n              = deriv p x2 ^ 2 + 3 * 75 - 30 * deriv p x2 := by\n        field_simp [hpX2]\n        ring\n      have quad_sq : deriv p x2 ^ 2 + 3 * 75 - 30 * deriv p x2 = (deriv p x2 - 15) ^ 2 := by ring\n      have simplify: deriv p x2 + 3 * (75 / deriv p x2) - 30 * (fun x2 \u21a6 1) x = deriv p x2 + 3 * (75 / deriv p x2) - 30 := by ring\n      rw [quad_eq, quad_sq] at sq_iff\n      rw [simplify]\n      exact sq_iff.mp (by apply sq_nonneg)\n      exact differentiableAt_id\n      exact hqDeriv x2\n      exact hpDeriv x2\n      exact DifferentiableAt.const_mul (hqDeriv x2) _\n      exact DifferentiableAt.add (hpDeriv x2) (DifferentiableAt.const_mul (hqDeriv x2) _)\n      exact DifferentiableAt.const_mul differentiableAt_id _\n\n    apply monotoneOn_of_deriv_nonneg (convex_Icc (0: \u211d) 1) (hfContinuous) (hfDifferentiable) (interior_increasing)\n  have f_pos: f x > 0 := by\n    have x_pos: x \u2265 0 := by\n      apply (mem_Icc.mp hD).1\n    have fx_gt_f_zero: f x \u2265 f 0 := by\n      apply monotonic (left_mem_Icc.mpr (by norm_num)) hD\n      exact x_pos\n    apply lt_of_lt_of_le gt_zero fx_gt_f_zero\n  have equiv: p x + 3 * q x > 30 * x \u2194 p x + 3 * q x - 30 * x > 0 := by constructor <;> intro h <;> linarith\n  rw [equiv]\n  exact f_pos\n\n\n",
        "annotation": "To prove that for differentiable functions p(x) and q(x) with p(0) = q(0) > 0 and p'(y) * q'(y) = 75, the inequality p(x) + 3 * q(x) > 30 * x holds for x \u2208 [0,1], define f(x) = p(x) + 3 * q(x) - 30 * x. First, show f(0) > 0 by substituting known values and demonstrating positivity. Next, establish that f is differentiable and continuous on D, and prove its derivative f' is nonnegative, indicating monotonicity. Since f(0) > 0 and f is monotonic, conclude that f(x) > 0 for all x in D. This confirms the original inequality, completing the proof."
    },
    {
        "theorem": "example (x: \u211d) (p q : \u211d \u2192 \u211d) (h0 : p 0 = q 0 \u2227 q 0 > 0) (hf': \u2200 y:\u211d, (deriv p y) * (deriv q y) = 75)\n  (hqDeriv: Differentiable \u211d q) (hpDeriv: Differentiable \u211d p)\n  (hP: \u2200 y:\u211d, deriv p y > 0) (hD: x \u2208 Icc (0: \u211d) (1: \u211d)): p x + 3 * q x > 30 * x := by",
        "proof": "\n  let f := (\u03bb x \u21a6 p x + 3 * q x - 30 * x)\n  let D := Icc (0: \u211d) (1: \u211d)\n\n  have gt_zero: f 0 > 0 := by\n    simp [f, h0.left]\n    rw [\u2190 one_add_mul]\n    apply mul_pos\n    \u00b7 norm_num\n    \u00b7 exact h0.right\n  have monotonic: MonotoneOn f D := by\n    have hfDifferentiableInReal : Differentiable \u211d f := by\n        exact ((hpDeriv).add (hqDeriv.const_mul _)).sub (differentiable_id.const_mul _)\n    have hfDifferentiable: DifferentiableOn \u211d f (interior D) := by\n      exact hfDifferentiableInReal.differentiableOn.mono interior_subset\n    have hfContinuous: ContinuousOn f D:= by\n      exact hfDifferentiableInReal.continuous.continuousOn\n\n    have interior_increasing: \u2200 x2 \u2208 interior D, deriv f x2 \u2265 0 := by\n      intros x2 hx2\n      let hpX2 := hP x2\n      have reciprocal_deriv: deriv q x2 = 75 / deriv p x2 := by\n        have hf'_iff: deriv p x2 * deriv q x2 = 75 \u2194 deriv q x2 = 75 / deriv p x2 := by\n          field_simp [hpX2]\n          ring\n        exact hf'_iff.mp (hf' x2)\n      rw [deriv_sub]\n      rw [deriv_add]\n      rw [deriv_const_mul]\n      rw [reciprocal_deriv]\n      rw [deriv_const_mul]\n      rw [deriv_id'']\n      have sq_iff : 0 \u2264 deriv p x2 * (deriv p x2 + 3 * (75 / deriv p x2) - 30) \u2194\n        0 \u2264 deriv p x2 + 3 * (75 / deriv p x2) - 30 := by\n        apply mul_nonneg_iff_of_pos_left (hP x2)\n      have quad_eq : deriv p x2 * (deriv p x2 + 3 * (75 / deriv p x2) - 30)\n              = deriv p x2 ^ 2 + 3 * 75 - 30 * deriv p x2 := by\n        field_simp [hpX2]\n        ring\n      have quad_sq : deriv p x2 ^ 2 + 3 * 75 - 30 * deriv p x2 = (deriv p x2 - 15) ^ 2 := by ring\n      have simplify: deriv p x2 + 3 * (75 / deriv p x2) - 30 * (fun x2 \u21a6 1) x = deriv p x2 + 3 * (75 / deriv p x2) - 30 := by ring\n      rw [quad_eq, quad_sq] at sq_iff\n      rw [simplify]\n      exact sq_iff.mp (by apply sq_nonneg)\n      exact differentiableAt_id\n      exact hqDeriv x2\n      exact hpDeriv x2\n      exact DifferentiableAt.const_mul (hqDeriv x2) _\n      exact DifferentiableAt.add (hpDeriv x2) (DifferentiableAt.const_mul (hqDeriv x2) _)\n      exact DifferentiableAt.const_mul differentiableAt_id _\n\n    apply monotoneOn_of_deriv_nonneg (convex_Icc (0: \u211d) 1) (hfContinuous) (hfDifferentiable) (interior_increasing)\n  have f_pos: f x > 0 := by\n    have x_pos: x \u2265 0 := by\n      apply (mem_Icc.mp hD).1\n    have fx_gt_f_zero: f x \u2265 f 0 := by\n      apply monotonic (left_mem_Icc.mpr (by norm_num)) hD\n      exact x_pos\n    apply lt_of_lt_of_le gt_zero fx_gt_f_zero\n  have equiv: p x + 3 * q x > 30 * x \u2194 p x + 3 * q x - 30 * x > 0 := by constructor <;> intro h <;> linarith\n  rw [equiv]\n  exact f_pos\n\n\n",
        "annotation": "The goal is to demonstrate that for real-valued functions p and q, with p(0) = q(0) > 0 and the relationship q'(x) = 75 / p'(x), the inequality p(x) + 3 * q(x) > 30 * x holds for x in [0,1]. First, define the function f(x) = p(x) + 3 * q(x) - 30 * x and show f(0) > 0. Next, prove that f is differentiable and monotone on the interval [0,1] by establishing that f' is nonnegative, using the relationship between p' and q'. Finally, apply the monotonicity of f and the initial condition f(0) > 0 to conclude that f(x) > 0 for all x in [0,1], thus confirming the desired inequality."
    },
    {
        "theorem": "example (x: \u211d) (p q : \u211d \u2192 \u211d) (h0 : p 0 = q 0 \u2227 q 0 > 0) (hf': \u2200 y:\u211d, (deriv p y) * (deriv q y) = 75)\n  (hqDeriv: Differentiable \u211d q) (hpDeriv: Differentiable \u211d p)\n  (hP: \u2200 y:\u211d, deriv p y > 0) (hD: x \u2208 Icc (0: \u211d) (1: \u211d)): p x + 3 * q x > 30 * x := by",
        "proof": "\n  let f := (\u03bb x \u21a6 p x + 3 * q x - 30 * x)\n  let D := Icc (0: \u211d) (1: \u211d)\n\n  have gt_zero: f 0 > 0 := by\n    simp [f, h0.left]\n    rw [\u2190 one_add_mul]\n    apply mul_pos\n    \u00b7 norm_num\n    \u00b7 exact h0.right\n  have monotonic: MonotoneOn f D := by\n    have hfDifferentiableInReal : Differentiable \u211d f := by\n        exact ((hpDeriv).add (hqDeriv.const_mul _)).sub (differentiable_id.const_mul _)\n    have hfDifferentiable: DifferentiableOn \u211d f (interior D) := by\n      exact hfDifferentiableInReal.differentiableOn.mono interior_subset\n    have hfContinuous: ContinuousOn f D:= by\n      exact hfDifferentiableInReal.continuous.continuousOn\n\n    have interior_increasing: \u2200 x2 \u2208 interior D, deriv f x2 \u2265 0 := by\n      intros x2 hx2\n      let hpX2 := hP x2\n      have reciprocal_deriv: deriv q x2 = 75 / deriv p x2 := by\n        have hf'_iff: deriv p x2 * deriv q x2 = 75 \u2194 deriv q x2 = 75 / deriv p x2 := by\n          field_simp [hpX2]\n          ring\n        exact hf'_iff.mp (hf' x2)\n      rw [deriv_sub]\n      rw [deriv_add]\n      rw [deriv_const_mul]\n      rw [reciprocal_deriv]\n      rw [deriv_const_mul]\n      rw [deriv_id'']\n      have sq_iff : 0 \u2264 deriv p x2 * (deriv p x2 + 3 * (75 / deriv p x2) - 30) \u2194\n        0 \u2264 deriv p x2 + 3 * (75 / deriv p x2) - 30 := by\n        apply mul_nonneg_iff_of_pos_left (hP x2)\n      have quad_eq : deriv p x2 * (deriv p x2 + 3 * (75 / deriv p x2) - 30)\n              = deriv p x2 ^ 2 + 3 * 75 - 30 * deriv p x2 := by\n        field_simp [hpX2]\n        ring\n      have quad_sq : deriv p x2 ^ 2 + 3 * 75 - 30 * deriv p x2 = (deriv p x2 - 15) ^ 2 := by ring\n      have simplify: deriv p x2 + 3 * (75 / deriv p x2) - 30 * (fun x2 \u21a6 1) x = deriv p x2 + 3 * (75 / deriv p x2) - 30 := by ring\n      rw [quad_eq, quad_sq] at sq_iff\n      rw [simplify]\n      exact sq_iff.mp (by apply sq_nonneg)\n      exact differentiableAt_id\n      exact hqDeriv x2\n      exact hpDeriv x2\n      exact DifferentiableAt.const_mul (hqDeriv x2) _\n      exact DifferentiableAt.add (hpDeriv x2) (DifferentiableAt.const_mul (hqDeriv x2) _)\n      exact DifferentiableAt.const_mul differentiableAt_id _\n\n    apply monotoneOn_of_deriv_nonneg (convex_Icc (0: \u211d) 1) (hfContinuous) (hfDifferentiable) (interior_increasing)\n  have f_pos: f x > 0 := by\n    have x_pos: x \u2265 0 := by\n      apply (mem_Icc.mp hD).1\n    have fx_gt_f_zero: f x \u2265 f 0 := by\n      apply monotonic (left_mem_Icc.mpr (by norm_num)) hD\n      exact x_pos\n    apply lt_of_lt_of_le gt_zero fx_gt_f_zero\n  have equiv: p x + 3 * q x > 30 * x \u2194 p x + 3 * q x - 30 * x > 0 := by constructor <;> intro h <;> linarith\n  rw [equiv]\n  exact f_pos\n\n\n",
        "annotation": "The goal is to demonstrate that for differentiable functions p(x) and q(x) over \u211d, with p(0) = q(0) and q(0) > 0, the inequality p(x) + 3\u00b7q(x) > 30\u00b7x holds for x in [0, 1]. This is achieved by defining the function f(x) = p(x) + 3\u00b7q(x) - 30\u00b7x and proving f(0) > 0. The proof involves showing that f is monotonic on the interval [0, 1] by establishing its differentiability and that its derivative f'(x) is non-negative. The derivative is expressed in terms of p'(x) and q'(x) using the given relationship p'(y)q'(y) = 75, leading to the conclusion that f is increasing. Finally, since f(0) > 0 and f is monotonic, it follows that f(x) > 0 for all x in [0, 1], confirming the original inequality."
    }
]