[
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 7 + 4 * x ^ 6 + 7 * x ^ 5 + 3 * x ^ 4 + 15 * x ^ 3 + 10 * x ^ 2 + 4) (Icc (0: \u211d) (4: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 7 + 4 * x ^ 6 + 7 * x ^ 5 + 3 * x ^ 4 + 15 * x ^ 3 + 10 * x ^ 2 + 4\n  let D := Icc (0: \u211d) (4: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (4: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 20 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 45 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 12 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 35 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 24 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 42 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 6x^7 + 4x^6 + 7x^5 + 3x^4 + 15x^3 + 10x^2 + 4 \\) is monotonic on the interval \\( D = [0, 4] \\), we follow a structured approach. First, we establish that \\( D \\) is convex, as any closed interval in \\( \\mathbb{R} \\) is convex. Next, we demonstrate that the derivative \\( f' \\) is strictly positive for \\( x \\) in the interior of \\( D \\) by computing \\( f' \\) and showing that each term in the resulting sum is positive for \\( x > 0 \\). We also confirm the continuity of \\( f \\) since it is a polynomial. Finally, we apply a general result that states functions with positive derivatives on convex sets are monotonic, concluding that \\( f \\) is monotonic on \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 15 * x ^ 6 + 6 * x ^ 4 + 4 * x ^ 3) (Icc (0: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 15 * x ^ 6 + 6 * x ^ 4 + 4 * x ^ 3\n  let D := Icc (0: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 12 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 24 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 90 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 15 * x^6 + 6 * x^4 + 4 * x^3 is monotonic on the interval D = [0, 9], we follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative f\u2032(x) is positive for all x in the interior of D (0 < x < 9) by showing that the expression 90 * x^5 + 24 * x^3 + 12 * x^2 is positive for x > 0. We also confirm that all components of f are differentiable. Then, we establish the continuity of f on D, as polynomials are continuous functions. Finally, with D being convex, f being continuous, and f\u2032 > 0 in the interior, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 16 * x ^ 3 + 17 * x ^ 2 + 7 * x + 6) (Icc (0: \u211d) (4: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 16 * x ^ 3 + 17 * x ^ 2 + 7 * x + 6\n  let D := Icc (0: \u211d) (4: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (4: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 7 := by linarith [hx.1]\n\n    have h2: 0 < 34 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 48 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 16 * x^3 + 17 * x^2 + 7 * x + 6 is monotonic on the interval D = [0, 4], we first establish that D is convex, as any closed interval is convex. Next, we show that the derivative f' is positive for x in the interior of D (0 < x < 4) by calculating f' and demonstrating that 48 * x^2 + 34 * x + 7 is greater than zero, since all terms are positive. We also confirm that f is continuous on D, as it is a polynomial function. With the established convexity, continuity, and the positivity of the derivative, we conclude that f is strictly monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 18 * x ^ 6 + 7 * x ^ 4 + 17 * x ^ 3 + 4) (Icc (0: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 18 * x ^ 6 + 7 * x ^ 4 + 17 * x ^ 3 + 4\n  let D := Icc (0: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 51 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 28 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 108 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To demonstrate that the function f(x) = 18 * x^6 + 7 * x^4 + 17 * x^3 + 4 is monotonic on the interval D = [0, 9], we follow several steps. First, we establish that D is convex, as all closed intervals in \u211d are convex. Next, we show that the derivative of f is positive for x in the interior of D (0 < x < 9) by computing the derivative and proving that 108 * x^5 + 28 * x^3 + 51 * x^2 is greater than zero through algebraic simplification. We also confirm that f is continuous on D since polynomial functions are continuous everywhere. With established convexity, a strictly positive derivative, and continuity, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 17 * x ^ 7 + 3 * x ^ 2) (Icc (0: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 17 * x ^ 7 + 3 * x ^ 2\n  let D := Icc (0: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 6 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 119 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To demonstrate that the function f(x) = 17 * x^7 + 3 * x^2 is monotonic on the interval D = [0, 3], we follow a structured approach. First, we establish that D is convex, as closed intervals in real numbers are convex. Next, we show that the derivative of f is strictly positive for x in the interior of D (0 < x < 3) by computing the derivative and confirming that all terms are positive within this range. We also verify the differentiability of the constituent functions. Additionally, we prove that f is continuous on D since each term is continuous. Finally, by combining the convexity of D, the positivity of the derivative, and the continuity of f, we conclude that f is monotonic, specifically strictly increasing, on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 7 + 13 * x ^ 6 + 8 * x ^ 5 + 19 * x ^ 4 + 15 * x ^ 3 + 8 * x ^ 2 + 19 * x + 5) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 7 + 13 * x ^ 6 + 8 * x ^ 5 + 19 * x ^ 4 + 15 * x ^ 3 + 8 * x ^ 2 + 19 * x + 5\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 19 := by linarith [hx.1]\n\n    have h2: 0 < 16 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 45 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 76 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 40 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 78 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h7: 0 < 35 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6, h7]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 5x^7 + 13x^6 + 8x^5 + 19x^4 + 15x^3 + 8x^2 + 19x + 5 \\) is monotonic on the interval \\( D = [0, 1] \\), we will establish the convexity of \\( D \\), demonstrate that the derivative \\( f' \\) is positive in the interior of \\( D \\), and confirm the continuity of \\( f \\) on \\( D \\). First, we note that any closed interval, including \\( D \\), is convex. Next, we compute \\( f' \\) and show that each term is positive for \\( 0 < x < 1 \\), leading to a positive sum. Finally, we verify that \\( f \\) is continuous since all its constituent terms are continuous. With these points established, we conclude that \\( f \\) is monotonic on \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 16 * x ^ 7 + 8 * x ^ 6 + 4 * x ^ 5 + 16 * x ^ 4 + 12 * x ^ 2 + 20) (Icc (0: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 16 * x ^ 7 + 8 * x ^ 6 + 4 * x ^ 5 + 16 * x ^ 4 + 12 * x ^ 2 + 20\n  let D := Icc (0: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 24 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 64 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 20 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 48 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 112 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 16x^7 + 8x^6 + 4x^5 + 16x^4 + 12x^2 + 20 \\) is monotonic on the interval \\( D = [0, 8] \\), we follow several steps. First, we establish that \\( D \\) is convex since any closed interval is convex. Next, we show that the derivative \\( f'(x) \\) is positive for \\( x \\) in the interior of \\( D \\) (i.e., \\( 0 < x < 8 \\)) by differentiating \\( f \\) and demonstrating that the resulting terms are positive. We also confirm the continuity of \\( f \\) on \\( D \\) since polynomial functions are continuous. Finally, these findings allow us to conclude that \\( f \\) is monotonic on the interval \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 5 + 9 * x ^ 3 + 12 * x ^ 2 + 2 * x + 12) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 5 + 9 * x ^ 3 + 12 * x ^ 2 + 2 * x + 12\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 2 := by linarith [hx.1]\n\n    have h2: 0 < 24 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 27 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 50 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 10 * x^5 + 9 * x^3 + 12 * x^2 + 2 * x + 12 is monotonic on the interval D = [0, 5], we will follow several steps. First, we establish that D is convex since it is a closed interval. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 5) by calculating the derivative and showing that the resulting expression, 50 * x^4 + 27 * x^2 + 24 * x + 2, is positive due to all positive coefficients. We also confirm that f is continuous on D by verifying the continuity of each term. Finally, these findings allow us to conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 12 * x ^ 7 + 4 * x ^ 6 + 5 * x ^ 5 + 20 * x ^ 4 + 19 * x ^ 3 + 4 * x ^ 2) (Icc (0: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 12 * x ^ 7 + 4 * x ^ 6 + 5 * x ^ 5 + 20 * x ^ 4 + 19 * x ^ 3 + 4 * x ^ 2\n  let D := Icc (0: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 8 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 57 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 80 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 25 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 24 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 84 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 12 * x^7 + 4 * x^6 + 5 * x^5 + 20 * x^4 + 19 * x^3 + 4 * x^2 is monotonic on the interval D = [0, 8], we will follow several steps. First, we establish that D is convex since it is a closed interval. Next, we show that the derivative of f is positive for x in the interior of D (0 < x < 8) by differentiating each term and confirming that the sum of positive terms results in a positive derivative. We also demonstrate that f is continuous on D, as each monomial term is continuous. Finally, based on these properties, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 20 * x ^ 7 + 2 * x ^ 4 + 7 * x ^ 3 + 8 * x ^ 2 + 19 * x + 12) (Icc (0: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 20 * x ^ 7 + 2 * x ^ 4 + 7 * x ^ 3 + 8 * x ^ 2 + 19 * x + 12\n  let D := Icc (0: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 19 := by linarith [hx.1]\n\n    have h2: 0 < 16 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 21 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 8 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 140 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To demonstrate that the polynomial f(x) = 20 * x^7 + 2 * x^4 + 7 * x^3 + 8 * x^2 + 19 * x + 12 is monotonic on the interval D = [0, 7], we will establish three key points. First, we confirm that D is convex, as any closed interval is inherently convex. Second, we show that the derivative f'(x) is positive for x in the interior of D (0 < x < 7) by calculating f'(x) and proving each term is positive. Lastly, we establish that f is continuous on D since it is composed of continuous functions. By combining these findings, we conclude that f is monotonic on D, as a continuous function with a strictly positive derivative on a convex domain is monotonic."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 12 * x ^ 7 + 18 * x ^ 6 + 5 * x ^ 5 + 20 * x ^ 2) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 12 * x ^ 7 + 18 * x ^ 6 + 5 * x ^ 5 + 20 * x ^ 2\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 40 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 25 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 108 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 84 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 12 * x^7 + 18 * x^6 + 5 * x^5 + 20 * x^2 is monotonic on the interval D = [0, 10], follow these steps: First, establish that D is convex since any closed interval is convex. Next, demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 10) by computing the derivative and showing it consists of a sum of positive terms, which is positive due to x being positive. Confirm the differentiability of each term to validate the derivative computations. Then, show that f is continuous on D, as it is a polynomial. Finally, conclude that f is monotonic on D based on the established convexity, positive derivative, and continuity."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 11 * x ^ 7 + 18 * x ^ 6 + 2 * x ^ 5 + 17 * x ^ 3 + 7 * x) (Icc (0: \u211d) (4: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 11 * x ^ 7 + 18 * x ^ 6 + 2 * x ^ 5 + 17 * x ^ 3 + 7 * x\n  let D := Icc (0: \u211d) (4: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (4: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 7 := by linarith [hx.1]\n\n    have h1: 0 < 51 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 10 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 108 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 77 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 11 * x^7 + 18 * x^6 + 2 * x^5 + 17 * x^3 + 7 * x is monotonic on the interval D = [0, 4], we follow several steps. First, we establish that D is a convex set. Next, we demonstrate that the derivative f' is positive for x in the interior of D (0 < x < 4) by differentiating f and showing that all terms in the derivative are positive due to positive coefficients and x being greater than zero. We also confirm that f is continuous on D since it is composed of continuous functions. With D's convexity, f's continuity, and the positivity of f' in the interior, we conclude that f is strictly increasing on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 7 + 18 * x ^ 6 + 11 * x ^ 5 + 14 * x ^ 4 + 20 * x ^ 3 + 13 * x ^ 2 + 5 * x + 8) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 7 + 18 * x ^ 6 + 11 * x ^ 5 + 14 * x ^ 4 + 20 * x ^ 3 + 13 * x ^ 2 + 5 * x + 8\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 5 := by linarith [hx.1]\n\n    have h2: 0 < 26 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 60 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 56 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 55 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 108 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h7: 0 < 70 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6, h7]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 10 * x^7 + 18 * x^6 + 11 * x^5 + 14 * x^4 + 20 * x^3 + 13 * x^2 + 5 * x + 8 is monotonic on the interval D = [0, 10], follow these steps: First, establish that D is a convex set, as all closed intervals in \u211d are convex. Next, demonstrate that the derivative f' is positive for x in the interior of D (0 < x < 10) by computing the derivative, simplifying it, and showing each term is positive. Verify that f is continuous on D since polynomial functions are continuous. With D's convexity, the strict positivity of f' on the interior, and continuity established, conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 16 * x ^ 6 + 12 * x ^ 5 + 6 * x ^ 3 + 15 * x ^ 2 + 8 * x) (Icc (0: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 16 * x ^ 6 + 12 * x ^ 5 + 6 * x ^ 3 + 15 * x ^ 2 + 8 * x\n  let D := Icc (0: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 8 := by linarith [hx.1]\n\n    have h1: 0 < 30 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 18 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 60 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 96 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 16x^6 + 12x^5 + 6x^3 + 15x^2 + 8x \\) is monotonic on the interval \\( D = [0, 8] \\), we follow several steps. First, we establish that \\( D \\) is convex, as all closed intervals on the real numbers are. Next, we demonstrate that the derivative of \\( f \\) is positive for \\( x \\) in the interior of \\( D \\) by computing and simplifying the derivative, ensuring each term is positive for \\( x > 0 \\). We also confirm that \\( f \\) is continuous on \\( D \\) since it is a polynomial. Finally, by combining the properties of convexity, differentiability, continuity, and the positivity of the derivative, we conclude that \\( f \\) is monotonic (specifically, monotone increasing) on the interval \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 7 + 15 * x ^ 6 + 9 * x ^ 4 + 8 * x ^ 2 + 17 * x + 15) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 7 + 15 * x ^ 6 + 9 * x ^ 4 + 8 * x ^ 2 + 17 * x + 15\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 17 := by linarith [hx.1]\n\n    have h2: 0 < 16 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 36 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 90 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 28 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 4 * x^7 + 15 * x^6 + 9 * x^4 + 8 * x^2 + 17 * x + 15 is monotonic on the interval D = [0, 10], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 10) by computing the derivative and showing that each term is positive. We also confirm the differentiability of each term. Additionally, we show that f is continuous on D, as polynomials are continuous functions. Finally, combining these results, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 6 + 8 * x ^ 5 + 15 * x ^ 2) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 6 + 8 * x ^ 5 + 15 * x ^ 2\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 30 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 40 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 48 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To demonstrate that the function f(x) = 8 * x^6 + 8 * x^5 + 15 * x^2 is monotonic on the interval D = [0, 6], we follow a series of steps. First, we establish that D is convex, as any closed interval in \u211d is convex. Next, we show that the derivative of f is positive for x in the interior of D (0 < x < 6) by computing the derivative and simplifying it to prove that 48 * x^5 + 40 * x^4 + 30 * x > 0, with each term being positive for x > 0. We also confirm that f is continuous on D since polynomials are continuous. Finally, combining these properties, we conclude that f is strictly monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 12 * x ^ 6 + 6 * x ^ 2 + 5 * x + 4) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 12 * x ^ 6 + 6 * x ^ 2 + 5 * x + 4\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 5 := by linarith [hx.1]\n\n    have h2: 0 < 12 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 72 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 12 * x^6 + 6 * x^2 + 5 * x + 4 is monotonic on the interval D = [0, 10], we will follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 10) by differentiating f and showing that the expression 72 * x^5 + 12 * x + 5 is positive, since all terms are positive for x > 0. We also confirm the differentiability of the function components. Additionally, we show that f is continuous on D, as sums and products of continuous functions are continuous. Finally, with established convexity, continuity, and a positive derivative, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 16 * x ^ 7 + 11 * x ^ 6 + 2 * x ^ 4 + 19 * x ^ 2) (Icc (0: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 16 * x ^ 7 + 11 * x ^ 6 + 2 * x ^ 4 + 19 * x ^ 2\n  let D := Icc (0: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 38 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 8 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 66 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 112 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 16x^7 + 11x^6 + 2x^4 + 19x^2 \\) is monotonic on the interval \\( D = [0, 7] \\), we first establish that \\( D \\) is convex, as all closed intervals in \\(\\mathbb{R}\\) are convex. Next, we compute the derivative \\( f'(x) = 112x^6 + 66x^5 + 8x^3 + 38x \\) for \\( x \\) in the interior of \\( D \\) (i.e., \\( 0 < x < 7 \\)). Each term of the derivative is positive since \\( x > 0 \\) and all coefficients are positive, ensuring that \\( f'(x) > 0 \\). We also confirm that \\( f \\) is continuous on \\( D \\) because its monomial components are continuous. With these points established, we conclude that \\( f \\) is monotonic on the interval \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 12 * x ^ 7 + 7 * x ^ 6 + 13 * x ^ 5 + 13 * x ^ 3) (Icc (0: \u211d) (2: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 12 * x ^ 7 + 7 * x ^ 6 + 13 * x ^ 5 + 13 * x ^ 3\n  let D := Icc (0: \u211d) (2: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (2: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 39 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 65 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 42 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 84 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 12 * x^7 + 7 * x^6 + 13 * x^5 + 13 * x^3 is monotonic on the interval D = [0, 2], we follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 2) by computing the derivative and showing that each term contributes positively. We confirm the differentiability of f within the interval. Finally, we establish the continuity of f on D, as all polynomial terms are continuous on \u211d. Combining these results, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 7 + 3 * x ^ 6 + 17 * x ^ 4 + 13 * x ^ 3 + 2 * x ^ 2 + 18 * x + 13) (Icc (0: \u211d) (2: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 7 + 3 * x ^ 6 + 17 * x ^ 4 + 13 * x ^ 3 + 2 * x ^ 2 + 18 * x + 13\n  let D := Icc (0: \u211d) (2: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (2: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 18 := by linarith [hx.1]\n\n    have h2: 0 < 4 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 39 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 68 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 18 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 42 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To demonstrate that the polynomial f(x) = 6 * x^7 + 3 * x^6 + 17 * x^4 + 13 * x^3 + 2 * x^2 + 18 * x + 13 is monotonic on the interval D = [0, 2], we follow several steps. First, we establish that D is convex, as closed intervals in \u211d are convex sets. Next, we compute the derivative of f, showing it is positive for x in the open interval (0, 2) by applying differentiation rules and confirming each term is positive. We also verify that f is continuous on D since it is a sum of continuous functions. Finally, we conclude that f is monotonic on D, utilizing the results about monotonicity when the derivative is positive, along with the established convexity and continuity."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 3 + 11 * x + 4) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 3 + 11 * x + 4\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 11 := by linarith [hx.1]\n\n    have h2: 0 < 6 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 2 * x^3 + 11 * x + 4 is monotonic on the interval D = [0, 6], we follow several steps. First, we establish that D is convex, as any closed interval in \u211d is convex. Next, we compute the derivative of f, which simplifies to 6 * x^2 + 11, and show it is positive for x in the interior of D (0 < x < 6) since both terms are positive. We also confirm that f is continuous on D, as it is a polynomial function. With the established convexity, positive derivative, and continuity, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 14 * x ^ 7 + 3 * x ^ 5 + 6 * x ^ 4 + 14 * x ^ 3 + 2 * x ^ 2 + 18 * x + 19) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 14 * x ^ 7 + 3 * x ^ 5 + 6 * x ^ 4 + 14 * x ^ 3 + 2 * x ^ 2 + 18 * x + 19\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 18 := by linarith [hx.1]\n\n    have h2: 0 < 4 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 42 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 24 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 15 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 98 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 14x^7 + 3x^5 + 6x^4 + 14x^3 + 2x^2 + 18x + 19 \\) is monotonic on the interval \\( D = [0, 10] \\), we follow several steps. First, we establish that \\( D \\) is convex, as any closed interval is. Next, we demonstrate that the derivative \\( f'(x) \\) is positive for \\( x \\) in the interior of \\( D \\) (i.e., \\( 0 < x < 10 \\)) by computing the derivative and showing that all terms contribute positively. We also confirm that \\( f \\) is continuous on \\( D \\) since each term of the polynomial is continuous. Finally, combining these results, we conclude that \\( f \\) is monotonic on the interval \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 4 + 3 * x ^ 2 + 19 * x + 12) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 4 + 3 * x ^ 2 + 19 * x + 12\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 19 := by linarith [hx.1]\n\n    have h2: 0 < 6 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 36 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 9 * x^4 + 3 * x^2 + 19 * x + 12 is monotonic on the interval D = [0, 5], follow these steps: First, establish that D is convex since any closed interval is convex. Next, compute the derivative f'(x) = 36*x^3 + 6*x + 19 and show it is positive for all x in (0, 5) by demonstrating that each term is positive in this range. Then, confirm that f is continuous on D, as polynomials are continuous everywhere. Finally, apply the result that the strict positivity of the derivative on a convex domain, along with continuity, ensures that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 7 + 14 * x ^ 6 + 3 * x ^ 3 + 20 * x ^ 2 + 13 * x) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 7 + 14 * x ^ 6 + 3 * x ^ 3 + 20 * x ^ 2 + 13 * x\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 13 := by linarith [hx.1]\n\n    have h1: 0 < 40 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 9 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 84 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 14 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 2 * x^7 + 14 * x^6 + 3 * x^3 + 20 * x^2 + 13 * x is monotonic on the interval D = [0, 5], we will follow several steps. First, we establish that D is convex since closed intervals are always convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 5) by computing the derivative and confirming that each term is positive. We also verify that f is continuous on D, as polynomials are continuous everywhere. Finally, by combining these findings\u2014convexity of D, positivity of the derivative, and continuity\u2014we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 15 * x ^ 7 + 4 * x ^ 5 + 9 * x ^ 2 + 6) (Icc (0: \u211d) (4: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 15 * x ^ 7 + 4 * x ^ 5 + 9 * x ^ 2 + 6\n  let D := Icc (0: \u211d) (4: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (4: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 18 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 20 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 105 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 15 * x^7 + 4 * x^5 + 9 * x^2 + 6 is monotonic on the interval D = [0, 4], we will follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative f' is positive for x in the interior of D (0 < x < 4) by differentiating f to obtain f' = 105 * x^6 + 20 * x^4 + 18 * x, and showing that each term is positive due to positive coefficients and powers of positive numbers. We also confirm that f is continuous on D since it consists of continuous polynomial terms. Finally, these results allow us to conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 15 * x ^ 6 + 6 * x ^ 2 + 12 * x + 4) (Icc (0: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 15 * x ^ 6 + 6 * x ^ 2 + 12 * x + 4\n  let D := Icc (0: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 12 := by linarith [hx.1]\n\n    have h2: 0 < 12 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 90 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To demonstrate that the function f(x) = 15 * x^6 + 6 * x^2 + 12 * x + 4 is monotone on the interval D = [0, 7], we follow a series of steps. First, we establish that D is convex since it is a closed interval. Next, we prove that the derivative of f is strictly positive for x in the interior of D (0 < x < 7) by computing the derivative and showing that each term in the resulting expression (90 * x^5 + 12 * x + 12) is positive. We also confirm that f is continuous on D by verifying the continuity of its polynomial terms. With the established convexity, continuity, and the strict positivity of the derivative, we conclude that f is monotone on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 6 + 11 * x ^ 5 + 19 * x + 10) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 6 + 11 * x ^ 5 + 19 * x + 10\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 19 := by linarith [hx.1]\n\n    have h2: 0 < 55 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 48 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 8 * x^6 + 11 * x^5 + 19 * x + 10 is monotonic on the interval D = [0, 6], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 6) by differentiating f and showing that all terms in the derivative are positive. We also confirm that f is continuous on D, as each term of the polynomial is continuous. Finally, combining these results allows us to conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 15 * x ^ 6 + 18 * x ^ 5 + 9 * x ^ 3 + 4 * x ^ 2 + 3 * x) (Icc (0: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 15 * x ^ 6 + 18 * x ^ 5 + 9 * x ^ 3 + 4 * x ^ 2 + 3 * x\n  let D := Icc (0: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 3 := by linarith [hx.1]\n\n    have h1: 0 < 8 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 27 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 90 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 90 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 15 * x^6 + 18 * x^5 + 9 * x^3 + 4 * x^2 + 3 * x is monotonic on the interval D = [0, 8], we first establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 8) by computing the derivative and showing that the resulting inequality, 90 * x^5 + 90 * x^4 + 27 * x^2 + 8 * x + 3 > 0, holds true since all terms are positive in this range. We also confirm that f is continuous on D, as it is a sum of continuous functions. With D being convex, f being continuous, and its derivative being positive in the interior, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 11 * x ^ 7 + 19 * x ^ 6 + 7 * x ^ 5 + 12 * x ^ 4 + 18) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 11 * x ^ 7 + 19 * x ^ 6 + 7 * x ^ 5 + 12 * x ^ 4 + 18\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 48 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 35 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 114 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 77 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 11 * x^7 + 19 * x^6 + 7 * x^5 + 12 * x^4 + 18 is monotonic on the interval D = [0, 5], we will demonstrate three key points. First, D is convex since any closed interval in \u211d is convex. Second, we will show that the derivative of f is positive in the interior of D (0 < x < 5) by calculating the derivative and confirming that each term in the resulting expression is positive due to positive coefficients and exponents. Lastly, we establish that f is continuous on D, as all polynomials are continuous functions. By satisfying these conditions, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 12 * x ^ 6 + 11 * x ^ 5 + 17 * x ^ 4 + 5 * x ^ 3 + 18 * x ^ 2 + 13 * x) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 12 * x ^ 6 + 11 * x ^ 5 + 17 * x ^ 4 + 5 * x ^ 3 + 18 * x ^ 2 + 13 * x\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 13 := by linarith [hx.1]\n\n    have h1: 0 < 36 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 15 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 68 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 55 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 72 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 12 * x^6 + 11 * x^5 + 17 * x^4 + 5 * x^3 + 18 * x^2 + 13 * x is monotonic on the interval D = [0, 1], follow these steps: First, establish that D is convex, as any closed interval in \u211d is convex. Next, demonstrate that the derivative of f is positive for 0 < x < 1 by differentiating f term-by-term and showing that each term (36 * x, 15 * x^2, 68 * x^3, 55 * x^4, 72 * x^5, and the constant 13) is positive. Additionally, confirm the differentiability of each term. Then, establish that f is continuous on D since it consists of continuous terms. Finally, conclude that f is monotonic (strictly increasing) on D due to its convexity, positive derivative, and continuity."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 15 * x ^ 7 + 7 * x ^ 6 + 17 * x ^ 5 + 9 * x ^ 4 + 9 * x ^ 2 + 16 * x) (Icc (0: \u211d) (4: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 15 * x ^ 7 + 7 * x ^ 6 + 17 * x ^ 5 + 9 * x ^ 4 + 9 * x ^ 2 + 16 * x\n  let D := Icc (0: \u211d) (4: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (4: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 16 := by linarith [hx.1]\n\n    have h1: 0 < 18 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 36 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 85 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 42 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 105 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 15 * x^7 + 7 * x^6 + 17 * x^5 + 9 * x^4 + 9 * x^2 + 16 * x is monotonic on the interval D = [0, 4], we follow several steps. First, we establish that D is convex, as closed intervals are always convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 4) by differentiating f and showing that each term in the derivative has a positive coefficient and positive power of x. We also confirm that f is continuous on D since each polynomial term is continuous. Finally, we combine the convexity of D, the positivity of the derivative, and the continuity of f to conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 18 * x ^ 6 + 4 * x ^ 5 + 20 * x ^ 4 + 11 * x ^ 3 + 2 * x ^ 2 + 9 * x + 7) (Icc (0: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 18 * x ^ 6 + 4 * x ^ 5 + 20 * x ^ 4 + 11 * x ^ 3 + 2 * x ^ 2 + 9 * x + 7\n  let D := Icc (0: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 9 := by linarith [hx.1]\n\n    have h2: 0 < 4 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 33 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 80 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 20 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 108 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 18x^6 + 4x^5 + 20x^4 + 11x^3 + 2x^2 + 9x + 7 \\) is monotonic on the interval \\( D = [0, 3] \\), we follow several steps. First, we establish that \\( D \\) is convex since it is a closed interval. Next, we demonstrate that the derivative of \\( f \\) is positive for \\( x \\) in the interior of \\( D \\) (i.e., \\( 0 < x < 3 \\)) by differentiating \\( f \\) and showing that the resulting expression consists of positive terms. We also confirm that \\( f \\) is continuous on \\( D \\) as it is a polynomial. Finally, we conclude that \\( f \\) is monotonic on \\( D \\) based on the properties of continuous functions with positive derivatives on convex sets."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 7 + 10 * x ^ 6 + 20 * x ^ 5 + 8 * x ^ 3 + 15 * x ^ 2 + 19 * x) (Icc (0: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 7 + 10 * x ^ 6 + 20 * x ^ 5 + 8 * x ^ 3 + 15 * x ^ 2 + 19 * x\n  let D := Icc (0: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 19 := by linarith [hx.1]\n\n    have h1: 0 < 30 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 24 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 100 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 60 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 28 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 4 * x^7 + 10 * x^6 + 20 * x^5 + 8 * x^3 + 15 * x^2 + 19 * x is monotonic on the interval D = [0, 3], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we compute the derivative f' and show it is positive in the interior of D (0 < x < 3) by demonstrating that each term in the derivative, 28 * x^6 + 60 * x^5 + 100 * x^4 + 24 * x^2 + 30 * x + 19, is positive. We also confirm that f is continuous on D as each term is continuous. Finally, combining the convexity of D, the continuity of f, and the positivity of the derivative, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 7 + 17 * x ^ 6 + 10 * x ^ 2 + 12 * x + 13) (Icc (0: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 7 + 17 * x ^ 6 + 10 * x ^ 2 + 12 * x + 13\n  let D := Icc (0: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 12 := by linarith [hx.1]\n\n    have h2: 0 < 20 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 102 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 56 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 8x^7 + 17x^6 + 10x^2 + 12x + 13 \\) is monotonic on the interval \\( D = [0, 3] \\), we follow several steps. First, we establish that \\( D \\) is convex since closed intervals in \\( \\mathbb{R} \\) are convex. Next, we demonstrate that the derivative \\( f'(x) \\) is strictly positive for \\( x \\) in the interior of \\( D \\) (i.e., \\( 0 < x < 3 \\)) by computing \\( f'(x) = 56x^6 + 102x^5 + 20x + 12 \\) and showing each term is positive. We also confirm that \\( f \\) is continuous on \\( D \\) because polynomials are continuous everywhere. Finally, combining the positivity of the derivative, the convexity of the interval, and continuity, we conclude that \\( f \\) is monotonic on \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 11 * x ^ 7 + 8 * x + 14) (Icc (0: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 11 * x ^ 7 + 8 * x + 14\n  let D := Icc (0: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 8 := by linarith [hx.1]\n\n    have h2: 0 < 77 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 11 * x^7 + 8 * x + 14 is monotonic on the interval D = [0, 7], we follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we show that the derivative f' = 77 * x^6 + 8 is positive for x in the interior of D (0 < x < 7) by noting that both terms are positive. We also confirm the differentiability of each term in f. Additionally, we argue that f is continuous on D because it is a polynomial, and sums/products of continuous functions are continuous. With the established convexity, continuity, and positivity of the derivative, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 4 + 20 * x ^ 3 + 5 * x ^ 2 + 19 * x) (Icc (0: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 4 + 20 * x ^ 3 + 5 * x ^ 2 + 19 * x\n  let D := Icc (0: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 19 := by linarith [hx.1]\n\n    have h1: 0 < 10 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 60 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 24 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 6 * x^4 + 20 * x^3 + 5 * x^2 + 19 * x is monotonic on the interval D = [0, 3], we first establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 3) by differentiating f and showing that each term in the derivative is positive. We also confirm the differentiability of all terms involved. Additionally, we establish that f is continuous on D since all individual terms are continuous. Finally, combining the convexity of D, the continuity of f, and the positivity of the derivative, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 17 * x ^ 7 + 15 * x ^ 6 + 8 * x ^ 5 + 2 * x ^ 4 + 7 * x ^ 2 + 18 * x + 13) (Icc (0: \u211d) (4: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 17 * x ^ 7 + 15 * x ^ 6 + 8 * x ^ 5 + 2 * x ^ 4 + 7 * x ^ 2 + 18 * x + 13\n  let D := Icc (0: \u211d) (4: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (4: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 18 := by linarith [hx.1]\n\n    have h2: 0 < 14 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 8 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 40 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 90 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 119 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 17 * x^7 + 15 * x^6 + 8 * x^5 + 2 * x^4 + 7 * x^2 + 18 * x + 13 is monotonic on the interval D = [0, 4], we follow several steps. First, we establish that D is convex since it is a closed interval. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 4) by differentiating the polynomial and showing that each term is nonnegative or positive. We also confirm that f is continuous on D, as it is a polynomial. Finally, these findings allow us to conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 7 + 7 * x ^ 5 + 19 * x ^ 3 + 7 * x) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 7 + 7 * x ^ 5 + 19 * x ^ 3 + 7 * x\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 7 := by linarith [hx.1]\n\n    have h1: 0 < 57 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 35 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 63 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 9 * x^7 + 7 * x^5 + 19 * x^3 + 7 * x is monotonic on the interval D = [0, 5], we will demonstrate that D is convex, the derivative f' is positive in the interior of D, and that f is continuous on D. First, we establish the convexity of D by noting that any closed interval in \u211d is convex. Next, we compute the derivative of f, showing that it consists of positive terms for x in (0, 5), thus proving f' > 0. We also confirm the continuity of f since it is a polynomial. Finally, we conclude that f is strictly monotonic on D due to the positivity of the derivative, the convexity of D, and the continuity of f."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 4 + 15 * x ^ 2 + 18 * x) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 4 + 15 * x ^ 2 + 18 * x\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 18 := by linarith [hx.1]\n\n    have h1: 0 < 30 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 32 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 8 * x^4 + 15 * x^2 + 18 * x is monotonic on the domain D = [0, 5], we will follow several steps. First, we establish that D is convex, as closed intervals in \u211d are convex. Next, we demonstrate that the derivative of f is positive for interior points (0 < x < 5) by differentiating f and showing that the expression 32 * x^3 + 30 * x + 18 is greater than zero for x > 0. We confirm the positivity of each term in this sum. Then, we establish that f is continuous on D since each term is continuous. Finally, with convexity, a positive derivative on the interior, and continuity established, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 3 * x ^ 6 + 14 * x ^ 5 + 14 * x ^ 4) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 3 * x ^ 6 + 14 * x ^ 5 + 14 * x ^ 4\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 56 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 70 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 18 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 3 * x^6 + 14 * x^5 + 14 * x^4 is monotonic on the interval D = [0, 5], we will demonstrate three key points. First, we establish that D is convex, as closed intervals in \u211d are convex. Second, we compute the derivative f'(x) = 18 * x^5 + 70 * x^4 + 56 * x^3 and show it is positive for x in the interior of D (0 < x < 5), confirming that each term is positive when x > 0. Lastly, we confirm that f is continuous on D since it is a polynomial. With D being convex, f being continuous, and the derivative being strictly positive in the interior, we conclude that f is strictly monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 19 * x ^ 7 + 6 * x ^ 5 + 3 * x ^ 4 + 6 * x ^ 3 + 16 * x + 14) (Icc (0: \u211d) (4: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 19 * x ^ 7 + 6 * x ^ 5 + 3 * x ^ 4 + 6 * x ^ 3 + 16 * x + 14\n  let D := Icc (0: \u211d) (4: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (4: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 16 := by linarith [hx.1]\n\n    have h2: 0 < 18 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 12 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 30 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 133 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 19 * x^7 + 6 * x^5 + 3 * x^4 + 6 * x^3 + 16 * x + 14 is monotonic on the interval D = [0, 4], we first establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 4) by calculating the derivative and showing that each term has positive coefficients. We also confirm that f is continuous on D since polynomials are continuous. With these points established, we conclude that f is monotonic on D, completing the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 12 * x ^ 7 + 15 * x ^ 6 + 20 * x ^ 5 + 17 * x ^ 4 + 4 * x ^ 2) (Icc (0: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 12 * x ^ 7 + 15 * x ^ 6 + 20 * x ^ 5 + 17 * x ^ 4 + 4 * x ^ 2\n  let D := Icc (0: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 8 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 68 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 100 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 90 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 84 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To demonstrate that the polynomial f(x) = 12 * x^7 + 15 * x^6 + 20 * x^5 + 17 * x^4 + 4 * x^2 is monotonic on the interval D = [0, 8], we follow several steps. First, we confirm that D is convex, as any closed interval is. Next, we show that the derivative f' is positive for x in the interior of D (0 < x < 8) by computing the derivative and noting that it consists of positive terms. We also verify that f is continuous on D since each monomial is continuous. Finally, combining these findings, we conclude that f is strictly monotonic on D. This completes the proof of monotonicity."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 5 + 3 * x ^ 3 + 6 * x ^ 2 + 17 * x + 6) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 5 + 3 * x ^ 3 + 6 * x ^ 2 + 17 * x + 6\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 17 := by linarith [hx.1]\n\n    have h2: 0 < 12 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 9 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 50 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 10x^5 + 3x^3 + 6x^2 + 17x + 6 \\) is monotonic on the interval \\( D = [0, 1] \\), we will establish three key points. First, we confirm that \\( D \\) is convex, as any closed interval on the real line is convex. Next, we show that the derivative \\( f'(x) = 50x^4 + 9x^2 + 12x + 17 \\) is positive for \\( 0 < x < 1 \\), since all terms are positive in this range. Finally, we demonstrate that \\( f \\) is continuous on \\( D \\) because each term of the polynomial is continuous. With these facts\u2014convexity of \\( D \\), positivity of the derivative, and continuity of \\( f \\)\u2014we conclude that \\( f \\) is monotonic on the interval \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 20 * x ^ 7 + 11 * x ^ 5 + 17 * x ^ 4 + 9 * x ^ 3 + 12 * x + 18) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 20 * x ^ 7 + 11 * x ^ 5 + 17 * x ^ 4 + 9 * x ^ 3 + 12 * x + 18\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 12 := by linarith [hx.1]\n\n    have h2: 0 < 27 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 68 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 55 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 140 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To demonstrate that the function f(x) = 20 * x^7 + 11 * x^5 + 17 * x^4 + 9 * x^3 + 12 * x + 18 is monotonic on the interval D = [0, 5], we follow several steps. First, we establish that D is convex since it is a closed interval in \u211d. Next, we show that the derivative of f, calculated as 140 * x^6 + 55 * x^4 + 68 * x^3 + 27 * x^2 + 12, is strictly positive for x in the interior of D (0 < x < 5) by confirming that each term is positive. We also verify the differentiability of f at each point. Additionally, we prove that f is continuous on D by noting that each term is continuous. With these points established, we conclude that f is strictly increasing on D, completing the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 12 * x ^ 7 + 9 * x ^ 6 + 3 * x ^ 4 + 8 * x ^ 3 + 12 * x ^ 2 + 18 * x) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 12 * x ^ 7 + 9 * x ^ 6 + 3 * x ^ 4 + 8 * x ^ 3 + 12 * x ^ 2 + 18 * x\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 18 := by linarith [hx.1]\n\n    have h1: 0 < 24 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 24 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 12 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 54 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 84 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 12x^7 + 9x^6 + 3x^4 + 8x^3 + 12x^2 + 18x \\) is monotonic on the interval \\( D = [0,6] \\), we first establish that \\( D \\) is convex, as all closed intervals in \\( \\mathbb{R} \\) are convex. Next, we show that the derivative of \\( f \\) is strictly positive for \\( 0 < x < 6 \\) by differentiating \\( f \\) and confirming that each term in the derivative is positive. We also demonstrate that \\( f \\) is continuous on \\( D \\) since it is a polynomial. Finally, we conclude that \\( f \\) is strictly monotonic on \\( D \\) due to its continuity, the convexity of the interval, and the positivity of its derivative throughout the interior of \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 7 + 12 * x ^ 6 + 14 * x ^ 5 + 13 * x ^ 4 + 18 * x ^ 3 + 5 * x ^ 2 + 18 * x) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 7 + 12 * x ^ 6 + 14 * x ^ 5 + 13 * x ^ 4 + 18 * x ^ 3 + 5 * x ^ 2 + 18 * x\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 18 := by linarith [hx.1]\n\n    have h1: 0 < 10 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 54 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 52 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 70 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 72 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 35 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 5 * x^7 + 12 * x^6 + 14 * x^5 + 13 * x^4 + 18 * x^3 + 5 * x^2 + 18 * x is monotonic on the interval D = [0, 5], we follow a structured approach. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative f' is positive for 0 < x < 5 by differentiating f term by term and showing that each term is a positive multiple of powers of x. We also confirm the differentiability of each term. Then, we prove that f is continuous on D since it is a polynomial. Finally, by combining the established convexity, continuity, and positivity of the derivative, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 11 * x ^ 7 + 4 * x ^ 6 + 19 * x ^ 5 + 10 * x ^ 4 + 10 * x ^ 3 + 4 * x ^ 2) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 11 * x ^ 7 + 4 * x ^ 6 + 19 * x ^ 5 + 10 * x ^ 4 + 10 * x ^ 3 + 4 * x ^ 2\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 8 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 30 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 40 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 95 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 24 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 77 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 11 * x^7 + 4 * x^6 + 19 * x^5 + 10 * x^4 + 10 * x^3 + 4 * x^2 is monotonic on the interval D = [0, 10], we follow several steps. First, we establish that D is convex, as closed intervals in \u211d are convex. Next, we show that the derivative of f is positive for x in the interior of D (0 < x < 10) by differentiating term by term and confirming that each term is positive for x > 0. We also verify that f is continuous on D since each polynomial term is continuous. With the established convexity, positive derivative, and continuity, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 13 * x ^ 7 + 13 * x ^ 6 + 9 * x ^ 5 + 16 * x ^ 4 + 15 * x ^ 3 + 5 * x ^ 2) (Icc (0: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 13 * x ^ 7 + 13 * x ^ 6 + 9 * x ^ 5 + 16 * x ^ 4 + 15 * x ^ 3 + 5 * x ^ 2\n  let D := Icc (0: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 10 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 45 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 64 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 45 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 78 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 91 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 13x^7 + 13x^6 + 9x^5 + 16x^4 + 15x^3 + 5x^2 \\) is monotonic on the interval \\( D = [0, 3] \\), we follow several steps. First, we establish that \\( D \\) is convex, as any closed interval in \\( \\mathbb{R} \\) is convex. Next, we show that the derivative \\( f'(x) \\) is positive for all \\( x \\) in the interior of \\( D \\) (i.e., \\( 0 < x < 3 \\)) by computing the derivative and demonstrating that all terms are positive. We also verify that \\( f \\) is continuous on \\( D \\) since it is a sum of continuous functions. Finally, combining these results, we conclude that \\( f \\) is monotonic on the interval \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 5 + 15 * x ^ 3 + 20 * x ^ 2) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 5 + 15 * x ^ 3 + 20 * x ^ 2\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 40 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 45 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 25 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 5 * x^5 + 15 * x^3 + 20 * x^2 is monotonic on the interval D = [0, 1], we follow several steps. First, we establish that D is convex, as any closed interval in \u211d is convex. Next, we demonstrate that the derivative of f, calculated as 25 * x^4 + 45 * x^2 + 40 * x, is strictly positive for all x in the open interval (0, 1). This is shown by confirming that each term is positive when x > 0. We also verify the validity of differentiation since all components are differentiable. Finally, we prove the continuity of f on D, as each polynomial term is continuous. Combining these results, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 7 + 12 * x ^ 5 + 15 * x ^ 4 + 4 * x ^ 2 + 11 * x + 4) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 7 + 12 * x ^ 5 + 15 * x ^ 4 + 4 * x ^ 2 + 11 * x + 4\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 11 := by linarith [hx.1]\n\n    have h2: 0 < 8 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 60 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 60 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 56 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 8 * x^7 + 12 * x^5 + 15 * x^4 + 4 * x^2 + 11 * x + 4 is monotonic on the interval D = [0, 5], we follow a structured approach. First, we establish that D is convex, as any closed interval in \u211d is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 5) by differentiating f and showing that the resulting expression, 56 * x^6 + 60 * x^4 + 60 * x^3 + 8 * x + 11, is positive for all x in (0, 5). We also confirm the continuity of f on D since each term is continuous. With these facts, we conclude that f is strictly increasing on D, proving its monotonicity."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 17 * x ^ 4 + 6 * x ^ 3 + 2 * x ^ 2 + 7 * x) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 17 * x ^ 4 + 6 * x ^ 3 + 2 * x ^ 2 + 7 * x\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 7 := by linarith [hx.1]\n\n    have h1: 0 < 4 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 18 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 68 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 17 * x^4 + 6 * x^3 + 2 * x^2 + 7 * x is monotonic on the interval D = [0, 5], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 5) by differentiating f and showing that each term in the derivative is positive. We also confirm that f is continuous on D, as each term is continuous. With the established convexity, the positive derivative, and continuity, we can conclude that f is monotonic on the interval [0, 5]."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 18 * x ^ 7 + 10 * x ^ 5 + 13 * x ^ 4 + 3 * x) (Icc (0: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 18 * x ^ 7 + 10 * x ^ 5 + 13 * x ^ 4 + 3 * x\n  let D := Icc (0: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 3 := by linarith [hx.1]\n\n    have h1: 0 < 52 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 50 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 126 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To demonstrate that the function f(x) = 18 * x^7 + 10 * x^5 + 13 * x^4 + 3 * x is monotonic on the interval D = [0, 9], follow these steps: First, confirm that D is convex, as any closed interval in \u211d is convex. Next, show that the derivative of f is positive for x in the interior of D (0 < x < 9) by computing the derivative and proving each term is strictly positive. Additionally, establish the differentiability of the function. Then, confirm that f is continuous on D, as sums and products of continuous functions are continuous. Finally, apply the theorem that a function is monotonic if it is continuous, convex, and has a positive derivative on the interval, completing the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 7 + 12 * x ^ 5 + 14 * x ^ 4 + 12 * x ^ 2 + 7 * x) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 7 + 12 * x ^ 5 + 14 * x ^ 4 + 12 * x ^ 2 + 7 * x\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 7 := by linarith [hx.1]\n\n    have h1: 0 < 24 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 56 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 60 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 49 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 7x^7 + 12x^5 + 14x^4 + 12x^2 + 7x \\) is monotonic on the interval \\( D = [0, 6] \\), we will follow several steps. First, we establish that \\( D \\) is convex since any closed interval is convex. Next, we demonstrate that the derivative \\( f' \\) is positive for \\( x \\) in the interior of \\( D \\) (i.e., \\( 0 < x < 6 \\)) by computing the derivative and showing that it consists of strictly positive terms. We also confirm the continuity of \\( f \\) by noting that polynomials are continuous functions. Finally, combining these results, we conclude that \\( f \\) is monotonic on \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 7 + 12 * x ^ 4 + 18 * x ^ 3 + 8) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 7 + 12 * x ^ 4 + 18 * x ^ 3 + 8\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 54 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 48 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 42 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 6 * x^7 + 12 * x^4 + 18 * x^3 + 8 is monotonic on the interval D = [0, 6], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 6) by differentiating f and showing that the resulting expression, 42 * x^6 + 48 * x^3 + 54 * x^2, is positive through algebraic simplification. We also confirm that f is continuous on D, as each polynomial term is continuous. Finally, by combining the results of convexity, continuity, and the positivity of the derivative, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 7 + 9 * x ^ 5 + 5 * x ^ 3) (Icc (0: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 7 + 9 * x ^ 5 + 5 * x ^ 3\n  let D := Icc (0: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 15 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 45 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 35 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 5 * x^7 + 9 * x^5 + 5 * x^3 is monotonic on the interval D = [0, 3], we will follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f, calculated as 35 * x^6 + 45 * x^4 + 15 * x^2, is positive for all x in the interior of D (0 < x < 3) since all terms are positive. We also confirm that f is continuous on D, as it is a sum of continuous polynomial terms. With D being convex, f being continuous, and its derivative being positive on the interior, we conclude that f is monotonic (specifically, strictly increasing) on the interval [0, 3]."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 19 * x ^ 7 + 15 * x ^ 5 + 15 * x ^ 3 + 15 * x ^ 2 + 7 * x + 3) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 19 * x ^ 7 + 15 * x ^ 5 + 15 * x ^ 3 + 15 * x ^ 2 + 7 * x + 3\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 7 := by linarith [hx.1]\n\n    have h2: 0 < 30 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 45 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 75 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 133 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 19 x^7 + 15 x^5 + 15 x^3 + 15 x^2 + 7x + 3 \\) is monotonic on the interval \\( D = [0, 10] \\), we follow several steps. First, we establish that \\( D \\) is convex since any closed interval is convex. Next, we show that the derivative of \\( f \\) is positive for \\( x \\) in the interior of \\( D \\) (i.e., \\( 0 < x < 10 \\)) by differentiating \\( f \\) and demonstrating that the resulting sum \\( 133 x^6 + 75 x^4 + 45 x^2 + 30 x + 7 \\) is positive for \\( x > 0 \\). We also confirm the continuity of \\( f \\) on \\( D \\) since it is a polynomial. Finally, these findings allow us to conclude that \\( f \\) is monotonic on \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 12 * x ^ 7 + 11 * x ^ 6 + 13 * x ^ 5 + 8 * x ^ 4 + 5 * x ^ 3 + 8 * x ^ 2 + 7 * x) (Icc (0: \u211d) (2: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 12 * x ^ 7 + 11 * x ^ 6 + 13 * x ^ 5 + 8 * x ^ 4 + 5 * x ^ 3 + 8 * x ^ 2 + 7 * x\n  let D := Icc (0: \u211d) (2: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (2: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 7 := by linarith [hx.1]\n\n    have h1: 0 < 16 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 15 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 32 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 65 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 66 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 84 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 12 * x^7 + 11 * x^6 + 13 * x^5 + 8 * x^4 + 5 * x^3 + 8 * x^2 + 7 * x is monotonic on the interval D = [0, 2], we follow a structured approach. First, we establish that D is convex, as closed intervals are inherently convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 2) by computing the derivative and showing that each term is positive. We also confirm the continuity of f on D, as polynomials are continuous functions. Finally, we conclude that f is monotonic on D based on the positivity of its derivative and its continuity."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 6 + 7 * x ^ 5 + 12 * x ^ 4 + 9 * x ^ 3 + 18 * x ^ 2 + 12 * x + 16) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 6 + 7 * x ^ 5 + 12 * x ^ 4 + 9 * x ^ 3 + 18 * x ^ 2 + 12 * x + 16\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 12 := by linarith [hx.1]\n\n    have h2: 0 < 36 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 27 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 48 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 35 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 48 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 8x^6 + 7x^5 + 12x^4 + 9x^3 + 18x^2 + 12x + 16 \\) is monotonic on the interval \\( D = [0, 1] \\), we follow several steps. First, we establish that \\( D \\) is convex, as any closed interval in \\( \\mathbb{R} \\) is convex. Next, we demonstrate that the derivative \\( f' \\) is positive for \\( 0 < x < 1 \\) by showing that the expression \\( 48x^5 + 35x^4 + 48x^3 + 27x^2 + 36x + 12 \\) is positive, since all terms are positive in this range. We also confirm that \\( f \\) is continuous on \\( D \\) because it is a polynomial. With the derivative being strictly positive and \\( f \\) being continuous, we conclude that \\( f \\) is monotonic on \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 15 * x ^ 7 + 6 * x ^ 6 + 17 * x ^ 3 + 12 * x ^ 2 + 9 * x) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 15 * x ^ 7 + 6 * x ^ 6 + 17 * x ^ 3 + 12 * x ^ 2 + 9 * x\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 9 := by linarith [hx.1]\n\n    have h1: 0 < 24 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 51 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 36 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 105 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 15 * x^7 + 6 * x^6 + 17 * x^3 + 12 * x^2 + 9 * x is monotonic on the interval D = [0, 6], we follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 6) by computing the derivative and showing that it consists of positive terms. We also confirm that f is continuous on D, as all polynomial terms are continuous. With the convexity of D, the positivity of the derivative, and the continuity of f established, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 20 * x ^ 7 + 12 * x ^ 6 + 12 * x ^ 5 + 3 * x ^ 4 + 7 * x) (Icc (0: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 20 * x ^ 7 + 12 * x ^ 6 + 12 * x ^ 5 + 3 * x ^ 4 + 7 * x\n  let D := Icc (0: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 7 := by linarith [hx.1]\n\n    have h1: 0 < 12 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 60 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 72 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 140 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 20 * x^7 + 12 * x^6 + 12 * x^5 + 3 * x^4 + 7 * x is monotonic on the interval D = [0, 8], we will follow several steps. First, we establish that D is convex since closed intervals are convex sets. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 8) by differentiating term by term and showing that the resulting expression consists of positive terms. We also confirm that all polynomial terms are differentiable. Then, we establish the continuity of f on D, as all polynomials are continuous. Finally, using the convexity of D, the positivity of f' on the interior, and the continuity of f, we conclude that f is strictly monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 15 * x ^ 6 + 5 * x ^ 3 + 16 * x ^ 2 + 7) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 15 * x ^ 6 + 5 * x ^ 3 + 16 * x ^ 2 + 7\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 32 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 15 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 90 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 15 * x^6 + 5 * x^3 + 16 * x^2 + 7 is monotonic on the interval D = [0, 10], we will demonstrate three key points. First, we establish that D is convex, which is a property of closed intervals. Next, we show that the derivative of f, calculated as 90 * x^5 + 15 * x^2 + 32 * x, is positive for all x in the interior of D (0, 10) by confirming that each term is positive. Finally, we verify that f is continuous on D, as polynomials are continuous everywhere. With these three conditions\u2014convexity, positive derivative, and continuity\u2014we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 16 * x ^ 7 + 20 * x ^ 4 + 4 * x ^ 2 + 18 * x + 15) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 16 * x ^ 7 + 20 * x ^ 4 + 4 * x ^ 2 + 18 * x + 15\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 18 := by linarith [hx.1]\n\n    have h2: 0 < 8 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 80 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 112 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 16 * x^7 + 20 * x^4 + 4 * x^2 + 18 * x + 15 is monotonic on the interval D = [0, 5], we follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we differentiate f to find its derivative, f'(x) = 112 * x^6 + 80 * x^3 + 8 * x + 18, and show it is positive for all x in the interior of D (0 < x < 5) by confirming each term is positive. We also verify that f is continuous on D since each term is continuous. Finally, combining the convexity of D, the positivity of the derivative, and the continuity of f, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 7 + 19 * x ^ 5 + 4 * x ^ 3 + 20 * x) (Icc (0: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 7 + 19 * x ^ 5 + 4 * x ^ 3 + 20 * x\n  let D := Icc (0: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 20 := by linarith [hx.1]\n\n    have h1: 0 < 12 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 95 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 14 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 2 * x^7 + 19 * x^5 + 4 * x^3 + 20 * x is monotonic on the interval D = [0, 7], we first establish that D is convex. Next, we demonstrate that the derivative of f, calculated as 14 * x^6 + 95 * x^4 + 12 * x^2 + 20, is positive for all x in the interior of D (0 < x < 7) by showing that each term is positive. We also verify the differentiability of each component function. Finally, we confirm the continuity of f on D, as all polynomial terms are continuous. With D's convexity, the positive derivative in the interior, and continuity, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 17 * x ^ 7 + 5 * x ^ 6 + 12 * x ^ 5 + 17 * x ^ 4 + 8 * x ^ 3) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 17 * x ^ 7 + 5 * x ^ 6 + 12 * x ^ 5 + 17 * x ^ 4 + 8 * x ^ 3\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 24 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 68 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 60 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 30 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 119 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 17 * x^7 + 5 * x^6 + 12 * x^5 + 17 * x^4 + 8 * x^3 is monotonic on the interval D = [0, 6], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we differentiate f(x) to show that its derivative is positive for x in the interior of D (0 < x < 6), resulting in a sum of positive terms. We also confirm that f is continuous on D, as all polynomial terms are continuous. By demonstrating that D is convex, f is continuous, and the derivative is positive, we conclude that f is strictly monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 13 * x ^ 6 + 13 * x ^ 5 + 17 * x ^ 4 + 17 * x ^ 3 + 7 * x ^ 2 + 10 * x + 2) (Icc (0: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 13 * x ^ 6 + 13 * x ^ 5 + 17 * x ^ 4 + 17 * x ^ 3 + 7 * x ^ 2 + 10 * x + 2\n  let D := Icc (0: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 10 := by linarith [hx.1]\n\n    have h2: 0 < 14 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 51 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 68 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 65 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 78 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 13 * x^6 + 13 * x^5 + 17 * x^4 + 17 * x^3 + 7 * x^2 + 10 * x + 2 is monotonic on the interval D = [0, 7], we will follow several steps. First, we establish that D is convex, as closed intervals in \u211d are convex. Next, we show that the derivative f' is positive for x in the interior of D (0 < x < 7) by differentiating f and demonstrating that each term in the resulting expression is positive. We also confirm that f is continuous on D since it is a polynomial. Finally, combining these results\u2014convexity of D, positivity of f' on the interior, and continuity of f\u2014we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 5 + 11 * x ^ 4 + 8 * x ^ 2 + 20 * x) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 5 + 11 * x ^ 4 + 8 * x ^ 2 + 20 * x\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 20 := by linarith [hx.1]\n\n    have h1: 0 < 16 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 44 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 45 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 9 * x^5 + 11 * x^4 + 8 * x^2 + 20 * x is monotonic on the interval D = [0, 5], we follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we show that the derivative f' is positive for x in the interior of D (0 < x < 5) by differentiating f term by term and confirming that each term is positive. We also verify that f is continuous on D, as it is composed of continuous functions. Finally, with D being convex, f being continuous, and f' being positive in the interior, we conclude that f is monotonic (specifically, strictly increasing) on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 6 + 4 * x ^ 4 + 11 * x ^ 2 + 19 * x + 3) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 6 + 4 * x ^ 4 + 11 * x ^ 2 + 19 * x + 3\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 19 := by linarith [hx.1]\n\n    have h2: 0 < 22 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 16 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 12 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 2 * x^6 + 4 * x^4 + 11 * x^2 + 19 * x + 3 is monotonic on the interval D = [0, 1], we will demonstrate that D is convex, the derivative f' is strictly positive in the interior of D, and that f is continuous on D. First, we establish that D is convex since any closed interval is convex. Next, we differentiate f, finding f' = 12 * x^5 + 16 * x^3 + 22 * x + 19, which is positive for 0 < x < 1 due to all terms being positive. We also confirm the continuity of f on D, as each term is continuous. Finally, the strict positivity of the derivative implies that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 5 + 14 * x ^ 4 + 12 * x + 10) (Icc (0: \u211d) (2: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 5 + 14 * x ^ 4 + 12 * x + 10\n  let D := Icc (0: \u211d) (2: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (2: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 12 := by linarith [hx.1]\n\n    have h2: 0 < 56 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 45 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 9 * x^5 + 14 * x^4 + 12 * x + 10 is monotonic on the interval D = [0, 2], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 2) by computing the derivative and showing that each term is positive in this range. We also confirm that f is continuous on D, as each component of the polynomial is continuous. Finally, combining these results, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 20 * x ^ 6 + 4 * x ^ 5 + 8 * x ^ 4 + 3 * x ^ 3 + 20 * x ^ 2 + 8 * x) (Icc (0: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 20 * x ^ 6 + 4 * x ^ 5 + 8 * x ^ 4 + 3 * x ^ 3 + 20 * x ^ 2 + 8 * x\n  let D := Icc (0: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 8 := by linarith [hx.1]\n\n    have h1: 0 < 40 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 9 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 32 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 20 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 120 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 20x^6 + 4x^5 + 8x^4 + 3x^3 + 20x^2 + 8x \\) is monotonic on the interval \\( D = [0, 9] \\), we follow several steps. First, we establish that \\( D \\) is convex since every closed interval is convex. Next, we show that the derivative \\( f' \\) is positive for all interior points of \\( D \\) by differentiating \\( f \\) and demonstrating that all terms in the derivative are nonnegative, with at least one term being strictly positive for \\( 0 < x < 9 \\). We also prove that \\( f \\) is continuous on \\( D \\) because all components of \\( f \\) are continuous. Finally, we conclude that \\( f \\) is monotonic on \\( D \\) based on the established properties of convexity, positivity of the derivative, and continuity."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 20 * x ^ 5 + 16 * x ^ 4) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 20 * x ^ 5 + 16 * x ^ 4\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 64 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 100 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 20 * x^5 + 16 * x^4 is monotonic on the interval D = [0, 10], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 10) by differentiating f and simplifying the result to show it takes the form 100 * x^4 + 64 * x^3, which is positive for x > 0. We also confirm the differentiability of the constituent functions. Then, we show that f is continuous on D, as all polynomial terms are continuous. Finally, combining these results, we conclude that f is monotonic (specifically, monotone increasing) on D, completing the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 7 + 4 * x ^ 5 + 9 * x ^ 3 + 20 * x ^ 2 + 17 * x + 8) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 7 + 4 * x ^ 5 + 9 * x ^ 3 + 20 * x ^ 2 + 17 * x + 8\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 17 := by linarith [hx.1]\n\n    have h2: 0 < 40 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 27 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 20 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 28 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 4 * x^7 + 4 * x^5 + 9 * x^3 + 20 * x^2 + 17 * x + 8 is monotonic on the interval D = [0, 1], we follow several steps. First, we establish that D is convex, as any closed interval in \u211d is convex. Next, we compute the derivative of f, resulting in a new polynomial 28 * x^6 + 20 * x^4 + 27 * x^2 + 40 * x + 17, and show it is strictly positive for x in (0, 1) by demonstrating that all its terms are positive. We also confirm that f is continuous on D since each term is continuous. Finally, combining these findings\u2014convexity of D, strict positivity of the derivative, and continuity\u2014allows us to conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 16 * x ^ 4 + 10 * x ^ 3 + 13 * x ^ 2) (Icc (0: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 16 * x ^ 4 + 10 * x ^ 3 + 13 * x ^ 2\n  let D := Icc (0: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 26 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 30 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 64 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 16 * x^4 + 10 * x^3 + 13 * x^2 is monotonic on the interval D = [0, 9], follow these steps: First, establish that D is convex, as all closed intervals in \u211d are convex. Next, demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 9) by computing the derivative and showing it consists of positive terms when x > 0. Verify the differentiability of each component during differentiation. Then, confirm that f is continuous on D since it is a polynomial. Finally, conclude that f is monotonic on D based on the convexity of D, the continuity of f, and the positivity of its derivative in the interior."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 7 + 6 * x ^ 4 + 7 * x ^ 3 + 12 * x ^ 2 + 6 * x) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 7 + 6 * x ^ 4 + 7 * x ^ 3 + 12 * x ^ 2 + 6 * x\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 6 := by linarith [hx.1]\n\n    have h1: 0 < 24 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 21 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 24 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 28 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 4 * x^7 + 6 * x^4 + 7 * x^3 + 12 * x^2 + 6 * x is monotonic on the interval D = [0, 1], we follow a structured approach. First, we establish that D is convex. Next, we demonstrate that the derivative of f is positive in the interior of D (0 < x < 1) by computing it term by term and showing that the resulting expression, 28 * x^6 + 24 * x^3 + 21 * x^2 + 24 * x + 6, is positive due to the positivity of its terms. We also confirm the continuity of f on D, as each monomial is continuous. Finally, we apply a theorem stating that a function with a positive derivative in a convex domain and continuous on a closed domain is monotonic, thus concluding that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 18 * x ^ 7 + 5 * x ^ 6 + 15 * x ^ 4 + 3 * x ^ 2 + 7 * x) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 18 * x ^ 7 + 5 * x ^ 6 + 15 * x ^ 4 + 3 * x ^ 2 + 7 * x\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 7 := by linarith [hx.1]\n\n    have h1: 0 < 6 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 60 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 30 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 126 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 18 * x^7 + 5 * x^6 + 15 * x^4 + 3 * x^2 + 7 * x is monotonic on the interval D = [0, 5], we follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we show that the derivative of f is positive for x in the interior of D (0 < x < 5) by differentiating f and confirming that the resulting sum of terms is strictly positive. We also verify that f is continuous on D since all polynomial terms are continuous. Finally, with the established convexity of D, continuity of f, and the positivity of the derivative, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 6 + 7 * x ^ 4 + 5 * x ^ 2 + 14) (Icc (0: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 6 + 7 * x ^ 4 + 5 * x ^ 2 + 14\n  let D := Icc (0: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 10 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 28 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 42 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 7 * x^6 + 7 * x^4 + 5 * x^2 + 14 is monotonic on the interval D = [0, 7], we follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we differentiate f(x) to find its derivative, f'(x) = 42 * x^5 + 28 * x^3 + 10 * x, and show that it is positive for all x in the interior of D (0 < x < 7) since each term is positive. We also confirm that f is continuous on D by demonstrating the continuity of each polynomial term. Finally, with D being convex, f' positive, and f continuous, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 7 + 3 * x ^ 5 + 6 * x ^ 4 + 20 * x ^ 2 + 14 * x + 20) (Icc (0: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 7 + 3 * x ^ 5 + 6 * x ^ 4 + 20 * x ^ 2 + 14 * x + 20\n  let D := Icc (0: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 14 := by linarith [hx.1]\n\n    have h2: 0 < 40 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 24 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 15 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 35 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 5 * x^7 + 3 * x^5 + 6 * x^4 + 20 * x^2 + 14 * x + 20 is monotonic on the interval D = [0, 3], we follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 3) by computing the derivative and showing that it consists of strictly positive terms. We also confirm that f is continuous on D, as all polynomial terms are continuous. Finally, with D's convexity, the positivity of the derivative, and continuity established, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 6 + 16 * x ^ 4 + 5 * x ^ 3 + 19 * x ^ 2) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 6 + 16 * x ^ 4 + 5 * x ^ 3 + 19 * x ^ 2\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 38 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 15 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 64 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 42 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 7 * x^6 + 16 * x^4 + 5 * x^3 + 19 * x^2 is monotonic on the interval D = [0, 6], we need to establish three key points. First, demonstrate that D is convex, which is straightforward since it is a closed interval. Second, show that the derivative of f is positive for x in the interior of D (0 < x < 6) by differentiating f and confirming that each term in the derivative is positive. Justify the differentiability of the polynomial components at each step. Third, confirm that f is continuous on D, as each polynomial term is continuous. Finally, conclude that f is monotonic by combining these findings: D's convexity, f's continuity, and the positivity of the derivative in the interior."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 7 + 7 * x ^ 6 + 3 * x ^ 5 + 19 * x ^ 4 + 6 * x ^ 3 + 12 * x + 14) (Icc (0: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 7 + 7 * x ^ 6 + 3 * x ^ 5 + 19 * x ^ 4 + 6 * x ^ 3 + 12 * x + 14\n  let D := Icc (0: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 12 := by linarith [hx.1]\n\n    have h2: 0 < 18 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 76 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 15 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 42 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 70 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 10 * x^7 + 7 * x^6 + 3 * x^5 + 19 * x^4 + 6 * x^3 + 12 * x + 14 is monotonic on the interval D = [0, 9], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative f' is positive for x in the interior of D (0 < x < 9) by differentiating f and showing that each term in f' is positive. We also confirm that f is continuous on D by proving the continuity of its polynomial terms. Finally, combining these results allows us to conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 12 * x ^ 7 + 3 * x ^ 5 + 8 * x ^ 4 + 4 * x ^ 3 + 20 * x) (Icc (0: \u211d) (4: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 12 * x ^ 7 + 3 * x ^ 5 + 8 * x ^ 4 + 4 * x ^ 3 + 20 * x\n  let D := Icc (0: \u211d) (4: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (4: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 20 := by linarith [hx.1]\n\n    have h1: 0 < 12 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 32 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 15 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 84 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 12 * x^7 + 3 * x^5 + 8 * x^4 + 4 * x^3 + 20 * x is monotonic on the interval D = [0, 4], we will demonstrate that D is convex, the derivative of f is positive in the interior of D, and that f is continuous on D. First, we establish that D is a closed interval, confirming its convexity. Next, we analyze the derivative of f, showing it is positive for 0 < x < 4 by expanding and simplifying it into a sum of positive terms. We also confirm the continuity of f by noting that each term is continuous. Finally, with D being convex, f continuous, and the derivative positive, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 7 + 2 * x ^ 6 + 9 * x ^ 5 + 10 * x + 13) (Icc (0: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 7 + 2 * x ^ 6 + 9 * x ^ 5 + 10 * x + 13\n  let D := Icc (0: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 10 := by linarith [hx.1]\n\n    have h2: 0 < 45 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 12 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 35 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 5 * x^7 + 2 * x^6 + 9 * x^5 + 10 * x + 13 is monotonic on the interval D = [0, 9], we establish several properties. First, we confirm that D is convex, as closed intervals in \u211d are convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 9) by computing the derivative and showing that 35 * x^6 + 12 * x^5 + 45 * x^4 + 10 is always positive. We justify the differentiability of the polynomial's terms. Additionally, we establish that f is continuous on D since polynomials are continuous. With these properties\u2014convexity, continuity, and a strictly positive derivative\u2014we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 17 * x ^ 7 + 11 * x ^ 5 + 20 * x ^ 4 + 7 * x ^ 3 + 6 * x ^ 2 + 12 * x + 3) (Icc (0: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 17 * x ^ 7 + 11 * x ^ 5 + 20 * x ^ 4 + 7 * x ^ 3 + 6 * x ^ 2 + 12 * x + 3\n  let D := Icc (0: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 12 := by linarith [hx.1]\n\n    have h2: 0 < 12 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 21 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 80 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 55 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 119 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 17 * x^7 + 11 * x^5 + 20 * x^4 + 7 * x^3 + 6 * x^2 + 12 * x + 3 is monotonic on the interval D = [0, 3], we first establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f, calculated as 119 * x^6 + 55 * x^4 + 80 * x^3 + 21 * x^2 + 12 * x + 12, is positive for 0 < x < 3, since all coefficients and powers of x are positive in this range. We also confirm that f is continuous on D, as it is a sum of continuous monomial terms. With D being convex, f being continuous, and the derivative being positive, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 15 * x ^ 4 + 19 * x + 13) (Icc (0: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 15 * x ^ 4 + 19 * x + 13\n  let D := Icc (0: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 19 := by linarith [hx.1]\n\n    have h2: 0 < 60 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 15 * x^4 + 19 * x + 13 is monotone on the interval D = [0, 7], we follow a structured approach. First, we establish that D is convex, as any closed interval is inherently convex. Next, we demonstrate that the derivative of f, calculated as f'(x) = 60 * x^3 + 19, is positive for all x in the interior of D (0 < x < 7), since both terms are positive. We also confirm that f is continuous on D, as it is composed of continuous polynomial and constant functions. Finally, we conclude that f is strictly monotonic on D due to its positive derivative and continuity, alongside the convexity of the interval."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 4 + 6 * x ^ 3 + 14 * x ^ 2 + 6) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 4 + 6 * x ^ 3 + 14 * x ^ 2 + 6\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 28 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 18 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 28 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 7 * x^4 + 6 * x^3 + 14 * x^2 + 6 is monotonic on the interval D = [0, 5], follow these steps: First, establish that D is convex, as any closed interval in \u211d is convex. Next, demonstrate that the derivative of f is positive in the interior of D (0 < x < 5) by differentiating f to obtain 28 * x^3 + 18 * x^2 + 28 * x, and showing this expression is positive for all x in (0, 5). Confirm the differentiability of each monomial term. Then, establish that f is continuous on D since each term is continuous. Finally, conclude that f is monotonic on D based on the positive derivative and continuity."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 6 + 9 * x ^ 5 + 14 * x ^ 4 + 3 * x ^ 2 + 17) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 6 + 9 * x ^ 5 + 14 * x ^ 4 + 3 * x ^ 2 + 17\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 6 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 56 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 45 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 60 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "The task is to prove that the polynomial f(x) = 10 * x^6 + 9 * x^5 + 14 * x^4 + 3 * x^2 + 17 is monotonic on the interval D = [0, 10]. The proof involves several steps: first, confirming that D is convex since any closed interval in real numbers is convex. Next, the derivative f' is computed and shown to be positive for x in the interior of D (0 < x < 10) by expressing it as a sum of positive terms. The differentiability of f is established, and continuity is shown for each term, leading to the conclusion that f is continuous on D. Finally, with D being convex, f continuous, and f' strictly positive, it is concluded that f is strictly monotone increasing on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 11 * x ^ 7 + 14 * x ^ 4 + 18 * x ^ 3 + 3 * x ^ 2 + 8 * x) (Icc (0: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 11 * x ^ 7 + 14 * x ^ 4 + 18 * x ^ 3 + 3 * x ^ 2 + 8 * x\n  let D := Icc (0: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 8 := by linarith [hx.1]\n\n    have h1: 0 < 6 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 54 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 56 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 77 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 11 * x^7 + 14 * x^4 + 18 * x^3 + 3 * x^2 + 8 * x is monotonic on the interval D = [0, 7], we will follow several steps. First, we establish that D is convex, as closed intervals in \u211d are convex. Next, we show that the derivative of f is positive for x in the interior of D (0 < x < 7) by computing the derivative and demonstrating that the resulting sum of terms is positive. We also confirm that f is continuous on D since each term is continuous. Finally, combining these results, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 3 * x ^ 7 + 19 * x ^ 5 + 13 * x ^ 4 + 4 * x ^ 2 + 8 * x + 12) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 3 * x ^ 7 + 19 * x ^ 5 + 13 * x ^ 4 + 4 * x ^ 2 + 8 * x + 12\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 8 := by linarith [hx.1]\n\n    have h2: 0 < 8 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 52 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 95 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 21 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 3 * x^7 + 19 * x^5 + 13 * x^4 + 4 * x^2 + 8 * x + 12 is monotonic on the interval D = [0, 10], we follow several steps. First, we establish that D is convex. Next, we show that the derivative f'(x) is positive for x in the interior of D (0 < x < 10) by differentiating term by term and demonstrating that each term is positive due to positive coefficients and powers. We also confirm the differentiability of each term. Additionally, we establish the continuity of the polynomial since all monomials and constants are continuous. Finally, combining these results, we conclude that the polynomial is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 13 * x ^ 2 + 12 * x) (Icc (0: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 13 * x ^ 2 + 12 * x\n  let D := Icc (0: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 12 := by linarith [hx.1]\n\n    have h1: 0 < 26 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 13 * x^2 + 12 * x is monotonic on the interval D = [0, 8], we will follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f is positive in the interior of D (0 < x < 8) by computing the derivative and showing that 26 * x + 12 > 0 for x in this range. We also ensure the differentiability of the polynomial terms. Then, we confirm the continuity of f on D, since polynomial functions are continuous. Finally, we conclude that f is monotonic on D, as continuous functions with a positive derivative on convex domains are monotonic."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 3 * x ^ 7 + 13 * x ^ 6 + 18 * x ^ 5 + 15 * x ^ 4 + 9 * x ^ 3 + 17 * x ^ 2 + 6 * x) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 3 * x ^ 7 + 13 * x ^ 6 + 18 * x ^ 5 + 15 * x ^ 4 + 9 * x ^ 3 + 17 * x ^ 2 + 6 * x\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 6 := by linarith [hx.1]\n\n    have h1: 0 < 34 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 27 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 60 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 90 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 78 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 21 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 3 * x^7 + 13 * x^6 + 18 * x^5 + 15 * x^4 + 9 * x^3 + 17 * x^2 + 6 * x is monotonic on the interval D = [0, 1], we follow several steps. First, we establish that D is convex, as any closed interval in \u211d is convex. Next, we show that the derivative f\u2032 is positive for 0 < x < 1 by differentiating f and demonstrating that the resulting expression consists of positive terms. We also confirm the continuity of f on D, since polynomials are continuous functions. Finally, with the established convexity of D, the strict positivity of f\u2032, and the continuity of f, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 20 * x ^ 6 + 14 * x ^ 5 + 3 * x ^ 4 + 13 * x ^ 2) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 20 * x ^ 6 + 14 * x ^ 5 + 3 * x ^ 4 + 13 * x ^ 2\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 26 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 12 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 70 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 120 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 20 * x^6 + 14 * x^5 + 3 * x^4 + 13 * x^2 is monotonic on the interval D = [0, 6], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative f' is positive for x in the interior of D (0 < x < 6) by differentiating f and showing that the resulting expression, 120 * x^5 + 70 * x^4 + 12 * x^3 + 26 * x, is strictly positive for x > 0. We also confirm that f is continuous on D, as each term in the polynomial is continuous. Finally, combining these results, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 7 + 8 * x ^ 5 + 3 * x ^ 3 + 18 * x ^ 2 + 2 * x) (Icc (0: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 7 + 8 * x ^ 5 + 3 * x ^ 3 + 18 * x ^ 2 + 2 * x\n  let D := Icc (0: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 2 := by linarith [hx.1]\n\n    have h1: 0 < 36 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 9 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 40 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 49 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 7 * x^7 + 8 * x^5 + 3 * x^3 + 18 * x^2 + 2 * x is monotonic on the domain D = [0, 7], we follow a structured approach. First, we establish that D is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 7) by differentiating f term by term, simplifying the result, and showing that each term is positive, ensuring the sum is strictly positive. We also confirm the validity of differentiation steps. Additionally, we prove that f is continuous on D since each polynomial term is continuous. Finally, we conclude that f is monotonic on D based on these findings."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 7 + 7 * x ^ 6 + 3 * x ^ 2 + 8 * x + 7) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 7 + 7 * x ^ 6 + 3 * x ^ 2 + 8 * x + 7\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 8 := by linarith [hx.1]\n\n    have h2: 0 < 6 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 42 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 28 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 4 * x^7 + 7 * x^6 + 3 * x^2 + 8 * x + 7 is monotonic on the interval D = [0, 1], we follow a structured approach. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative f'(x) is positive for 0 < x < 1 by calculating it and showing that it simplifies to a sum of positive terms: 28 * x^6 + 42 * x^5 + 6 * x + 8. Each term is positive in this interval. We also confirm that f is continuous on D, as it consists of continuous functions. By combining the convexity of D, the positivity of the derivative in its interior, and the continuity of f, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 13 * x ^ 7 + 4 * x ^ 6 + 16 * x ^ 5 + 11 * x ^ 4 + 5 * x ^ 3 + 15 * x ^ 2 + 20) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 13 * x ^ 7 + 4 * x ^ 6 + 16 * x ^ 5 + 11 * x ^ 4 + 5 * x ^ 3 + 15 * x ^ 2 + 20\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 30 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 15 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 44 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 80 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 24 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 91 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 13x^7 + 4x^6 + 16x^5 + 11x^4 + 5x^3 + 15x^2 + 20 \\) is monotonic on the interval \\( D = [0, 1] \\), we follow a structured approach. First, we confirm that \\( D \\) is convex, which is inherent to closed intervals. Next, we demonstrate that the derivative \\( f'(x) = 91x^6 + 24x^5 + 80x^4 + 44x^3 + 15x^2 + 30x \\) is positive for \\( 0 < x < 1 \\) by showing each term contributes positively. We also establish the continuity of \\( f \\) on \\( D \\) since all terms are continuous functions. With these properties verified\u2014convexity, positive derivative, and continuity\u2014we conclude that \\( f \\) is monotonic on the interval \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 18 * x ^ 4 + 14 * x ^ 3 + 8 * x ^ 2 + 13 * x + 11) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 18 * x ^ 4 + 14 * x ^ 3 + 8 * x ^ 2 + 13 * x + 11\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 13 := by linarith [hx.1]\n\n    have h2: 0 < 16 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 42 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 72 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 18 * x^4 + 14 * x^3 + 8 * x^2 + 13 * x + 11 is monotonic on the interval D = [0, 1], we will follow several steps. First, we establish that D is convex, as any closed interval in \u211d is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 1) by computing and simplifying the derivative, showing that each term is strictly positive. We also confirm the differentiability of f, which is a polynomial. Finally, we establish that f is continuous on D since each monomial is continuous. With D's convexity, f's continuity, and the strict positivity of its derivative, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 7 + 10 * x ^ 6 + 11 * x ^ 4 + 10 * x ^ 3 + 13) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 7 + 10 * x ^ 6 + 11 * x ^ 4 + 10 * x ^ 3 + 13\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 30 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 44 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 60 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 56 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 8 * x^7 + 10 * x^6 + 11 * x^4 + 10 * x^3 + 13 is monotonic on the interval D = [0, 1], we follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we show that the derivative f' is positive for x in the interior of D (0 < x < 1) by differentiating f and demonstrating that each term in the derivative is positive within this range. We also confirm that f is continuous on D, as polynomials are continuous everywhere. Finally, we conclude that f is monotonic on D by combining the facts that D is convex, f is continuous, and f' is positive on the interior."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 7 + 17 * x ^ 6 + 12 * x ^ 5 + 6 * x ^ 2 + 2 * x + 10) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 7 + 17 * x ^ 6 + 12 * x ^ 5 + 6 * x ^ 2 + 2 * x + 10\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 2 := by linarith [hx.1]\n\n    have h2: 0 < 12 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 60 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 102 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 35 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 5 * x^7 + 17 * x^6 + 12 * x^5 + 6 * x^2 + 2 * x + 10 is monotonic on the interval D = [0, 1], we follow several steps. First, we establish that D is convex, as any closed interval in \u211d is convex. Next, we compute the derivative of f, which results in a positive sum of terms for x in the interior of D (0 < x < 1), confirming that the derivative is positive. We also verify that f is continuous on D since it is a polynomial function. Finally, combining these findings allows us to conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 6 + 12 * x ^ 5 + 20 * x ^ 2) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 6 + 12 * x ^ 5 + 20 * x ^ 2\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 40 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 60 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 60 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 10 * x^6 + 12 * x^5 + 20 * x^2 is monotonic on the interval D = [0, 6], we will follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (0 < x < 6) by differentiating f and simplifying to show that 60 * x^5 + 60 * x^4 + 40 * x is positive, since all terms are positive for x > 0. We also confirm the continuity of f on D, as it is a sum of continuous monomial functions. With D's convexity, the positivity of the derivative, and continuity established, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 7 + 6 * x ^ 6 + 6 * x ^ 5 + 10 * x ^ 4 + 2 * x ^ 3 + 12 * x ^ 2 + 9 * x) (Icc (0: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 7 + 6 * x ^ 6 + 6 * x ^ 5 + 10 * x ^ 4 + 2 * x ^ 3 + 12 * x ^ 2 + 9 * x\n  let D := Icc (0: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 9 := by linarith [hx.1]\n\n    have h1: 0 < 24 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 6 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 40 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 30 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 36 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 35 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 5x^7 + 6x^6 + 6x^5 + 10x^4 + 2x^3 + 12x^2 + 9x \\) is monotonic on the interval \\( D = [0, 8] \\), we follow a structured approach. First, we establish that \\( D \\) is convex, which is a property of closed intervals. Next, we demonstrate that the derivative \\( f' \\) is positive for \\( x \\) in the interior of \\( D \\) (i.e., \\( 0 < x < 8 \\)) by computing \\( f' \\) and showing that each term is positive due to positive coefficients and powers of \\( x \\). We also confirm that \\( f \\) is continuous on \\( D \\) since each term in the polynomial is continuous. Finally, these findings allow us to conclude that \\( f \\) is monotonic (specifically, monotone increasing) on \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 12 * x ^ 6 + 17 * x ^ 5 + 9 * x ^ 2 + 8 * x) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 12 * x ^ 6 + 17 * x ^ 5 + 9 * x ^ 2 + 8 * x\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 8 := by linarith [hx.1]\n\n    have h1: 0 < 18 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 85 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 72 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 12 * x^6 + 17 * x^5 + 9 * x^2 + 8 * x is monotonic on the interval D = [0, 5], we will follow a structured approach. First, we establish that D is convex since any closed interval is convex. Next, we show that the derivative f' is positive for x in the interior of D (0 < x < 5) by computing f' and demonstrating that it consists of strictly positive terms. We also confirm that f is continuous on D, as each term in the polynomial is continuous. Finally, combining the results of convexity, the positivity of the derivative, and continuity, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 14 * x ^ 7 + 15 * x ^ 5 + 5 * x ^ 4 + 4 * x ^ 3) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 14 * x ^ 7 + 15 * x ^ 5 + 5 * x ^ 4 + 4 * x ^ 3\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 12 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 20 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 75 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 98 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function \\( f(x) = 14 x^7 + 15 x^5 + 5 x^4 + 4 x^3 \\) is monotonic on the interval \\( D = [0, 6] \\), we follow several steps. First, we establish that \\( D \\) is convex, as any closed interval of real numbers is convex. Next, we show that the derivative of \\( f \\) is strictly positive for \\( 0 < x < 6 \\) by computing the derivative, which results in a sum of positive terms. Each term is shown to be positive for \\( x > 0 \\), confirming the derivative's positivity. We also demonstrate that \\( f \\) is continuous on \\( D \\) since it is a polynomial. Finally, combining these results, we conclude that \\( f \\) is monotonic on the interval \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 20 * x ^ 7 + 11 * x ^ 6 + 16 * x ^ 3 + 17 * x ^ 2 + 18 * x + 11) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 20 * x ^ 7 + 11 * x ^ 6 + 16 * x ^ 3 + 17 * x ^ 2 + 18 * x + 11\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 18 := by linarith [hx.1]\n\n    have h2: 0 < 34 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 48 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 66 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 140 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 20x^7 + 11x^6 + 16x^3 + 17x^2 + 18x + 11 \\) is monotonic on the interval \\( D = [0, 6] \\), we follow a structured approach. First, we establish that \\( D \\) is convex. Next, we demonstrate that the derivative of \\( f \\) is positive for \\( 0 < x < 6 \\) by computing the derivative and showing that each term in the resulting expression is positive. We also confirm the differentiability of each term. Then, we establish that \\( f \\) is continuous on \\( D \\) since it is a sum of continuous functions. Finally, using the convexity of \\( D \\), the continuity of \\( f \\), and the positivity of the derivative, we conclude that \\( f \\) is strictly increasing on the interval \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 80 * x + 1600) (Icc (10: \u211d) (13: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 80 * x + 1600\n  let D := Icc (10: \u211d) (13: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (10: \u211d) (13: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 4 * x^2 - 80 * x + 1600 is monotonic on the interval D = [10, 13], we will follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (10 < x < 13) by computing the derivative and simplifying it to a linear expression that is positive within this range. We also confirm that f is continuous on D since it is a polynomial, and all its terms are continuous. Finally, by combining these findings\u2014convexity, positive derivative, and continuity\u2014we can conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 32 * x + 64) (Icc (4: \u211d) (13: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 32 * x + 64\n  let D := Icc (4: \u211d) (13: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (13: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 4x^2 - 32x + 64 \\) is monotone on the interval \\( D = [4, 13] \\), we will follow several steps. First, we establish that \\( D \\) is convex since any closed interval is convex. Next, we demonstrate that the derivative \\( f' \\) is positive for \\( x \\) in the interior of \\( D \\) by differentiating \\( f \\) and showing that \\( 8x - 32 > 0 \\) holds for \\( 4 < x < 13 \\). We also confirm the differentiability of the polynomial components. Finally, we prove that \\( f \\) is continuous on \\( D \\) because each term in the polynomial is continuous. With these points established, we conclude that \\( f \\) is monotonic on the interval \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 50 * x + 625) (Icc (5: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 50 * x + 625\n  let D := Icc (5: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (5: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 5 * x^2 - 50 * x + 625 is monotonic on the interval D = [5, 6], we follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (5 < x < 6) by computing the derivative and simplifying it to show it is positive within this range. We also confirm that all functions involved are differentiable. Additionally, we establish that f is continuous on D due to the continuity of polynomial functions. Finally, with D being convex, the derivative being positive, and f being continuous, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 40 * x + 200) (Icc (5: \u211d) (15: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 40 * x + 200\n  let D := Icc (5: \u211d) (15: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (5: \u211d) (15: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 4 * x^2 - 40 * x + 200 is monotonic on the interval D = [5, 15], we first establish that D is convex, as any closed interval in \u211d is convex. Next, we demonstrate that the derivative of f is positive in the interior of D (5 < x < 15) by differentiating f and simplifying to show that (8 * x - 40) > 0 for x > 5. We also confirm the differentiability of f, as it is a polynomial. Additionally, we establish the continuity of f on D since all terms are continuous. Finally, combining the facts that f is continuous, D is convex, and f' > 0 in the interior, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 2 - 162 * x + 6561) (Icc (9: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 2 - 162 * x + 6561\n  let D := Icc (9: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 9 * x^2 - 162 * x + 6561 is monotonic on the interval D = [9, 10], we will demonstrate three key points. First, we establish that D is convex, as closed intervals are always convex. Next, we show that the derivative of f is positive for x in the interior of D (9 < x < 10) by computing the derivative and analyzing the resulting linear inequality, ensuring to justify the differentiability of the function. Finally, we confirm that f is continuous on D, since polynomials are continuous everywhere. By proving the convexity of the domain, the positivity of the derivative, and the continuity of f, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 140 * x + 700) (Icc (10: \u211d) (19: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 140 * x + 700\n  let D := Icc (10: \u211d) (19: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (10: \u211d) (19: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 7 * x^2 - 140 * x + 700 is monotonic on the interval D = [10, 19], we will follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f is positive within the interior of D (10 < x < 19) by differentiating f and showing that 14 * x - 140 > 0 for x > 10. We also verify the differentiability of the components used in differentiation. Then, we prove that f is continuous on D, as sums, differences, and products of continuous functions are continuous. Finally, combining these results, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 3 * x ^ 2 - 54 * x + 486) (Icc (9: \u211d) (16: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 3 * x ^ 2 - 54 * x + 486\n  let D := Icc (9: \u211d) (16: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (16: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 3 * x^2 - 54 * x + 486 is monotonic on the interval D = [9, 16], we follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative f' is positive for x in the interior of D (9 < x < 16) by differentiating f and verifying the sign of the resulting linear expression. We also confirm that the functions involved in differentiation are differentiable at all relevant points. Additionally, we show that f is continuous on D, since it is a polynomial. With the established convexity of D, the strict positivity of the derivative, and continuity, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 108 * x + 3402) (Icc (9: \u211d) (12: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 108 * x + 3402\n  let D := Icc (9: \u211d) (12: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (12: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 6 * x^2 - 108 * x + 3402 is monotonic on the interval D = [9, 12], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive within the interior of D (9 < x < 12) by differentiating f to obtain 12 * x - 108 and showing it is positive for x in this range. We also justify the differentiability of the polynomial's components. Finally, we confirm that f is continuous on D, as all polynomials are continuous. With these points established, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 30 * x + 270) (Icc (3: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 30 * x + 270\n  let D := Icc (3: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 5 * x^2 - 30 * x + 270 is monotonic on the interval D = [3, 5], we will demonstrate three key points. First, we establish that D is convex, as any closed interval is inherently convex. Next, we show that the derivative of f is positive within the interior of D (3 < x < 5) by differentiating f and proving that 10 * x - 30 > 0 for x in this range. Finally, we confirm that f is continuous on D since polynomials are continuous functions. By combining the convexity of D, the positivity of the derivative, and the continuity of f, we can conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 2 - 36 * x + 972) (Icc (9: \u211d) (13: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 2 - 36 * x + 972\n  let D := Icc (9: \u211d) (13: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (13: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 2 * x^2 - 36 * x + 972 is monotonic on the interval D = [9, 13], we will follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (9 < x < 13) by differentiating f, simplifying the expression, and confirming its positivity through evaluation or inequalities. We also ensure that f is continuous on D since it is a polynomial. Finally, we apply a theorem that connects the positivity of the derivative with monotonicity on a convex domain, allowing us to conclude that f is indeed monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 3 * x ^ 2 - 18 * x + 270) (Icc (3: \u211d) (4: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 3 * x ^ 2 - 18 * x + 270\n  let D := Icc (3: \u211d) (4: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (4: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 3 * x^2 - 18 * x + 270 is monotonic on the interval D = [3, 4], we will demonstrate three key points. First, we establish that D is convex, as any closed interval in \u211d is convex. Next, we show that the derivative f' is positive for x in the interior of D (3 < x < 4) by differentiating f step-by-step and simplifying the expression to confirm it remains positive in this range. Additionally, we verify that f is continuous on D by confirming the continuity of each term in the polynomial. Finally, combining these results allows us to conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 48 * x + 576) (Icc (6: \u211d) (14: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 48 * x + 576\n  let D := Icc (6: \u211d) (14: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (6: \u211d) (14: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 4 * x^2 - 48 * x + 576 is monotonic on the interval D = [6, 14], we will follow several steps. First, we establish that D is convex, as any closed interval in \u211d is convex. Next, we demonstrate that the derivative of f is positive in the interior of D (6 < x < 14) by differentiating the function and simplifying to show that 8*x - 48 > 0 for x > 6. We also confirm the differentiability of each term. Additionally, we show that f is continuous on D since polynomial functions are continuous. With these points\u2014convexity, positive derivative, and continuity\u2014we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 32 * x + 160) (Icc (2: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 32 * x + 160\n  let D := Icc (2: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 8 * x^2 - 32 * x + 160 is monotonic on the interval D = [2, 9], we follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (2 < x < 9) by differentiating f and simplifying to show that 16 * x - 32 > 0 for x > 2. We also confirm that f is continuous, as each term is continuous and the sum of continuous functions is continuous. Finally, combining the results of convexity, continuity, and the positivity of the derivative, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 2 - 126 * x + 3528) (Icc (7: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 2 - 126 * x + 3528\n  let D := Icc (7: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (7: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 9 * x^2 - 126 * x + 3528 is monotonic on the interval D = [7, 9], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for all x in the interior of D (7 < x < 9) by differentiating f and verifying that the resulting expression is positive. We also confirm that f is continuous on D, as each term in the polynomial is continuous. Finally, combining these findings allows us to conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 70 * x + 245) (Icc (7: \u211d) (16: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 70 * x + 245\n  let D := Icc (7: \u211d) (16: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (7: \u211d) (16: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 5 * x^2 - 70 * x + 245 is monotonic on the interval D = [7, 16], we will follow several steps. First, we establish that D is convex since it is a closed interval. Next, we demonstrate that the derivative f' is positive for x in the interior of D (7 < x < 16) by differentiating f and showing that 10 * x - 70 > 0 for x > 7. We also confirm that f is continuous on D, as polynomials are continuous functions. Since D is convex, f' is positive, and f is continuous, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 72 * x + 324) (Icc (9: \u211d) (16: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 72 * x + 324\n  let D := Icc (9: \u211d) (16: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (16: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 4 * x^2 - 72 * x + 324 is monotonic on the interval D = [9, 16], we will follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f is positive within the interior of D (9 < x < 16) by computing the derivative and showing that 8 * x - 72 > 0 holds for x > 9. We also confirm that f is continuous on D, leveraging the continuity of polynomial functions. Finally, by combining the results of convexity, continuity, and the positivity of the derivative, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 14 * x + 28) (Icc (1: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 14 * x + 28\n  let D := Icc (1: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 7 * x^2 - 14 * x + 28 is monotonic on the interval D = [1, 10], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we show that the derivative of f is positive for x in the interior of D (1 < x < 10) by differentiating f and simplifying the resulting inequality 14 * x - 14 > 0, which holds for x > 1. We also confirm that f is continuous on D by demonstrating the continuity of each polynomial term. Finally, with D being convex, the derivative being positive, and f being continuous, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 96 * x + 768) (Icc (8: \u211d) (15: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 96 * x + 768\n  let D := Icc (8: \u211d) (15: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (8: \u211d) (15: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To demonstrate that the polynomial f(x) = 6 * x^2 - 96 * x + 768 is monotonic on the interval D = [8, 15], several properties must be established. First, confirm that D is convex, which is true for any closed interval. Next, prove that the derivative of f is positive for x in the interior of D (8 < x < 15) by differentiating f, simplifying the derivative, and verifying an explicit inequality. Ensure that all functions involved are differentiable at the relevant points. Additionally, show that f is continuous on D by arguing that each polynomial component is continuous. Finally, use these properties to conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 40 * x + 700) (Icc (5: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 40 * x + 700\n  let D := Icc (5: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (5: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 4 * x^2 - 40 * x + 700 is monotonic on the interval D = [5, 9], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (5 < x < 9) by differentiating the function and verifying that 8 * x - 40 > 0 for x > 5. We also confirm the differentiability of each term in the polynomial. Additionally, we show that f is continuous on D because each term is continuous. Finally, combining these results, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 2 - 72 * x + 1008) (Icc (4: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 2 - 72 * x + 1008\n  let D := Icc (4: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 9 * x^2 - 72 * x + 1008 is monotonic on the interval D = [4, 6], we will follow several steps. First, we establish that D is convex, as closed intervals are inherently convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (4 < x < 6) by differentiating the function and showing the result is positive for x > 4. We also confirm the differentiability of the component functions. Then, we establish that f is continuous on D since each term in the polynomial is continuous. Finally, we conclude that f is monotonic on D based on these findings."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 80 * x + 3600) (Icc (10: \u211d) (19: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 80 * x + 3600\n  let D := Icc (10: \u211d) (19: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (10: \u211d) (19: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 4 * x^2 - 80 * x + 3600 is monotonic on the interval D = [10, 19], we follow several steps. First, we establish that D is convex, as any closed interval is inherently convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (10 < x < 19) by differentiating f and showing the resulting expression is positive through algebraic manipulation. We also confirm the continuity of f by noting that each term in the polynomial is continuous, thus their sum is continuous. Finally, combining the results of convexity, the positivity of the derivative, and continuity allows us to conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 80 * x + 1000) (Icc (5: \u211d) (15: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 80 * x + 1000\n  let D := Icc (5: \u211d) (15: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (5: \u211d) (15: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 8 * x^2 - 80 * x + 1000 is monotonic on the interval D = [5, 15], we follow several steps. First, we establish that D is convex, as any closed interval is inherently convex. Next, we demonstrate that the derivative of f is positive within the interior of D (5 < x < 15) by differentiating f and showing that 16 * x - 80 > 0 holds for all x in this range. We also confirm the differentiability of the components involved. Additionally, we prove that f is continuous on D since polynomials and their combinations are continuous. Finally, combining the convexity of D, the positivity of the derivative, and the continuity of f, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 3 * x ^ 2 - 48 * x + 1344) (Icc (8: \u211d) (11: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 3 * x ^ 2 - 48 * x + 1344\n  let D := Icc (8: \u211d) (11: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (8: \u211d) (11: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To demonstrate that the polynomial f(x) = 3 * x^2 - 48 * x + 1344 is monotonic on the interval D = [8, 11], we will follow several steps. First, we establish that D is convex since closed intervals in \u211d are convex. Next, we show that the derivative f' is positive for x in the interior of D (8 < x < 11) by differentiating f and proving that 6*x - 48 > 0 within this range. We also confirm the differentiability of the sub-functions involved. Additionally, we establish that f is continuous on D, as polynomials are continuous. Finally, by combining these findings, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 70 * x + 2205) (Icc (7: \u211d) (11: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 70 * x + 2205\n  let D := Icc (7: \u211d) (11: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (7: \u211d) (11: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 5 * x^2 - 70 * x + 2205 is monotonic on the interval D = [7, 11], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (7 < x < 11) by differentiating f and simplifying the expression to confirm its positivity. We also ensure that f is continuous on D, which is guaranteed by the properties of polynomials. Finally, combining these results, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 48 * x + 216) (Icc (3: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 48 * x + 216\n  let D := Icc (3: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 8 * x^2 - 48 * x + 216 is monotonic on the interval D = [3, 10], we follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (3 < x < 10) by computing the derivative and simplifying it, ensuring that it remains positive. We also verify the differentiability of each part of f. Then, we confirm that f is continuous on D by checking the continuity of each polynomial term. Finally, with D being convex, f continuous, and the derivative positive on the interior, we conclude that f is monotonic on D, completing the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 64 * x + 1152) (Icc (4: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 64 * x + 1152\n  let D := Icc (4: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 8 * x^2 - 64 * x + 1152 is monotonic on the interval D = [4, 7], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (4 < x < 7) by differentiating f and showing that 16 * x - 64 > 0 within this range. We also confirm the continuity of f on D, as each term in the polynomial is continuous. Finally, combining the convexity of D, the continuity of f, and the positivity of the derivative, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 56 * x + 448) (Icc (4: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 56 * x + 448\n  let D := Icc (4: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 7 * x^2 - 56 * x + 448 is monotonic on the interval D = [4, 6], we follow several steps. First, we establish that D is convex since every closed interval is convex. Next, we demonstrate that the derivative of f is positive within the interior of D (4 < x < 6) by computing the derivative and simplifying it to show that 14 * x - 56 > 0, justified by x > 4. We also verify the differentiability of the function at relevant points. Additionally, we confirm that f is continuous on D because each term in f is continuous. Finally, we conclude that f is monotonic on D based on these findings."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 10 * x + 45) (Icc (1: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 10 * x + 45\n  let D := Icc (1: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 5 * x^2 - 10 * x + 45 is monotonic on the interval D = [1, 6], we follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (1 < x < 6) by differentiating the function and showing that 10 * x - 10 > 0. We also confirm the differentiability of each term in the polynomial. Then, we verify the continuity of f on D, as each term is continuous. Finally, we apply the theorem stating that a function is monotonic on a convex set if it is continuous and has a positive derivative in the interior, concluding that f is indeed monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 2 - 40 * x + 240) (Icc (2: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 2 - 40 * x + 240\n  let D := Icc (2: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To demonstrate that the polynomial f(x) = 10 * x^2 - 40 * x + 240 is monotonic on the interval D = [2, 10], we follow a structured approach. First, we establish that D is convex, as any closed interval in \u211d is convex. Next, we compute the derivative of f, which simplifies to 20 * x - 40, and show it is positive for all x in the interior of D (2 < x < 10). This involves verifying the differentiability of the functions used in the derivative calculation. We also confirm that f is continuous on D, since sums and products of continuous functions are continuous. Finally, combining these results allows us to conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 2 - 60 * x + 810) (Icc (3: \u211d) (13: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 2 - 60 * x + 810\n  let D := Icc (3: \u211d) (13: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (13: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the quadratic function f(x) = 10 * x^2 - 60 * x + 810 is monotonic on the interval D = [3, 13], we will demonstrate that D is convex, the derivative of f is positive within D, and that f is continuous on D. First, we establish that D is convex since it is a closed interval. Next, we compute the derivative of f, showing it is a linear expression that remains positive for all x in the interior of D (3 < x < 13). We also confirm that f is continuous, as polynomial functions are continuous. Finally, based on these properties, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 3 * x ^ 2 - 12 * x + 60) (Icc (2: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 3 * x ^ 2 - 12 * x + 60\n  let D := Icc (2: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\(f(x) = 3x^2 - 12x + 60\\) is monotonic on the interval \\(D = [2, 9]\\), we verify three key properties: convexity of \\(D\\), positivity of the derivative \\(f'\\) in the interior, and continuity of \\(f\\). First, we establish that \\(D\\) is convex since it is a closed interval in \\(\\mathbb{R}\\). Next, we show that the derivative \\(f' = 6x - 12\\) is positive for \\(x\\) in the interior \\(2 < x < 9\\), confirming \\(6x - 12 > 0\\) holds true. Finally, we note that \\(f\\) is continuous as a polynomial. With these properties established, we conclude that \\(f\\) is monotonic (specifically, strictly increasing) on the interval \\(D\\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 8 * x + 4) (Icc (1: \u211d) (11: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 8 * x + 4\n  let D := Icc (1: \u211d) (11: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (11: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 4 * x^2 - 8 * x + 4 is monotonic on the interval D = [1, 11], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (1 < x < 11) by differentiating f and showing that 8 * x - 8 > 0 holds true for this range. We also confirm that f is continuous on D, as it is composed of continuous functions. Finally, combining these results allows us to conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 144 * x + 2592) (Icc (9: \u211d) (19: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 144 * x + 2592\n  let D := Icc (9: \u211d) (19: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (19: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 8 * x^2 - 144 * x + 2592 is monotonic on the interval D = [9, 19], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f, calculated as 16 * x - 144, is positive for x in the interior of D (9 < x < 19). We ensure that all functions involved in differentiation are differentiable within D. Then, we show that f is continuous on D by confirming that each term in f is continuous, and that sums and differences of continuous functions are also continuous. Finally, based on the positivity of the derivative and continuity, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 112 * x + 3136) (Icc (8: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 112 * x + 3136\n  let D := Icc (8: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (8: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 7 * x^2 - 112 * x + 3136 is monotonic on the interval D = [8, 10], we follow several steps. First, we establish that D is convex, as any closed interval in \u211d is convex. Next, we show that the derivative of f is positive for x in the interior of D (8 < x < 10) by computing the derivative and verifying its positivity through basic inequalities. We also confirm that f is continuous on D since it is a polynomial, and polynomials are continuous on any interval. Finally, with D being convex, the derivative being positive, and f being continuous, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 80 * x + 200) (Icc (5: \u211d) (14: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 80 * x + 200\n  let D := Icc (5: \u211d) (14: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (5: \u211d) (14: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 8 * x^2 - 80 * x + 200 is monotonic on the interval D = [5, 14], we will follow several steps. First, we establish that D is convex, as any closed interval is inherently convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (5 < x < 14) by differentiating f and showing that 16 * x - 80 > 0 holds true for this range. We also confirm the differentiability of the function. Finally, we establish the continuity of f since each term in the polynomial is continuous. With these proofs, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 16 * x + 48) (Icc (2: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 16 * x + 48\n  let D := Icc (2: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 4 * x^2 - 16 * x + 48 is monotonic on the interval D = [2, 10], we will first establish that D is convex, as closed intervals are inherently convex. Next, we will demonstrate that the derivative of f is positive for all x in the interior of D (2 < x < 10) by computing the derivative, simplifying it, and confirming its positivity through polynomial inequality analysis. We will also verify that f is continuous on D since each term of the polynomial is continuous. By combining these findings, we can conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 48 * x + 432) (Icc (3: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 48 * x + 432\n  let D := Icc (3: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 8 * x^2 - 48 * x + 432 is monotonic on the interval D = [3, 8], we will follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f is positive in the interior of D (3 < x < 8) by differentiating f and showing that 16x - 48 > 0 for x in this range, which can be verified through simple algebra. We also confirm that f is continuous on D since polynomials are continuous everywhere. Finally, combining these results, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 84 * x + 252) (Icc (6: \u211d) (16: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 84 * x + 252\n  let D := Icc (6: \u211d) (16: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (6: \u211d) (16: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 7 * x^2 - 84 * x + 252 is monotonic on the interval D = [6, 16], we will follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f is positive for all x in the interior of D (6 < x < 16) by differentiating the function and verifying an inequality involving the linear term. We also ensure that f is continuous on D by confirming the continuity of each polynomial term. Finally, by combining the results of convexity, the positivity of the derivative, and continuity, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 2 - 40 * x + 400) (Icc (10: \u211d) (16: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 2 - 40 * x + 400\n  let D := Icc (10: \u211d) (16: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (10: \u211d) (16: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 2x^2 - 40x + 400 \\) is monotonic on the interval \\( D = [10, 16] \\), we follow several steps. First, we establish that \\( D \\) is convex since any closed interval is convex. Next, we show that the derivative \\( f' \\) is positive in the interior of \\( D \\) by differentiating \\( f \\) and proving the inequality \\( 4x - 40 > 0 \\) holds for \\( x \\) in \\( (10, 16) \\). We also confirm that \\( f \\) is continuous on \\( D \\) because it is a polynomial. Finally, combining these results, we conclude that \\( f \\) is strictly increasing, thus proving it is monotonic on \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 36 * x + 324) (Icc (3: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 36 * x + 324\n  let D := Icc (3: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 6 * x^2 - 36 * x + 324 is monotonic on the interval D = [3, 7], we will follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (3 < x < 7) by differentiating f and proving the inequality (12 * x - 36 > 0) holds for this range. We also confirm the differentiability of the function components. Finally, we show that f is continuous on D since it is composed of continuous terms. By combining these findings, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 112 * x + 2744) (Icc (7: \u211d) (13: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 112 * x + 2744\n  let D := Icc (7: \u211d) (13: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (7: \u211d) (13: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 8 * x^2 - 112 * x + 2744 is monotonic on the interval D = [7, 13], we will follow several steps. First, we establish that D is convex, as closed intervals are always convex. Next, we demonstrate that the derivative f' is positive within the interior of D (7 < x < 13) by differentiating f and showing that 16 * x - 112 > 0 holds in this range. We also confirm the differentiability of all terms involved. Finally, we establish the continuity of f on D since each polynomial term is continuous. With these points verified, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 160 * x + 4000) (Icc (10: \u211d) (15: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 160 * x + 4000\n  let D := Icc (10: \u211d) (15: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (10: \u211d) (15: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 8 * x^2 - 160 * x + 4000 is monotonic on the interval D = [10, 15], we follow several steps. First, we establish that D is convex since it is a closed interval. Next, we demonstrate that the derivative of f is positive within the interior of D (10 < x < 15) by differentiating f and proving the inequality (16 * x - 160) > 0 through algebraic reasoning. We also confirm that the polynomial is continuous, as each term is continuous. Finally, by combining these findings, we conclude that f is monotonic on D, completing the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 2 - 24 * x + 648) (Icc (6: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 2 - 24 * x + 648\n  let D := Icc (6: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (6: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 2 * x^2 - 24 * x + 648 is monotonic on the interval D = [6, 7], we follow a structured approach. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for all x in the interior of D (6 < x < 7) by computing the derivative, reducing it to a linear inequality, and confirming its positivity through algebraic manipulation. We also verify that f is continuous on D, as each polynomial term is continuous. Finally, we conclude that f is monotonic on D by combining the facts that f is continuous, D is convex, and the derivative is strictly positive in the interval's interior."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 70 * x + 245) (Icc (7: \u211d) (17: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 70 * x + 245\n  let D := Icc (7: \u211d) (17: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (7: \u211d) (17: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To demonstrate that the function f(x) = 5 * x^2 - 70 * x + 245 is monotone on the interval D = [7, 17], we follow several steps. First, we confirm that D is convex, as any closed interval in \u211d is convex. Next, we show that the derivative of f is positive within the interior of D (7 < x < 17) by computing the derivative and simplifying it to the inequality 10 * x - 70 > 0, which holds true for x > 7. We also establish that f is continuous on D since it is composed of continuous functions. With the established convexity, positive derivative, and continuity, we conclude that f is monotone on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 48 * x + 432) (Icc (6: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 48 * x + 432\n  let D := Icc (6: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (6: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 4 * x^2 - 48 * x + 432 is monotonic on the interval D = [6, 7], we follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (6 < x < 7) by computing the derivative and confirming it remains positive through algebraic simplifications. We also verify the differentiability of the polynomial components. Additionally, we show that f is continuous on D since polynomials are continuous functions. With the convexity of D, the positivity of the derivative, and the continuity of f established, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 2 - 36 * x + 108) (Icc (2: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 2 - 36 * x + 108\n  let D := Icc (2: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 9 * x^2 - 36 * x + 108 is monotonic on the interval D = [2, 8], we will follow several steps. First, we establish that D is convex since it is a closed interval. Next, we show that the derivative of f is positive for x in the interior of D (2 < x < 8) by computing the derivative, simplifying it, and demonstrating that the resulting linear inequality holds for all x in this range. We also confirm that f is continuous on D, as it is a polynomial function. Finally, by applying the relevant theorem, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 2 - 24 * x + 360) (Icc (6: \u211d) (12: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 2 - 24 * x + 360\n  let D := Icc (6: \u211d) (12: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (6: \u211d) (12: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 2 * x^2 - 24 * x + 360 is monotonic on the interval D = [6, 12], we follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (6 < x < 12) by computing the derivative and simplifying it to a linear expression, which we verify against a linear inequality. We also ensure that each function involved is differentiable. Then, we confirm that f is continuous on D, as it is a polynomial. Finally, with established convexity, a positive derivative, and continuity, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 40 * x + 320) (Icc (4: \u211d) (14: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 40 * x + 320\n  let D := Icc (4: \u211d) (14: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (14: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 5 * x^2 - 40 * x + 320 is monotonic on the interval D = [4, 14], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative f' is positive for x in the interior of D (4 < x < 14) by differentiating f and showing that 10 * x - 40 > 0 for x > 4. We also confirm the differentiability of f. Then, we establish the continuity of f on D by noting that each term in the polynomial is continuous, and sums of continuous functions are also continuous. Finally, these findings allow us to conclude that f is monotonic on D, completing the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 2 - 140 * x + 4410) (Icc (7: \u211d) (16: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 2 - 140 * x + 4410\n  let D := Icc (7: \u211d) (16: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (7: \u211d) (16: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 10 * x^2 - 140 * x + 4410 is monotonic on the interval D = [7, 16], we follow several steps. First, we confirm that D is convex, as closed intervals are inherently convex. Next, we demonstrate that the derivative of f is positive within the interior of D (7 < x < 16) by computing the derivative and ensuring it remains positive in this range. We also verify that f is continuous on D, as it is a polynomial, which is continuous everywhere. Finally, we conclude that f is monotonic on D by applying the relationship between the strict positivity of the derivative, the convexity of the domain, and the continuity of the function."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 24 * x + 48) (Icc (2: \u211d) (12: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 24 * x + 48\n  let D := Icc (2: \u211d) (12: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (12: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 6 * x^2 - 24 * x + 48 is monotonic on the interval D = [2, 12], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative f' is positive for x in the interior of D (2 < x < 12) by differentiating f and showing that 12 * x - 24 > 0, which holds true for x > 2. We also confirm that f is continuous on D by proving the continuity of each term in the polynomial. Finally, combining these results, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 32 * x + 64) (Icc (2: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 32 * x + 64\n  let D := Icc (2: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 8 * x^2 - 32 * x + 64 is monotonic on the interval D = [2, 9], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (2 < x < 9) by differentiating the function and simplifying to show that 16 * x - 32 > 0 holds true within this range. We also confirm that f is continuous on D, as each term in the polynomial is continuous. By combining these findings, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 160 * x + 4000) (Icc (10: \u211d) (17: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 160 * x + 4000\n  let D := Icc (10: \u211d) (17: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (10: \u211d) (17: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 8 * x^2 - 160 * x + 4000 is monotonic on the interval D = [10, 17], we will follow a structured approach. First, we establish that D is convex, as any closed interval is convex. Next, we show that the derivative of f is positive for x in the interior of D (10 < x < 17) by differentiating the polynomial and simplifying the expression to demonstrate its positivity. We also confirm that the function is continuous on D since each term in the polynomial is continuous. With the convexity of D, the positivity of the derivative, and the continuity of f established, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 3 * x ^ 2 - 12 * x + 48) (Icc (2: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 3 * x ^ 2 - 12 * x + 48\n  let D := Icc (2: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 3x^2 - 12x + 48 \\) is monotonic on the interval \\( D = [2, 3] \\), we will follow several steps. First, we establish that \\( D \\) is convex since any closed interval is convex. Next, we demonstrate that the derivative of \\( f \\) is positive for \\( x \\) in the interior of \\( D \\) (i.e., \\( 2 < x < 3 \\)) by differentiating \\( f \\) and showing that \\( 6x - 12 > 0 \\) in this range. We also confirm the differentiability of the function. Finally, we show that \\( f \\) is continuous on \\( D \\) because all polynomial functions are continuous. With these points established, we conclude that \\( f \\) is monotonic on the interval \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 36 * x + 108) (Icc (3: \u211d) (12: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 36 * x + 108\n  let D := Icc (3: \u211d) (12: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (12: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 6 * x^2 - 36 * x + 108 is monotonic on the interval D = [3, 12], we follow several steps. First, we establish that D is convex, as all closed intervals in \u211d are convex. Next, we demonstrate that the derivative of f is positive within the interior of D (3 < x < 12) by differentiating f and showing that the resulting linear expression is positive in this range. We also confirm the differentiability of each component of f, which is straightforward for polynomials. Additionally, we establish that f is continuous on D since it consists of continuous functions. Finally, with the established convexity, positive derivative, and continuity, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 28 * x + 224) (Icc (2: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 28 * x + 224\n  let D := Icc (2: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 7 * x^2 - 28 * x + 224 is monotonic on the interval D = [2, 6], we follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative f' is positive for x in the interior of D (2 < x < 6) by differentiating f and simplifying the resulting inequality. We also confirm that the necessary differentiability conditions are met. Additionally, we verify that f is continuous on D by checking the continuity of each term. Finally, based on the established convexity, positive derivative, and continuity, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 90 * x + 2025) (Icc (9: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 90 * x + 2025\n  let D := Icc (9: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 5 * x^2 - 90 * x + 2025 is monotonic on the interval D = [9, 10], we will follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (9 < x < 10) by differentiating the function and simplifying the resulting expression to show it is positive. We also confirm the continuity of f, as each term in the polynomial is continuous. Finally, combining the convexity of D, the continuity of f, and the positivity of the derivative, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 2 - 36 * x + 108) (Icc (2: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 2 - 36 * x + 108\n  let D := Icc (2: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the quadratic polynomial f(x) = 9 * x^2 - 36 * x + 108 is monotonic on the interval D = [2, 10], we follow several steps. First, we establish that D is convex, as any closed interval in \u211d is convex. Next, we show the derivative is positive on the interior of D (2 < x < 10) by differentiating the function and simplifying to an inequality (18 * x - 36 > 0), which holds for the specified range. We also confirm that f is continuous on D since it is a polynomial, which is continuous everywhere. With D's convexity, the positive derivative on its interior, and the continuity of f, we conclude that f is monotonic on D, completing the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 84 * x + 1176) (Icc (7: \u211d) (11: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 84 * x + 1176\n  let D := Icc (7: \u211d) (11: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (7: \u211d) (11: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 6 * x^2 - 84 * x + 1176 is monotonic on the interval D = [7, 11], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative f' is positive in the interior of D (7 < x < 11) by differentiating f to obtain f' = 12 * x - 84 and showing that this expression is positive for x > 7. We also verify the differentiability of the polynomial's terms. Additionally, we confirm that f is continuous on D, as each term in the polynomial is continuous. Finally, combining these results, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 2 - 54 * x + 162) (Icc (3: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 2 - 54 * x + 162\n  let D := Icc (3: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the quadratic polynomial f(x) = 9 * x^2 - 54 * x + 162 is monotonic on the interval D = [3, 10], we follow several steps. First, we establish that D is convex, as any closed interval in \u211d is convex. Next, we compute the derivative f'(x) = 18*x - 54 and show it is positive for all x in the interior of D (3 < x < 10) through basic algebra. We also confirm that f is continuous on D since each term in the polynomial is continuous. Finally, since the derivative is positive, we conclude that f is strictly increasing and thus monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 2 - 108 * x + 324) (Icc (6: \u211d) (13: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 2 - 108 * x + 324\n  let D := Icc (6: \u211d) (13: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (6: \u211d) (13: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 9 * x^2 - 108 * x + 324 is monotonic on the interval D = [6, 13], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we show that the derivative of f is positive for x in the interior of D (6 < x < 13) by computing the derivative and confirming its positivity through simplification. We also verify the differentiability of each part of f. Then, we demonstrate that f is continuous on D, as each term in f is continuous. Finally, with the established convexity, continuity, and positive derivative, we apply a theorem to conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 2 - 4 * x + 12) (Icc (1: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 2 - 4 * x + 12\n  let D := Icc (1: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 2 * x^2 - 4 * x + 12 is monotonic on the interval D = [1, 5], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (1 < x < 5) by computing the derivative and showing that the resulting inequality is positive within this range. We also verify the differentiability of the polynomial's components. Additionally, we confirm that f is continuous on D by proving the continuity of each term in the polynomial. Finally, based on these findings, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 10 * x + 10) (Icc (1: \u211d) (2: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 10 * x + 10\n  let D := Icc (1: \u211d) (2: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (2: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 5 * x^2 - 10 * x + 10 is monotonic on the interval D = [1, 2], we follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we show that the derivative of f is positive for x in the interior of D (1 < x < 2) by computing the derivative and demonstrating that 10 * x - 10 > 0 through simple arithmetic. We also confirm that f is continuous on D, as polynomials are continuous everywhere. Finally, combining these results, we conclude that f is monotonic (strictly increasing) on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 12 * x + 12) (Icc (1: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 12 * x + 12\n  let D := Icc (1: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 6 * x^2 - 12 * x + 12 is monotonic on the interval D = [1, 6], we follow several steps. First, we establish that D is convex, as any closed interval in \u211d is convex. Next, we demonstrate that the derivative of f is positive for interior points of D (1 < x < 6) by differentiating f and simplifying the expression to show it remains positive within this range. We also confirm that f is continuous on D since all component functions are continuous. After verifying these conditions, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 64 * x + 768) (Icc (4: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 64 * x + 768\n  let D := Icc (4: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 8 * x^2 - 64 * x + 768 is monotonic on the interval D = [4, 7], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative f' is positive for x in the interior of D (4 < x < 7) by differentiating f and showing that 16 * x - 64 > 0 holds true within this range. We also confirm the differentiability of each term in f. Then, we verify that f is continuous on D, as each polynomial term is continuous. Finally, combining these results, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 12 * x + 24) (Icc (1: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 12 * x + 24\n  let D := Icc (1: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 6 * x^2 - 12 * x + 24 is monotonic on the interval D = [1, 9], we follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we find the derivative f'(x) = 12 * x - 12 and show it is positive for x in the interior of D (1 < x < 9), confirming that f'(x) > 0 when x > 1. We also verify the differentiability of the component functions. Additionally, we demonstrate that f is continuous on D, as each term in the polynomial is continuous. Finally, combining these results, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 50 * x + 750) (Icc (5: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 50 * x + 750\n  let D := Icc (5: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (5: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 5 * x^2 - 50 * x + 750 is monotonic on the interval D = [5, 9], we follow these steps: First, we confirm that D is convex since it is a closed interval. Next, we analyze the derivative of f, which is calculated as 10 * x - 50. We show that this derivative is positive for x in the interior of D (5 < x < 9), as 10 * x - 50 > 0 when x > 5. We also establish that f is continuous on D due to the continuity of polynomial functions. With D being convex, f being differentiable and continuous, and the derivative being positive, we conclude that f is monotone increasing on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 140 * x + 4200) (Icc (10: \u211d) (13: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 140 * x + 4200\n  let D := Icc (10: \u211d) (13: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (10: \u211d) (13: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To demonstrate that the function f(x) = 7 * x^2 - 140 * x + 4200 is monotonic on the interval D = [10, 13], we follow a structured approach. First, we establish that D is convex, as any closed interval in \u211d is convex. Next, we show that the derivative of f is positive for x in the interior of D (10 < x < 13) by differentiating f and confirming that the resulting linear expression is positive within this range. We also verify the differentiability of each term. Finally, we prove that f is continuous on D by showing that its polynomial components are continuous. By combining these findings, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 2 - 100 * x + 2000) (Icc (5: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 2 - 100 * x + 2000\n  let D := Icc (5: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (5: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 10 * x^2 - 100 * x + 2000 is monotonic on the interval D = [5, 10], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we show that the derivative of f is positive within the interior of D (5 < x < 10) by differentiating f to obtain 20 * x - 100 and confirming that this expression is greater than zero for x > 5. We also demonstrate that f is continuous on D by proving the continuity of each term in the polynomial. Finally, combining these results, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 2 - 160 * x + 1920) (Icc (8: \u211d) (15: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 2 - 160 * x + 1920\n  let D := Icc (8: \u211d) (15: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (8: \u211d) (15: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 10 * x^2 - 160 * x + 1920 is monotonic on the interval D = [8, 15], we follow several steps. First, we establish that D is convex, as closed intervals in \u211d are convex. Next, we show that the derivative of f is positive for interior points of D (8 < x < 15) by differentiating f and simplifying to demonstrate that 20 * x - 160 > 0 in this interval. We also confirm that f is continuous on D since it is a polynomial, and all its terms are continuous. Finally, combining the facts that D is convex, f is continuous, and the derivative is positive on the interior, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 90 * x + 4050) (Icc (9: \u211d) (11: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 90 * x + 4050\n  let D := Icc (9: \u211d) (11: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (11: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 5x^2 - 90x + 4050 \\) is monotonic on the interval \\( D = [9, 11] \\), we will follow several steps. First, we establish that \\( D \\) is convex since any closed interval is convex. Next, we demonstrate that the derivative of \\( f \\) is positive in the interior of \\( D \\) by differentiating the function and showing that \\( 10x - 90 > 0 \\) for \\( x \\) in \\( (9, 11) \\). We also confirm the differentiability of the function. Finally, we prove the continuity of \\( f \\) by noting that each term in the polynomial is continuous. With these points established, we conclude that \\( f \\) is monotonic on \\( D \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 2 - 180 * x + 6480) (Icc (9: \u211d) (18: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 2 - 180 * x + 6480\n  let D := Icc (9: \u211d) (18: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (18: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To demonstrate that the function f(x) = 10 * x^2 - 180 * x + 6480 is monotonic on the interval D = [9, 18], we follow several steps. First, we establish that D is convex, as any closed interval is inherently convex. Next, we show that the derivative of f is positive in the interior of D (9 < x < 18) by computing the derivative and proving that 20 * x - 180 > 0 holds for all x in this range. We also confirm that f is continuous on D since each term in f is continuous. Finally, with D being convex, f being continuous, and its derivative being positive in the interior, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 2 - 32 * x + 512) (Icc (8: \u211d) (14: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 2 - 32 * x + 512\n  let D := Icc (8: \u211d) (14: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (8: \u211d) (14: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 2 * x^2 - 32 * x + 512 is monotonic on the interval D = [8, 14], we will follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f is positive for all x in the interior of D (8 < x < 14) by differentiating f and showing the resulting expression is positive through algebraic manipulation. We also verify the continuity of f on D, as all polynomial functions are continuous. Finally, by confirming the convexity of D, the positivity of the derivative, and the continuity of f, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 2 - 20 * x + 70) (Icc (1: \u211d) (4: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 2 - 20 * x + 70\n  let D := Icc (1: \u211d) (4: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (4: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 10 * x^2 - 20 * x + 70 is monotonic on the interval D = [1, 4], we will follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (1 < x < 4) by computing the derivative and verifying its positivity through simplification and checking inequalities. We also confirm the differentiability of the polynomial's components. Then, we show that f is continuous on D by noting that each term in the polynomial is continuous. Finally, based on these findings, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 14 * x + 63) (Icc (1: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 14 * x + 63\n  let D := Icc (1: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 7 * x^2 - 14 * x + 63 is monotonic on the interval D = [1, 3], we will first establish that D is convex, as any closed interval is convex. Next, we will demonstrate that the derivative f' is positive for x in the interior of D (1 < x < 3) by differentiating f and showing that 14 * x - 14 > 0 when x > 1. We will also confirm the continuity of f on D, as all polynomial terms are continuous. By establishing these points\u2014convexity of D, positivity of the derivative on its interior, and continuity of f\u2014we can conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 84 * x + 882) (Icc (7: \u211d) (11: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 84 * x + 882\n  let D := Icc (7: \u211d) (11: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (7: \u211d) (11: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 6 * x^2 - 84 * x + 882 is monotonic on the interval D = [7, 11], we follow several steps. First, we establish that D is convex, as all closed intervals are. Next, we find the derivative f' = 12 * x - 84 and show it is positive for x in the interior of D (7 < x < 11) by solving the inequality 12 * x - 84 > 0. We also verify the differentiability of the polynomial components. Additionally, we confirm that f is continuous on D due to the continuity of polynomial functions. With D's convexity, f's continuity, and f' being positive, we conclude that f is strictly increasing on the interval D, completing the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 2 - 16 * x + 224) (Icc (4: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 2 - 16 * x + 224\n  let D := Icc (4: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 2 * x^2 - 16 * x + 224 is monotonic on the interval D = [4, 8], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (4 < x < 8) by differentiating f and showing that 4 * x - 16 > 0, which holds true for x > 4. We also confirm the differentiability of the function. Finally, we establish the continuity of f, as each term in the polynomial is continuous. With these points verified, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 70 * x + 1050) (Icc (5: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 70 * x + 1050\n  let D := Icc (5: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (5: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 7 * x^2 - 70 * x + 1050 is monotonic on the interval D = [5, 7], we follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we show that the derivative of f is positive for x in the interior of D (5 < x < 7) by differentiating f and proving that 14 * x - 70 > 0 for this range. We also confirm that f is continuous on D since all polynomial terms are continuous. With the established convexity, positive derivative, and continuity, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 90 * x + 1215) (Icc (9: \u211d) (17: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 90 * x + 1215\n  let D := Icc (9: \u211d) (17: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (17: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To demonstrate that the function f(x) = 5 * x^2 - 90 * x + 1215 is monotonic on the interval D = [9, 17], we follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we show that the derivative of f is positive in the interior of D (9 < x < 17) by differentiating f and simplifying the result to the inequality 10 * x - 90 > 0, which holds for x > 9. We also prove that f is continuous on D since polynomials are continuous functions. With the established convexity, positivity of the derivative, and continuity, we conclude that f is monotonic on D, completing the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 2 - 144 * x + 2880) (Icc (8: \u211d) (11: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 2 - 144 * x + 2880\n  let D := Icc (8: \u211d) (11: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (8: \u211d) (11: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 9 * x^2 - 144 * x + 2880 is monotonic on the interval D = [8, 11], we will demonstrate three key points. First, we establish that D is convex, as any closed interval is inherently convex. Next, we show that the derivative of f is positive for x in the interior of D (8 < x < 11) by computing the derivative and confirming its positivity within this range. We also verify the differentiability of all functions involved. Lastly, we confirm that f is continuous on D, as all polynomial terms are continuous. By combining these results, we conclude that f is monotonic on D, based on the properties of monotonicity related to positive derivatives, convex sets, and continuity."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 48 * x + 768) (Icc (4: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 48 * x + 768\n  let D := Icc (4: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 6 * x^2 - 48 * x + 768 is monotonic on the interval D = [4, 8], we will demonstrate that D is convex, the derivative of f is positive on the interior of D, and f is continuous on D. First, we establish that D is convex since any closed interval is convex. Next, we show that the derivative f' is positive for x in the interior (4 < x < 8) by differentiating f and confirming the resulting expression is positive through inequalities. We also argue that f is continuous on D because each polynomial term is continuous. With D being convex, f being continuous, and the derivative being positive, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 2 - 144 * x + 2880) (Icc (8: \u211d) (14: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 2 - 144 * x + 2880\n  let D := Icc (8: \u211d) (14: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (8: \u211d) (14: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 9 * x^2 - 144 * x + 2880 is monotonic on the interval D = [8, 14], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive within the interior of D (8 < x < 14) by differentiating f and showing that 18 * x - 144 > 0 for all x in this range. We also confirm the continuity of f, as each term in the polynomial is continuous. Finally, combining these results, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 2 - 80 * x + 800) (Icc (4: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 2 - 80 * x + 800\n  let D := Icc (4: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 10 * x^2 - 80 * x + 800 is monotonic on the interval D = [4, 8], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative f' is positive for x in the interior of D (4 < x < 8) by differentiating f and showing that 20 * x - 80 > 0 holds within this range. We also confirm the continuity of f by noting that each term in the polynomial is continuous. Finally, combining these results, we conclude that f is monotonic on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 24 * x + 324) (Icc (3: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 24 * x + 324\n  let D := Icc (3: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 4 * x^2 - 24 * x + 324 is monotonic on the interval D = [3, 7], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (3 < x < 7) by differentiating the function and showing that the resulting linear expression is positive within this range. We also verify the differentiability of the component functions. Finally, we confirm the continuity of f on D by noting that each term of the polynomial is continuous. With these points established, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 2 - 20 * x + 100) (Icc (1: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 2 - 20 * x + 100\n  let D := Icc (1: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 10 * x^2 - 20 * x + 100 is monotonic on the interval D = [1, 6], we will follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (1 < x < 6) by differentiating f and showing that 20 * x - 20 > 0, which holds true since x > 1. We also confirm that f is continuous on D, as each polynomial term is continuous. Finally, combining these results, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 98 * x + 1372) (Icc (7: \u211d) (12: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 98 * x + 1372\n  let D := Icc (7: \u211d) (12: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (7: \u211d) (12: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 7 * x^2 - 98 * x + 1372 is monotonic on the interval D = [7, 12], we will follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we demonstrate that the derivative of f, calculated as 14 * x - 98, is positive for x in the interior of D (7 < x < 12) by showing that 14 * x > 98. We also confirm the differentiability of the terms involved. Finally, we establish that f is continuous on D since polynomials are continuous functions. By combining these results, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 42 * x + 252) (Icc (3: \u211d) (12: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 42 * x + 252\n  let D := Icc (3: \u211d) (12: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (12: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 7 * x^2 - 42 * x + 252 is monotonic on the interval D = [3, 12], we follow several steps. First, we establish that D is convex, as any closed interval is convex. Next, we show that the derivative of f is positive for x in the interior of D (3 < x < 12) by computing the derivative and demonstrating that 14 * x - 42 > 0 for this range. We confirm the differentiability of the polynomial terms involved. Additionally, we establish that f is continuous on D since it is a polynomial function. Finally, combining the convexity of D, the positivity of the derivative, and the continuity of f, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 56 * x + 112) (Icc (4: \u211d) (14: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 56 * x + 112\n  let D := Icc (4: \u211d) (14: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (14: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 7 * x^2 - 56 * x + 112 is monotonic on the interval D = [4, 14], we follow several steps. First, we establish that D is convex, which is straightforward since any closed interval in \u211d is convex. Next, we compute the derivative of f, showing it is positive for x in the interior of D (4 < x < 14) by simplifying it to 14 * x - 56 and verifying the inequality. We also confirm the differentiability of f, as it consists of polynomials. Then, we demonstrate that f is continuous on D since all terms are continuous. Finally, using the established convexity, positive derivative, and continuity, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 2 - 4 * x + 8) (Icc (1: \u211d) (11: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 2 - 4 * x + 8\n  let D := Icc (1: \u211d) (11: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (11: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To demonstrate that the polynomial f(x) = 2 * x^2 - 4 * x + 8 is monotonic on the interval D = [1, 11], we will establish three key points. First, D is convex since any closed interval in \u211d is convex. Second, we will show that the derivative of f is positive for x in the interior of D (1 < x < 11) by computing the derivative and confirming that 4 * x - 4 > 0 for x > 1. Lastly, we will verify the continuity of f by showing that each term is continuous, making their sum continuous on D. With these three aspects confirmed\u2014convexity, positive derivative, and continuity\u2014we can conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 70 * x + 1750) (Icc (5: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 70 * x + 1750\n  let D := Icc (5: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (5: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial \\( f(x) = 7x^2 - 70x + 1750 \\) is monotonic on the interval \\( D = [5, 8] \\), we follow several steps. First, we establish that \\( D \\) is convex since it is a closed interval in \\( \\mathbb{R} \\). Next, we demonstrate that the derivative of \\( f \\) is positive for \\( x \\) in the interior of \\( D \\) (i.e., \\( 5 < x < 8 \\)) by differentiating \\( f \\) and confirming the positivity of the resulting linear expression. We also verify the differentiability of the function. Additionally, we show that \\( f \\) is continuous on \\( D \\) because each polynomial term is continuous. Finally, we conclude that \\( f \\) is monotonic on \\( D \\) based on the positivity of its derivative, the convexity of the interval, and the continuity of \\( f \\)."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 72 * x + 1296) (Icc (6: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 72 * x + 1296\n  let D := Icc (6: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (6: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the quadratic polynomial f(x) = 6 * x^2 - 72 * x + 1296 is monotonic on the interval D = [6, 10], we will demonstrate that D is convex, the derivative f' is positive within D, and that f is continuous on D. First, we establish that D is convex since any closed interval in \u211d is convex. Next, we compute the derivative f' and show it is positive for x in (6, 10) by confirming the differentiability of its components. Finally, we confirm that f is continuous on D, as it is a polynomial. With these points established, we conclude that f is monotonic on D due to the positivity of the derivative, along with the properties of convexity and continuity."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 64 * x + 128) (Icc (4: \u211d) (12: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 64 * x + 128\n  let D := Icc (4: \u211d) (12: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (12: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the quadratic polynomial f(x) = 8 * x^2 - 64 * x + 128 is monotonic on the interval D = [4, 12], follow these steps: First, establish that D is convex, which is true for any closed interval. Next, show that the derivative of f, calculated as 16 * x - 64, is positive for x in the interior of D (4 < x < 12). This inequality holds true, confirming that the derivative is positive. Then, demonstrate the continuity of f on D, which is straightforward since polynomials are continuous functions. Finally, conclude that f is monotonic on D, as all necessary conditions have been satisfied."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 32 * x + 192) (Icc (4: \u211d) (13: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 32 * x + 192\n  let D := Icc (4: \u211d) (13: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (13: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 4 * x^2 - 32 * x + 192 is monotonic on the interval D = [4, 13], we will demonstrate three key points. First, we establish that D is a convex interval. Next, we show that the derivative of f is positive for x in the interior of D (4 < x < 13) by differentiating f and proving an inequality that confirms the derivative's positivity. Finally, we confirm that f is continuous on D, leveraging the continuity of polynomials. By establishing these three properties\u2014convexity of D, positivity of the derivative, and continuity of f\u2014we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 3 * x ^ 2 - 18 * x + 189) (Icc (3: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 3 * x ^ 2 - 18 * x + 189\n  let D := Icc (3: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To demonstrate that the function f(x) = 3 * x^2 - 18 * x + 189 is monotonic on the interval D = [3, 10], we follow several steps. First, we confirm that D is convex, as all closed intervals in real numbers are. Next, we show that the derivative of f is positive within the interior of D (3 < x < 10) by differentiating f and simplifying to the expression 6 * x - 18, proving it is positive since x > 3. We also verify the differentiability of the function components. Additionally, we establish that f is continuous on D due to the continuity of polynomials. Finally, we combine these findings to conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 8 * x + 12) (Icc (1: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 8 * x + 12\n  let D := Icc (1: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 4 * x^2 - 8 * x + 12 is monotonic on the interval D = [1, 9], we follow several steps. First, we establish that D is convex since it is a closed interval. Next, we demonstrate that the derivative of f is positive for x in the interior of D (1 < x < 9) by computing the derivative and simplifying it to show it remains positive within this range. We also confirm that f is continuous on D, as each term of the polynomial is continuous. Finally, combining these results, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 126 * x + 5670) (Icc (9: \u211d) (16: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 126 * x + 5670\n  let D := Icc (9: \u211d) (16: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (16: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 7 * x^2 - 126 * x + 5670 is monotonic on the interval D = [9, 16], we will follow a structured approach. First, we establish that D is convex, as any closed interval is convex. Next, we show that the derivative of f is positive within the interior of D (9 < x < 16) by differentiating f and solving the inequality 14 * x - 126 > 0, which holds true for x in this range. We also demonstrate that f is continuous on D since each term of the polynomial is continuous. Finally, combining these results allows us to conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 60 * x + 1080) (Icc (6: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 60 * x + 1080\n  let D := Icc (6: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (6: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 5 * x^2 - 60 * x + 1080 is monotonic on the interval D = [6, 8], we will follow several steps. First, we establish that D is convex since any closed interval is convex. Next, we show that the derivative of f is positive for x in the interior of D (6 < x < 8) by differentiating f and demonstrating that the resulting expression is positive within this range. We also confirm that f is continuous on D, as polynomials are inherently continuous. Finally, we combine these findings\u2014convexity of D, positivity of the derivative, and continuity of f\u2014to conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 40 * x + 300) (Icc (5: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 40 * x + 300\n  let D := Icc (5: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (5: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the polynomial f(x) = 4 * x^2 - 40 * x + 300 is monotonic on the interval D = [5, 7], we will follow several steps. First, we establish that D is convex since any closed interval in \u211d is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (5 < x < 7) by differentiating f and showing that the inequality 8 * x - 40 > 0 holds within this range. We also confirm the differentiability of the function. Additionally, we establish the continuity of f by noting that each term in the polynomial is continuous. Finally, combining these results, we conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 3 * x ^ 2 - 48 * x + 576) (Icc (8: \u211d) (11: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 3 * x ^ 2 - 48 * x + 576\n  let D := Icc (8: \u211d) (11: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (8: \u211d) (11: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To prove that the function f(x) = 3 * x^2 - 48 * x + 576 is monotonic on the interval D = [8, 11], we follow several steps. First, we establish that D is convex, as any closed interval in \u211d is convex. Next, we demonstrate that the derivative of f is positive for x in the interior of D (8 < x < 11) by differentiating f and simplifying the resulting expression. We confirm that the derivative is positive within this range and that all function components are differentiable. We also show that f is continuous on D, as polynomials are continuous everywhere. Finally, we apply the theorem stating that a function with a positive derivative on a convex set and continuous on that set is monotonic, thus completing the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 28 * x + 168) (Icc (2: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 28 * x + 168\n  let D := Icc (2: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To demonstrate that the function f(x) = 7 * x^2 - 28 * x + 168 is monotonic on the interval D = [2, 10], we will establish three key points. First, we confirm that D is convex, as closed intervals in \u211d are convex. Second, we will show that the derivative of f is positive for x in the interior of D (2 < x < 10) by differentiating f and proving the inequality 14 * x - 28 > 0 holds for this range. This involves verifying the differentiability of the component functions. Lastly, we will establish that f is continuous on D since all terms in f are continuous. With these points validated, we can conclude that f is monotonic on the interval D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 56 * x + 336) (Icc (4: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 56 * x + 336\n  let D := Icc (4: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "To demonstrate that the function f(x) = 7 * x^2 - 56 * x + 336 is monotonic on the interval D = [4, 8], we follow several steps. First, we confirm that D is convex, as closed intervals are always convex. Next, we compute the derivative of f for x in the interior of D (4 < x < 8) and show it is positive by simplifying the expression and using the fact that x > 4. We also verify the differentiability of the components involved. Then, we establish that f is continuous on D by confirming the continuity of each term. Finally, we conclude that f is monotonic on D based on the positivity of the derivative and continuity of the function."
    }
]