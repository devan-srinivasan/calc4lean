[
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 7 + 4 * x ^ 6 + 7 * x ^ 5 + 3 * x ^ 4 + 15 * x ^ 3 + 10 * x ^ 2 + 4) (Icc (0: \u211d) (4: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 7 + 4 * x ^ 6 + 7 * x ^ 5 + 3 * x ^ 4 + 15 * x ^ 3 + 10 * x ^ 2 + 4\n  let D := Icc (0: \u211d) (4: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (4: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 20 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 45 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 12 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 35 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 24 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 42 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial \\( f(x) = 6x^7 + 4x^6 + 7x^5 + 3x^4 + 15x^3 + 10x^2 + 4 \\) is monotonic on the domain \\( D = [0, 4] \\). The proof proceeds by establishing convexity, the strict positivity of the derivative on the interior, continuity, and then invokes a general result about monotonicity. The structure is as follows:  First, we prove that the domain \\( D \\) is convex. This can be done by recalling that any closed interval in \\( \\mathbb{R} \\) is convex. Next, we show that the derivative of \\( f \\) is strictly positive on the interior of \\( D \\). Assume \\( x \\) lies in the interior of \\( D \\), i.e., \\( 0 < x < 4 \\). Compute the derivative of \\( f \\) by using differentiation rules for sums, products, and powers several times, yielding a sum of positive terms: \\( 42x^6 + 24x^5 + 35x^4 + 12x^3 + 45x^2 + 20x \\). Establish that each term in this sum is strictly positive for \\( x > 0 \\). For each term, argue that \\( x^n \\) is positive when \\( x > 0 \\), and thus all these multiples are positive. Conclude that adding these positive quantities yields a positive number. Recall that the validity of differentiation steps requires differentiability of the constituent functions; confirm that each monomial and constant is differentiable. Now, we check that \\( f \\) is continuous on \\( D \\). Since polynomials are sums of continuous functions, and each monomial is continuous, their sum is continuous over \\( D \\). Having shown strict positivity of the derivative in the interior, convexity of the domain, and continuity of \\( f \\), appeal to a general result on monotonicity of functions with positive derivatives on convex sets to conclude that \\( f \\) is monotone on \\( D \\).  Thus, the structure follows: check convexity \u2192 show \\( f' > 0 \\) inside \\( D \\) (break into terms, show each is positive) \u2192 establish continuity \u2192 conclude monotonicity."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 15 * x ^ 6 + 6 * x ^ 4 + 4 * x ^ 3) (Icc (0: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 15 * x ^ 6 + 6 * x ^ 4 + 4 * x ^ 3\n  let D := Icc (0: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 12 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 24 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 90 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 15 * x ^ 6 + 6 * x ^ 4 + 4 * x ^ 3 is monotonic on the set D = [0, 9]. We will proceed by first showing that D is convex, then proving that the derivative of f is positive on the interior of D, then showing continuity, and finally concluding monotonicity.  We show that D is convex. This can be established by noting that any closed interval is convex.  To prove that f\u2032(x) > 0 for all x in the interior of D: We begin by assuming that x is in the interior of D, i.e., that 0 < x < 9. We then differentiate f(x) by applying differentiation rules repeatedly. After simplifying, it suffices to show that 90 * x^5 + 24 * x^3 + 12 * x^2 > 0 for x > 0. Next, we show that each term in this sum (90 * x^5, 24 * x^3, 12 * x^2) is positive for x > 0, and therefore the entire sum is positive. We also verify that all sub-functions used above are differentiable at points of interest. This completes the proof that the derivative is positive on the interior.  We show continuity of f on D. Since each term in f is a monomial, and polynomials are sums of such functions, we can use that each is continuous and so is the sum.  With D convex, f continuous, and f\u2032 > 0 on the interior, we conclude that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 16 * x ^ 3 + 17 * x ^ 2 + 7 * x + 6) (Icc (0: \u211d) (4: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 16 * x ^ 3 + 17 * x ^ 2 + 7 * x + 6\n  let D := Icc (0: \u211d) (4: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (4: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 7 := by linarith [hx.1]\n\n    have h2: 0 < 34 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 48 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 16 * x ^ 3 + 17 * x ^ 2 + 7 * x + 6 is monotonic on the set D = [0, 4]. We will do this by first proving D is convex, then showing the derivative of f is positive on the interior of D, then that f is continuous on D, and finally concluding monotonicity.  We can prove D is convex by using the fact that any closed interval is convex.  To prove the derivative of f is positive on the interior of D, we do the following: Assume x is in the interior of D, so 0 < x < 4. Compute (formally) the derivative of f(x) by repeatedly applying differentiation rules (sum, scalar multiplication, power rule, for each term). After simplification, this will show we must prove 48 * x^2 + 34 * x + 7 > 0 for all x in the open interval (0,4). To prove this, notice each term in the sum is positive (since x > 0), thus the whole sum is positive. 2.5. Each differentiation rule requires differentiability of the underlying functions, so check differentiability for monomials and constants. Now we have shown that f' is positive on the interior of D.  We can show continuity on D by noting the sum of continuous (polynomial) functions is continuous, so f is continuous on D.  With these facts about convexity, continuity, and strict positivity of the derivative, we conclude that f is monotonic (in fact, strictly monotonic) on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 18 * x ^ 6 + 7 * x ^ 4 + 17 * x ^ 3 + 4) (Icc (0: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 18 * x ^ 6 + 7 * x ^ 4 + 17 * x ^ 3 + 4\n  let D := Icc (0: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 51 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 28 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 108 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to show that the function f(x) = 18 * x ^ 6 + 7 * x ^ 4 + 17 * x ^ 3 + 4 is monotonic on the closed interval D = [0, 9]. To do this, we proceed as follows: First, we prove that D is convex. This can be done by recalling that any closed interval in \u211d is convex. Next, we prove that the derivative of f is positive everywhere on the interior of D: Begin by assuming x is in the interior of D, i.e., 0 < x < 9. Compute the derivative of f by successive application of differentiation rules, reducing the problem to showing that 108 * x^5 + 28 * x^3 + 51 * x^2 > 0 for x in the interval. Some rearrangement and algebraic simplification are necessary at this stage. Show that each individual term in this sum is strictly positive for x > 0, and thus the total sum is positive on the interior. For each application of the chain and product rules, ensure that the constituent functions are differentiable at every point under consideration. Establish that f is continuous on D. Each polynomial term is continuous everywhere, and therefore their sum is continuous as well. With convexity, strict positivity of the derivative, and continuity in hand, we can then conclude that f is monotonic on D. This completes the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 17 * x ^ 7 + 3 * x ^ 2) (Icc (0: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 17 * x ^ 7 + 3 * x ^ 2\n  let D := Icc (0: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 6 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 119 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to show that the function f(x) = 17 * x ^ 7 + 3 * x ^ 2 is monotonic on the interval D = [0, 3]. The strategy is as follows:  First, prove that the set D is convex. This follows because closed intervals in the real numbers are convex.  Next, prove that the derivative of f is strictly positive on the interior of D. Assume x is in the interior of D, i.e., 0 < x < 3. Compute the derivative of f. This will entail breaking it down using standard differentiation rules for sums, products, constants, and exponents. After expanding and simplifying, the derivative can be shown to be a sum of terms that are positive for x in (0, 3). Show that each term in the sum is positive by noting that powers of x and positive coefficients remain positive on the open interval. 2.5. Justify differentiability of all the constituent functions where needed (such as for monomials and the identity).  Show that f is continuous on D. Use the fact that each term in f is continuous and deduce continuity of the sum on D.  Finally, combine convexity of D, positivity of the derivative on the interior, and continuity on D to conclude that f is monotonic (in fact strictly increasing) on D.  We are now done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 7 + 13 * x ^ 6 + 8 * x ^ 5 + 19 * x ^ 4 + 15 * x ^ 3 + 8 * x ^ 2 + 19 * x + 5) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 7 + 13 * x ^ 6 + 8 * x ^ 5 + 19 * x ^ 4 + 15 * x ^ 3 + 8 * x ^ 2 + 19 * x + 5\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 19 := by linarith [hx.1]\n\n    have h2: 0 < 16 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 45 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 76 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 40 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 78 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h7: 0 < 35 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6, h7]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial \\( f(x) = 5x^7 + 13x^6 + 8x^5 + 19x^4 + 15x^3 + 8x^2 + 19x + 5 \\) is monotonic on the set \\( D = [0, 1] \\). We will proceed by establishing the convexity of \\( D \\), showing that the derivative of \\( f \\) is positive on the interior of \\( D \\), and checking that \\( f \\) is continuous on \\( D \\). Finally, these establish the monotonicity of \\( f \\) on \\( D \\). First, we prove that \\( D \\) is convex. This follows from the fact that any closed interval is convex. Next, we show that the derivative \\( f' \\) is positive on the interior of \\( D \\): Assume \\( x \\) is in the interior of \\( D \\), i.e., \\( 0 < x < 1 \\). Compute the derivative of \\( f \\). This requires applying the appropriate rules for differentiation of sums and products. The derivative will be a sum where each term can be expressed as a positive constant times a positive power of \\( x \\) (since \\( x > 0 \\)), except for the constant term. Reduce the positivity of the sum to the positivity of each individual term. Note that powers of \\( x \\) are positive on \\( (0,1) \\) and the coefficients are positive. Explicitly show that each term in the derivative is positive for \\( 0 < x < 1 \\), and conclude that their sum is positive through a suitable argument, e.g., a chain of inequalities. 2.5. Each time the differentiation rules were used, show that the relevant constituent functions are differentiable at \\( x \\). Show that \\( f \\) is continuous on \\( D \\). This can be done by establishing that each term in \\( f \\) is continuous on \\( D \\) (constant and power functions are continuous everywhere), and thus so is their sum. With all these in place, conclude that \\( f \\) is monotonic on \\( D \\). Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 16 * x ^ 7 + 8 * x ^ 6 + 4 * x ^ 5 + 16 * x ^ 4 + 12 * x ^ 2 + 20) (Icc (0: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 16 * x ^ 7 + 8 * x ^ 6 + 4 * x ^ 5 + 16 * x ^ 4 + 12 * x ^ 2 + 20\n  let D := Icc (0: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 24 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 64 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 20 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 48 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 112 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial \\( f(x) = 16x^7 + 8x^6 + 4x^5 + 16x^4 + 12x^2 + 20 \\) is monotonic on the set \\( D = [0, 8] \\). We do this by first proving the domain is convex, then the derivative is positive on the interior, then continuity, and finally conclude monotonicity. Prove the set \\( D \\) is convex; this follows from the fact that any closed interval is convex. Prove that the derivative of \\( f \\) is positive on the interior of \\( D \\) by: Assume \\( x \\) is in the interior of \\( D \\), so \\( 0 < x < 8 \\). Differentiate the polynomial. Make use of differentiation, sum, and product rules repeatedly to find \\( f'(x) \\), and use algebraic manipulation to combine like terms and simplify. Observe you get a sum of terms of the form \\( c \\cdot x^n \\) for positive coefficients \\( c \\) and positive powers \\( n \\), so for \\( x > 0 \\) each term is positive, so the total sum is positive. You can show this by considering each term individually. For every differentiation step, establish differentiability of all terms appearing in the function. Show that \\( f \\) is continuous on \\( D \\); each polynomial term is continuous, so their sum is continuous on \\( D \\). Use these facts to conclude that \\( f \\) is monotone on \\( D \\). Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 5 + 9 * x ^ 3 + 12 * x ^ 2 + 2 * x + 12) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 5 + 9 * x ^ 3 + 12 * x ^ 2 + 2 * x + 12\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 2 := by linarith [hx.1]\n\n    have h2: 0 < 24 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 27 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 50 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 10 * x ^ 5 + 9 * x ^ 3 + 12 * x ^ 2 + 2 * x + 12 is monotonic on the set D = [0, 5]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that a closed interval is convex. To prove the derivative of f is positive on the interior of D, we proceed as follows: We start by assuming that x is in the interior of D, that is, 0 < x < 5. We compute the derivative of the given polynomial using the sum, multiplication, constant, and power rules, step by step. This boils down to showing that the sum 50 * x^4 + 27 * x^2 + 24 * x + 2 is positive for all x in the interior of D. To show that this sum is positive for x > 0, we show that each term of the sum is positive (since all coefficients are positive and x > 0), and so their sum is also positive. We must verify, for each application of a differentiation rule, that the involved pieces are differentiable at x. For polynomials, this is always the case. We show that f is continuous on D, usually by arguing continuity of each term in the sum and combining continuity properties. Finally, we use the above results to deduce that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 12 * x ^ 7 + 4 * x ^ 6 + 5 * x ^ 5 + 20 * x ^ 4 + 19 * x ^ 3 + 4 * x ^ 2) (Icc (0: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 12 * x ^ 7 + 4 * x ^ 6 + 5 * x ^ 5 + 20 * x ^ 4 + 19 * x ^ 3 + 4 * x ^ 2\n  let D := Icc (0: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 8 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 57 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 80 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 25 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 24 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 84 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 12 * x ^ 7 + 4 * x ^ 6 + 5 * x ^ 5 + 20 * x ^ 4 + 19 * x ^ 3 + 4 * x ^ 2 is monotonic on the interval D = [0, 8]. We will do this in several steps: first, by proving that D is convex; next, by showing the derivative of f is positive on the interior of D; then, establishing that f is continuous on D. Finally, we will conclude that f is monotonic on D.  Prove that D is convex. D is a closed interval, so we can use the result that closed intervals are convex in \u211d. Show that the derivative of f is positive on the interior of D. Assume x is in the interior of D, meaning 0 < x < 8. Compute the derivative of f(x). This involves applying the rules for differentiating sums, powers, and constant multiples several times. 2.2.1. Each term in f will be differentiated separately. 2.2.2. The result is a sum of terms, each positive on (0, 8). Show that the sum of these terms is positive on the interior of D. For each term in the derivative (such as 84 * x^6, 24 * x^5, etc.), show that it is positive in the interval (0, 8) by using the fact that powers of x are positive and multiplying by positive coefficients. Combine all these to conclude the total sum is positive. Make sure all components used in differentiation are differentiable at the points in question. Show that f is continuous on D. Each individual monomial term in f is continuous, so their sum is continuous. Conclude that f is monotonic on D using the properties established above.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 20 * x ^ 7 + 2 * x ^ 4 + 7 * x ^ 3 + 8 * x ^ 2 + 19 * x + 12) (Icc (0: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 20 * x ^ 7 + 2 * x ^ 4 + 7 * x ^ 3 + 8 * x ^ 2 + 19 * x + 12\n  let D := Icc (0: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 19 := by linarith [hx.1]\n\n    have h2: 0 < 16 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 21 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 8 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 140 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to show that the polynomial f(x) = 20 * x ^ 7 + 2 * x ^ 4 + 7 * x ^ 3 + 8 * x ^ 2 + 19 * x + 12 is monotonic on the set D = [0, 7]. We will do so by showing D is convex, f is continuous on D, and the derivative of f is positive on the interior of D. With these done, we can conclude monotonicity. The proof proceeds as follows: Prove that D is convex. Any closed interval is convex, so this is immediate. Prove that the derivative of f is positive on the interior of D. Assume that x is in the interior of D. That is, x satisfies 0 < x < 7. Compute f'(x) using the linearity of derivatives, product rule, and the usual rules for powers and constants. This will yield an expression of the form: 140 * x^6 + 8 * x^3 + 21 * x^2 + 16 * x + 19. Observe that each term in the above sum is strictly positive for x > 0. Decompose the proof to show that for each term: 140 * x^6 > 0 for x > 0. 8 * x^3 > 0 for x > 0. 21 * x^2 > 0 for x > 0. 16 * x > 0 for x > 0. 2.3.5. 19 > 0 always. Conclude that the sum is positive on the interior of D by combining positivity of all terms. 2.5. For each step of differentiation, justify the differentiability of each term in the polynomial. Show that f is continuous on D. Each term in f(x) is a (constant times) power of x, or a constant, all of which are continuous. Thus, f is continuous as a sum of continuous functions. Conclude that f is monotonic on D by appealing to the general result that a continuous function on a convex domain with strictly positive derivative in the interior is monotone on that domain.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 12 * x ^ 7 + 18 * x ^ 6 + 5 * x ^ 5 + 20 * x ^ 2) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 12 * x ^ 7 + 18 * x ^ 6 + 5 * x ^ 5 + 20 * x ^ 2\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 40 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 25 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 108 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 84 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We want to prove that the function f(x) = 12 * x ^ 7 + 18 * x ^ 6 + 5 * x ^ 5 + 20 * x ^ 2 is monotonic on the interval D = [0, 10]. The approach is to show D is convex, prove f has positive derivative throughout the interior of D, show f is continuous on D, and then conclude monotonicity. Prove D is convex using the fact that any closed interval is convex. Show that the derivative of f is positive on the interior of D: Assume x is in the interior, meaning 0 < x < 10. Compute the derivative by applying the appropriate rules (sum, product, power, and constant rules) repeatedly. After these computations, the positivity of the derivative reduces to showing that a sum of positive terms (with higher powers of x) is positive on (0, 10). Argue that each term in this sum is positive due to x being positive, and so their sum is positive. Justify that all these derivative computations are valid by establishing the differentiability of each term involved. Show that f is continuous on D. Since f is a polynomial, each term is continuous, and so their sum is continuous. From these results (convexity of D, positivity of the derivative on the interior, continuity of f), deduce that f is monotonic on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 11 * x ^ 7 + 18 * x ^ 6 + 2 * x ^ 5 + 17 * x ^ 3 + 7 * x) (Icc (0: \u211d) (4: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 11 * x ^ 7 + 18 * x ^ 6 + 2 * x ^ 5 + 17 * x ^ 3 + 7 * x\n  let D := Icc (0: \u211d) (4: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (4: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 7 := by linarith [hx.1]\n\n    have h1: 0 < 51 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 10 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 108 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 77 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 11 * x ^ 7 + 18 * x ^ 6 + 2 * x ^ 5 + 17 * x ^ 3 + 7 * x is monotonic on the set D = [0, 4]. We will do this by establishing some key intermediary facts and then combining them in the final step. First, we prove that D is convex. This can be done using the fact that closed intervals are convex sets. Next, we show that the derivative of f is positive in the interior of D: We assume that x is in the interior of D, i.e., 0 < x < 4. We differentiate f(x), applying the differentiation rules for sums, products by constants, and powers. This yields an expression for the derivative as a sum of terms, all of which depend on positive powers of x with positive coefficients. We observe that all terms in the derivative are strictly positive on the interior of D because each coefficient is positive and x > 0, so each individual term is positive. Their sum is thus positive. We recall that differentiation rules require differentiability of the constituent functions, so we verify that all the relevant functions (powers and multiples of x) are differentiable at every point in D. With this, we see that f' is positive on the interior of D. We now verify continuity of f on D. This can be established because each summand is continuous and sums/products of continuous functions are continuous. With convexity of D, continuity of f, and strict positivity of the derivative on the interior, we can now conclude that f is monotone (in fact, strictly increasing) on D. Done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 7 + 18 * x ^ 6 + 11 * x ^ 5 + 14 * x ^ 4 + 20 * x ^ 3 + 13 * x ^ 2 + 5 * x + 8) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 7 + 18 * x ^ 6 + 11 * x ^ 5 + 14 * x ^ 4 + 20 * x ^ 3 + 13 * x ^ 2 + 5 * x + 8\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 5 := by linarith [hx.1]\n\n    have h2: 0 < 26 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 60 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 56 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 55 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 108 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h7: 0 < 70 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6, h7]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We want to prove that the function f(x) = 10 * x^7 + 18 * x^6 + 11 * x^5 + 14 * x^4 + 20 * x^3 + 13 * x^2 + 5 * x + 8 is monotonic on the closed interval D = [0, 10]. We will approach this by establishing the following steps: First, prove that D is a convex set. This can be accomplished by noting that any closed interval in \u211d is convex. Next, show that the derivative of f is positive on the interior of D: Assume x is in the interior of D, so 0 < x < 10. Compute the derivative of f(x). This involves repeatedly applying basic differentiation rules, and then simplifying the resulting expression. After simplification, observe that the derivative is a sum of terms where each term is clearly positive for x in the given range. Show that each term in the derivative expression is positive for all x in the interior of D. This can be done by proving positivity of each term separately, often by reducing them to showing that powers of x are positive when x > 0, and using the positivity of coefficients. Remember to verify that each function from which the derivative is computed is differentiable at relevant points. At this point, we have shown that f' is strictly positive on the interior of D. Show that f is continuous on D, which can be deduced by checking that each polynomial term is continuous, and finite sums of continuous functions are continuous. Having established convexity of D, strict positivity of the derivative on the interior, and continuity, we can then conclude that f is monotonic on D.  This completes the proof structure."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 16 * x ^ 6 + 12 * x ^ 5 + 6 * x ^ 3 + 15 * x ^ 2 + 8 * x) (Icc (0: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 16 * x ^ 6 + 12 * x ^ 5 + 6 * x ^ 3 + 15 * x ^ 2 + 8 * x\n  let D := Icc (0: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 8 := by linarith [hx.1]\n\n    have h1: 0 < 30 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 18 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 60 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 96 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial \\( f(x) = 16x^6 + 12x^5 + 6x^3 + 15x^2 + 8x \\) is monotonic on the interval \\( D = [0, 8] \\). To do this, we will proceed as follows: We first prove that \\( D \\) is convex. This is because any closed interval on the real numbers is convex, and this property will be useful for the monotonicity theorem. Next, we show that the derivative of \\( f \\) is positive on the interior of \\( D \\). To do this: We fix a point \\( x \\) in the interior of \\( D \\), so \\( 0 < x < 8 \\). We compute the derivative of \\( f \\) at \\( x \\) using the rules of differentiation (such as the sum rule, product rule for scalar multiples, and the power rule). We then simplify the expression for the derivative and express it as a sum of positive terms when \\( x > 0 \\). We separately show that each term in this sum is strictly positive for \\( x > 0 \\), using the positivity of powers of \\( x \\) and positive coefficients. 2.5. We make sure that all the functions combined in \\( f \\) are differentiable at \\( x \\) by separately confirming differentiability as required by each differentiation rule. We show that \\( f \\) is continuous on \\( D \\), which follows directly from the fact that a sum of continuous functions (polynomials are continuous) is continuous. Finally, with convexity, differentiability, continuousness, and positivity of the derivative on the interior, we apply the corresponding monotonicity result to conclude that \\( f \\) is monotonic (specifically, monotone increasing) on \\( D \\).  We are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 7 + 15 * x ^ 6 + 9 * x ^ 4 + 8 * x ^ 2 + 17 * x + 15) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 7 + 15 * x ^ 6 + 9 * x ^ 4 + 8 * x ^ 2 + 17 * x + 15\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 17 := by linarith [hx.1]\n\n    have h2: 0 < 16 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 36 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 90 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 28 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 4 * x ^ 7 + 15 * x ^ 6 + 9 * x ^ 4 + 8 * x ^ 2 + 17 * x + 15 is monotonic on the set D = [0, 10]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we proceed as follows: Assume x is in the interior of D, i.e., 0 < x < 10. Compute the derivative of f(x), which involves using differentiation rules repeatedly for each term of the sum. After simplification, you get an expression consisting of positive multiples of powers of x along with a positive constant. Show that each term in the derivative is positive for x > 0, and thus their sum is positive. Do this by showing each term as strictly positive given that x > 0, and that the constant term is also positive. For each differentiation rule used above, justify differentiability of each function/term at the relevant points. Show that f is continuous on D by showing that each summand is continuous, and thus the sum is continuous, which is straightforward for polynomials. Using all of the above, conclude that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 6 + 8 * x ^ 5 + 15 * x ^ 2) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 6 + 8 * x ^ 5 + 15 * x ^ 2\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 30 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 40 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 48 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to show that the function f(x) = 8 * x^6 + 8 * x^5 + 15 * x^2 is monotonic on the closed interval D = [0, 6]. We will do this by establishing a chain of properties: first, that D is convex; then, that the derivative of f is positive on the interior of D; then that f is continuous on D; and finally, combining these to conclude monotonicity. First, we show that D is convex by appealing to the fact that any closed interval in \u211d is convex. Next, we establish that the derivative of f is positive on the interior of D: Assume x is in the interior of D, so 0 < x < 6. Compute the derivative of f, taking care to expand each term by repeatedly applying sum and product differentiation rules. You will find the derivative is a sum of three terms. After simplification, you obtain that it suffices to prove that 48 * x^5 + 40 * x^4 + 30 * x > 0 for x in (0,6). Notice that for x > 0, each term in the sum is positive, so their sum is positive; justify this carefully. 2.5. Finally, confirm that each constituent function you differentiated is indeed differentiable at points in D. Show that f is continuous on D, which follows from the continuity of each term (polynomials are continuous) and the closure of the sum under continuous functions. Now you may conclude that f is monotonic (in fact strictly monotonic) on D. The proof is now complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 12 * x ^ 6 + 6 * x ^ 2 + 5 * x + 4) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 12 * x ^ 6 + 6 * x ^ 2 + 5 * x + 4\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 5 := by linarith [hx.1]\n\n    have h2: 0 < 12 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 72 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 12 * x ^ 6 + 6 * x ^ 2 + 5 * x + 4 is monotonic on the set D = [0, 10]. We will do so by first proving that D is convex. Then we will show that the derivative of f is positive on the interior of D. Then we will prove that f is continuous on D. Finally, we can use these facts to conclude monotonicity on D. We can prove D is convex by using the fact that any closed interval is convex. To show the derivative of f is positive on the interior of D, proceed as follows: Assume x \u2208 interior D, i.e., 0 < x < 10. Explicitly differentiate the function, which will require applying standard differentiation rules repeatedly. After simplifying, you will find that it suffices to prove that the sum 72 * x ^ 5 + 12 * x + 5 is positive. Show each term in the sum is positive: since x > 0, all terms are positive, so their sum is positive. Justify the differentiability of all portion functions you differentiated by showing that constants, powers, sums, and products remain differentiable on the relevant domain. Show continuity on D by noting that powers, products, sums, and constants give continuous functions, and so their sum is continuous. With convexity, continuity, and positivity of the derivative on the interior, conclude f is monotonic on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 16 * x ^ 7 + 11 * x ^ 6 + 2 * x ^ 4 + 19 * x ^ 2) (Icc (0: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 16 * x ^ 7 + 11 * x ^ 6 + 2 * x ^ 4 + 19 * x ^ 2\n  let D := Icc (0: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 38 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 8 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 66 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 112 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial \\( f(x) = 16x^7 + 11x^6 + 2x^4 + 19x^2 \\) is monotonic on the interval \\( D = [0, 7] \\). To do this, we use the fact that a continuously differentiable function on a convex set is monotone if its derivative is positive on the interior of the set. First, we prove that the interval \\( D \\) is convex. This follows because any closed interval in \\(\\mathbb{R}\\) is convex. Next, we show that the derivative of \\( f \\) is positive on the interior of \\( D \\). We fix an arbitrary \\( x \\) in the interior of \\( D \\), that is, with \\( 0 < x < 7 \\). We compute \\( f'(x) \\) by differentiating each term of \\( f \\) using the standard rules of differentiation. After simplification, the derivative is \\( 112x^6 + 66x^5 + 8x^3 + 38x \\). To prove that this sum is positive, we consider each term separately; since \\( x > 0 \\) on the interior of \\( D \\), and all coefficients are positive, each term is positive, making the whole sum positive. Each differentiation step requires checking that the relevant constituent functions (like powers and multiplication by constants) are differentiable at \\( x \\), which holds for all \\( x \\in (0,7) \\). This proves the derivative is positive on the interior of \\( D \\). We then show that \\( f \\) is continuous on \\( D \\). This is true since each monomial is continuous everywhere on \\( \\mathbb{R} \\), and finite sums and products of continuous functions are continuous. With convexity, positivity of the derivative on the interior, and continuity, we can now conclude that \\( f \\) is monotonic on \\( D \\). Now the proof is finished."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 12 * x ^ 7 + 7 * x ^ 6 + 13 * x ^ 5 + 13 * x ^ 3) (Icc (0: \u211d) (2: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 12 * x ^ 7 + 7 * x ^ 6 + 13 * x ^ 5 + 13 * x ^ 3\n  let D := Icc (0: \u211d) (2: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (2: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 39 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 65 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 42 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 84 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 12 * x ^ 7 + 7 * x ^ 6 + 13 * x ^ 5 + 13 * x ^ 3 is monotonic on the set D = [0, 2]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we proceed as follows: We assume x is in the interior of D, i.e., 0 < x < 2. We then compute the derivative of f, which requires repeated application of the standard differentiation rules for sums, constants, and powers. After simplification, we find that the derivative is a sum of terms of the form k * x^n and need to prove this sum is positive. Each term evaluated for x > 0 is positive, so we show that each of 84 * x^6, 42 * x^5, 65 * x^4, and 39 * x^2 is positive on the interior; therefore their sum is positive as well. We check that each differentiation step used above is valid by confirming the differentiability of the relevant polynomial functions at any x in the interval. We show continuity of f on D by noting that each term in the polynomial is continuous on \u211d and thus f is also continuous on D. Using all of the above, we can conclude that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 7 + 3 * x ^ 6 + 17 * x ^ 4 + 13 * x ^ 3 + 2 * x ^ 2 + 18 * x + 13) (Icc (0: \u211d) (2: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 7 + 3 * x ^ 6 + 17 * x ^ 4 + 13 * x ^ 3 + 2 * x ^ 2 + 18 * x + 13\n  let D := Icc (0: \u211d) (2: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (2: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 18 := by linarith [hx.1]\n\n    have h2: 0 < 4 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 39 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 68 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 18 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 42 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to show that the polynomial f(x) = 6 * x^7 + 3 * x^6 + 17 * x^4 + 13 * x^3 + 2 * x^2 + 18 * x + 13 is monotonic on D = [0, 2]. We proceed by first proving that D is convex. Next, we show that the derivative of f is positive on the interior of D. After that, we argue that f is continuous on D. These facts together then allow us to conclude that f is monotonic on D. To show D is convex, recall that closed intervals in \u211d are convex sets. To show that the derivative of f is positive on the interior of D, proceed as follows: Assume x is inside the interior of D, i.e., 0 < x < 2. Compute the derivative by repeatedly applying differentiation rules (sum, product, constant, and power rules as applicable) to each term of f. After differentiation, you will get a sum where each term is of the form (positive constant) * (positive power of x). Argue why each term is strictly positive for x in (0, 2), possibly by handling each monomial separately. Sum all positive terms and conclude that the derivative is positive on the open interval. 2.5. Ensure that for each differentiation step, the constituent functions are differentiable on D. Show that f is continuous on D by arguing that each term is a continuous function and the sum of continuous functions is continuous. Use results about monotonicity when the derivative is positive, combined with the earlier convexity and continuity arguments, to conclude that f is monotonic on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 3 + 11 * x + 4) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 3 + 11 * x + 4\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 11 := by linarith [hx.1]\n\n    have h2: 0 < 6 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 2 * x ^ 3 + 11 * x + 4 is monotonic on the set D = [0, 6]. We'll do this by first proving D is convex, then showing the derivative of f is positive on the interior of D, then proving that f is continuous on D, and finally concluding that f is monotonic on D.  First, we show D is convex. This is true because any closed interval [a, b] in \u211d is convex. Next, we show that the derivative of f is positive on the interior of D: Assume x \u2208 interior(D), that is, 0 < x < 6. Compute the derivative of f. This involves using the usual differentiation rules (linearity, product, chain rule, etc.) to compute the derivative and simplify the resulting expression. The derivative simplifies to 6 * x^2 + 11. We need to show that this quantity is positive on 0 < x < 6. Observe that x ^ 2 > 0 for x > 0, so 6 * x ^ 2 > 0, and 11 > 0, so their sum is positive. Conclude the required inequality. 2.5. Each differentiation rule used above requires checking differentiability of the constituent functions, which should be briefly noted. Prove that f is continuous on D. Since the function is a sum of polynomials, and polynomials are continuous everywhere, f is continuous on D. Having shown convexity, positiveness of the derivative on the interior, and continuity, we conclude f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 14 * x ^ 7 + 3 * x ^ 5 + 6 * x ^ 4 + 14 * x ^ 3 + 2 * x ^ 2 + 18 * x + 19) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 14 * x ^ 7 + 3 * x ^ 5 + 6 * x ^ 4 + 14 * x ^ 3 + 2 * x ^ 2 + 18 * x + 19\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 18 := by linarith [hx.1]\n\n    have h2: 0 < 4 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 42 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 24 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 15 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 98 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial \\( f(x) = 14x^7 + 3x^5 + 6x^4 + 14x^3 + 2x^2 + 18x + 19 \\) is monotonic on the set \\( D = [0, 10] \\). We will do so by first showing that \\( D \\) is convex, then proving that the derivative of \\( f \\) is positive on the interior of \\( D \\), then showing that \\( f \\) is continuous on \\( D \\). Finally, we can conclude that \\( f \\) is monotonic on \\( D \\).  First, we prove that \\( D \\) is convex. This can be accomplished by recalling that any closed interval is convex. Next, we need to prove that the derivative of \\( f \\) is positive on the interior of \\( D \\): Start with a point \\( x \\) in the interior of \\( D \\), so \\( 0 < x < 10 \\). Expand and compute the derivative \\( f'(x) \\) by applying differentiation rules repeatedly to each term of the sum. This gives an explicit sum of terms each with a positive coefficient and a positive power of \\( x \\), plus a constant term. You can simplify this to an inequality involving only positive terms. To show that this sum is positive for \\( x > 0 \\), note that each term except the constant is positive, since each power of \\( x \\) will be positive, and the coefficients are positive. Make sure to establish as you go that each term you're differentiating is in fact differentiable, as required by the relevant rules. Now, show that \\( f \\) is continuous on \\( D \\). You can do this by noting that each term is continuous, and their sum therefore is as well. Finally, with the above facts, conclude that \\( f \\) is monotonic on \\( D \\).  This completes the argument."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 4 + 3 * x ^ 2 + 19 * x + 12) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 4 + 3 * x ^ 2 + 19 * x + 12\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 19 := by linarith [hx.1]\n\n    have h2: 0 < 6 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 36 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We want to prove that the polynomial f(x) = 9 * x^4 + 3 * x^2 + 19 * x + 12 is monotonic on the interval D = [0, 5]. The general approach will be to establish convexity of D, show that the derivative of f is always positive on the interior of D, prove that f is continuous on D, and then conclude monotonicity.  First, show D is convex by using the fact that any closed interval is convex. Next, to show that the derivative of f is always positive on the interior of D, proceed as follows: Assume x is in the interior of D, i.e., 0 < x < 5. Compute the derivative of f by applying differentiation rules for sums, constant multiples, and powers. This process will yield f'(x) = 36*x^3 + 6*x + 19. Show that this derivative is strictly positive for all x in (0, 5). The argument is that each term (36*x^3, 6*x, and 19) is positive on this interval: The term 19 is always positive. The term 6*x is positive for x > 0. The term 36*x^3 is positive for x > 0 as well. The sum of positive terms is positive, so the derivative is positive throughout the interior of D. 2.5. After differentiating, make sure to verify that all the functions involved are differentiable at the points considered (this is routine for polynomials). Prove f is continuous on D: Polynomials are continuous everywhere, and thus f is continuous on D. This can be shown by noting that the sum and product of continuous functions are continuous. Once these facts are established, apply a result that says strict positivity of the derivative on a convex domain, combined with continuity, gives strict monotonicity (and thus monotonicity) of f on D.  You are now done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 7 + 14 * x ^ 6 + 3 * x ^ 3 + 20 * x ^ 2 + 13 * x) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 7 + 14 * x ^ 6 + 3 * x ^ 3 + 20 * x ^ 2 + 13 * x\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 13 := by linarith [hx.1]\n\n    have h1: 0 < 40 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 9 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 84 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 14 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 2 * x^7 + 14 * x^6 + 3 * x^3 + 20 * x^2 + 13 * x is monotonic on the set D = [0, 5]. We will first show that D is convex. Next, we will prove that the derivative of f is positive on the interior of D. Then we will prove that f is continuous on D. Using these, we can conclude that f is monotonic on D. We show that D is convex by observing that a closed interval is always convex. To prove that the derivative of f is positive on the interior of D, we proceed as follows: Assume that x is in the interior of D; that is, 0 < x < 5. Compute the derivative of f. This involves applying the sum, constant multiple, and power rules of differentiation repeatedly. After simplifying, the derivative is a sum of several terms, each involving a power of x. After expansion and combining like terms, we obtain an expression where each term is either a positive constant or a positive multiple of a positive power of x. We show that the sum is positive by checking positivity of each term individually. Specifically, you can show for each summand that it is positive when x > 0. Recall that using the differentiation rules requires showing that each subfunction is differentiable, so we check that polynomials and powers are differentiable at all x, and particularly on D. To show continuity, we note that f is a polynomial and polynomials are continuous everywhere. You may do this by showing each term is continuous and their sum is continuous on D. Having established convexity of D, positivity of the derivative on the interior, and continuity, we can conclude monotonicity of f on D using an appropriate theorem relating these facts. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 15 * x ^ 7 + 4 * x ^ 5 + 9 * x ^ 2 + 6) (Icc (0: \u211d) (4: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 15 * x ^ 7 + 4 * x ^ 5 + 9 * x ^ 2 + 6\n  let D := Icc (0: \u211d) (4: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (4: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 18 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 20 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 105 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 15 * x ^ 7 + 4 * x ^ 5 + 9 * x ^ 2 + 6 is monotonic on the set D = [0, 4]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D.  We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: First, we can assume that x is in the interior of D; that is, 0 < x < 4. Next, we differentiate the function. This will involve using the sum, multiplication, and power differentiation rules several times. When we simplify, we get that the derivative is 105 * x^6 + 20 * x^4 + 18 * x. Now, we must show that this sum is positive for x in the interior of D. We do this by showing that each term of the sum is positive, since powers of positive numbers remain positive and all the coefficients are positive. For each differentiating step that was done earlier, we need to justify that the constituent functions are differentiable. Now we have proven that f' is positive on the interior of D. We show that f is continuous on D by noting that each constituent polynomial term is continuous, and sums of continuous functions are continuous. Using these results we can then conclude that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 15 * x ^ 6 + 6 * x ^ 2 + 12 * x + 4) (Icc (0: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 15 * x ^ 6 + 6 * x ^ 2 + 12 * x + 4\n  let D := Icc (0: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 12 := by linarith [hx.1]\n\n    have h2: 0 < 12 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 90 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to show that the function f(x) = 15 * x^6 + 6 * x^2 + 12 * x + 4 is monotone on the interval D = [0, 7]. To do this, we follow these steps:  First, show that the domain D is convex. Since D is a closed interval, we can use the fact that closed intervals in \u211d are convex. Next, prove that the derivative of f is strictly positive on the interior of D. This involves several substeps: Assume x is in the interior of D, i.e., 0 < x < 7. Compute the derivative of f, using differentiation rules for sums and products. After differentiating and simplifying, you will see that the derivative is the sum of terms of the form 90 * x^5 + 12 * x + 12. Argue that each term in that sum is positive for x in the interior of D. For the constant and the linear terms, you just need to check that x > 0. For the higher-degree term, you will need to argue that x^5 is positive for x > 0. Recall that at each differentiation step, you must verify that the functions you are differentiating are differentiable at the relevant points. Now you have justified that the derivative of f is strictly positive on the interior. Show that f is continuous on D. This can be done by showing each term (polynomials, constants, etc.) is continuous, and sums and products of continuous functions are continuous. With convexity, continuity, and strict positivity of the derivative, you can conclude f is monotone on D.  This completes the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 6 + 11 * x ^ 5 + 19 * x + 10) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 6 + 11 * x ^ 5 + 19 * x + 10\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 19 := by linarith [hx.1]\n\n    have h2: 0 < 55 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 48 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 8 * x ^ 6 + 11 * x ^ 5 + 19 * x + 10 is monotonic on the set D = [0, 6]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can show D is convex by observing that any closed interval is convex. To show the derivative of f is positive on the interior of D, we proceed as follows: First, assume that x is in the interior of D, that is, 0 < x < 6. Next, differentiate the function. This consists of repeatedly applying the differentiation rules for sums and products, which leads to the result that the derivative of f simplifies to an expression involving only positive or zero terms for x in the interior of D. Now, demonstrate that the derivative is positive for x in this interval: Show that the constant term in the derivative is positive. Show that every term involving x to a power is positive using the fact that powers of positive numbers are positive, and the coefficients are all positive in this scenario. Conclude that the total sum is positive by linarith reasoning. Then, justify that each function involved in the differentiation is differentiable at the required points, as needed for the calculus rules you used above. To show continuity, observe that each term of the polynomial is continuous, and by combining continuous functions, the result is continuous on D. Using the above results, deduce that the function is monotonic on D.  This completes the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 15 * x ^ 6 + 18 * x ^ 5 + 9 * x ^ 3 + 4 * x ^ 2 + 3 * x) (Icc (0: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 15 * x ^ 6 + 18 * x ^ 5 + 9 * x ^ 3 + 4 * x ^ 2 + 3 * x\n  let D := Icc (0: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 3 := by linarith [hx.1]\n\n    have h1: 0 < 8 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 27 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 90 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 90 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 15 * x ^ 6 + 18 * x ^ 5 + 9 * x ^ 3 + 4 * x ^ 2 + 3 * x is monotonic on the set D = [0, 8]. We will do so by first proving that D is convex. Then we show that the derivative of f is positive on the interior of D. Then we establish that f is continuous on D. These steps together will allow us to conclude monotonicity. We can prove D is convex using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, proceed as follows: First, we assume x is in the interior of D, i.e., 0 < x < 8. Next, we explicitly compute the derivative of f(x) by breaking down the differentiation, observing the sum structure, factoring out constants, and applying relevant differentiation rules multiple times. The computation shows it suffices to prove an inequality of the form: 90 * x ^ 5 + 90 * x ^ 4 + 27 * x ^ 2 + 8 * x + 3 > 0. You may need to use algebraic simplification here. To prove this inequality, note that for 0 < x < 8, each term is positive, so the sum is positive. 2.5. Lastly, recall that each application of a differentiation rule requires verifying differentiability of the constituent functions, which you can show are all differentiable. Show that f is continuous on D. Each term is a continuous function, and the sum of continuous functions is continuous, so proving continuity is straightforward. Now, since D is convex, f is continuous, and its derivative is positive on the interior, you can conclude that f is monotonic on D. Now you are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 11 * x ^ 7 + 19 * x ^ 6 + 7 * x ^ 5 + 12 * x ^ 4 + 18) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 11 * x ^ 7 + 19 * x ^ 6 + 7 * x ^ 5 + 12 * x ^ 4 + 18\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 48 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 35 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 114 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 77 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 11 * x^7 + 19 * x^6 + 7 * x^5 + 12 * x^4 + 18 is monotonic on the set D = [0, 5]. We will do this by showing that D is convex, the derivative of f is positive in the interior of D, and that f is continuous on D. Then, we can conclude monotonicity. First, observe that D is convex. This follows because any closed interval in \u211d is convex. Next, we aim to prove that the derivative of f is positive on the interior of D. The proof proceeds as follows: Assume x is in the interior of D, so 0 < x < 5. Compute the derivative. This will require repeated use of basic differentiation rules for sums, products, and powers. The calculations simplify to a sum of terms of the form c * x^k, with positive coefficients. Show that each term in the sum 77 * x^6 + 114 * x^5 + 35 * x^4 + 48 * x^3 is positive as long as x > 0, since all coefficients and exponents are positive. Justify each of these steps for the individual terms. Note that each differentiation rule used earlier requires confirming that the constituent functions (multiplication, powers, constants) are differentiable at the point in question. Now, we have established that the derivative of f is strictly positive on the interior of D. Next, show that f is continuous on D. This follows from the continuity of sums, products, and powers of continuous functions (which all polynomials are). With these steps, we fulfill the hypotheses for monotonicity on D, so we conclude that f is monotonic on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 12 * x ^ 6 + 11 * x ^ 5 + 17 * x ^ 4 + 5 * x ^ 3 + 18 * x ^ 2 + 13 * x) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 12 * x ^ 6 + 11 * x ^ 5 + 17 * x ^ 4 + 5 * x ^ 3 + 18 * x ^ 2 + 13 * x\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 13 := by linarith [hx.1]\n\n    have h1: 0 < 36 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 15 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 68 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 55 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 72 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 12 * x ^ 6 + 11 * x ^ 5 + 17 * x ^ 4 + 5 * x ^ 3 + 18 * x ^ 2 + 13 * x is monotonic on the set D = [0, 1]. We will do this by establishing some properties of D and f, and then using these to conclude monotonicity. The structure is as follows:  First, prove D is convex. This is straightforward, since any closed interval in \u211d is convex. Next, show that the derivative of f is positive on the interior of D: Assume x is in the interior of D, that is, 0 < x < 1. Differentiate f term-by-term using the basic rules for differentiating monomials and sums. After simplifying, show that the derivative is a sum of terms, each of which is positive for 0 < x < 1. In particular, you can show positivity by separately establishing that each term is positive: - 36 * x - 15 * x^2 - 68 * x^3 - 55 * x^4 - 72 * x^5 - and also the constant term 13 Note that you will need to justify differentiability of each term along the way. 2.5. The sum of these individually positive terms is positive, which is what you need. Show that f is continuous on D. This follows because each term is a product or sum involving terms that are continuous on \u211d, so the whole function is continuous. With convexity, strict positivity of the derivative on the interior, and continuity established, conclude that f is monotonic (in fact, strictly increasing) on D.  Now you are finished."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 15 * x ^ 7 + 7 * x ^ 6 + 17 * x ^ 5 + 9 * x ^ 4 + 9 * x ^ 2 + 16 * x) (Icc (0: \u211d) (4: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 15 * x ^ 7 + 7 * x ^ 6 + 17 * x ^ 5 + 9 * x ^ 4 + 9 * x ^ 2 + 16 * x\n  let D := Icc (0: \u211d) (4: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (4: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 16 := by linarith [hx.1]\n\n    have h1: 0 < 18 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 36 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 85 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 42 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 105 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 15 * x ^ 7 + 7 * x ^ 6 + 17 * x ^ 5 + 9 * x ^ 4 + 9 * x ^ 2 + 16 * x is monotonic on the set D = [0, 4]. We will do so by first showing that D is convex. Then we prove that the derivative of f is positive on the interior of D. Then, we show that f is continuous on D. Finally, we use these facts to conclude monotonicity on D. We show that D is convex by appealing to the fact that a closed interval is always convex. To show that the derivative of f is positive on the interior of D, we perform the following steps: Assume x is in the interior of D: that is, 0 < x < 4. Differentiate f by repeatedly applying differentiation and algebraic rules to reveal that the derivative is a sum of terms, each with a positive coefficient and a nonnegative (in fact, positive here) power of x. Show that each term in the sum (of the derivative) is positive for x > 0 (since each coefficient is positive and every power is positive on this interval). Conclude positivity of the sum, and ensure all steps involving differentiation are justified by verifying each constituent function is differentiable where needed. Show that f is continuous on D by arguing that each term in the polynomial is continuous, so their sum is as well. Use convexity of D, positivity of the derivative in the interior, and continuity to deduce that f is monotone on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 18 * x ^ 6 + 4 * x ^ 5 + 20 * x ^ 4 + 11 * x ^ 3 + 2 * x ^ 2 + 9 * x + 7) (Icc (0: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 18 * x ^ 6 + 4 * x ^ 5 + 20 * x ^ 4 + 11 * x ^ 3 + 2 * x ^ 2 + 9 * x + 7\n  let D := Icc (0: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 9 := by linarith [hx.1]\n\n    have h2: 0 < 4 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 33 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 80 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 20 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 108 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial \\( f(x) = 18x^6 + 4x^5 + 20x^4 + 11x^3 + 2x^2 + 9x + 7 \\) is monotonic on the set \\( D = [0, 3] \\). We will do so by first showing D is convex, then proving that the derivative of f is positive on the interior of D, then showing f is continuous on D, and finally, concluding monotonicity. We begin by showing that D is convex. This follows since D is a closed interval. To prove that the derivative of f is positive on the interior of D, we proceed as follows: Assume \\( x \\) is in the interior of D, that is, \\( 0 < x < 3 \\). Differentiate f, using the sum, product, and power differentiation rules repeatedly. After differentiating and simplifying, you should see that the derivative reduces to a sum of several positive terms, each involving powers of x and positive coefficients. To finish this step, show that each term in the derivative is positive for \\( x > 0 \\), then combine these to show the entire expression is strictly positive on the interior. Each time you use a differentiation rule, you must check that all functions being differentiated are differentiable at the appropriate points; this is straightforward for polynomials. Next, show that f is continuous on D. Since it is a sum of continuous (polynomial) functions, it is straightforward to show this. With all the above, conclude that f is monotone on D by appealing to a result ensuring monotonicity for functions whose derivatives are positive on a convex set and which are continuous. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 7 + 10 * x ^ 6 + 20 * x ^ 5 + 8 * x ^ 3 + 15 * x ^ 2 + 19 * x) (Icc (0: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 7 + 10 * x ^ 6 + 20 * x ^ 5 + 8 * x ^ 3 + 15 * x ^ 2 + 19 * x\n  let D := Icc (0: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 19 := by linarith [hx.1]\n\n    have h1: 0 < 30 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 24 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 100 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 60 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 28 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 4 * x^7 + 10 * x^6 + 20 * x^5 + 8 * x^3 + 15 * x^2 + 19 * x is monotonic on the set D = [0, 3]. We will proceed by first showing that D is convex, then that the derivative of f is positive on the interior of D, then that f is continuous on D, and finally deduce monotonicity. We can show that D is convex by using the fact that any closed interval is convex. To show that f' > 0 in the interior of D: Assume x is in the interior of D (i.e., 0 < x < 3). Compute the derivative. This involves repeated application of sum, product, and power rules. After algebraic simplification, the derivative will be written as the sum 28 * x^6 + 60 * x^5 + 100 * x^4 + 24 * x^2 + 30 * x + 19. Show that this sum is positive for 0 < x < 3. This can be done by showing that each individual term is positive in this interval (as all powers are positive for x > 0, coefficients are positive, and there is a positive constant term). Each application of a differentiation rule requires the underlying terms to be differentiable at x, so this is checked for each constituent function. Now we have f' > 0 on the interior. f is continuous on D by showing that each term is continuous and thus their sum is continuous. Using the convexity of D, continuity of f, and strict positivity of the derivative on the interior, we can conclude that f is monotonic on D. Thus the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 7 + 17 * x ^ 6 + 10 * x ^ 2 + 12 * x + 13) (Icc (0: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 7 + 17 * x ^ 6 + 10 * x ^ 2 + 12 * x + 13\n  let D := Icc (0: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 12 := by linarith [hx.1]\n\n    have h2: 0 < 20 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 102 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 56 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We are asked to prove that the polynomial \\( f(x) = 8x^7 + 17x^6 + 10x^2 + 12x + 13 \\) is monotonic on the set \\( D = [0, 3] \\). We do this by showing: the set is convex, the derivative is positive on the interior of \\( D \\), \\( f \\) is continuous on \\( D \\), and so \\( f \\) is monotonic there. We start by showing \\( D \\) is convex, using that closed intervals are convex in \\( \\mathbb{R} \\). We then prove that for any \\( x \\) in the interior of \\( D \\) (that is, \\( 0 < x < 3 \\)), the derivative \\( f'(x) \\) is strictly positive. This proceeds as follows: We note that for \\( x \\in (0, 3) \\), each term \\( x^n \\) is positive. We compute the derivative using differentiation rules and rewrite sums, arriving at \\( 56x^6 + 102x^5 + 20x + 12 \\). We then show each summand is positive for \\( 0 < x < 3 \\): The constant 12 is positive. Each term involving a power of \\( x \\), with \\( x > 0 \\), and positive coefficients, is likewise positive. Adding strictly positive numbers yields a strictly positive result, so the derivative is positive throughout the interval. 2.5. Because we used sum, product, and power rules, we must establish the differentiability of the constituent functions, breaking into cases for polynomials, identity, and constant functions where necessary. Next, we show \\( f \\) is continuous on the closed interval by noting that sums and products of continuous functions on \\( \\mathbb{R} \\) remain continuous, and polynomials are continuous everywhere. We may then conclude, from the positivity of the derivative on the interior, convexity of the interval, and continuity, that \\( f \\) is monotonic on \\( D \\). The proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 11 * x ^ 7 + 8 * x + 14) (Icc (0: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 11 * x ^ 7 + 8 * x + 14\n  let D := Icc (0: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 8 := by linarith [hx.1]\n\n    have h2: 0 < 77 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 11 * x^7 + 8 * x + 14 is monotonic on the set D = [0, 7]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we proceed as follows: First, assume x is in the interior of D, so 0 < x < 7. Next, differentiate the function by applying the rules for linearity, addition, and product with constants, as well as the power rule. This will show that the derivative simplifies to 77 * x^6 + 8, and we need to prove this is positive on the interior of D. To prove 77 * x^6 + 8 > 0, observe that x > 0 ensures x^6 > 0, so both summands are positive and thus their sum is positive. Make sure to check differentiability for each term after using each differentiation rule above, confirming each function involved is differentiable. Now we have that f' is positive on the interior of D. We argue f is continuous on D by noting that sums and products of continuous functions are continuous, and each term in the polynomial is continuous. Now, with convexity, continuity, and positivity of the derivative established, we can conclude f is monotonic on D. This completes the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 4 + 20 * x ^ 3 + 5 * x ^ 2 + 19 * x) (Icc (0: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 4 + 20 * x ^ 3 + 5 * x ^ 2 + 19 * x\n  let D := Icc (0: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 19 := by linarith [hx.1]\n\n    have h1: 0 < 10 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 60 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 24 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 6 * x^4 + 20 * x^3 + 5 * x^2 + 19 * x is monotonic on the set D = [0, 3]. We will do so by first proving that D is convex. Then we need to show that the derivative of f is positive on the interior of D, and that f is continuous on D. Finally, we can conclude it is monotonic on D. We prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we proceed as follows: Assume x is in the interior of D, i.e., 0 < x < 3. Differentiate the function, using the rules for sums, powers, and constants. After simplification, the derivative will have several terms. Show that each individual term in the derivative is positive in the interior of D. For powers of x multiplied by a positive coefficient, this follows from positivity of x in the interior. For the constant term, check that it is positive as well. Justify differentiability of all involved terms, since each differentiation rule requires this. 2.5. Combine the positivity of each term to conclude that the derivative is positive for all x in the interior of D. Show that f is continuous on D by noting that each term (a constant, monomial, or product of constants and powers) is continuous, and sums of continuous functions are continuous. Using convexity of D, continuity of f on D, and positivity of the derivative on the interior of D, conclude that f is monotonic on D.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 17 * x ^ 7 + 15 * x ^ 6 + 8 * x ^ 5 + 2 * x ^ 4 + 7 * x ^ 2 + 18 * x + 13) (Icc (0: \u211d) (4: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 17 * x ^ 7 + 15 * x ^ 6 + 8 * x ^ 5 + 2 * x ^ 4 + 7 * x ^ 2 + 18 * x + 13\n  let D := Icc (0: \u211d) (4: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (4: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 18 := by linarith [hx.1]\n\n    have h2: 0 < 14 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 8 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 40 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 90 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 119 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 17 * x^7 + 15 * x^6 + 8 * x^5 + 2 * x^4 + 7 * x^2 + 18 * x + 13 is monotonic on the interval D = [0, 4]. We will do this by showing the relevant properties needed for monotonicity: First, we show that the domain D is convex, which follows because a closed interval is convex. Then, we show the derivative of f is positive on the interior of D: We assume x is in the interior of D, that is, 0 < x < 4. We differentiate the polynomial using linearity and product/chain rules, expanding out all terms. After simplification, this gives a sum of terms, each of which can be shown nonnegative or positive for x > 0. For each nonconstant term, we show that it is strictly positive for x > 0 (since the power of x is positive and the coefficient is positive). For the constant part, check that it is positive. 2.5. The overall sum is thus positive, as all summands are positive for x in the interior. 2.6. We also need to justify that each function involved is differentiable at each point in the interior, which we do for each summand. We show that f is continuous on D, which follows because each term is a (polynomial in x) and sums of continuous functions are continuous. Using these results, we can now show f is monotone on D. We are finished."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 7 + 7 * x ^ 5 + 19 * x ^ 3 + 7 * x) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 7 + 7 * x ^ 5 + 19 * x ^ 3 + 7 * x\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 7 := by linarith [hx.1]\n\n    have h1: 0 < 57 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 35 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 63 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 9 * x ^ 7 + 7 * x ^ 5 + 19 * x ^ 3 + 7 * x is monotonic on the set D = [0, 5]. We will prove this by showing D is convex, the derivative of f is positive throughout the interior of D, and f is continuous on D. Then we can conclude monotonicity. First, prove that D is convex. This can be done by showing that any closed interval in \u211d is convex. To prove that the derivative of f is positive on the interior of D: Begin by assuming x is an element of the interior of D, i.e., 0 < x < 5. Compute the derivative term by term, using the sum and product differentiation rules for polynomials, to deduce the explicit formula for f'. Reduce the proof to showing that a sum of positive terms is positive for any x in (0, 5): this will be 63 * x^6 + 35 * x^4 + 57 * x^2 + 7 > 0. Prove that each term in this sum is positive in the interior (since x > 0, all powers are positive and so is the constant term). 2.5. Conclude the sum is positive using the positivity of each term. 2.6. Make sure all uses of differentiation rules are justified by showing each subfunction is differentiable at x. Prove that f is continuous on D. This follows because each term in the polynomial is continuous, and sums/products of continuous functions are continuous. Conclude monotonicity (in fact, strict monotonicity) of f on D from the positivity of the derivative, the convexity of D, and continuity.  This completes the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 4 + 15 * x ^ 2 + 18 * x) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 4 + 15 * x ^ 2 + 18 * x\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 18 := by linarith [hx.1]\n\n    have h1: 0 < 30 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 32 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 8 * x^4 + 15 * x^2 + 18 * x is monotonic on the domain D = [0, 5]. We will approach this by showing the set is convex, then the derivative is positive on the interior, then that f is continuous, before concluding monotonicity. First, we prove D is convex. This follows from the general fact that a closed interval in \u211d is convex. Next, we show the derivative of f is positive on the interior of D: Begin by letting x be an interior point of D, i.e., 0 < x < 5. Differentiate f term by term. This will involve repeated use of differentiation rules for sums, products, and powers, and then simplifying the resulting expression. After simplification, you will need to prove that the sum 32 * x^3 + 30 * x + 18 > 0 for x in the interior (i.e., x > 0). You can do so by: Showing that 32 * x^3 is positive for x > 0. Showing that 30 * x is positive for x > 0. Observing that 18 is always positive. Thus, their sum is strictly positive. Finally, for each application of a differentiation rule above, make sure you justify that the relevant functions are differentiable at x. Next, show that f is continuous on D. Since each term of f is continuous on \u211d, so is their sum, and thus f is continuous on D. Having established convexity, positivity of the derivative on the interior, and continuity on the domain, you may conclude monotonicity of f on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 3 * x ^ 6 + 14 * x ^ 5 + 14 * x ^ 4) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 3 * x ^ 6 + 14 * x ^ 5 + 14 * x ^ 4\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 56 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 70 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 18 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 3 * x^6 + 14 * x^5 + 14 * x^4 is monotonic on the set D = [0, 5]. We will proceed by showing that D is convex, that the derivative of f is positive on the interior of D, and that f is continuous on D, which together allow us to conclude the monotonicity of f on D.  First, we show that D is convex. This can be done by recognizing that closed intervals in \u211d are convex. Next, we show that the derivative of f is positive on the interior of D: Assume x is in the interior of D, i.e., 0 < x < 5. Compute the derivative of f by applying differentiation rules for sums, products, and powers. This yields f'(x) = 18 * x^5 + 70 * x^4 + 56 * x^3. To show that f'(x) > 0, observe that for x > 0, each term in the sum is positive, so their sum is also positive. You may prove each term's positivity individually based on x > 0. Whenever we used differentiation rules, each application required that the underlying functions are differentiable at the relevant points, so we must check and confirm differentiability for each such step. Establish that f is continuous on D. This follows as each term of the polynomial is continuous, hence so is their sum. Now, since D is convex, f is continuous on D, and the derivative is strictly positive in the interior, we may conclude that f is monotone (in fact, strictly monotone) on D.  That completes the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 19 * x ^ 7 + 6 * x ^ 5 + 3 * x ^ 4 + 6 * x ^ 3 + 16 * x + 14) (Icc (0: \u211d) (4: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 19 * x ^ 7 + 6 * x ^ 5 + 3 * x ^ 4 + 6 * x ^ 3 + 16 * x + 14\n  let D := Icc (0: \u211d) (4: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (4: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 16 := by linarith [hx.1]\n\n    have h2: 0 < 18 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 12 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 30 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 133 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 19 * x^7 + 6 * x^5 + 3 * x^4 + 6 * x^3 + 16 * x + 14 is monotonic on the set D = [0, 4]. We will do so by first establishing that D is convex. Then we prove that the derivative of f is positive on the interior of D. Next, we show that f is continuous on D. We then conclude the function is monotonic on D. We can show D is convex by using the fact that any closed interval is convex. To show the derivative of f is positive on the interior of D, we proceed in several steps: First, we assume x is in the interior of D, i.e., 0 < x < 4. Then we compute the derivative of f. This uses differentiation rules successively, breaking down the sum and powers. Once the derivative is calculated, we simplify it so it is of the form: a sum of terms each of which is a constant times a power of x, all with positive coefficients for x > 0. We then show that on the interior of D, each term in the derivative is positive, and thus the sum is positive. This involves reasoning that for 0 < x < 4, x^k > 0 for any k > 0 and positive constants multiplying these powers remain positive. 2.5. We also need to verify during the differentiation steps that each function we differentiate is differentiable at the required points. To show f is continuous on D, we note that polynomials are continuous, and thus all terms in f are continuous and so is their sum. As all these pieces are now proven, we conclude f is monotonic on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 12 * x ^ 7 + 15 * x ^ 6 + 20 * x ^ 5 + 17 * x ^ 4 + 4 * x ^ 2) (Icc (0: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 12 * x ^ 7 + 15 * x ^ 6 + 20 * x ^ 5 + 17 * x ^ 4 + 4 * x ^ 2\n  let D := Icc (0: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 8 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 68 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 100 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 90 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 84 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to show that the polynomial f(x) = 12 * x^7 + 15 * x^6 + 20 * x^5 + 17 * x^4 + 4 * x^2 is monotonic on the domain D = [0, 8]. We will proceed by first showing that D is convex, then that the derivative of f is positive on the interior of D, then that f is continuous on D, and finally conclude monotonicity. First, we check that D is convex. This follows from the general property that any closed interval [a, b] is convex. To show the derivative of f is positive on the interior of D (that is, for x such that 0 < x < 8), we: Assume x \u2208 interior D, namely 0 < x < 8. Compute the derivative of f(x), applying the appropriate differentiation rules for sums, products, and powers multiple times. This gives an explicit expression as a sum of non-negative terms. Note that after simplification, each term in the derivative is a positive constant times a positive power of x, and since x > 0, each term is positive\u2014so the sum is positive too. For each differentiation step, check that the relevant functions are differentiable at x. Thus we have established that f' > 0 for all x in the interior of D. To prove f is continuous on D, check that each of the monomial terms is continuous, and thus so is their sum. Combining these results, conclude that f is monotone (in fact, strictly monotone) on D. This completes the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 5 + 3 * x ^ 3 + 6 * x ^ 2 + 17 * x + 6) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 5 + 3 * x ^ 3 + 6 * x ^ 2 + 17 * x + 6\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 17 := by linarith [hx.1]\n\n    have h2: 0 < 12 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 9 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 50 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial \\( f(x) = 10x^5 + 3x^3 + 6x^2 + 17x + 6 \\) is monotonic on the interval \\( D = [0, 1] \\). We will proceed by showing that D is convex, the derivative of f is positive on the interior of D, f is continuous on D, and then using these facts to conclude monotonicity.  First, we show that D is convex. We can do this by noting that any closed interval on the real line is convex. Next, we show that the derivative of f is positive on the interior of D: Assume \\( x \\) is in the interior of D, so \\( 0 < x < 1 \\). Compute the derivative of f using derivative rules for sums, products, powers, and constants. The result is that we need to check \\( 50x^4 + 9x^2 + 12x + 17 > 0 \\) for \\( 0 < x < 1 \\). The next step is to check that this expression is indeed positive in \\( (0,1) \\). Each term is positive for \\( x > 0 \\), and 17 is always positive, so the sum is positive. Each application of a derivative rule for the terms in f requires that the necessary differentiability conditions are verified for each basic function (powers, constant, identity). Then, we demonstrate that f is continuous on D: This follows since each term (polynomial, powers, identity, constant) is continuous, so their sums are continuous on D. With convexity of D, positivity of the derivative on the interior, and continuity, we deduce that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 20 * x ^ 7 + 11 * x ^ 5 + 17 * x ^ 4 + 9 * x ^ 3 + 12 * x + 18) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 20 * x ^ 7 + 11 * x ^ 5 + 17 * x ^ 4 + 9 * x ^ 3 + 12 * x + 18\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 12 := by linarith [hx.1]\n\n    have h2: 0 < 27 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 68 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 55 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 140 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to show that the function f(x) = 20 * x^7 + 11 * x^5 + 17 * x^4 + 9 * x^3 + 12 * x + 18 is monotonic on the interval D = [0, 5]. We will do this by first proving D is convex, then showing that the derivative of f is strictly positive on the interior of D, then that f is continuous on D, and finally deducing the result. We show that D is convex by noting that a closed interval in \u211d is convex. To show the derivative is positive on the interior of D, we proceed step by step: Assume x is in the interior of D, that is, 0 < x < 5. Differentiate the function f. This requires application of differentiation rules multiple times for each term in the polynomial. The resulting expression gives us the derivative as a sum of terms, specifically: 140 * x^6 + 55 * x^4 + 68 * x^3 + 27 * x^2 + 12. Argue that each of these terms is strictly positive for x > 0, and therefore, their sum is strictly positive as well. You may want to justify each positivity fact, reducing each to the fact that some positive constant multiples a positive power of x (which is positive for x > 0) or is a positive constant. Each step in differentiating requires you to verify that the function you are differentiating is differentiable at x, so you should justify differentiability for each monomial and the constant term. At this point, you have shown the derivative is strictly positive on the interior of D. Show that f is continuous on D by showing that each term in f is continuous and the sum of continuous functions is continuous. Having established convexity, strict positivity of the derivative on the interior, and continuity, you can now conclude that f is monotonic (specifically, strictly increasing) on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 12 * x ^ 7 + 9 * x ^ 6 + 3 * x ^ 4 + 8 * x ^ 3 + 12 * x ^ 2 + 18 * x) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 12 * x ^ 7 + 9 * x ^ 6 + 3 * x ^ 4 + 8 * x ^ 3 + 12 * x ^ 2 + 18 * x\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 18 := by linarith [hx.1]\n\n    have h1: 0 < 24 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 24 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 12 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 54 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 84 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial \\( f(x) = 12x^7 + 9x^6 + 3x^4 + 8x^3 + 12x^2 + 18x \\) is monotonic on the interval \\( D = [0,6] \\). We do this by first establishing that \\( D \\) is convex, then showing the derivative of \\( f \\) is strictly positive on the interior of \\( D \\), then checking that \\( f \\) is continuous on \\( D \\), and finally concluding monotonicity.  We prove \\( D \\) is convex by noting that any closed interval in \\( \\mathbb{R} \\) is convex. To prove the derivative of \\( f \\) is positive on the interior of \\( D \\): We begin by letting \\( x \\) be an arbitrary point in the interior of \\( D \\), i.e., \\( 0 < x < 6 \\). We differentiate \\( f \\) according to the standard rules for polynomials (sum, product, and chain rule for powers), and rewrite the result as a sum of positive terms. We then split the resulting expression into its components and check that, for all \\( x > 0 \\), each term is strictly positive. For this, we may apply arguments that powers of a positive number are positive, and multiples by positive constants remain positive. We recall that each application of a differentiation rule requires that the constituent functions are differentiable at \\( x \\), and we justify this for each component (monomials and their sums/products). We show continuity of \\( f \\) on \\( D \\) by recognizing that each term is a polynomial (hence continuous everywhere), and that sums and products of continuous functions remain continuous. Having established the above, we appeal to a result which allows us to conclude that \\( f \\) is monotone (in fact, strictly monotone) on \\( D \\) since it is continuous, the interval is convex, and the derivative is positive everywhere in the interior of \\( D \\).  This completes the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 7 + 12 * x ^ 6 + 14 * x ^ 5 + 13 * x ^ 4 + 18 * x ^ 3 + 5 * x ^ 2 + 18 * x) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 7 + 12 * x ^ 6 + 14 * x ^ 5 + 13 * x ^ 4 + 18 * x ^ 3 + 5 * x ^ 2 + 18 * x\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 18 := by linarith [hx.1]\n\n    have h1: 0 < 10 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 54 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 52 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 70 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 72 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 35 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 5 * x^7 + 12 * x^6 + 14 * x^5 + 13 * x^4 + 18 * x^3 + 5 * x^2 + 18 * x is monotonic on D = [0, 5]. We will do so step by step, reflecting the mathematical structure in the proof: First, prove that D is convex. This uses the general fact that any closed interval is convex. Next, we need to prove that the derivative of f is positive on the interior of D. This argument unfolds as follows: We assume x is in the interior of D, i.e., 0 < x < 5. Differentiate the function f term by term, which involves repeatedly using the differentiation rules for each sum, product, and power. After expanding, you will see that f'(x) is a sum of positive multiples of powers of x and a constant term. We rewrite the resulting sum and see that every term is of the form (positive constant) times (positive power of x) (since x > 0 in the interior) or a positive constant. For each term, establish nonnegativity or positivity, typically by observing x > 0, so x^k > 0, multiplying through, and then adding the positive terms together. We must also check at this point (often at the end of the differentiation step) that each individual subterm we differentiated is indeed differentiable at x. 2.5. After showing each term is positive for 0 < x < 5, we may add these results using a linear combination to conclude the full derivative is positive in the interior of D. Next, prove that f is continuous on D. This is usually done by noticing that each basic building block (power, multiplication, sum) is continuous, so the full polynomial is continuous. Having established convexity of D, continuity of f, and positivity of the derivative on the interior, we can combine these facts to conclude that f is monotonic on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 11 * x ^ 7 + 4 * x ^ 6 + 19 * x ^ 5 + 10 * x ^ 4 + 10 * x ^ 3 + 4 * x ^ 2) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 11 * x ^ 7 + 4 * x ^ 6 + 19 * x ^ 5 + 10 * x ^ 4 + 10 * x ^ 3 + 4 * x ^ 2\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 8 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 30 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 40 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 95 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 24 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 77 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 11 * x ^ 7 + 4 * x ^ 6 + 19 * x ^ 5 + 10 * x ^ 4 + 10 * x ^ 3 + 4 * x ^ 2 is monotonic on the set D = [0, 10]. We will do this by: Proving that D is convex. The interval [0, 10] is convex, which can be established using a general property of closed intervals in \u211d. Proving that the derivative of f is positive on the interior of D, as follows: Assume x is in the interior of D, that is, 0 < x < 10. Differentiate the function term by term, successively applying differentiation rules for sums, powers, and products with constants. You will find the derivative is a sum of terms of the form c * x ^ k, with all terms positive for x > 0. After simplifying, you will show it suffices to prove that each term in the derivative is positive for x > 0. To do this, you can establish positivity for each such term, then their sum is positive. Each differentiation rule you used requires constituent functions to be differentiable at x, so make sure to note this for each term. Showing that f is continuous on D. This follows from the fact that each term in the polynomial is continuous, so their sum is continuous. With convexity, positivity of the derivative on the interior, and continuity, you conclude that f is monotonic on D.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 13 * x ^ 7 + 13 * x ^ 6 + 9 * x ^ 5 + 16 * x ^ 4 + 15 * x ^ 3 + 5 * x ^ 2) (Icc (0: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 13 * x ^ 7 + 13 * x ^ 6 + 9 * x ^ 5 + 16 * x ^ 4 + 15 * x ^ 3 + 5 * x ^ 2\n  let D := Icc (0: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 10 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 45 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 64 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 45 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 78 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 91 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial \\( f(x) = 13x^7 + 13x^6 + 9x^5 + 16x^4 + 15x^3 + 5x^2 \\) is monotonic on the interval \\( D = [0, 3] \\). We'll do this by establishing that the interval is convex, showing that the derivative is positive on the interior of \\( D \\), then arguing that \\( f \\) is continuous on \\( D \\), and finally concluding monotonicity.  First, we establish that \\( D \\) is convex. This follows from the fact that any closed interval in \\( \\mathbb{R} \\) is convex.  Next, we show the derivative of \\( f \\) is positive for all \\( x \\) in the interior of \\( D \\) (i.e., \\( 0 < x < 3 \\)). Assume \\( x \\) is in the interior, so \\( x > 0 \\) and \\( x < 3 \\). Compute the derivative of \\( f \\) using differentiation rules for sums, products, and powers. Expand and combine the terms to identify the resulting polynomial in \\( x \\). Show that each term in the derivative (all with positive coefficients and positive powers of \\( x \\)) is strictly positive when \\( x > 0 \\), and hence the entire derivative is positive by combining these. At each step where the differentiation rules are applied, justify the differentiability of the constant, identity, and power functions on \\( \\mathbb{R} \\). At the end of this step, we've justified that \\( f'(x) > 0 \\) for all \\( x \\in (0,3) \\).  Then, verify that \\( f \\) is continuous on \\( D \\). Notice that as a sum of products of powers of \\( x \\) with real coefficients, each term is continuous, so their sum is continuous.  With the above results, we can conclude that \\( f \\) is monotonic on \\( D \\). Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 5 + 15 * x ^ 3 + 20 * x ^ 2) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 5 + 15 * x ^ 3 + 20 * x ^ 2\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 40 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 45 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 25 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 5 * x ^ 5 + 15 * x ^ 3 + 20 * x ^ 2 is monotonic on the interval D = [0, 1]. We will do this by first showing the interval is convex, followed by showing that the derivative is strictly positive on the interior, and then proving continuity, which allows us to deduce monotonicity.  First, we show that D is convex. This follows because any closed interval in \u211d is convex. Next, we show that the derivative of f is strictly positive on the interior of D. To do this: Assume x \u2208 interior D, so 0 < x < 1. Compute the derivative of f by applying the differentiation rules for sums, scalar multiples, and powers. This leaves us with an expression involving powers of x and coefficients: 25 * x^4 + 45 * x^2 + 40 * x. We then show this quantity is always positive for all x in the open interval (0, 1) by verifying that each term 25 * x^4, 45 * x^2, and 40 * x is positive when x > 0. We also justify that the differentiation steps are valid, by arguing that all component functions (polynomials and constants) are differentiable everywhere. We prove continuity of f on D by noting that each polynomial term is continuous and so their sum is continuous as well. Now, by combining convexity, continuity, and strict positivity of the derivative on the interior, we conclude that f is monotonic on D.  The proof is now complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 7 + 12 * x ^ 5 + 15 * x ^ 4 + 4 * x ^ 2 + 11 * x + 4) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 7 + 12 * x ^ 5 + 15 * x ^ 4 + 4 * x ^ 2 + 11 * x + 4\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 11 := by linarith [hx.1]\n\n    have h2: 0 < 8 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 60 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 60 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 56 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 8 * x^7 + 12 * x^5 + 15 * x^4 + 4 * x^2 + 11 * x + 4 is monotonic on the set D = [0, 5]. We will do this by establishing several facts step by step, each requiring its own justification, including intermediary results. The structure of the proof is as follows:  We show that D is convex. This follows from the general fact that any closed interval in \u211d is convex.  We prove that the derivative of f is positive on the interior of D: To do this, we first assume x is in the interior of D, i.e., 0 < x < 5. We differentiate the function f. Differentiating each term and adding, we reduce our task to proving that 56 * x^6 + 60 * x^4 + 60 * x^3 + 8 * x + 11 > 0 for all x in the interval (0, 5). You should use differentiation rules for addition, multiplication, and powers, applying them stepwise. We then show this sum is indeed positive for x in (0, 5). This is done by checking that each term in the sum is positive for all x in the open interval (0, 5): The constant term 11 is always positive. The term 8 * x is positive because x > 0. The terms 60 * x^3 and 60 * x^4 are positive because a positive x raised to any power is positive, and multiplied by a positive constant. The term 56 * x^6 is likewise positive for the same reason. 2.3.5. Since the sum of positive numbers is positive, the whole expression is positive for x in (0, 5). Each time you differentiate a term, you should also make sure to justify the differentiability of the relevant component functions\u2014constants, powers, and the identity, all of which are differentiable everywhere.  We establish continuity of f on D. This is straightforward, as each term in f is continuous, so their sum is also continuous on D.  With these facts (convexity of D, continuity of f, and strictly positive derivative on the interior), you can conclude that f is monotonic (in fact, strictly increasing) on D.  This completes the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 17 * x ^ 4 + 6 * x ^ 3 + 2 * x ^ 2 + 7 * x) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 17 * x ^ 4 + 6 * x ^ 3 + 2 * x ^ 2 + 7 * x\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 7 := by linarith [hx.1]\n\n    have h1: 0 < 4 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 18 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 68 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 17 * x ^ 4 + 6 * x ^ 3 + 2 * x ^ 2 + 7 * x is monotonic on the set D = [0, 5]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D.  We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we proceed in the following manner: First, assume that x is in the interior of D, which means 0 < x < 5. Next, differentiate f by repeatedly applying differentiation rules to each term until you obtain an explicit formula for the derivative. Group like terms and simplify if necessary. Show that each term in the derivative is positive for x in the interior of D, i.e., x > 0. This typically involves showing that the expressions like x ^ k are positive for x > 0 and k \u2265 1, hence all terms in the sum are positive. At each rule application, check and demonstrate that the constituent functions used are differentiable where needed. Argue that f is continuous on D by noting that each term is continuous and thus their sum is continuous. Having established convexity, strict positivity of the derivative on the interior, and continuity on D, you can then conclude monotonicity on [0,5].  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 18 * x ^ 7 + 10 * x ^ 5 + 13 * x ^ 4 + 3 * x) (Icc (0: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 18 * x ^ 7 + 10 * x ^ 5 + 13 * x ^ 4 + 3 * x\n  let D := Icc (0: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 3 := by linarith [hx.1]\n\n    have h1: 0 < 52 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 50 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 126 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to show that the function f(x) = 18 * x ^ 7 + 10 * x ^ 5 + 13 * x ^ 4 + 3 * x is monotonic on the interval D = [0, 9]. The proof strategy is as follows:  First, show that D is convex. We can use the fact that any closed interval on \u211d is convex for this step. Next, show that the derivative of f is positive on the interior of D: Assume x is in the interior of D, so 0 < x < 9. Compute the derivative of f, splitting by sum and applying rules for differentiation of products, powers, and constants. The calculations will reduce the derivative to a sum involving positive multiples of powers of x. Show that each term in the sum is strictly positive for x in the interior (i.e., for x > 0). You can break this into individual cases for each term, by showing each one is positive separately. Note that each application of a differentiation rule depends on differentiability of the constituent functions, which needs to be shown here as well. Show that f is continuous on D. This follows directly, since sums and products of continuous functions (such as powers of x and constants) are continuous, and the entire expression is thus continuous on any interval. Having established convexity, strict positivity of the derivative on the interior, and continuity, apply the result that a function is monotonic on D under these conditions.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 7 + 12 * x ^ 5 + 14 * x ^ 4 + 12 * x ^ 2 + 7 * x) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 7 + 12 * x ^ 5 + 14 * x ^ 4 + 12 * x ^ 2 + 7 * x\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 7 := by linarith [hx.1]\n\n    have h1: 0 < 24 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 56 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 60 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 49 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial \\( f(x) = 7x^7 + 12x^5 + 14x^4 + 12x^2 + 7x \\) is monotonic on the set \\( D = [0, 6] \\). We will do so by first proving that \\( D \\) is convex. Then we will prove that the derivative of \\( f \\) is positive on the interior of \\( D \\). Then we will show that \\( f \\) is continuous on \\( D \\). Finally, we can conclude that it is monotonic on \\( D \\).  We can prove \\( D \\) is convex by using the property that any closed interval is convex.  To prove the derivative of \\( f \\) is positive on the interior of \\( D \\), do the following: Assume \\( x \\) is in the interior of \\( D \\), i.e., \\( 0 < x < 6 \\). Compute the derivative of \\( f \\) by applying the sum rule and the product/power rules repeatedly. This will give several terms, each corresponding to the derivative of a monomial. After algebraic simplification, you need to show that the derivative, which is a sum of terms like \\( 49x^6, 60x^4, 56x^3, 24x, 7 \\), is strictly positive for all \\( x \\) in the interior. To show this, you can prove that each term is non-negative and at least one is strictly positive wherever \\( x > 0 \\). As part of the differentiation step, you need to confirm differentiability for each term, which typically follows from them being compositions of polynomials and standard functions. Now you have proven that \\( f' \\) is positive on the interior of \\( D \\).  We can prove continuity by showing that each term in the polynomial is continuous and thus their sum is continuous, which holds for polynomials.  Using the above, conclude that \\( f \\) is monotonic on \\( D \\).  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 7 + 12 * x ^ 4 + 18 * x ^ 3 + 8) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 7 + 12 * x ^ 4 + 18 * x ^ 3 + 8\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 54 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 48 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 42 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 6 * x ^ 7 + 12 * x ^ 4 + 18 * x ^ 3 + 8 is monotonic on the set D = [0, 6]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: Assume that x is in the interior of D, that is, 0 < x < 6. Differentiate the function, which involves repeatedly applying the various differentiation rules. This yields that we must show 42 * x ^ 6 + 48 * x ^ 3 + 54 * x ^ 2 > 0. Some algebraic simplification may be helpful here. Show the resulting sum is positive. One way to do this is by demonstrating that each term is positive (which follows from x > 0), and thus their sum is positive. In each differentiation step, confirm that the corresponding function is differentiable, for each term. Now we have shown the derivative is positive on the interior of D. Show f is continuous on D by noting that each polynomial term is continuous, and thus their sum is continuous. Using convexity, continuity, and positivity of the derivative, we can then conclude that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 7 + 9 * x ^ 5 + 5 * x ^ 3) (Icc (0: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 7 + 9 * x ^ 5 + 5 * x ^ 3\n  let D := Icc (0: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 15 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 45 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 35 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 5 * x ^ 7 + 9 * x ^ 5 + 5 * x ^ 3 is monotonic on the set D = [0, 3]. We will do so by first proving that D is convex. Then we will show that the derivative of f is positive on the interior of D. After that, we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can show D is convex by noting that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we proceed as follows: First, fix any x in the interior of D, so 0 < x < 3. Then, differentiate f(x). This involves repeated use of differentiation rules for sums, products, and powers. After simplification, you will see that the derivative takes the form 35 * x^6 + 45 * x^4 + 15 * x^2, so you need to show this is positive. To prove this, note that all terms are positive when x > 0, and thus their sum is positive. The differentiation steps require that you show each component is differentiable, which you can do using the properties of polynomials. After this step, we have shown that the derivative of f is positive on the interior of D. The function f is a sum of polynomial terms, so you can show it is continuous by showing each term is continuous and then their sum is continuous. With D convex, f continuous on D, and its derivative positive on the interior, you can conclude that f is monotonic (in fact, strictly increasing) on [0, 3]. Now you are finished."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 19 * x ^ 7 + 15 * x ^ 5 + 15 * x ^ 3 + 15 * x ^ 2 + 7 * x + 3) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 19 * x ^ 7 + 15 * x ^ 5 + 15 * x ^ 3 + 15 * x ^ 2 + 7 * x + 3\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 7 := by linarith [hx.1]\n\n    have h2: 0 < 30 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 45 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 75 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 133 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial \\( f(x) = 19 x^7 + 15 x^5 + 15 x^3 + 15 x^2 + 7x + 3 \\) is monotonic on the set \\( D = [0, 10] \\). We will do this by first proving D is convex, then showing that the derivative of f is positive on the interior of D, then proving f is continuous on D, and finally concluding monotonicity. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we proceed as follows: First, we assume x is in the interior of D, namely \\( 0 < x < 10 \\). Next, we differentiate the function, applying differentiation rules multiple times to each term. After simplification, you should see that it suffices to prove that the sum \\( 133 x^6 + 75 x^4 + 45 x^2 + 30 x + 7 \\) is positive for \\( x > 0 \\). Each term in this sum is positive for \\( x > 0 \\), so the sum is positive. You should justify this step-by-step, possibly by demonstrating that powers of x are positive for \\( x > 0 \\) and multiplying by positive coefficients. At each differentiation step, you used the rules that require differentiability of the constituent functions such as \\( x^k \\), so ensure you justify this. Next, show continuity of f on D. Since f is a polynomial, you can prove this by verifying that sums and products of continuous functions are continuous. Finally, use the facts above to conclude that f is monotonic on D. Now you are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 12 * x ^ 7 + 11 * x ^ 6 + 13 * x ^ 5 + 8 * x ^ 4 + 5 * x ^ 3 + 8 * x ^ 2 + 7 * x) (Icc (0: \u211d) (2: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 12 * x ^ 7 + 11 * x ^ 6 + 13 * x ^ 5 + 8 * x ^ 4 + 5 * x ^ 3 + 8 * x ^ 2 + 7 * x\n  let D := Icc (0: \u211d) (2: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (2: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 7 := by linarith [hx.1]\n\n    have h1: 0 < 16 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 15 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 32 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 65 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 66 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 84 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 12 * x^7 + 11 * x^6 + 13 * x^5 + 8 * x^4 + 5 * x^3 + 8 * x^2 + 7 * x is monotonic on the set D = [0, 2]. To do this, we first prove that D is convex. Then we show that the derivative of f is positive on the interior of D. Next, we show that f is continuous on D. Finally, we use these facts to conclude monotonicity. The high-level structure is:  Prove D is convex. This can be done by appealing to the fact that a closed interval is convex.  To show that the derivative of f is positive on the interior of D: Start by assuming x is in the interior of D, i.e., 0 < x < 2. Compute the derivative of f(x), which combines several differentiation rules for polynomials. After simplifying, you get a sum of positive terms for x > 0. To show that the sum is positive, demonstrate that each term in the derivative is positive for x in (0,2). For powers of x with positive coefficients, showing x > 0 suffices. The linear term is trivially positive. You may wish to prove each term is positive as an intermediate step. Also, the differentiation rules require you to show that each basic function being used is differentiable at x\u2014which is direct for polynomials.  Show continuity of f on D by noting that the sum and product of continuous functions (here, polynomials) is continuous, so f is continuous on all of D.  Finally, deduce monotonicity of f on D using the results above.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 6 + 7 * x ^ 5 + 12 * x ^ 4 + 9 * x ^ 3 + 18 * x ^ 2 + 12 * x + 16) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 6 + 7 * x ^ 5 + 12 * x ^ 4 + 9 * x ^ 3 + 18 * x ^ 2 + 12 * x + 16\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 12 := by linarith [hx.1]\n\n    have h2: 0 < 36 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 27 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 48 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 35 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 48 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial \\( f(x) = 8x^6 + 7x^5 + 12x^4 + 9x^3 + 18x^2 + 12x + 16 \\) is monotonic on the set \\( D = [0, 1] \\). We will do so by first proving that \\( D \\) is convex. Then we will prove that the derivative of \\( f \\) is positive on the interior of \\( D \\). Then we will show that \\( f \\) is continuous on \\( D \\). Finally, we can conclude it is monotonic on \\( D \\). We show \\( D \\) is convex by noting that any closed interval in \\( \\mathbb{R} \\) is convex. To prove the derivative of \\( f \\) is positive on the interior of \\( D \\), we proceed as follows: First, assume \\( x \\) is in the interior of \\( D \\), that is, \\( 0 < x < 1 \\). Next, differentiate \\( f \\). You will need to apply the sum, constant multiplication, and power rules multiple times. This reduces the goal to demonstrating that \\( 48x^5 + 35x^4 + 48x^3 + 27x^2 + 36x + 12 > 0 \\) for all \\( 0 < x < 1 \\). Some algebraic simplification happens here. To prove the resultant inequality, note that each term in the sum is positive on \\( (0, 1) \\), because all coefficients are positive and positive powers of \\( x \\) for \\( x > 0 \\) are also positive. Thus, the whole sum is positive. Each differentiation rule you used above assumes differentiability of the constituent functions in the sum. You check this for each term. We next show that \\( f \\) is continuous on \\( D \\). Since each term in the polynomial is a product of continuous functions (constants, powers, and the identity), and the sum of continuous functions is continuous, this part is straightforward. Having established strict positivity of the derivative on the interior and continuity on \\( D \\), we can invoke the appropriate result to conclude that \\( f \\) is monotonic on \\( D \\). Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 15 * x ^ 7 + 6 * x ^ 6 + 17 * x ^ 3 + 12 * x ^ 2 + 9 * x) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 15 * x ^ 7 + 6 * x ^ 6 + 17 * x ^ 3 + 12 * x ^ 2 + 9 * x\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 9 := by linarith [hx.1]\n\n    have h1: 0 < 24 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 51 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 36 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 105 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 15 * x ^ 7 + 6 * x ^ 6 + 17 * x ^ 3 + 12 * x ^ 2 + 9 * x is monotonic on the set D = [0, 6]. To do so, we follow these steps:  First, we show that D is convex. This can be done by noting that any closed interval is convex. Next, we prove that the derivative of f is positive on the interior of D: We assume x is in the interior of D, i.e., 0 < x < 6. We compute the derivative of f, which will involve repeated differentiation rules. After simplification, we find that the derivative is a sum of terms of the form c * x^k for various coefficients c and exponents k, plus a constant. We prove that this sum is positive on (0, 6) by verifying that each term is positive (for x > 0) and that the sum, therefore, is positive. As each differentiation rule is used, we justify that each constituent function is differentiable at x. We check that f is continuous on D by showing that each term in f is continuous (being polynomials) and that sums and products of continuous functions are continuous. Having established convexity of D, positivity of the derivative on the interior, and continuity, we then conclude monotonicity of f on D.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 20 * x ^ 7 + 12 * x ^ 6 + 12 * x ^ 5 + 3 * x ^ 4 + 7 * x) (Icc (0: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 20 * x ^ 7 + 12 * x ^ 6 + 12 * x ^ 5 + 3 * x ^ 4 + 7 * x\n  let D := Icc (0: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 7 := by linarith [hx.1]\n\n    have h1: 0 < 12 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 60 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 72 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 140 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 20 * x ^ 7 + 12 * x ^ 6 + 12 * x ^ 5 + 3 * x ^ 4 + 7 * x is monotonic on the set D = [0, 8]. We will do so by first proving that D is convex, then showing that the derivative of f is positive on the interior of D, then proving f is continuous on D, and finally concluding it is monotonic. We can prove D is convex by using the fact that closed intervals are convex sets. To show the derivative of f is positive on the interior of D, we tackle several substeps: Assume x is in the interior of D, i.e., 0 < x < 8. Differentiate the sum term by term, expanding out each part using differentiation rules for sums, constants, powers, and multiplication, and be careful to expand all the way. After simplification, show that the expression for the derivative is a sum of positive terms for x > 0: namely, sums like 140 * x^6, 72 * x^5, 60 * x^4, 12 * x^3, and the positive constant 7. To prove that the full sum is positive, justify that each term is strictly positive whenever x > 0, by showing that all powers of x are positive for x > 0 and each coefficient is positive. 2.5. Recall that each differentiation step made above requires confirming differentiability of the constituent pieces, so prove that all polynomial terms are differentiable everywhere. Show that f is continuous on D by noting that all polynomials are continuous on \u211d, so their finite sum is continuous as well. Using convexity of D, positivity of f' on the interior, and continuity of f, conclude that f is monotone (specifically strictly monotone) on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 15 * x ^ 6 + 5 * x ^ 3 + 16 * x ^ 2 + 7) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 15 * x ^ 6 + 5 * x ^ 3 + 16 * x ^ 2 + 7\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 32 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 15 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 90 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 15 * x^6 + 5 * x^3 + 16 * x^2 + 7 is monotonic on the set D = [0, 10]. We will do this by showing that D is convex, that the derivative of f is positive on the interior of D, and that f is continuous on D. Then we can conclude monotonicity. First, we show that D is convex. This follows from the general property of closed intervals. Next, we show that the derivative of f is positive on the interior of D. We begin by considering an arbitrary x in the interior of D, so x \u2208 (0, 10). We differentiate f, expanding each term using appropriate differentiation rules to obtain the derivative. After simplification, we find that the derivative is 90 * x^5 + 15 * x^2 + 32 * x. We then show that this expression is strictly positive for x in (0, 10). This can be done by showing each of the terms in the sum is positive for x > 0, and since a sum of positive terms is positive, the whole expression is positive. We also check that all relevant functions are differentiable at points in the interior of D, as required after applying differentiation rules. Then, we check that f is continuous on D. This is straightforward since polynomials are continuous everywhere, and thus in particular on D. Given convexity, positivity of the derivative in the interior, and continuity, we can conclude the function is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 16 * x ^ 7 + 20 * x ^ 4 + 4 * x ^ 2 + 18 * x + 15) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 16 * x ^ 7 + 20 * x ^ 4 + 4 * x ^ 2 + 18 * x + 15\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 18 := by linarith [hx.1]\n\n    have h2: 0 < 8 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 80 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 112 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 16 * x^7 + 20 * x^4 + 4 * x^2 + 18 * x + 15 is monotonic on the set D = [0, 5]. We will do so by first showing that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Next we show that f is continuous on D. Finally, we conclude f is monotonic on D.  First, we prove D is convex by noting that any closed interval is convex. To show the derivative of f is positive on the interior of D: We assume x is in the interior of D, i.e., 0 < x < 5. We differentiate the function f(x). This requires repeated applications of sum, product, and power rules. The resulting expression is 112 * x^6 + 80 * x^3 + 8 * x + 18. We show this expression is positive for all x in the interior of D by showing that each term is positive, and thus their sum is positive (since x > 0). Each rule used in differentiation requires us to argue that the component functions involved are differentiable at the relevant points. We then show f is continuous on D, by verifying that each term in f is continuous and so their sum is continuous as well. Using the convexity of D, the continuity of f, and the positivity of the derivative of f in the interior, we conclude that f is monotonic on D.  Now we have completed the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 7 + 19 * x ^ 5 + 4 * x ^ 3 + 20 * x) (Icc (0: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 7 + 19 * x ^ 5 + 4 * x ^ 3 + 20 * x\n  let D := Icc (0: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 20 := by linarith [hx.1]\n\n    have h1: 0 < 12 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 95 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 14 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 2 * x ^ 7 + 19 * x ^ 5 + 4 * x ^ 3 + 20 * x is monotonic on the set D = [0, 7]. We will do this by first proving that D is convex. Then we will show that the derivative of f is positive on the interior of D. Next, we will show that f is continuous on D. We then conclude that f is monotonic on D.  We show that D is convex by appealing to a general result about closed intervals. To prove the derivative of f is positive on the interior of D, we proceed as follows: Assume x is in the interior of D, so 0 < x < 7. Differentiate the function f using the relevant rules repeatedly; this results in the expression 14 * x^6 + 95 * x^4 + 12 * x^2 + 20 for the derivative. Show that each term in this derivative is positive when 0 < x < 7. To do this, observe that expressions involving positive powers of x will be positive since x > 0. In particular, establish each of: 0 < 20 is immediate. 0 < 12 * x^2, 0 < 95 * x^4, and 0 < 14 * x^6 are shown by basic properties of positive powers. Argue that the sum of positive terms is positive, thus the derivative is positive for interior points of D. 2.5. Each application of a differentiation rule in step 2.2 requires checking differentiability of the functions, so verify that each component function is differentiable. The continuity of f on D is shown by noting each term in the polynomial is continuous and so sums and products of continuous functions are continuous as well. With convexity of D, positivity of the derivative in the interior, and continuity on D, deduce that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 17 * x ^ 7 + 5 * x ^ 6 + 12 * x ^ 5 + 17 * x ^ 4 + 8 * x ^ 3) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 17 * x ^ 7 + 5 * x ^ 6 + 12 * x ^ 5 + 17 * x ^ 4 + 8 * x ^ 3\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 24 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 68 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 60 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 30 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 119 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 17 * x ^ 7 + 5 * x ^ 6 + 12 * x ^ 5 + 17 * x ^ 4 + 8 * x ^ 3 is monotonic on the set D = [0, 6]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude f is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we proceed as follows: Assume that x is in the interior of D, so 0 < x < 6. Differentiate f(x). This will involve repeated use of differentiation rules for sums, products, and powers, and will leave us with a sum of terms involving powers of x with positive coefficients: 119 * x^6 + 30 * x^5 + 60 * x^4 + 68 * x^3 + 24 * x^2. We need to show this sum is positive when x > 0. We can do this by proving that each term is positive for x > 0 (i.e., each coefficient and each x^k is positive for x > 0), and then sum positivity follows. To justify using the differentiation rules, we also need to show that all terms involved are differentiable at the relevant x, which follows since all the functions involved are polynomials. Show that f is continuous on D by establishing continuity for each term (all polynomials), so the sum is continuous as well. Having shown that D is convex, f is continuous on D, and that the derivative is positive on the interior of D, we conclude that f is monotone on D (in fact, strictly monotone). Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 13 * x ^ 6 + 13 * x ^ 5 + 17 * x ^ 4 + 17 * x ^ 3 + 7 * x ^ 2 + 10 * x + 2) (Icc (0: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 13 * x ^ 6 + 13 * x ^ 5 + 17 * x ^ 4 + 17 * x ^ 3 + 7 * x ^ 2 + 10 * x + 2\n  let D := Icc (0: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 10 := by linarith [hx.1]\n\n    have h2: 0 < 14 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 51 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 68 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 65 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 78 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 13 * x ^ 6 + 13 * x ^ 5 + 17 * x ^ 4 + 17 * x ^ 3 + 7 * x ^ 2 + 10 * x + 2 is monotonic on the set D = [0, 7]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D.  We can prove D is convex by using the general theorem that closed intervals in \u211d are convex. To prove the derivative of f is positive on the interior of D, proceed as follows: First, assume x is in the interior of D; that is, 0 < x < 7. Differentiate the function f. This will involve applying differentiation rules repeatedly, one for each term of the polynomial. After doing so and simplifying, you should see that the derivative is a sum of terms, each positive for x > 0 except for the constant 10. To establish that the entire expression is positive on (0, 7), show that each term in the sum 78 * x ^ 5 + 65 * x ^ 4 + 68 * x ^ 3 + 51 * x ^ 2 + 14 * x + 10 is positive when x > 0, and thus the sum is positive. You may do this by observing powers of x are positive for x > 0 and multiplying by positive constants, and noting the constant term itself is also positive. The application of each differentiation rule, such as power rule and constant multiples, requires justifying that each relevant function is differentiable at x, so check this for each term. Now we have proven that f' is positive on the interior of D.  We can establish continuity of f on D by noting that each individual term is a continuous function (as they are all polynomials or products/sums of polynomials), and the sum of continuous functions is continuous.  Using the facts that D is convex, f is continuous on D, and f' is positive on the interior of D, we conclude that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 5 + 11 * x ^ 4 + 8 * x ^ 2 + 20 * x) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 5 + 11 * x ^ 4 + 8 * x ^ 2 + 20 * x\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 20 := by linarith [hx.1]\n\n    have h1: 0 < 16 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 44 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 45 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 9 * x^5 + 11 * x^4 + 8 * x^2 + 20 * x is monotonic on the set D = [0, 5]. We'll do this by first proving that D is convex, then that the derivative of f is positive on the interior of D, then that f is continuous on D, and finally conclude monotonicity. We can prove D is convex by using that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: Assume x is in the interior of D, that is, 0 < x < 5. Differentiate the function, breaking it down termwise using sum, product, power, and constant differentiation rules as needed. The derivative simplifies to a sum where each part is of the form constant * x to a positive power or a positive constant. To show the full derivative is positive, show each term in the sum is positive when x > 0. In particular, each term containing positive powers of x is positive because x > 0, and positive constants are trivially positive. The sum of positive terms is positive. For each differentiation step, confirm that the needed functions (e.g., identity, powers, constants, products, sums) are differentiable at x. Do this step-by-step for clarity. Thus, f' is positive on the interior of D. The function f is a sum of terms, each term being a product of a constant and a power of x or x itself. Each of these constituent functions is continuous, so f is continuous on D. With D convex, f continuous on D, and f' positive on the interior of D, conclude that f is monotonic (specifically, strictly increasing) on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 6 + 4 * x ^ 4 + 11 * x ^ 2 + 19 * x + 3) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 6 + 4 * x ^ 4 + 11 * x ^ 2 + 19 * x + 3\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 19 := by linarith [hx.1]\n\n    have h2: 0 < 22 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 16 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 12 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 2 * x ^ 6 + 4 * x ^ 4 + 11 * x ^ 2 + 19 * x + 3 is monotonic on the set D = [0, 1]. We will accomplish this by showing D is convex, that the derivative of f is strictly positive in the interior of D, that f is continuous on D, and then using the strict positivity to obtain monotonicity.  We prove D is convex by noting that any closed interval is convex. To prove the derivative of f is positive on the interior of D: Start by assuming x is in the interior of D, so 0 < x < 1. Differentiate the function f. This involves using the sum, product, and power differentiation rules several times, and after simplifying the resulting expression, we find that the derivative is a sum of positive terms for x > 0: specifically, 12 * x ^ 5 + 16 * x ^ 3 + 22 * x + 19. Argue that each of these terms is positive for 0 < x < 1 (since each power of x is positive and positive multiples), so their sum is positive. At each step of differentiation, justify differentiability of the individual terms to substantiate the calculation. At this point, we have shown that f'(x) > 0 for x in the interior of D. Establish continuity of f on D, which can be done by noting each term in the sum is continuous, so the sum is continuous. Use the above results to conclude that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 5 + 14 * x ^ 4 + 12 * x + 10) (Icc (0: \u211d) (2: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 5 + 14 * x ^ 4 + 12 * x + 10\n  let D := Icc (0: \u211d) (2: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (2: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 12 := by linarith [hx.1]\n\n    have h2: 0 < 56 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 45 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 9 * x^5 + 14 * x^4 + 12 * x + 10 is monotonic on the set D = [0, 2]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can show that D is convex by invoking the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can proceed as follows: First, assume x is in the interior of D, meaning 0 < x < 2. Compute the derivative of f, breaking down the sum using derivative rules. This will involve repeated applications of rules for powers and constants, ultimately leading to an expression that is the sum of positive terms for x in this range. Justify that each individual term in the sum (for example, the coefficients multiplied by powers of x, and the constant term) is positive when x > 0. Show explicitly why each is positive. Since each term in the derivative is positive on the interior of D, conclude the sum is positive. 2.5. As part of the differentiation steps, recall that differentiability at each stage must be shown for the pieces involved. Show that f is continuous on D by noting that each monomial and constant function is continuous, and so their sum is continuous. Using these results, conclude that f is monotonic on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 20 * x ^ 6 + 4 * x ^ 5 + 8 * x ^ 4 + 3 * x ^ 3 + 20 * x ^ 2 + 8 * x) (Icc (0: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 20 * x ^ 6 + 4 * x ^ 5 + 8 * x ^ 4 + 3 * x ^ 3 + 20 * x ^ 2 + 8 * x\n  let D := Icc (0: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 8 := by linarith [hx.1]\n\n    have h1: 0 < 40 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 9 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 32 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 20 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 120 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial \\( f(x) = 20x^6 + 4x^5 + 8x^4 + 3x^3 + 20x^2 + 8x \\) is monotonic on the set \\( D = [0, 9] \\). We do so by first proving \\( D \\) is convex, then showing the derivative of \\( f \\) is positive on the interior of \\( D \\), then establishing continuity of \\( f \\) on \\( D \\), and finally concluding that \\( f \\) is monotonic on \\( D \\).  Prove that \\( D \\) is convex by using the fact that every closed interval is convex. Prove that the derivative \\( f' \\) is positive for all points in the interior of \\( D \\): Assume \\( x \\) is in the interior of \\( D \\), so \\( 0 < x < 9 \\). Differentiate \\( f \\) using rules for sums, products, and powers. This leads to a sum of positive terms involving powers of \\( x \\) and constant multiples. After algebraic simplification, show that every term in the resulting expression for the derivative is nonnegative and at least one (the constant term) is strictly positive on \\( 0 < x < 9 \\). Explicitly, show that each term (e.g., \\( 120x^5 \\), \\( 20x^4 \\), ..., \\( 8 \\)) is positive when \\( x > 0 \\). Recall that applying the differentiation rules above requires showing that each summand is differentiable at the interior points, which can be handled by checking each piece is differentiable. Prove \\( f \\) is continuous on \\( D \\), using the fact that all the summands (powers, linear and constant terms) are continuous; thus their finite sum is continuous. Conclude by using the previous facts to show that \\( f \\) is monotonic on \\( D \\).  Now the proof is finished."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 20 * x ^ 5 + 16 * x ^ 4) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 20 * x ^ 5 + 16 * x ^ 4\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 64 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 100 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 20 * x ^ 5 + 16 * x ^ 4 is monotonic on the set D = [0, 10]. We will do so by first proving that D is convex. Then we will show that the derivative of f is positive on the interior of D. Next, we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove that the derivative of f is positive on the interior of D, break it up as follows: Assume x is in the interior of D, which means 0 < x < 10. Differentiate the function; use standard differentiation rules for sums, powers, and products. This gives a result involving powers of x. Simplify the resulting expression, and observe it takes the form 100 * x ^ 4 + 64 * x ^ 3, so it is sufficient to show this is positive. Argue each term is positive for x > 0, so their sum is positive. 2.5. Recall that the rules you used for differentiating require that you check differentiability of the constituent functions, so establish these as well. Next, to show continuity, show each term in f is continuous (which is straightforward for polynomials), and thus the whole function is continuous on D. Use the previous results to conclude that f is monotonic (specifically, monotone increasing) on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 7 + 4 * x ^ 5 + 9 * x ^ 3 + 20 * x ^ 2 + 17 * x + 8) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 7 + 4 * x ^ 5 + 9 * x ^ 3 + 20 * x ^ 2 + 17 * x + 8\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 17 := by linarith [hx.1]\n\n    have h2: 0 < 40 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 27 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 20 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 28 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 4 * x^7 + 4 * x^5 + 9 * x^3 + 20 * x^2 + 17 * x + 8 is monotonic on the set D = [0, 1]. We will do so by first showing that D is convex. Then, we will prove that the derivative of f is strictly positive on the interior of D. Next, we establish that f is continuous on D. Finally, we can conclude f is monotonic on D from these facts.  We show that D = [0, 1] is convex. Any closed interval in \u211d is convex, so this follows immediately.  To prove the derivative of f is positive on the interior of D, we take these steps: First, assume x \u2208 interior(D), which means 0 < x < 1. Next, compute the derivative of f. This involves repeated application of rules for sums, powers, and constants. The derivative will be a new polynomial: the result is 28 * x^6 + 20 * x^4 + 27 * x^2 + 40 * x + 17. Show this polynomial is positive for all x in (0, 1). You can do this by decomposing the expression into its positive terms (since all coefficients are positive and x > 0). 2.4.1. Prove that each of the terms 28 * x^6, 20 * x^4, 27 * x^2, 40 * x, and 17 are strictly positive on (0, 1) and that their sum is strictly positive. 2.5. When computing the derivative, you'll need to justify differentiability of each term as you go (namely, powers and constants are differentiable everywhere).  Show that f is continuous on D = [0, 1]. Each term in f (powers, constants, and their products) is continuous on \u211d, so the whole polynomial is continuous by closure of continuous functions under addition and multiplication.  With these ingredients (convexity of D, strict positivity of the derivative in the interior, and continuity), you can conclude the monotonicity of f on D.  Now the proof is done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 16 * x ^ 4 + 10 * x ^ 3 + 13 * x ^ 2) (Icc (0: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 16 * x ^ 4 + 10 * x ^ 3 + 13 * x ^ 2\n  let D := Icc (0: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 26 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 30 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 64 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 16 * x ^ 4 + 10 * x ^ 3 + 13 * x ^ 2 is monotonic on the set D = [0, 9]. The proof proceeds as follows:  First, show that D is convex. This can be done by noting that every closed interval in \u211d is convex. Next, we show that the derivative of f is positive on the interior of D: Assume x is in the interior of D, i.e., 0 < x < 9. Compute the derivative of f. This involves applying several basic differentiation rules repeatedly. After simplifying, you will obtain a sum of terms involving powers of x. Observe that the resulting expression for the derivative is a sum of positive multiples of positive powers of x when x > 0. To show it is positive, verify that each term is positive and so their sum is positive as well. At each step where a differentiation rule is applied, you must verify that the relevant functions are differentiable at the point x. Verify this for all components. Show that f is continuous on D. This is straightforward since f is a polynomial, so each term is continuous, and sums/products of continuous functions are continuous. Using the facts that D is convex, f is continuous on D, and the derivative is positive on the interior of D, conclude that f is monotonic on D.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 7 + 6 * x ^ 4 + 7 * x ^ 3 + 12 * x ^ 2 + 6 * x) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 7 + 6 * x ^ 4 + 7 * x ^ 3 + 12 * x ^ 2 + 6 * x\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 6 := by linarith [hx.1]\n\n    have h1: 0 < 24 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 21 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 24 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 28 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We want to prove that the polynomial f(x) = 4 * x^7 + 6 * x^4 + 7 * x^3 + 12 * x^2 + 6 * x is monotonic on the interval D = [0, 1]. Here is the structure of the proof: First, we note that D is convex. This follows because any closed interval in \u211d is convex. Next, to show f is monotonic, we show that its derivative is positive on the interior of D. We do this as follows: Assume x is in the interior of D (0 < x < 1). Compute the derivative term by term, applying differentiation rules (sum, constant multiple, power rule, etc.) repeatedly. After differentiating and simplifying, it will suffice to prove that 28 * x^6 + 24 * x^3 + 21 * x^2 + 24 * x + 6 > 0. To prove this, observe each term is positive for x in the open interval (0, 1): positive powers of x times positive coefficients are positive, and 6 is positive. Thus, the whole sum is positive. 2.5. Take care to justify each step with the relevant positivity, and note which parts you might need to prove explicitly if Lean asks. 2.6. There may be subgoals to justify the differentiability of each term after applying differentiation rules; address this as needed. Show that f is continuous on D, which follows since each monomial term of f is continuous, and sums of continuous functions are continuous. With these facts, we can invoke a result that says a function with positive derivative on the interior of a convex domain and continuous on the closed domain is monotonic there. So, the entire argument combines convexity, positivity of the derivative in the interior, and continuity to conclude monotonicity of f on D."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 18 * x ^ 7 + 5 * x ^ 6 + 15 * x ^ 4 + 3 * x ^ 2 + 7 * x) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 18 * x ^ 7 + 5 * x ^ 6 + 15 * x ^ 4 + 3 * x ^ 2 + 7 * x\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 7 := by linarith [hx.1]\n\n    have h1: 0 < 6 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 60 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 30 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 126 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 18 * x^7 + 5 * x^6 + 15 * x^4 + 3 * x^2 + 7 * x is monotonic on the set D = [0, 5]. We will do this by establishing convexity of D, showing positivity of the derivative on the interior, proving continuity, and then concluding monotonicity. We first prove that D is convex. This follows because any closed interval is convex. Next, to show that the derivative of f is positive on the interior of D: We assume that x is in the interior of D, so 0 < x < 5. We differentiate f term by term using the appropriate differentiation rules for polynomials and sums. This yields a sum of nonnegative terms (after simplification), namely: 126 * x^6 + 30 * x^5 + 60 * x^3 + 6 * x + 7. We check that each term in the sum is strictly positive for any x > 0, and hence the entire sum is positive on the interior. We must also account for each differentiation step by showing that every function involved is differentiable at points of interest, which is immediate for polynomials. We then show that f is continuous on D. Every term in f is continuous as a polynomial, so the continuity of their sum is immediate. With convexity of D, continuity of f, and strict positivity of the derivative on the interior, we conclude that f is monotonic on D. The proof is finished."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 6 + 7 * x ^ 4 + 5 * x ^ 2 + 14) (Icc (0: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 6 + 7 * x ^ 4 + 5 * x ^ 2 + 14\n  let D := Icc (0: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 10 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 28 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 42 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 7 * x ^ 6 + 7 * x ^ 4 + 5 * x ^ 2 + 14 is monotonic on the set D = [0, 7]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we proceed as follows: First assume that x is in the interior of D, so that 0 < x < 7. Next, differentiate f(x). This involves using differentiation rules repeatedly, since f is a sum of monomials. After carrying this out, you will see that the derivative is 42 * x^5 + 28 * x^3 + 10 * x. Next, we must show that this sum is positive for all x in the interior of D. We do this by observing that since 0 < x < 7, each term in the sum is positive, so their sum is positive as well. For each differentiation step above, we should confirm that all the necessary differentiability conditions hold for each relevant term. We then show that f is continuous on D by showing the continuity of each term in the polynomial and recalling that sums of continuous functions are continuous. Having established all the above, we conclude f is monotonic on D.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 7 + 3 * x ^ 5 + 6 * x ^ 4 + 20 * x ^ 2 + 14 * x + 20) (Icc (0: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 7 + 3 * x ^ 5 + 6 * x ^ 4 + 20 * x ^ 2 + 14 * x + 20\n  let D := Icc (0: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 14 := by linarith [hx.1]\n\n    have h2: 0 < 40 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 24 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 15 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 35 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 5 * x ^ 7 + 3 * x ^ 5 + 6 * x ^ 4 + 20 * x ^ 2 + 14 * x + 20 is monotonic on the set D = [0, 3]. We will do so by first verifying that D is convex, next proving that the derivative of f is positive on the interior of D, then showing f is continuous on D, and finally concluding monotonicity.  We prove that D is convex by observing that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we proceed as follows: First, assume that x is in the interior of D, i.e., 0 < x < 3. Next, compute the derivative of f using the sum, product, and power rules\u2014differentiate term by term until you get an explicit expression in terms of x. Then, combine the resulting derivative into a sum of positive terms: 35 * x^6 + 15 * x^4 + 24 * x^3 + 40 * x + 14. Show that each individual term is strictly positive on the interval (0, 3), and thus their sum is positive. 2.5. Finally, note that each application of a differentiation rule above requires you to justify differentiability of the constituent parts; do this as needed. This typically amounts to showing polynomials are differentiable everywhere. Show that f is continuous on D by noting each term is continuous as a polynomial, and finite sums and products of continuous functions remain continuous. Having established convexity of D, positivity of the derivative on the interior, and continuity, conclude that f is monotonic on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 6 + 16 * x ^ 4 + 5 * x ^ 3 + 19 * x ^ 2) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 6 + 16 * x ^ 4 + 5 * x ^ 3 + 19 * x ^ 2\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 38 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 15 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 64 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 42 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We want to prove that the function f(x) = 7 * x^6 + 16 * x^4 + 5 * x^3 + 19 * x^2 is monotonic on the interval D = [0, 6]. We do this by showing that the domain is convex, the derivative is positive on the interior of the domain, and that the function is continuous on the interval. Show that D is convex. This can be shown directly since D is a closed interval. Show that the derivative of f is positive on the interior of D. To do this: Assume x is in the interior of D, i.e., 0 < x < 6. Find the derivative of f with respect to x. This requires applying differentiation rules for sums, products, and powers. After expanding and simplifying, see that the derivative is a sum of terms, each positive for x > 0. You can show this by splitting the sum into individual terms and checking each one\u2019s positivity. Each step in the differentiation requires justification of differentiability at each stage, which you provide by considering the differentiability of the polynomial building blocks. Show that f is continuous on D by using the fact that each term in the polynomial is continuous, hence the sum is continuous on D. Conclude that f is monotonic by combining the previous facts: D is convex, f is continuous on D, and the derivative is positive in the interior. This is enough to finish the proof. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 7 + 7 * x ^ 6 + 3 * x ^ 5 + 19 * x ^ 4 + 6 * x ^ 3 + 12 * x + 14) (Icc (0: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 7 + 7 * x ^ 6 + 3 * x ^ 5 + 19 * x ^ 4 + 6 * x ^ 3 + 12 * x + 14\n  let D := Icc (0: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 12 := by linarith [hx.1]\n\n    have h2: 0 < 18 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 76 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 15 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 42 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 70 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 10 * x ^ 7 + 7 * x ^ 6 + 3 * x ^ 5 + 19 * x ^ 4 + 6 * x ^ 3 + 12 * x + 14 is monotonic on the set D = [0, 9]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: First, assume that x is in the interior of D, that is, 0 < x < 9. Next, differentiate f with respect to x, using standard rules for the derivative of sums and powers. This produces a sum of terms, each positive for x > 0. After simplifying, note that every term in the resulting expression for f' is positive on (0,9), either because it's a positive constant or because it has a positive coefficient times a positive power of x. Justify that each differentiation step is valid by showing that the constituent functions (such as x \u21a6 x^k and x \u21a6 c*x) are differentiable at all points of interest. Now we have proven f' is positive on the interior of D. Show that f is continuous on D by establishing the continuity of each polynomial term and invoking the sum and product rules for continuity. Using these facts, infer that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 12 * x ^ 7 + 3 * x ^ 5 + 8 * x ^ 4 + 4 * x ^ 3 + 20 * x) (Icc (0: \u211d) (4: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 12 * x ^ 7 + 3 * x ^ 5 + 8 * x ^ 4 + 4 * x ^ 3 + 20 * x\n  let D := Icc (0: \u211d) (4: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (4: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 20 := by linarith [hx.1]\n\n    have h1: 0 < 12 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 32 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 15 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 84 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 12 * x^7 + 3 * x^5 + 8 * x^4 + 4 * x^3 + 20 * x is monotonic on the set D = [0, 4]. We will do so by showing D is convex, the derivative of f is positive on the interior of D, that f is continuous on D, and then invoke a general result for monotonicity. First, we observe that D is a closed interval, so we can show that D is convex using the required result for intervals. Next, we must show that the derivative of f is positive on the interior of D: We start by letting x be in the interior of D, i.e., 0 < x < 4. We expand the derivative of f(x) by repeatedly applying differentiation rules for sums, products, and powers (as needed for each term). This differentiation yields a sum of terms, each with a positive coefficient and a positive even or odd power of x (since x > 0 in the interior of D). After simplification, we obtain an expression that is a sum of several positive terms (one of them a constant), all positive in the given range. We justify the positivity of each term individually: For powers of x with positive coefficients, we use that x > 0 implies the power is positive. For the constant term, we note its positivity directly. The sum of positive terms is positive, hence the derivative is positive. Recall that each differentiation rule applied assumes differentiability of the basic functions involved. We can check and record these facts for the identity, constant and power functions on \u211d. Afterwards, we prove f is continuous on D by noting that each monomial term is a product of continuous functions, and thus the sum is continuous on D. Having shown D is convex, f is continuous on D, and the derivative is positive on the interior, we may conclude (by invoking the appropriate general result) that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 7 + 2 * x ^ 6 + 9 * x ^ 5 + 10 * x + 13) (Icc (0: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 7 + 2 * x ^ 6 + 9 * x ^ 5 + 10 * x + 13\n  let D := Icc (0: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 10 := by linarith [hx.1]\n\n    have h2: 0 < 45 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 12 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 35 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 5 * x^7 + 2 * x^6 + 9 * x^5 + 10 * x + 13 is monotonic on the set D = [0, 9]. We will do this by establishing several properties: First, we show that D is convex. This follows from the general property that closed intervals in \u211d are convex. Next, we prove that the derivative of f is positive throughout the interior of D: Assume x \u2208 interior D, i.e., 0 < x < 9. Compute the derivative using repeated application of differentiation rules for sums, products, and powers. This shows that it suffices to prove 35 * x^6 + 12 * x^5 + 45 * x^4 + 10 > 0 for x in the interior of D. To show this expression is always positive, notice that all powers of x are positive since x > 0, and each term is positive. Therefore, the sum is positive. For each differentiation step, justify differentiability of the constituent functions\u2014the individual monomials and constants. Then, we show that f is continuous on D by noting that polynomials are continuous, and so each summand is continuous and thus their sum is as well. With these properties established\u2014convexity, continuity, and strict positivity of the derivative\u2014we can then conclude that f is monotonic on D.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 17 * x ^ 7 + 11 * x ^ 5 + 20 * x ^ 4 + 7 * x ^ 3 + 6 * x ^ 2 + 12 * x + 3) (Icc (0: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 17 * x ^ 7 + 11 * x ^ 5 + 20 * x ^ 4 + 7 * x ^ 3 + 6 * x ^ 2 + 12 * x + 3\n  let D := Icc (0: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 12 := by linarith [hx.1]\n\n    have h2: 0 < 12 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 21 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 80 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 55 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 119 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 17 * x ^ 7 + 11 * x ^ 5 + 20 * x ^ 4 + 7 * x ^ 3 + 6 * x ^ 2 + 12 * x + 3 is monotonic on the set D = [0, 3]. We will do so by first establishing that D is convex. Next, we show that the derivative of f is positive on the interior of D. We then prove that f is continuous on D. As a result, we can conclude that f is monotonic on D.  We can prove D is convex by using the fact that any closed interval is convex. To prove that the derivative of f is positive on the interior of D, we proceed as follows: Assume x is in the interior of D, that is, 0 < x < 3. Differentiate the polynomial f(x) term by term, applying the sum, product, and power rules for derivatives as needed. The resulting expression will be: 119 * x ^ 6 + 55 * x ^ 4 + 80 * x ^ 3 + 21 * x ^ 2 + 12 * x + 12. To show this sum is positive, note that when 0 < x < 3, each term is positive (since all coefficients and all relevant powers of x are positive in this interval). If needed, justify positivity of each term separately by showing each coefficient is positive and each power of x is positive within the interval. 2.5. Recall that for each differentiation rule applied to f, we also need to demonstrate differentiability of the relevant basic functions (like powers and the identity function). This is usually immediate for polynomials. To prove f is continuous on D, observe that each monomial term is continuous, so the whole function is continuous as a sum of continuous functions. Now that we have shown D is convex, f is continuous on D, and the derivative is positive on the interior of D, we can conclude that f is monotonic on D.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 15 * x ^ 4 + 19 * x + 13) (Icc (0: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 15 * x ^ 4 + 19 * x + 13\n  let D := Icc (0: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 19 := by linarith [hx.1]\n\n    have h2: 0 < 60 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We are asked to prove that the function f(x) = 15 * x^4 + 19 * x + 13 is monotone on the interval D = [0, 7]. To do this, we follow a standard sequence of steps: show that D is convex, show that the derivative of f is positive inside D, prove f is continuous on D, and then finish the proof. The logical structure of the proof is as follows:  Prove that D is convex. Recall that any closed interval is convex, so we can use this general property for D = [0, 7].  Prove that the derivative of f is positive for all x in the interior of D. First, suppose x is in the interior of D, i.e., 0 < x < 7. Next, differentiate f. You will need to use rules for derivatives of sums, products, and powers. 2.2.1. This will yield that deriv f x = 60 * x^3 + 19. Argue that 60 * x^3 > 0 since x > 0 (since x is in the interior). Observe that 19 > 0, so their sum is also positive. 2.5. Argue that all the functions involved are differentiable at points in the interior. Now you have shown that the derivative is positive on the interior of D.  Prove that f is continuous on D. Note that each component of f (polynomial and constants) is continuous, so f is continuous as a sum of continuous functions.  Conclude that f is monotonic (in fact, strictly monotonic) on D, since it is continuous and has a positive derivative everywhere in the interior of D, and D is convex.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 4 + 6 * x ^ 3 + 14 * x ^ 2 + 6) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 4 + 6 * x ^ 3 + 14 * x ^ 2 + 6\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 28 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 18 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 28 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 7 * x^4 + 6 * x^3 + 14 * x^2 + 6 is monotonic on the interval D = [0, 5]. We will approach this by following these steps: First, show that D is convex. This can be done by appealing to the property that any closed interval is convex in \u211d. Next, prove that the derivative of f is positive within the interior of D. We can proceed as follows: Assume x is in the interior of D, i.e., 0 < x < 5. Differentiate the function f with respect to x. Since f is a sum of monomials, this will involve repeatedly applying rules for derivatives of sums, constant multiples, and powers of x. Simplify the expression for the derivative. You should find that 28 * x^3 + 18 * x^2 + 28 * x is the resulting expression. Show this expression is positive for all x in (0, 5). The usual approach is to argue that each term is positive since x > 0, so their sum is positive. 2.5. As part of differentiating, you must also confirm differentiability of each monomial term, justifying each step as needed. Then, show that f is continuous on D. Since each term in the sum is continuous on \u211d, and the sum of continuous functions is continuous, this is straightforward. With these results, deduce that f is monotone on D. Now you are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 6 + 9 * x ^ 5 + 14 * x ^ 4 + 3 * x ^ 2 + 17) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 6 + 9 * x ^ 5 + 14 * x ^ 4 + 3 * x ^ 2 + 17\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 6 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 56 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 45 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 60 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We are asked to prove that the polynomial f(x) = 10 * x ^ 6 + 9 * x ^ 5 + 14 * x ^ 4 + 3 * x ^ 2 + 17 is monotonic on D = [0, 10]. The proof proceeds by confirming geometric and analytic properties of f over D as follows: First, we show that D is convex. This is done using the fact that in the real numbers, any closed interval is convex. Next, we show that the derivative of f is positive on the interior of D. This involves several steps: Assume x is in the interior of D, so 0 < x < 10. Compute the derivative of f by repeated application of differentiation rules and expanding, which gives an explicit polynomial expression for f'. This may require repeatedly unpacking the sum and product differentiation rules for each term. Show that the expression for the derivative f'(x) can be written as a sum of terms of the form (constant) * x^(positive exponent), each of which is positive on the interior of D. Prove the strict positivity of each individual term using that x > 0. Finally, in this part we must also argue that differentiability holds for each elementary term and their sums/products used in the differentiation above. After establishing strict positivity of the derivative and differentiability, show that f is continuous on D. This is done by arguing continuity for each term (powers of x multiplied by constants, and constants themselves), and then that sums of continuous functions remain continuous. With D convex, f continuous on D, and f' strictly positive on the interior, conclude that f is monotonic (in fact, strictly monotone increasing) on D.  Thus, all criteria are satisfied and the monotonicity of f on [0, 10] is proven."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 11 * x ^ 7 + 14 * x ^ 4 + 18 * x ^ 3 + 3 * x ^ 2 + 8 * x) (Icc (0: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 11 * x ^ 7 + 14 * x ^ 4 + 18 * x ^ 3 + 3 * x ^ 2 + 8 * x\n  let D := Icc (0: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 8 := by linarith [hx.1]\n\n    have h1: 0 < 6 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 54 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 56 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 77 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 11 * x ^ 7 + 14 * x ^ 4 + 18 * x ^ 3 + 3 * x ^ 2 + 8 * x is monotonic on the set D = [0, 7]. We will proceed by first showing D is convex, then demonstrating that the derivative of f is positive on the interior of D, then showing f is continuous on D, and finally concluding monotonicity.  First, prove that D is convex. This follows from the fact that closed intervals in \u211d are convex. To prove that the derivative of f is positive on the interior of D, proceed as follows: Assume x is in the interior of D, i.e., 0 < x < 7. Compute the derivative of f, which requires repeated use of the sum, constant multiple, and power rules from calculus. After differentiating term by term and simplifying, you will obtain a sum of terms, all involving non-negative coefficients and powers of x. Show that the sum 77 * x^6 + 56 * x^3 + 54 * x^2 + 6 * x + 8 is positive for 0 < x < 7. To do this, demonstrate that each individual term is positive on this interval and thus their sum is positive. Each differentiation step above assumes the differentiability of the individual terms at x, so state that each monomial term is indeed differentiable for all x in \u211d. Prove that f is continuous on D. This can be shown by noting that each monomial term and constant is continuous everywhere, so their sum is continuous on D. Use the facts from steps 1-3 to conclude that f is monotonic on D.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 3 * x ^ 7 + 19 * x ^ 5 + 13 * x ^ 4 + 4 * x ^ 2 + 8 * x + 12) (Icc (0: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 3 * x ^ 7 + 19 * x ^ 5 + 13 * x ^ 4 + 4 * x ^ 2 + 8 * x + 12\n  let D := Icc (0: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 8 := by linarith [hx.1]\n\n    have h2: 0 < 8 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 52 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 95 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 21 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 3 * x ^ 7 + 19 * x ^ 5 + 13 * x ^ 4 + 4 * x ^ 2 + 8 * x + 12 is monotonic on the interval D = [0, 10]. We'll do this by first showing D is convex, then that the derivative of f is positive on the interior, then that f is continuous, and finally conclude monotonicity. We first show D is convex by using the property of closed intervals. To prove the derivative is positive on the interior of D: We assume that x is in the interior, i.e. 0 < x < 10. We differentiate term by term; this will reveal that f'(x) is a sum of terms, each of which is a positive multiple times a (positive) power of x, and an extra positive constant. We prove, using the fact that all powers and coefficients involved are positive (for x > 0), that all the individual terms are positive. We add these inequalities, showing the sum is positive, and thus f' > 0 for x in the interior. 2.5. For each application of differentiation, we verify the differentiability of each term as required. For continuity, we use the fact that each monomial as well as constants and their sums are continuous, so the whole polynomial is continuous on D. Putting all this together, we conclude that the polynomial is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 13 * x ^ 2 + 12 * x) (Icc (0: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 13 * x ^ 2 + 12 * x\n  let D := Icc (0: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 12 := by linarith [hx.1]\n\n    have h1: 0 < 26 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 13 * x ^ 2 + 12 * x is monotonic on the set D = [0, 8]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: Assume x is in the interior of D, that is, 0 < x < 8. Compute the derivative, using the rules for differentiation on each term. We will obtain that it suffices to prove 26 * x + 12 > 0. Show that this expression is positive for x in the interior of D. Here, both terms are positive for x > 0, so the sum is positive. Also, make sure to justify differentiability of the involved functions, as each differentiation step requires it. Now we have shown f' > 0 on the interior of D. Show continuity of f on D. This can be done by observing that each polynomial term is continuous and so is their sum. Conclude that f is monotone on D, using the fact that on convex domains, continuous functions with positive derivative on the interior are monotone.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 3 * x ^ 7 + 13 * x ^ 6 + 18 * x ^ 5 + 15 * x ^ 4 + 9 * x ^ 3 + 17 * x ^ 2 + 6 * x) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 3 * x ^ 7 + 13 * x ^ 6 + 18 * x ^ 5 + 15 * x ^ 4 + 9 * x ^ 3 + 17 * x ^ 2 + 6 * x\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 6 := by linarith [hx.1]\n\n    have h1: 0 < 34 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 27 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 60 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 90 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 78 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 21 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 3 * x^7 + 13 * x^6 + 18 * x^5 + 15 * x^4 + 9 * x^3 + 17 * x^2 + 6 * x is monotonic on the set D = [0, 1]. We proceed by several steps: we prove D is convex, we show f\u2032 > 0 on the interior of D, we verify continuity of f on D, and we conclude monotonicity. We first prove that D is convex. This can be done by recognizing that any closed interval in \u211d is convex. To show that the derivative of f is positive on the interior of D, we: Assume x is in the interior of D, that is, 0 < x < 1. Compute f\u2032(x) using differentiation rules; since f is a sum of monomials, each term\u2019s derivative should be computed and then summed. After expanding, the relevant expression will be a sum with positive coefficients and positive powers of x, plus a constant positive term. Show that this sum is strictly positive for 0 < x < 1. To do this, demonstrate that each individual term is positive (since each coefficient is positive and each x^n is positive for 0 < x < 1, and the constant term is also positive), and thus the total sum is positive. Remember that you need to justify the differentiability of each monomial at each step during your computation (e.g., polynomials and powers are differentiable everywhere). Prove that f is continuous on D by noting that sums and products of continuous functions are continuous, and all monomials and their sums are continuous. Once you have shown convexity of D, strict positivity of the derivative on the interior of D, and continuity of f on D, you can then deduce the monotonicity of f on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 20 * x ^ 6 + 14 * x ^ 5 + 3 * x ^ 4 + 13 * x ^ 2) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 20 * x ^ 6 + 14 * x ^ 5 + 3 * x ^ 4 + 13 * x ^ 2\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 26 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 12 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 70 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 120 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 20 * x^6 + 14 * x^5 + 3 * x^4 + 13 * x^2 is monotonic on the set D = [0, 6]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D.  We can prove D is convex by using the fact that any closed interval is convex.  To prove the derivative of f is positive on the interior of D, we can do the following: Assume x is in the interior of D, that is, 0 < x < 6. Differentiate the function, using (repeatedly) differentiation rules for sums, products, and powers. This will yield that the derivative is 120 * x^5 + 70 * x^4 + 12 * x^3 + 26 * x. Show that this expression is strictly positive for x in (0, 6). One way is to observe that each term is positive for x > 0, and therefore their sum is as well. For each application of a differentiation rule, verify that the component functions are differentiable at x. Now we have established that f' > 0 on the interior of D.  Show that f is continuous on D. This can be done by showing each term in the polynomial is continuous, and thus their sum is continuous. This step is straightforward.  Using the previous results, conclude that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 7 + 8 * x ^ 5 + 3 * x ^ 3 + 18 * x ^ 2 + 2 * x) (Icc (0: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 7 + 8 * x ^ 5 + 3 * x ^ 3 + 18 * x ^ 2 + 2 * x\n  let D := Icc (0: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 2 := by linarith [hx.1]\n\n    have h1: 0 < 36 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 9 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 40 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 49 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 7 * x^7 + 8 * x^5 + 3 * x^3 + 18 * x^2 + 2 * x is monotonic on the domain D = [0, 7]. We do this by establishing some intermediary results about the geometry of D and calculus properties of f. The general strategy is: Show that the set D is convex. Prove that the derivative of f is positive on the interior of D by: Considering an arbitrary x in the interior of D, i.e., 0 < x < 7. Differentiating the function term by term using differentiation rules, and simplify the result. Showing, with algebra, that each term in the resulting sum is positive under the assumption x \u2208 (0, 7), making their sum strictly positive. Making sure that all differentiation steps are valid by confirming that the constituent functions are differentiable at every step. Prove that the function f is continuous on D by showing that each polynomial term is continuous, and so their sum is continuous. Finally, conclude that f is monotonic on D using the results above.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 7 + 7 * x ^ 6 + 3 * x ^ 2 + 8 * x + 7) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 7 + 7 * x ^ 6 + 3 * x ^ 2 + 8 * x + 7\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 8 := by linarith [hx.1]\n\n    have h2: 0 < 6 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 42 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 28 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 4 * x ^ 7 + 7 * x ^ 6 + 3 * x ^ 2 + 8 * x + 7 is monotonic on the domain D = [0, 1]. Our strategy will be to first show that D is convex, then prove that the derivative of f is positive on the interior of D, then establish continuity of f on D, and finally deduce monotonicity. We show that D is convex by appealing to the fact that any closed interval is convex. Next, to show that the derivative of f is positive on the interior of D, we proceed as follows: Assume x is in the interior of D, i.e., 0 < x < 1. Compute the derivative of f by repeatedly applying the sum, product, and power rules; this will demonstrate that f'(x) simplifies to a sum of positive terms: 28 * x ^ 6 + 42 * x ^ 5 + 6 * x + 8. To show this sum is positive, notice that each term is positive for 0 < x < 1. The arguments involve showing that powers of x are positive and that positive constants multiplied by positive numbers stay positive. Recall that at each differentiation step, we must show the differentiability of the component functions, which is straightforward for polynomials. Next, we observe that f is continuous on D, as it is a sum of continuous functions (powers and constant multiples). Combining convexity, positivity of the derivative in the interior, and continuity, we conclude that f is monotonic on D. The proof is now complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 13 * x ^ 7 + 4 * x ^ 6 + 16 * x ^ 5 + 11 * x ^ 4 + 5 * x ^ 3 + 15 * x ^ 2 + 20) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 13 * x ^ 7 + 4 * x ^ 6 + 16 * x ^ 5 + 11 * x ^ 4 + 5 * x ^ 3 + 15 * x ^ 2 + 20\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 30 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 15 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 44 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 80 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 24 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 91 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We are asked to prove that the polynomial \\( f(x) = 13x^7 + 4x^6 + 16x^5 + 11x^4 + 5x^3 + 15x^2 + 20 \\) is monotonic on the interval \\( D = [0, 1] \\). The approach is to show that the domain \\( D \\) is convex, the derivative is positive on the interior of \\( D \\), and the function is continuous on \\( D \\), so monotonicity will follow. First, we establish that \\( D \\) is convex. This directly follows from the general property of closed intervals. Next, we show that the derivative of \\( f \\) is positive on the interior of \\( D \\): Begin by taking an arbitrary point \\( x \\) in the interior of \\( D \\), i.e., with \\( 0 < x < 1 \\). Then, compute the derivative of \\( f \\). This involves differentiating each term separately using appropriate rules, leading to a sum of terms of the form \\( kx^n \\). The resulting derivative simplifies to \\( 91x^6 + 24x^5 + 80x^4 + 44x^3 + 15x^2 + 30x \\). To prove positivity, proceed to show that each summand is positive for \\( x > 0 \\), which justifies that the entire sum is positive. Note that the application of each differentiation rule must be justified by verifying differentiability for the relevant terms. Then, prove that the function is continuous on \\( D \\). This follows from the continuity of each term in the sum; since all are composed of the basic continuous functions, this step is straightforward. With convexity, derivative positivity, and continuity established, conclude that \\( f \\) is monotonic on \\( D \\). The proof is thus complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 18 * x ^ 4 + 14 * x ^ 3 + 8 * x ^ 2 + 13 * x + 11) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 18 * x ^ 4 + 14 * x ^ 3 + 8 * x ^ 2 + 13 * x + 11\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 13 := by linarith [hx.1]\n\n    have h2: 0 < 16 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 42 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 72 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 18 * x ^ 4 + 14 * x ^ 3 + 8 * x ^ 2 + 13 * x + 11 is monotonic on the set D = [0, 1]. We will approach this by first showing that D is convex. Next, we will demonstrate that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. All together, this will allow us to conclude that f is monotonic on D. We first show that D is convex by appealing to the general property that any closed interval [a, b] in \u211d is convex. To prove that the derivative of f is positive on the interior of D, we follow these steps: Assume x is in the interior of D, that is, 0 < x < 1. Compute the derivative of f(x), which is a sum of terms differentiated using the power and constant rules; you'll need to apply the appropriate differentiation rules for each term. Simplify the resulting expression for the derivative. You'll arrive at a sum of positive-coefficient monomials and constant terms. Show that each individual term of the derivative is strictly positive for 0 < x < 1, either because they are positive constants or because they are positive multiples of positive powers of x. 2.5. Combine the positivity of these terms to conclude the sum, and therefore the derivative, is strictly positive on the interior of D. 2.6. Also confirm differentiability of each component, which follows from basic properties of polynomials. Show that f is continuous on D by noting that each monomial term is continuous and so their sum is continuous as well. With convexity of D, continuity of f on D, and strict positivity of the derivative on the interior, we conclude f is monotonic on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 7 + 10 * x ^ 6 + 11 * x ^ 4 + 10 * x ^ 3 + 13) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 7 + 10 * x ^ 6 + 11 * x ^ 4 + 10 * x ^ 3 + 13\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h1: 0 < 30 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 44 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 60 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 56 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 8 * x^7 + 10 * x^6 + 11 * x^4 + 10 * x^3 + 13 is monotonic on the set D = [0, 1]. We will do this by showing D is convex, then that f' is positive on the interior of D, then proving f is continuous on D, and finally concluding monotonicity. We can prove D is convex by appealing to the general property that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we do the following: Assume x is in the interior of D, i.e., 0 < x < 1. Differentiate the function step-by-step, using the differentiation rules, so that the derivative will be a sum of positive multiples of powers of x. Prove that each term in the derivative is strictly positive when 0 < x < 1. This can be done by showing each coefficient and corresponding power of x is positive. Conclude that the sum is positive on (0,1). 2.5. Recall that throughout this differentiation, you need to show that each constituent function used in the computation is differentiable at x in the interior of D. For continuity, note that polynomials are continuous everywhere, so you can argue that each monomial is continuous and thus their sum is too. Finally, use the facts that D is convex, f is continuous on D, and f' is positive on the interior, to deduce that f is monotone on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 7 + 17 * x ^ 6 + 12 * x ^ 5 + 6 * x ^ 2 + 2 * x + 10) (Icc (0: \u211d) (1: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 7 + 17 * x ^ 6 + 12 * x ^ 5 + 6 * x ^ 2 + 2 * x + 10\n  let D := Icc (0: \u211d) (1: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (1: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 2 := by linarith [hx.1]\n\n    have h2: 0 < 12 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 60 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 102 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 35 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 5 * x ^ 7 + 17 * x ^ 6 + 12 * x ^ 5 + 6 * x ^ 2 + 2 * x + 10 is monotonic on the interval D = [0, 1]. We will do this by first verifying that D is convex, then showing that the derivative of f is positive on the interior of D, and then noting f is continuous. Finally, this allows us to conclude monotonicity. We show that D is convex. This follows from the general property that any closed interval in \u211d is convex. We show that the derivative of f is positive on the interior of D: We start by assuming x is in the interior of D, so 0 < x < 1. We compute the derivative of f, which is a sum of terms, each produced by differentiating a term in f. This process will require repeated application of product and power rules, yielding a sum of terms of the form: 35 * x^6 + 102 * x^5 + 60 * x^4 + 12 * x + 2. We then want to establish that this sum is strictly greater than zero for x in (0,1). This can be done by showing each term is positive (since all powers of x are positive and coefficients are positive on (0,1)), so their sum is positive. Each differentiation step requires checking the differentiability of the constituent terms, which can be justified for polynomials and constant multiples of powers of x. Next, show that f is continuous on D, which can be established since sums and products of continuous (in fact, polynomial) functions are continuous. With these facts, we can conclude by the relevant general result that f is monotonic on D. We are now finished."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 6 + 12 * x ^ 5 + 20 * x ^ 2) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 6 + 12 * x ^ 5 + 20 * x ^ 2\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 40 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 60 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 60 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 10 * x ^ 6 + 12 * x ^ 5 + 20 * x ^ 2 is monotonic on the set D = [0, 6]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude that it is monotonic on D. We can prove D is convex by invoking that any closed interval is convex. To show that the derivative of f is positive on the interior of D: First, assume x is in the interior of D, so 0 < x < 6. Next, differentiate the function, which requires that we apply differentiation and algebraic rules to each term of the sum. After simplification, we see that 60 * x^5 + 60 * x^4 + 40 * x must be positive. Show that this expression is positive. Since each x appearing here is strictly positive, and each coefficient is positive, each term is positive, so their sum is positive. At each step above, differentiability of the terms must be verified, but this is immediate for polynomials. Show continuity of f on D by noting that it is a sum of continuous functions, each of which is a monomial. Having checked convexity of D, positivity of the derivative on the interior, and continuity, we conclude that the function is monotone on D. We are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 7 + 6 * x ^ 6 + 6 * x ^ 5 + 10 * x ^ 4 + 2 * x ^ 3 + 12 * x ^ 2 + 9 * x) (Icc (0: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 7 + 6 * x ^ 6 + 6 * x ^ 5 + 10 * x ^ 4 + 2 * x ^ 3 + 12 * x ^ 2 + 9 * x\n  let D := Icc (0: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 9 := by linarith [hx.1]\n\n    have h1: 0 < 24 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 6 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 40 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 30 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 36 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h6: 0 < 35 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5, h6]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 5 * x^7 + 6 * x^6 + 6 * x^5 + 10 * x^4 + 2 * x^3 + 12 * x^2 + 9 * x is monotonic on the set D = [0, 8]. The general approach is to prove that D is convex, that f' > 0 on the interior of D, and that f is continuous on D. This will allow us to conclude monotonicity. First, show that D (the interval [0, 8]) is convex. This follows from a standard property of closed intervals. Next, establish that the derivative of f is positive everywhere in the interior of D: Let x be in the interior of D, so 0 < x < 8. Compute the derivative of f, making repeated use of the sum, power, and constant rules for derivatives. After expanding and simplifying, you will obtain a sum of terms of the form c * x^k for various k, plus constants. Show each term in this sum is positive when x > 0, by considering powers of x and positive coefficients, and then combine the inequalities to conclude their sum is also positive. Check that every differentiation step is valid by verifying the constituent functions are differentiable where needed. Confirm that f is continuous on D. This can be shown by arguing each term in the polynomial is continuous, and hence so is their sum. Conclude, using these facts, that f is monotonic (specifically, monotone increasing) on D.  This completes the proof strategy."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 12 * x ^ 6 + 17 * x ^ 5 + 9 * x ^ 2 + 8 * x) (Icc (0: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 12 * x ^ 6 + 17 * x ^ 5 + 9 * x ^ 2 + 8 * x\n  let D := Icc (0: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n    have h0: 0 < 8 := by linarith [hx.1]\n\n    have h1: 0 < 18 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 85 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 72 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 12 * x^6 + 17 * x^5 + 9 * x^2 + 8 * x is monotonic on the set D = [0, 5]. We will follow a typical process: first showing D is convex, then proving that f' > 0 on the interior of D, next showing that f is continuous on D, and finally concluding monotonicity. We first show D is convex by recognizing that any closed interval is convex. To prove the derivative of f is positive on the interior of D: Assume x lies in the interior of D, which means 0 < x < 5. Compute the derivative of f, using basic differentiation rules for sums, powers, and products. After simplification, this will yield a sum that is a linear combination of strictly positive terms (since x > 0) multiplied by positive coefficients. To show the derivative is positive, demonstrate that each term in the expression is positive using positivity of powers and coefficients, and add them. Finally, confirm that all respective sub-functions involved in the derivative computation are differentiable where needed. For continuity, note that each term (a constant times a monomial or linear term) is continuous, so their sum is continuous on D. With convexity, positivity of the derivative on the interior, and continuity, deduce that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 14 * x ^ 7 + 15 * x ^ 5 + 5 * x ^ 4 + 4 * x ^ 3) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 14 * x ^ 7 + 15 * x ^ 5 + 5 * x ^ 4 + 4 * x ^ 3\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n\n    ring\n    rw [interior_Icc] at hx\n\n    have h0: 0 < 12 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h1: 0 < 20 * x ^ 3 := by\n      have power_pos: 0 < x ^ 3 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h2: 0 < 75 * x ^ 4 := by\n      have power_pos: 0 < x ^ 4 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 98 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3]\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function \\( f(x) = 14 x^7 + 15 x^5 + 5 x^4 + 4 x^3 \\) is monotonic on the interval \\( D = [0, 6] \\). To do this, we will proceed through several steps, each structured as their own segment in the proof:  First, show that the interval \\( D \\) is convex. Any closed interval of real numbers is convex, so this follows immediately.  Next, show that the derivative of \\( f \\) is strictly positive on the interior of \\( D \\): Begin by noting that \\( x \\) is in the interior of \\( D \\), i.e., \\( 0 < x < 6 \\). Compute and expand the derivative of \\( f \\) using the rules for differentiation (sum, power, constant multiple): - This will result in a sum of positive terms of the form \\( 98x^6, 75x^4, 20x^3, 12x^2 \\). Demonstrate that each of these quantities is positive for \\( x>0 \\): - Argue each term\u2019s positivity individually by considering that \\( x > 0 \\) implies \\( x^k > 0 \\) for all \\( k > 0 \\). - Use these facts to prove the sum is positive. Justify differentiability at each step for the individual summands as required by the differentiation rules.  Show continuity of \\( f \\) on \\( D \\): Each term of \\( f \\) is a monomial and polynomials are continuous, so the sum is continuous as well.  Conclude, via the prior steps and an established result, that \\( f \\) is monotonic on \\( D \\).  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 20 * x ^ 7 + 11 * x ^ 6 + 16 * x ^ 3 + 17 * x ^ 2 + 18 * x + 11) (Icc (0: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 20 * x ^ 7 + 11 * x ^ 6 + 16 * x ^ 3 + 17 * x ^ 2 + 18 * x + 11\n  let D := Icc (0: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (0: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    have h1: 0 < 18 := by linarith [hx.1]\n\n    have h2: 0 < 34 * x ^ 1 := by\n      have power_pos: 0 < x ^ 1 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h3: 0 < 48 * x ^ 2 := by\n      have power_pos: 0 < x ^ 2 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h4: 0 < 66 * x ^ 5 := by\n      have power_pos: 0 < x ^ 5 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n\n    have h5: 0 < 140 * x ^ 6 := by\n      have power_pos: 0 < x ^ 6 := by\n        apply pow_pos (hx.1)\n      linarith [power_pos]\n    linarith [h1, h2, h3, h4, h5]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.add (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _))) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 20 * x ^ 7 + 11 * x ^ 6 + 16 * x ^ 3 + 17 * x ^ 2 + 18 * x + 11 is monotonic on the interval D = [0, 6]. We'll follow a structured approach that relies on differentiability, continuity, and positivity of the derivative to establish monotonicity.  First, we show that D is convex. This is immediate for any closed interval. Next, we prove that the derivative of f is positive on the interior of D: Suppose x is in the interior of D, namely 0 < x < 6. Compute the derivative of f(x). This will require applying differentiation rules for powers and sums several times. The result will lead to an expression involving a sum of terms, all of which can be checked to be positive for x > 0. Prove that each term in this sum is positive when x > 0 (this involves showing each x^k term is positive, and the constants multiply to positive numbers). Finally, confirm differentiability of each term used in the calculation above. You may need to verify this for powers and polynomials, which is always the case for real functions. Show that f is continuous on D. Since f is a sum of continuous functions (monomials), this follows using basic properties of polynomials. Using convexity of D, continuity of f, and strict positivity of the derivative on the interior, we conclude that f is monotonic (in fact, strictly increasing) on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 80 * x + 1600) (Icc (10: \u211d) (13: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 80 * x + 1600\n  let D := Icc (10: \u211d) (13: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (10: \u211d) (13: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 4 * x ^ 2 - 80 * x + 1600 is monotonic on the set D = [10, 13]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the result that any closed interval is convex. To show the derivative of f is positive on the interior of D, we break it down: Assume that x is in the interior of D, which means 10 < x < 13. Compute the derivative of f, which will involve using some differentiation rules for addition, multiplication, subtraction, constants, and powers. The result can be simplified to a linear expression. Show that this linear expression is positive when 10 < x < 13. You can use basic inequalities and arithmetic manipulation for this. Recall that each differentiation rule used in step (b) requires you to verify the functions being differentiated are indeed differentiable at the points involved. Now we've established that f' > 0 on the interior of D. f is a polynomial, so you can establish continuity of f on D by showing each term is continuous and then taking their sum. Once all these pieces are shown, you have the conditions to apply a theorem that gives monotonicity on D from convexity, strict positivity of the derivative, and continuity. Now you are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 32 * x + 64) (Icc (4: \u211d) (13: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 32 * x + 64\n  let D := Icc (4: \u211d) (13: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (13: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial \\( f(x) = 4x^2 - 32x + 64 \\) is monotone on the set \\( D = [4, 13] \\). We will do so by first proving that \\( D \\) is convex. Then we will prove that the derivative of \\( f \\) is positive on the interior of \\( D \\). Then we will show that \\( f \\) is continuous on \\( D \\). Finally, we can conclude it is monotonic on \\( D \\).  We can prove \\( D \\) is convex by using the result that any closed interval is convex.  To prove the derivative of \\( f \\) is positive on the interior of \\( D \\), we can do the following: First, assume that \\( x \\) is in the interior of \\( D \\), i.e., \\( 4 < x < 13 \\). Next, differentiate the function step by step. This will involve applying sum, product, and constant differentiation rules several times. After simplifying, this shows you need to prove \\( 8x - 32 > 0 \\). Now show that this inequality holds for all \\( x \\) in the interior of \\( D \\). Given \\( x > 4 \\), this is straightforward and can be seen using basic arithmetic. Recall that every differentiation rule applied above requires checking the differentiability of simpler functions involved. Prove differentiability of these pieces as needed. Now we have proven \\( f' \\) is positive on the interior of \\( D \\).  We can show continuity by proving that each term in the polynomial is continuous, and thus the overall polynomial is continuous. This can be reasoned from basic properties of continuous functions.  Using these facts, we conclude that \\( f \\) is monotone on \\( D \\).  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 50 * x + 625) (Icc (5: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 50 * x + 625\n  let D := Icc (5: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (5: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 5 * x^2 - 50 * x + 625 is monotonic on the set D = [5, 6]. We will do this by first proving D is convex, then showing that the derivative of f is positive on the interior of D, and that f is continuous on D, before finally deducing that f is monotonic. We show D is convex by noting that any closed interval is convex. To prove the derivative of f is positive on the interior of D: We assume x is in the interior of D, so 5 < x < 6. Next, we compute the derivative of f, making use of basic differentiation rules, and simplify. We find that the derivative reduces to an expression involving x. We then show the resulting algebraic expression is positive for x in the interval (5, 6). In this case, this involves checking a linear inequality using the bounds on x. We must check that all involved functions in the computation are differentiable. We show f is continuous on D, which follows by the continuity of the polynomial terms and operations. Once we have these, we conclude that f is monotonic on D. We are now done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 40 * x + 200) (Icc (5: \u211d) (15: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 40 * x + 200\n  let D := Icc (5: \u211d) (15: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (5: \u211d) (15: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 4 * x^2 - 40 * x + 200 is monotonic on the interval D = [5, 15]. We will do this by first establishing that D is convex. Next, we show that the derivative of f is positive throughout the interior of D, then show continuity of f on D, after which we can conclude monotonicity.  We can show that D is convex by relying on the fact that any closed interval in \u211d is convex. To show that the derivative of f is positive on the interior of D, we proceed as follows: Assume x is in the interior of D, so 5 < x < 15. Differentiate f(x). This will involve applying differentiation rules (such as for sums, differences, constants, and powers), and after simplification, it reduces to checking that (8 * x - 40) > 0. Now, we must verify the inequality for all x in (5, 15). The calculation is simple since for x > 5, 8 * x - 40 > 0 holds on the interval. As part of justifying the differentiation, we need to check that each piece (x \u21a6 x, x \u21a6 x^2, constants) is differentiable, but this is straightforward for polynomials. We then show that f is continuous on D by noting that each term in f is continuous, and so finite sums and products of continuous functions remain continuous. Finally, we use that f is continuous, D is convex, and f\u2032 > 0 on the interior to conclude that f is monotonic on D.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 2 - 162 * x + 6561) (Icc (9: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 2 - 162 * x + 6561\n  let D := Icc (9: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 9 * x ^ 2 - 162 * x + 6561 is monotonic on the interval D = [9, 10]. We'll do this by showing D is convex, the derivative of f is positive on the interior of D, and that f is continuous on D. First, show D is convex. This follows since a closed interval is always convex. Next, prove that the derivative of f is positive on the interior of D: Assume x is in the interior of D, so 9 < x < 10. Compute the derivative of f, carefully applying differentiation rules for sums, differences, and powers. After simplification you will arrive at an expression whose positivity needs to be proved. Analyze the resulting inequality. In this case, it will be a linear function of x, and you will need to argue why it is positive for all x in (9, 10). Make sure to justify all uses of differentiation by confirming the differentiability of the relevant functions at each step in your argument. Show that f is continuous on D by appealing to the fact that sums and differences of continuous functions are continuous, and that polynomials are continuous everywhere. Having established convexity of the domain, positivity of the derivative on the interior, and continuity on the entire domain, you can conclude that f is monotonic on D.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 140 * x + 700) (Icc (10: \u211d) (19: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 140 * x + 700\n  let D := Icc (10: \u211d) (19: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (10: \u211d) (19: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 7 * x ^ 2 - 140 * x + 700 is monotonic on the set D = [10, 19]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the theorem that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: First, assume that x is in the interior of D, i.e., 10 < x < 19. Next, differentiate the function, making use of differentiation rules for sums, products, and powers. After simplifying, you will see that it suffices to show 14 * x - 140 > 0. Now show that 14 * x - 140 > 0 given x > 10, which is straightforward to check. Each time you use a differentiation rule, you need to show that the components being differentiated are themselves differentiable; verify this for all such cases. To prove continuity, argue that sums, differences, and products of continuous functions (for instance, polynomials and constants) are continuous, so f is continuous on D. Finally, put these facts together to conclude that f is monotonic on D. Now you are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 3 * x ^ 2 - 54 * x + 486) (Icc (9: \u211d) (16: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 3 * x ^ 2 - 54 * x + 486\n  let D := Icc (9: \u211d) (16: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (16: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 3 * x^2 - 54 * x + 486 is monotonic on the set D = [9, 16]. To do so, we proceed as follows: We first show that D is convex. This can be accomplished by noting that any closed interval is convex. Next, we need to prove that the derivative of f is positive on the interior of D. Specifically: Assume that x is in the interior of D, so 9 < x < 16. Differentiate the function. This involves applying the differentiation rules for addition, subtraction, exponentiation, and multiplication. After differentiation and simplification, you'll be left with an expression for f'(x). We need to show that this expression is strictly positive for all x in the interior of D. You can do this by verifying the sign of the resulting linear expression over the interval (9, 16). It is also required to check that the functions used in the differentiation process are differentiable at every point considered. We then show that f is continuous on D. Since f is a polynomial, you can deduce this by arguing that each term is continuous and so is their sum. With convexity of D, strict positivity of the derivative, and continuity, we can finally deduce that f is monotonic on D. This completes the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 108 * x + 3402) (Icc (9: \u211d) (12: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 108 * x + 3402\n  let D := Icc (9: \u211d) (12: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (12: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 6 * x ^ 2 - 108 * x + 3402 is monotonic on the set D = [9, 12]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: First, we assume that x is in the interior of D, meaning 9 < x < 12. Next, we differentiate the function. This involves applying differentiation rules repeatedly to express the derivative in terms of x. We then simplify this expression, which gives us something of the form 12 * x - 108. We then need to show that this expression is positive. This usually can be done by considering the range of x and checking that, for every x in the interior, 12 * x - 108 > 0 holds (which for x > 9 is clear). Each differentiation performed above requires justifying the differentiability of the building blocks, so we will argue that the constant, linear, and quadratic terms are all differentiable everywhere. This completes the proof that f' is positive on the interior of D. To show continuity on D, we explain that all polynomials are continuous, and so the sum, difference, and multiplication applied here preserve continuity on the interval. Therefore, we conclude that f is monotonic on the interval D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 30 * x + 270) (Icc (3: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 30 * x + 270\n  let D := Icc (3: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 5 * x ^ 2 - 30 * x + 270 is monotonic on the set D = [3, 5]. We will do so by showing that D is convex, the derivative of f is positive on the interior of D, and that f is continuous on D. This allows us to conclude monotonicity. The structure is as follows:  Prove that D is convex. This can be done by recognizing that any closed interval is convex. Prove that the derivative of f is positive on the interior of D: Assume x is in the interior of D, i.e., 3 < x < 5. Differentiate the function f, justifying differentiation at all necessary steps. The computation will show it suffices to prove that 10 * x - 30 > 0 on the interior of D. Prove this inequality holds for x \u2208 (3, 5). This step should be direct by rearranging the inequality using the lower bound for x. Ensure that each differentiation step you performed is justified by the differentiability of the functions used. Prove f is continuous on D. This follows since all terms in f are continuous (as polynomials), and sums and differences of continuous functions are continuous. Using the convexity of D, positivity of the derivative on the interior, and continuity, conclude that f is monotonic on D.  Now you are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 2 - 36 * x + 972) (Icc (9: \u211d) (13: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 2 - 36 * x + 972\n  let D := Icc (9: \u211d) (13: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (13: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 2 * x ^ 2 - 36 * x + 972 is monotonic on the set D = [9, 13]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: First, assume x \u2208 interior D, that is, 9 < x < 13. Differentiate f using the standard rules for polynomial differentiation. After working out the derivative, simplify the expression so that it only involves x and standard arithmetic operations. Show that the resulting expression for the derivative is positive whenever 9 < x < 13. Usually this boils down to plugging in x and checking the sign or showing a simple inequality. Finally, justify that each function you differentiate is in fact differentiable on D. At this point, we've shown that the derivative is positive on the interior of D. Next, show that f is continuous on D, which follows since it is a polynomial (and thus each term is continuous, and sums of continuous functions are continuous). Using the previous steps, we can conclude by applying a theorem relating the sign of the derivative and monotonicity on a convex domain. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 3 * x ^ 2 - 18 * x + 270) (Icc (3: \u211d) (4: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 3 * x ^ 2 - 18 * x + 270\n  let D := Icc (3: \u211d) (4: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (4: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 3 * x ^ 2 - 18 * x + 270 is monotonic on the set D = [3, 4]. We will proceed by proving that D is convex, that the derivative of f is positive on the interior of D, and that f is continuous. Using these, we can then conclude monotonicity. We can show D is convex by using the fact that any closed interval in \u211d is convex. To prove that the derivative of f is positive on the interior of D: Assume x is in the interior of D, that is, 3 < x < 4. Differentiate the function f, step-by-step, breaking up the sum and difference and applying the product and power rules as needed. Once you have the expression for f', simplify it and observe that the resulting inequality that must be shown is true for all x in (3, 4). This will likely use algebraic simplification and showing it's positive for x > 3. At each differentiation step, also prove the constituent functions are differentiable. This then shows that the derivative is positive on the interior of D. Prove f is continuous on D by showing that each term in the polynomial is continuous, thus their sum and difference is continuous. Conclude that f is monotonic on D using the results above. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 48 * x + 576) (Icc (6: \u211d) (14: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 48 * x + 576\n  let D := Icc (6: \u211d) (14: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (6: \u211d) (14: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 4 * x ^ 2 - 48 * x + 576 is monotonic on the set D = [6, 14]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Next, we show that f is continuous on D. Finally, we can conclude it is monotonic on D.  We can prove D is convex by using the result that any closed interval in \u211d is convex. To prove the derivative of f is positive on the interior of D, we can do the following: First, assume x is in the interior of D, that is, 6 < x < 14. Next, differentiate the function term by term. This will require using rules for differentiating sums, differences, scalar multiples, and powers. After simplification, you'll see it reduces to showing 8*x - 48 > 0. Then, we need to show that 8*x - 48 > 0 when x > 6. This is a simple inequality, and you can justify it using basic algebra and the fact that x > 6. Also, be sure to justify the differentiability of each term you differentiated, as required by the differentiation rules used. Now we have established that f' is positive on the interior of D. We need to show continuity of f on D. This can be done by showing that each polynomial term is continuous, and thus so is their sum. With convexity, differentiability, strict positivity of the derivative on the interior, and continuity on D, you may now conclude that f is monotonic on D.  That completes the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 32 * x + 160) (Icc (2: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 32 * x + 160\n  let D := Icc (2: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 8 * x ^ 2 - 32 * x + 160 is monotonic on the set D = [2, 9]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: First, assume that x is in the interior of D, meaning 2 < x < 9. Next, we differentiate the function, using the standard rules for addition, scalar multiplication, subtraction, and the power rule. After simplification, this reduces to checking that the expression 16 * x - 32 > 0 on the interior. Then, show that this inequality is true for all x in the interior of D (i.e., for all x > 2). You should establish that for these x, 16 * x - 32 > 0. Finally, recall that each differentiation rule requires that the involved functions are differentiable at x, so we account for differentiability of each term. Now we have established that the derivative is positive on the interior of D. We can show continuity by arguing that each term in f is continuous and that sums and differences of continuous functions are continuous. Using convexity, continuity, and strict positivity of the derivative, we conclude that f is monotonic on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 2 - 126 * x + 3528) (Icc (7: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 2 - 126 * x + 3528\n  let D := Icc (7: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (7: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 9 * x ^ 2 - 126 * x + 3528 is monotonic on the set D = [7, 9]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Next, we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To show the derivative of f is positive on the interior of D, we proceed as follows: Assume x is in the interior of D, that is, 7 < x < 9. Differentiate the function f (using appropriate differentiation rules for polynomials and sums), and simplify the derivative expression. Show that the resulting derivative is positive for all x in the interior of D. This requires showing an explicit inequality, which is straightforward here because the interior points are easily described and the inequality is simple to verify. Make sure all relevant differentiability properties of the component functions are noted. Show that f is continuous on D by observing that each term in the polynomial is continuous, so the sum is continuous as well. Use the facts above to conclude that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 70 * x + 245) (Icc (7: \u211d) (16: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 70 * x + 245\n  let D := Icc (7: \u211d) (16: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (7: \u211d) (16: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 5 * x^2 - 70 * x + 245 is monotonic on the set D = [7, 16]. We will accomplish this by showing D is convex, then that the derivative of f is positive on the interior of D, then that the function is continuous on D, which allows us to conclude that f is monotonic on D.  We can show D is convex by using the result that a closed interval is convex. To prove the derivative of f is positive on the interior of D, we can proceed as follows: Assume x is in the interior of D, which means 7 < x < 16. Differentiate f, utilizing differentiation rules as needed. This reduces the statement to showing that 10 * x - 70 > 0. Observe that for x > 7, this inequality is straightforward to establish. For each differentiation step above, we need to check that the relevant parts of f are differentiable, which they are, so include differentiation checks. This proves that f' is positive on the interior of D. We show that f is continuous on D by noting that polynomials are continuous, and thus the sum and difference of continuous functions is continuous. We can now conclude that f is monotonic on D, as required.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 72 * x + 324) (Icc (9: \u211d) (16: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 72 * x + 324\n  let D := Icc (9: \u211d) (16: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (16: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 4 * x^2 - 72 * x + 324 is monotonic on the set D = [9, 16]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We show that D is convex by noting that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we do the following: Assume x is in the interior of D, so 9 < x < 16. Compute the derivative, requiring more than one application of the differentiation rules. At this step, we reduce the problem to showing 8 * x - 72 > 0, which follows from substituting bounds for x. Show the required inequality holds using the assumption that x > 9. After applying the differentiation rules, check that the relevant functions are differentiable at all necessary points. Establish that f is continuous on D using the continuity of polynomials (the continuity of the terms and operations involved). From convexity, continuity, and the positivity of the derivative in the interior, deduce that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 14 * x + 28) (Icc (1: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 14 * x + 28\n  let D := Icc (1: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 7 * x ^ 2 - 14 * x + 28 is monotonic on the set D = [1, 10]. We will proceed by showing D is convex, that the derivative of f is positive on the interior of D, that f is continuous on D, and finally conclude monotonicity.  First, show D is convex by using the fact that any closed interval is convex. To show that the derivative of f is positive on the interior of D: Assume x is in the interior of D, i.e., 1 < x < 10. Differentiate f, applying the relevant differentiation rules. This leads to needing to show 14 * x - 14 > 0. Some algebraic simplification is needed here. Show that the inequality holds whenever x > 1, which follows from the assumption about x. For every differentiation rule used, confirm that differentiability holds for the constituent functions. Show f is continuous on D by demonstrating that each term of the polynomial is continuous, so their sum is continuous as well. With these properties, conclude that f is monotonic on D.  The proof is completed with these steps."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 96 * x + 768) (Icc (8: \u211d) (15: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 96 * x + 768\n  let D := Icc (8: \u211d) (15: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (8: \u211d) (15: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We want to show that the polynomial f(x) = 6 * x ^ 2 - 96 * x + 768 is monotonic on the interval D = [8, 15]. We do this by proving several properties, which together allow us to conclude the result about monotonicity. The steps are as follows:  Show that the interval D is convex. Use the fact that any closed interval is convex. Prove that the derivative of f is positive in the interior of D. Assume that x is in the interior of D, i.e., 8 < x < 15. Differentiate f using differentiation rules, unraveling the computation so you can see that you need to show an explicit inequality. Simplify the expression for the derivative, and observe that it leads to a concrete inequality that you can verify explicitly for x in (8, 15). Justify that each function used is differentiable at the relevant points, as required by the differentiation rules you applied. Show that f is continuous on D. Argue that each component of the polynomial is continuous, and thus so is their combination. Use the above properties to conclude that f is monotonic on D.  This completes the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 40 * x + 700) (Icc (5: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 40 * x + 700\n  let D := Icc (5: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (5: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 4 * x ^ 2 - 40 * x + 700 is monotonic on the set D = [5, 9]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: Assume x is in the interior of D, i.e., 5 < x < 9. Differentiate the function, applying appropriate differentiation rules for sums, multiplication, and powers. This will reduce the verification to checking that 8 * x - 40 > 0 for values of x in the interior. Show this inequality holds for x > 5 by a simple calculation. Finally, demonstrate that all the differentiation rules applied above are justified by showing the differentiability of each constituent part. At this point, we have shown that the derivative is positive on the interior. We can show that f is continuous on D by observing that each term in the polynomial is continuous, so the sum is as well. Using these results, we can then conclude that f is monotonic on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 2 - 72 * x + 1008) (Icc (4: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 2 - 72 * x + 1008\n  let D := Icc (4: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 9 * x ^ 2 - 72 * x + 1008 is monotonic on the set D = [4, 6]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. Prove that D is convex. This follows since a closed interval is convex. Show that the derivative of f is positive on the interior of D: Assume x is in the interior of D, i.e., 4 < x < 6. Differentiate the function, applying the relevant differentiation rules for each term. After simplification, you will see the result is positive whenever x > 4. Prove the resulting inequality is true for x in this interval. At each step of differentiation, recall you need to justify differentiability of the component functions. Show f is continuous on D, which follows because each term in the polynomial is continuous and their sum is continuous on D. Conclude using these results that f is monotonic on D.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 80 * x + 3600) (Icc (10: \u211d) (19: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 80 * x + 3600\n  let D := Icc (10: \u211d) (19: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (10: \u211d) (19: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 4 * x ^ 2 - 80 * x + 3600 is monotonic on the set D = [10, 19]. We will do so by first proving that D is convex, then showing that the derivative of f is positive on the interior of D, then showing f is continuous on D, and finally concluding the monotonicity. We can prove D is convex by using the general result that any closed interval is convex. To prove the derivative of f is positive on the interior of D: First, assume x is in the interior of D, so 10 < x < 19. Differentiate the function f(x). You'll use appropriate differentiation rules (like sum, product, power, and constant rules) for each term, and combine them. After simplifying, you are left with an expression in x. Show that the resulting expression is positive whenever x is in the interior of D. Here, simple algebraic manipulation should show positivity. Each time you use a differentiation rule, you need to justify that the individual pieces you're differentiating are differentiable at x. To show continuity, argue that each piece (every term in the polynomial) is continuous, and so their sum is continuous as well. Using convexity, positivity of the derivative, and continuity, you can conclude the monotonicity of f on D.  Now the proof is done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 80 * x + 1000) (Icc (5: \u211d) (15: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 80 * x + 1000\n  let D := Icc (5: \u211d) (15: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (5: \u211d) (15: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 8 * x ^ 2 - 80 * x + 1000 is monotonic on the set D = [5, 15]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D.  We can prove that D is convex by using the general fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we proceed as follows: Assume that x is in the interior of D, i.e., that 5 < x < 15. Differentiate the function f(x) with respect to x, using derivative rules (sum, difference, power, constant multiples, etc.). This leads to simplifying 16 * x - 80 > 0 on (5, 15). Show that the resulting inequality holds for all x in the interior of the interval. In this case, this is straightforward to check. Each application of a derivative rule requires us to justify differentiability of the constituent parts; show this for all subfunctions involved. At this point, we've shown the derivative is positive on the interior of D. To show f is continuous on D, we argue that each component (polynomials, sums, differences, and constants) are continuous, and thus their combination is also continuous. This step is routine. Finally, by using the convexity of D, the positivity of the derivative on the interior, and continuity, we conclude that f is monotonic on the interval D.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 3 * x ^ 2 - 48 * x + 1344) (Icc (8: \u211d) (11: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 3 * x ^ 2 - 48 * x + 1344\n  let D := Icc (8: \u211d) (11: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (8: \u211d) (11: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to show that the polynomial f(x) = 3 * x^2 - 48 * x + 1344 is monotonic on the interval D = [8, 11]. We will do this by first proving the interval is convex, then that the derivative is positive on the interior, then that f is continuous, and finally conclude monotonicity.  We can prove D is convex by using the fact that closed intervals in \u211d are convex. To prove the derivative of f is positive on the interior of D, we proceed as follows: Assume x is in the interior of D, i.e., 8 < x < 11. Differentiate f; this involves applying multiple differentiation rules (such as for sums, differences, powers, and constant multiples). Through algebraic simplification, you will find it is sufficient to show that for these x, 6*x - 48 > 0. Show this final inequality is true for x in the required range; this follows from the lower bound on x. Each differentiation step requires you to check differentiability of the sub-functions (constants, identity function, power function), which you establish here. Now you have shown f' is positive on the interior of D. Show that f is continuous on D by noting that polynomials (and their sums, differences, products with constants) are continuous. By combining these results, you may conclude that f is monotonic on D. This completes the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 70 * x + 2205) (Icc (7: \u211d) (11: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 70 * x + 2205\n  let D := Icc (7: \u211d) (11: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (7: \u211d) (11: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 5 * x ^ 2 - 70 * x + 2205 is monotonic on the set D = [7, 11]. We will do this by first proving that D is convex. Then, we will show that the derivative of f is positive on the interior of D, and then prove f is continuous on D. Finally, we can conclude monotonicity on D.  We first prove that D is convex by noting that any closed interval is convex. To show that the derivative of f is positive on the interior of D: Assume that x is in the interior of D, i.e., 7 < x < 11. Differentiate f using the standard differentiation rules for polynomials, sums, and constants; simplify to see that the sign of the derivative reduces to an explicit expression in x. Check that this expression is positive in the given interval, possibly by basic algebraic steps and using the fact that x > 7. Address the differentiability of each term of f, confirming the necessary differentiability conditions for the differentiation steps. We then verify that f is continuous on D, which follows from the continuity of polynomials and standard properties of sums and products. With the above facts, we conclude that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 48 * x + 216) (Icc (3: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 48 * x + 216\n  let D := Icc (3: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 8 * x ^ 2 - 48 * x + 216 is monotonic on the interval D = [3, 10]. We will do this by proving several properties step-by-step: First, we show that D is convex. This can be done by noting that any closed interval is convex. Next, we prove that the derivative of f is positive on the interior of D: We assume x is in the interior of D, i.e., 3 < x < 10. We compute the derivative of the function. You will need to apply rules for differentiating sums, differences, products, and powers. After simplification, you will see the inequality you have to prove is true. After algebraic simplification, you must argue that the resulting expression is positive for all x in the interior of D. In this case, you can often do this directly from the fact that x > 3. At each step where you applied a differentiation rule, you needed to verify differentiability for each part of f. State and justify these differentiabilities. We then prove that f is continuous on D. Show this by verifying continuity for each polynomial term, and using the fact that sums and differences of continuous functions are also continuous. With D convex, f continuous on D, and the derivative strictly positive on the interior of D, we can conclude that f is monotonic on D. That completes the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 64 * x + 1152) (Icc (4: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 64 * x + 1152\n  let D := Icc (4: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 8 * x ^ 2 - 64 * x + 1152 is monotonic on the set D = [4, 7]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: Assume that x is in the interior of D, which means 4 < x < 7. Differentiate the function. This will require using the differentiation rules for sums, products, and powers. Simplifying, you will wind up needing to show that (16 * x - 64) is positive. To show this expression is positive, you can use the inequality for x in (4, 7) to verify that 16 * x - 64 > 0. Ensure in your proof that you have justified differentiability at each step for the involved parts of the function. Show that f is continuous on D by noting that each term in the polynomial is continuous, making the sum continuous on D. With the convexity of D, continuity of f, and positivity of the derivative on the interior, you can conclude that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 56 * x + 448) (Icc (4: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 56 * x + 448\n  let D := Icc (4: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 7 * x^2 - 56 * x + 448 is monotonic on the set D = [4, 6]. We will do this by proceeding through the following steps: Prove that D is convex. This can be shown by noting that every closed interval is convex. Prove that the derivative of f is positive on the interior of D. To do this: Assume x is in the interior of D, so 4 < x < 6. Compute the derivative of f. This will require applying the differentiation rules multiple times. After simplifying, you will see that it suffices to show 14 * x - 56 > 0. Justify the inequality using the fact that x > 4. Explicitly show why 14 * x - 56 > 0 holds in this interval. Verify that each function involved is differentiable at the relevant points, as required by the differentiation steps. Show that f is continuous on D by arguing each term in f is continuous, hence their sum is as well. Finally, conclude monotonicity on D using all of the above. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 10 * x + 45) (Icc (1: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 10 * x + 45\n  let D := Icc (1: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 5 * x ^ 2 - 10 * x + 45 is monotonic on the set D = [1, 6]. We will do so by first proving that D is convex. Next, we will prove that the derivative of f is positive on the interior of D. Then we show that f is continuous on D. Finally, using these, we can conclude that f is monotonic on D.  First, we prove D is convex by noting that any closed interval is convex. To prove the derivative of f is positive on the interior of D: We assume x is in the interior of D, i.e., 1 < x < 6. We then differentiate the function, which requires differentiating sums, differences, and polynomials via standard rules. This will reduce the problem to showing that 10 * x - 10 > 0. Next, we show the resulting inequality is true using the fact that x > 1 in the interior, so 10 * x - 10 > 0. We also need to show differentiability of each term, which is straightforward for polynomials and constants. Thus, we have shown that the derivative is positive in the interior of D. To show continuity of f on D, we check that each term in the polynomial is continuous, and thus their sum is continuous on D. Finally, by applying the theorem which says a function is monotonic on a convex set if it is continuous and its derivative is positive in the interior, we conclude f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 2 - 40 * x + 240) (Icc (2: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 2 - 40 * x + 240\n  let D := Icc (2: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to show that the polynomial f(x) = 10 * x^2 - 40 * x + 240 is monotonic on the set D = [2, 10]. The standard approach is to prove D is convex, then show the derivative of f is positive on the interior of D, then show f is continuous, and finally conclude that f is monotonic on D. D is convex because any closed interval in \u211d is convex. To prove the derivative of f is positive on the interior of D, proceed as follows: Assume x is in the interior of D, so 2 < x < 10. Compute the derivative of f by applying differentiation rules (sum, subtraction, constant multiple, power), and simplify the result to an expression of the form 20 * x - 40. Show that this derivative is positive for all x in the interior of D, that is, show that 20 * x - 40 > 0 for x > 2. Each application of a differentiation rule above needs to be justified by checking differentiability of the corresponding functions. Show that f is continuous on D by noting that sums and products of continuous functions are continuous, and all the constituent functions here are continuous. Using these facts, conclude that f is monotonic on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 2 - 60 * x + 810) (Icc (3: \u211d) (13: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 2 - 60 * x + 810\n  let D := Icc (3: \u211d) (13: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (13: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the quadratic function f(x) = 10 * x ^ 2 - 60 * x + 810 is monotonic on the interval D = [3, 13]. We will achieve this by showing D is convex, the derivative of f is positive on the interior of D, f is continuous on D, and then conclude monotonicity.  D is convex, since any closed interval is convex. We need to show that the derivative of f is positive on the interior of D: Assume x is in the interior of D, meaning 3 < x < 13. Compute the derivative of f. This will use several differentiation rules (sum, difference, power, constant, etc.), and after simplification the derivative will take the form of a linear expression in x. Show that this linear expression is positive for all x in the interior of D. You can do this by noting the range of x and showing the resulting values are all positive. Each differentiation rule requires you to establish that the constituent functions involved are differentiable at the points in question. Argue that f is continuous on D by noting that each polynomial term is continuous, so their sum and difference is continuous as well. Conclude that f is monotonic (increasing or decreasing) on D, based on the properties established in steps 1-3.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 3 * x ^ 2 - 12 * x + 60) (Icc (2: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 3 * x ^ 2 - 12 * x + 60\n  let D := Icc (2: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial \\(f(x) = 3x^2 - 12x + 60\\) is monotonic on the interval \\(D = [2, 9]\\). We will do so by verifying convexity, positivity of the derivative in the interior, and continuity, which together allow us to conclude monotonicity. First, we prove that the set \\(D\\) is convex. Any closed interval in \\(\\mathbb{R}\\) is convex, so this follows directly. Next, we prove that the derivative of \\(f\\) is positive on the interior of \\(D\\). We assume \\(x\\) is in the interior of \\(D\\), which is \\(2 < x < 9\\). We differentiate the function, using the sum, difference, constant multiple, and power rules for derivatives. This gives the expression for the derivative and shows it suffices to prove that \\(6x - 12 > 0\\) for \\(x \\in (2, 9)\\). We then confirm this inequality: since \\(x > 2\\), \\(6x - 12 > 0\\) is straightforward to check. Each differentiation step assumes differentiability of the basic building blocks of our function\u2014powers, linear terms, and constants\u2014which we check as we go. Thus, we have proven that \\(f'\\) is positive on the interior of \\(D\\). Next, we show continuity of \\(f\\) on \\(D\\), which follows as \\(f\\) is a polynomial\u2014a sum/subtraction of continuous functions. With convexity of \\(D\\), continuity of \\(f\\), and positivity of \\(f'\\) on the interior, we can conclude that \\(f\\) is monotonic (specifically, strictly increasing) on \\(D\\). Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 8 * x + 4) (Icc (1: \u211d) (11: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 8 * x + 4\n  let D := Icc (1: \u211d) (11: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (11: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 4 * x ^ 2 - 8 * x + 4 is monotonic on the set D = [1, 11]. We will do so by first proving that D is convex. Then, we will prove that the derivative of f is positive on the interior of D. Next, we will show that f is continuous on D. Finally, we conclude that it is monotonic on D. We can prove that D is convex by appealing to the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we proceed as follows: Begin by assuming that x is in the interior of D, so 1 < x < 11. Differentiate the function, which will use differentiation rules on each term. This will reduce the problem to proving that, for x in (1, 11), the expression 8 * x - 8 > 0. Show that this inequality is true for all x in (1, 11); this can be done by simple arithmetic. Recall that each differentiation rule used in step (b) requires us to establish that the constituent functions are differentiable, so we address this here. This establishes that the derivative is positive on the interior of D. Show that f is continuous on D by observing that it is a sum of continuous functions. With these results, we can conclude that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 144 * x + 2592) (Icc (9: \u211d) (19: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 144 * x + 2592\n  let D := Icc (9: \u211d) (19: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (19: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 8 * x ^ 2 - 144 * x + 2592 is monotonic on the set D = [9, 19]. We will accomplish this by first showing that D is convex, then showing that the derivative of f is positive on the interior of D, then proving f is continuous on D, and finally concluding f is monotonic on D. We can show D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we proceed as follows: First, assume that x is in the interior of D, meaning 9 < x < 19. Next, compute the derivative of f. This uses several rules of differentiation, such as for sums, differences, constants, and powers, and we need to expand and simplify the result. Show that the resulting expression is strictly positive for x in the interior of D. In this case, after simplification, the derivative is 16 * x - 144. You need to show this is positive for 9 < x < 19. Ensure each function used in differentiation is differentiable at points in D. Now we have established that the derivative is positive on the interior of D. Show continuity of f on D. This can be done by showing that each term in f is continuous and that sums and differences of continuous functions remain continuous. By the above, we can then conclude that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 112 * x + 3136) (Icc (8: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 112 * x + 3136\n  let D := Icc (8: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (8: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 7 * x ^ 2 - 112 * x + 3136 is monotonic on the set D = [8, 10]. We can do this by first showing that D is convex, then showing that the derivative of f is positive on the interior of D, then proving that f is continuous on D, and finally concluding monotonicity. We first prove that D is convex by noting that any closed interval in \u211d is convex. Next, to show that the derivative of f is positive on the interior of D, we proceed as follows: Assume x is in the interior of D, i.e., 8 < x < 10. Compute the derivative of f by applying standard differentiation rules to each term. After simplification, you will find that the derivative reduces to an expression in x. To prove positivity, show directly that this expression is positive when 8 < x < 10. This usually amounts to checking a basic inequality. Throughout the differentiation, you must also verify that the terms you differentiate are differentiable at each step. Prove that f is continuous on D. Since f is a polynomial, and thus each term is continuous, their combination is continuous on any interval. With these facts, we can conclude that f is monotonic on the interval D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 80 * x + 200) (Icc (5: \u211d) (14: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 80 * x + 200\n  let D := Icc (5: \u211d) (14: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (5: \u211d) (14: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 8 * x ^ 2 - 80 * x + 200 is monotonic on the set D = [5, 14]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Next, we will show that f is continuous on D. Finally, we can conclude that f is monotonic on D.  We can prove D is convex by using the general result that any closed interval is convex. To prove that the derivative of f is positive on the interior of D, we can proceed via the following steps: First, we assume x is in the interior of D, i.e., 5 < x < 14. Next, we differentiate the function f, using the standard rules for differentiation of sums, products, and powers. After expanding and simplifying, we see it suffices to show that 16 * x - 80 > 0. Then, we must prove this inequality is true for all x in the interior of D. Given that x > 5, confirming the inequality is straightforward. While differentiating, each differentiation rule applied requires us to establish the differentiability of the relevant functions, so we check those as well. Now we have proven f' is positive on the interior of D. To show continuity, we use that each term in the polynomial is continuous, so their sum is also continuous. Using these ingredients, we conclude that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 16 * x + 48) (Icc (2: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 16 * x + 48\n  let D := Icc (2: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 4 * x ^ 2 - 16 * x + 48 is monotonic on the set D = [2, 10]. We will do so by first showing that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Next, we show that f is continuous on D. Using these facts, we can conclude that f is monotonic on D.  We can show that D is convex, using the fact that a closed interval is convex. To show the derivative of f is positive on the interior of D, we proceed as follows: Assume x is in the interior of D, so 2 < x < 10. Compute the derivative of f. This involves using differentiation rules several times and expanding the expression. After simplification, show that the resulting expression for the derivative is positive for all x in (2, 10). You can do this by analyzing the resulting polynomial inequality and using that x > 2. For each use of differentiation, verify that the functions involved are differentiable at all relevant points. To show f is continuous on D, note that each term of the polynomial is continuous and therefore the sum is continuous. Conclude from the above facts that f is monotonic on D.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 48 * x + 432) (Icc (3: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 48 * x + 432\n  let D := Icc (3: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 8 * x ^ 2 - 48 * x + 432 is monotonic on the set D = [3, 8]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the theorem that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: First, assume that x is in the interior of D, i.e., 3 < x < 8. Next, differentiate the function, which will require several applications of common differentiation rules. After simplifying, you\u2019ll see it suffices to prove 16x - 48 > 0 on this domain. Argue that 16x - 48 is indeed positive for x in (3,8). This just requires some simple algebra using the fact x > 3. Make sure that, as you differentiate, you justify that all involved functions are differentiable at the points in question. Show that f is continuous on D by noting that sums and differences of continuous functions are continuous and polynomials are continuous everywhere. Using these facts, conclude that f is monotonic on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 84 * x + 252) (Icc (6: \u211d) (16: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 84 * x + 252\n  let D := Icc (6: \u211d) (16: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (6: \u211d) (16: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 7 * x ^ 2 - 84 * x + 252 is monotonic on the set D = [6, 16]. We will do so by first proving that D is convex. Then we will show that the derivative of f is positive on the interior of D. Next, we'll verify that f is continuous on D. Finally, we can conclude it is monotonic on D.  We can prove D is convex by using the result that any closed interval is convex. To show the derivative of f is positive on the interior of D, proceed as follows: Assume x is in the interior of D; that is, 6 < x < 16. Differentiate the function using differentiation rules (such as for constants, powers, multiplication, subtraction, etc.). You\u2019ll reduce to verifying an inequality involving the linear term in x. After simplification, you need to show that the derivative is positive for all x in (6, 16). Since the derivative is a linear function, you can show that it is positive throughout the interval by direct estimation. For each step of differentiation, check the differentiability of the involved functions. Show that f is continuous on D by checking continuity of each polynomial term; their sum is continuous as well. By combining convexity, positivity of the derivative in the interior, and continuity, conclude that f is monotonic on D.  Now you\u2019re done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 2 - 40 * x + 400) (Icc (10: \u211d) (16: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 2 - 40 * x + 400\n  let D := Icc (10: \u211d) (16: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (10: \u211d) (16: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial \\( f(x) = 2x^2 - 40x + 400 \\) is monotonic on the set \\( D = [10, 16] \\). We will do so by first proving that \\( D \\) is convex. Then we will prove that the derivative of \\( f \\) is positive on the interior of \\( D \\). Then we will show that \\( f \\) is continuous on \\( D \\). Finally, we can conclude \\( f \\) is monotonic on \\( D \\).  We can prove \\( D \\) is convex by using the result that any closed interval is convex. To prove the derivative of \\( f \\) is positive on the interior of \\( D \\), we can do the following: First, we assume \\( x \\) is in the interior of \\( D \\), so \\( 10 < x < 16 \\). Next, we differentiate the function, using basic derivative rules for powers, constants, and sums. This will show that it suffices to prove the inequality \\( 4x - 40 > 0 \\). Then, we show this inequality is true for all \\( x \\) in the interval by noting \\( x > 10 \\) makes \\( 4x - 40 > 0 \\) easily verifiable. At each step when applying differentiation rules, we check that the pieces being differentiated are in fact differentiable as needed. At this point, we have established that \\( f' > 0 \\) on the interior of \\( D \\). We prove that \\( f \\) is continuous on \\( D \\) by observing that all terms are continuous (being polynomials), and summing continuous functions yields a continuous function. With these facts, we can conclude \\( f \\) is monotonic (specifically strictly increasing) on \\( D \\).  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 36 * x + 324) (Icc (3: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 36 * x + 324\n  let D := Icc (3: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 6 * x ^ 2 - 36 * x + 324 is monotonic on the set D = [3, 7]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D.  We can prove D is convex by using the theorem that any closed interval is convex. To prove that the derivative of f is positive on the interior of D, we can proceed as follows: Assume x is in the interior of D, that is, 3 < x < 7. Differentiate the function, using differentiation rules accordingly. This will show it suffices to prove an inequality of the form (12 * x - 36 > 0). Show the resulting inequality is true for every x in the interior of D. In this case, you can deduce it from the lower bound x > 3. Recall that each application of a differentiation rule requires that you prove differentiability of the constituent functions, so justify these as needed. Once these are done, we have verified that f' is positive in the interior. We can show continuity by noting that each term in f is continuous, and thus their sum and difference is continuous, so the entire function is continuous on D. Combining the facts from steps 1\u20133, we can conclude that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 112 * x + 2744) (Icc (7: \u211d) (13: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 112 * x + 2744\n  let D := Icc (7: \u211d) (13: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (7: \u211d) (13: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 8 * x ^ 2 - 112 * x + 2744 is monotonic on the set D = [7, 13]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D.  We can show D is convex using the property that a closed interval is always convex. To show that the derivative of f is positive on the interior of D, we proceed as follows: Assume x is in the interior of D; that is, 7 < x < 13. Differentiate the function. You will need to use the sum, difference, product, and constant differentiation rules. This will reduce the problem to proving that 16 * x - 112 > 0 in the interval. Argue that this inequality holds over the relevant interval. This will require basic algebra and reasoning about the bounds of x. Make sure to verify the differentiability of all the terms you differentiated. At this stage, we have shown f' is positive on the interior of D. Continuity of f on D can be shown by noting that each term in the polynomial is continuous, and thus the whole function is continuous. With these facts, we can conclude that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 160 * x + 4000) (Icc (10: \u211d) (15: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 160 * x + 4000\n  let D := Icc (10: \u211d) (15: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (10: \u211d) (15: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 8 * x ^ 2 - 160 * x + 4000 is monotonic on the set D = [10, 15]. We do this by first proving that D is convex, then showing the derivative of f is positive on the interior of D, then that f is continuous on D, and finally deducing monotonicity. We can show D is convex by recalling that a closed interval is convex. To show the derivative of f is positive on the interior of D, proceed as follows: Assume x is in the interior of D, so 10 < x < 15. Differentiate f(x); you will have to use the appropriate differentiation rules repeatedly. This will show it suffices to prove an inequality of the form (16 * x - 160) > 0, possibly after some simplification. Show that this inequality is true for 10 < x < 15, which can be done by elementary algebra and reasoning about the bounds on x. Remember to confirm that each function involved in the differentiation is differentiable where needed. Show continuity by arguing that each term of the polynomial is continuous and so their sum is continuous. Now, combine the above facts to deduce that f is monotonic on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 2 - 24 * x + 648) (Icc (6: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 2 - 24 * x + 648\n  let D := Icc (6: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (6: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 2 * x ^ 2 - 24 * x + 648 is monotonic on the interval D = [6, 7]. The plan is to prove D is convex, that the derivative of f is positive for all x in the interior of D, that f is continuous on D, and then conclude monotonicity. First, we show that D is convex. This is true because any closed interval is convex. Next, to prove that the derivative of f is positive everywhere in the interior of D, we proceed as follows: Assume x is in the interior of D, i.e., 6 < x < 7. Compute the derivative of f(x). Using the appropriate differentiation rules, we will find an explicit expression for the derivative. Reduce the expression to a linear inequality involving x, showing that it must be positive when 6 < x < 7. Prove this linear inequality holds for all x in the interval by simple estimation or algebraic manipulation. 2.5. Recall that as we use differentiation rules, we should make sure the constituent functions are differentiable, which is clear for polynomials. Show that f is continuous on D, which can be checked by noting each term of the polynomial is continuous, and the sum of continuous functions is continuous. Use the fact that f is continuous, D is convex, and the derivative is strictly positive on the interior to conclude that f is monotone on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 70 * x + 245) (Icc (7: \u211d) (17: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 70 * x + 245\n  let D := Icc (7: \u211d) (17: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (7: \u211d) (17: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We are asked to show that the function f(x) = 5 * x^2 - 70 * x + 245 is monotone on the interval D = [7, 17]. We proceed by proving that D is convex, that the derivative of f is positive on the interior of D, and that f is continuous on D, which together allow us to conclude monotonicity.  First, we establish that D is convex by noting that any closed interval in \u211d is convex. Next, we need to show that the derivative of f is positive on the interior of D. Assume x is in the interior of D. This means 7 < x < 17. Compute the derivative of f with respect to x, applying the relevant differentiation rules for basic algebraic functions. After simplifying, the condition will reduce to verifying that 10 * x - 70 > 0. Prove this inequality holds. Using the fact that x > 7, show that the above quantity is positive. At each step when applying differentiation rules, ensure that all the functions involved are differentiable at the relevant points; note and verify their differentiability. We then show the continuity of f on D. Since f is a sum of continuous functions (polynomials and constants), f is continuous on D. With convexity, positivity of the derivative on the interior, and continuity established, conclude that f is monotone on D.  With these steps, the monotonicity of f on D is proven."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 48 * x + 432) (Icc (6: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 48 * x + 432\n  let D := Icc (6: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (6: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 4 * x ^ 2 - 48 * x + 432 is monotonic on the set D = [6, 7]. We will proceed by first showing that D is convex, then proving that the derivative of f is positive on the interior of D, followed by continuity of f on D, and finally concluding that f is monotonic on D. First, we establish that D is convex. This can be accomplished by recognizing that any closed interval is convex. Next, we must show that the derivative of f is positive on the interior of D: Assume x is in the interior of D, i.e., 6 < x < 7. Compute the derivative of f. This will require differentiating the sum and difference of terms and applying the relevant differentiation rules to each part. After simplification, we will need to check an inequality involving x. Show that the resulting expression for the derivative is positive whenever 6 < x < 7. This step might require basic reasoning about the size of x in this interval and performing the necessary algebraic simplifications. Each time we apply a differentiation rule, we should also confirm that the relevant constituent functions are differentiable. This typically involves verifying the differentiability of polynomials and the constants. Show that f is continuous on D. This is done by verifying that each term in f is continuous, and therefore so is their sum. This is generally straightforward for polynomials. Having verified convexity of D, positivity of the derivative on the interior, and continuity, we can conclude that f is monotonic on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 2 - 36 * x + 108) (Icc (2: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 2 - 36 * x + 108\n  let D := Icc (2: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 9 * x ^ 2 - 36 * x + 108 is monotonic on the interval D = [2, 8]. We will achieve this by first establishing that D is convex; then showing that the derivative of f is positive on the interior of D; then showing continuity of f on D; and finally concluding the monotonicity of f on D.  First, we show D is convex. This follows directly since D is a closed interval. Next, we need to show that the derivative of f is positive on the interior of D. This will be structured as follows: Assume x is in the interior of D, i.e., 2 < x < 8. Compute the derivative of f. You will need to apply differentiation rules for sums, products, and powers. After differentiating, simplify the resulting expression. The reduced inequality will be a linear inequality in x. Demonstrate that this inequality holds for all x in the interior of D. You may need to use algebraic manipulation and the fact that x > 2. Each time you use a differentiation rule in step 2.2, you will need to demonstrate that the relevant function is differentiable at x. Do this for each term. Now, show that f is continuous on D. Since f is a polynomial, you can argue that each term is continuous and hence their sum is continuous on D. Having established these facts, conclude from the relevant theorem that f is monotonic on D.  This completes the argument."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 2 - 24 * x + 360) (Icc (6: \u211d) (12: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 2 - 24 * x + 360\n  let D := Icc (6: \u211d) (12: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (6: \u211d) (12: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 2 * x^2 - 24 * x + 360 is monotonic on the interval D = [6, 12]. We will do this by establishing convexity of D, showing the derivative of f is positive on the interior of D, and then proving continuity, which lets us deduce monotonicity. First, we prove that D is convex. This can be established by showing that any closed interval is convex. Next, we show that the derivative of f is positive on the interior of D: We begin by taking any x in the interior of D, that is, 6 < x < 12. We compute the derivative of f, making use of basic differentiation rules (such as for constants, powers, multiplication, and subtraction). This will simplify into a linear expression. After simplifying, the proof reduces to checking a linear inequality on x. Because x \u2208 (6,12), verifying the inequality is straightforward (it will depend on this bound for x). For each differentiation step above, we must also justify that each function involved is differentiable at the relevant points. We then show that f is continuous on D. For a polynomial or sum/product of continuous functions, this step is direct. Finally, with convexity, positivity of the derivative, and continuity established, we can conclude f is monotonic on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 40 * x + 320) (Icc (4: \u211d) (14: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 40 * x + 320\n  let D := Icc (4: \u211d) (14: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (14: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 5 * x ^ 2 - 40 * x + 320 is monotonic on the set D = [4, 14]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: First, assume that x is in the interior of D, that is, 4 < x < 14. Next, differentiate the function. This will require differentiation rules for sums, products, and constants. After simplification, check that 10 * x - 40 > 0. To show this inequality holds, notice that for x > 4, the expression 10 * x - 40 is positive when x > 4, which is exactly our assumption. Recall that each differentiation rule applied above also requires us to check the differentiability of the appropriate functions, so address that here. This proves f' is positive on the interior of D. Show that f is continuous on D by using the continuity of each term in the polynomial, and the fact that sums and differences of continuous functions are continuous. Now use the previous steps to conclude that f is monotonic on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 2 - 140 * x + 4410) (Icc (7: \u211d) (16: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 2 - 140 * x + 4410\n  let D := Icc (7: \u211d) (16: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (7: \u211d) (16: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 10 * x ^ 2 - 140 * x + 4410 is monotonic on the interval D = [7, 16]. We achieve this by following these main steps: First, we verify that D is convex. This uses the fact that closed intervals are convex. Next, we show that the derivative of f is positive on the interior of D: Assume x is in the interior of D, i.e., 7 < x < 16. Compute the derivative of f with respect to x. This requires applying differentiation rules for sums, differences, and products. After differentiating and simplifying, you must show that the resulting expression for the derivative is positive on the interval (7, 16). In this case, it boils down to analyzing a linear expression and checking its positivity for x in (7, 16). At each step of differentiation, confirm that the constituent functions are differentiable at the points under consideration. Show that f is continuous on D. Since f is a polynomial, and polynomials are continuous everywhere, this follows by verifying the continuity of sums and products of continuous functions. With these results, conclude that f is monotonic on D by applying the appropriate result relating strict positivity of the derivative, convexity of the domain, and continuity.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 24 * x + 48) (Icc (2: \u211d) (12: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 24 * x + 48\n  let D := Icc (2: \u211d) (12: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (12: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 6 * x ^ 2 - 24 * x + 48 is monotonic on the set D = [2, 12]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: Assume that x is in the interior of D, that is, 2 < x < 12. Differentiate the function, which will require using relevant differentiation rules for sums, differences, scalars, and powers. This will show that it suffices to prove that 12 * x - 24 > 0. Prove the inequality 12 * x - 24 > 0 using the assumption that x > 2. Recall that each step in differentiation above relies on the differentiability of the involved functions, so establish that as well. Now we have established that f' is positive on the interior of D. Show f is continuous on D by proving that each term in the polynomial is continuous, and therefore so is their combination. Using these facts, conclude that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 32 * x + 64) (Icc (2: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 32 * x + 64\n  let D := Icc (2: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 8 * x ^ 2 - 32 * x + 64 is monotonic on the set D = [2, 9]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D.  We can prove D is convex by using the fact that any closed interval is convex.  To prove the derivative of f is positive on the interior of D, we can do the following: First, assume that x is in the interior of D, that is, 2 < x < 9. Next, differentiate the function step by step, applying standard rules for differentiation such as those for sums, products, and powers. After simplifying, it reduces to showing that 16 * x - 32 > 0. Then, we need to show this inequality holds for all x in the interior of D. This can be done by substituting the bounds and showing the expression is always positive for 2 < x < 9. Finally, verify that each time we used differentiation rules, the function was differentiable at the relevant points.  We can show continuity by noting that each term in the polynomial is continuous, so their sum is continuous as well.  With these pieces, we can conclude that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 160 * x + 4000) (Icc (10: \u211d) (17: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 160 * x + 4000\n  let D := Icc (10: \u211d) (17: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (10: \u211d) (17: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 8 * x ^ 2 - 160 * x + 4000 is monotonic on the set D = [10, 17]. We will do so by first demonstrating that D is convex, then showing that the derivative of f is positive on the interior of D, and then establishing the continuity of f on D. These will allow us to conclude that f is monotonic on D. The proof proceeds as follows:  We first show that D is convex. This follows from the fact that any closed interval is convex. Next, we prove that the derivative of f is positive on the interior of D: Assume that x is in the interior of D, i.e., 10 < x < 17. Differentiate the function. To do this, use the linearity of the derivative and the standard rules for differentiating polynomials, including the power, multiplication, and constant rules. Simplify the resulting expression to show that it reduces to a linear expression involving x. Argue why this derivative expression is strictly positive for all x in the interior of D, using the bounds on x. 2.5. Confirm that each differentiability condition required by the rules used above is satisfied for the constituent functions. Demonstrate that the function is continuous on D by noting that each term in the polynomial is continuous, so their sum is continuous on any closed interval. With convexity, positivity of the derivative on the interior, and continuity established, conclude using the general result that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 3 * x ^ 2 - 12 * x + 48) (Icc (2: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 3 * x ^ 2 - 12 * x + 48\n  let D := Icc (2: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial \\( f(x) = 3x^2 - 12x + 48 \\) is monotonic on the set \\( D = [2, 3] \\). We will do so by first proving that \\( D \\) is convex. Then we will prove that the derivative of \\( f \\) is positive on the interior of \\( D \\). Then we will show that \\( f \\) is continuous on \\( D \\). Finally, we can conclude it is monotonic on \\( D \\). We can prove \\( D \\) is convex by noting that any closed interval is convex. To prove the derivative of \\( f \\) is positive on the interior of \\( D \\), we can proceed as follows: First, we assume \\( x \\) is in the interior of \\( D \\), meaning \\( 2 < x < 3 \\). Next, we differentiate the function. This involves applying the relevant differentiation rules multiple times (product, sum, and constant rules). The result will be a linear expression in \\( x \\). After simplifying, show that this expression is positive on the specified interval for \\( x \\). In this case, this means checking that \\( 6x - 12 > 0 \\) for \\( 2 < x < 3 \\). Finally, verify differentiability of each relevant function used in the differentiation steps. Show continuity of \\( f \\) on \\( D \\) by explanation that all component functions (polynomials and constants) are continuous, hence their sums and differences are as well. Having established convexity, positivity of the derivative on the interior, and continuity, we may conclude \\( f \\) is monotonic on \\( D \\). Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 36 * x + 108) (Icc (3: \u211d) (12: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 36 * x + 108\n  let D := Icc (3: \u211d) (12: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (12: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 6 * x ^ 2 - 36 * x + 108 is monotonic on the set D = [3, 12]. We proceed as follows: First, we show that D is convex. This follows because every closed interval in \u211d is convex. Next, we show that the derivative of f is positive on the interior of D: We can assume that x is in the interior of D; that is, 3 < x < 12. We differentiate f, applying rules such as sum, product, constant, and power rules multiple times as appropriate, then simplify. After simplification, the derivative will be a linear expression in x, and we must prove this is positive for 3 < x < 12. One way is to show that the minimum possible value of the derivative on this interval is positive. Each time a differentiation rule is applied for a component of f, we must prove the differentiability of that component, which is straightforward for polynomials and constants. We show that f is continuous on D. This is true because each term in f is continuous, and the sum and difference of continuous functions is continuous. Finally, by having convexity, positivity of the derivative on the interior, and continuity, we can conclude monotonicity of f on D. That completes the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 28 * x + 224) (Icc (2: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 28 * x + 224\n  let D := Icc (2: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 7 * x ^ 2 - 28 * x + 224 is monotonic on the interval D = [2, 6]. We will do this by demonstrating that D is convex, that the derivative of f is positive on the interior of D, that f is continuous on D, and then conclude monotonicity. We begin by proving D is convex; this can be done by noting that any closed interval is convex. Next, we prove that the derivative of f is positive on the interior of D: We assume x is in the interior of D, i.e., 2 < x < 6. We differentiate f, breaking each term down as the sum and difference of products, constants, and powers, using differentiation rules as appropriate. This will yield a result for f'(x) in terms of x. We simplify the resulting inequality for f'(x), and observe that with our assumption about x this inequality does indeed hold on the interior of D. We also verify that the necessary differentiability assumptions used in the differentiation step are satisfied for all terms. We show f is continuous on D by checking continuity for each term, and using the fact that the sum and difference of continuous functions are continuous. With the previous facts, we conclude that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 90 * x + 2025) (Icc (9: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 90 * x + 2025\n  let D := Icc (9: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 5 * x^2 - 90 * x + 2025 is monotonic on the interval D = [9, 10]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D.  We can prove D is convex by using the general result that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: First, assume x is in the interior of D, i.e., 9 < x < 10. Next, differentiate the function step by step, applying the various differentiation rules for sums, scalar multiples, the power, and subtraction. This will reduce the conclusion to checking the positivity of an explicit expression involving x. We should simplify the resulting expression after differentiation (in this case, the derivative will be a linear expression in x) and show the required inequality holds for x in the given range. This generally involves basic algebraic manipulation or comparison. For each differentiation step above, ensure that differentiability of any constituent sub-function is justified (e.g., polynomials are differentiable everywhere). We can show continuity by noting that each term in the polynomial is continuous (since powers and scalar multiples and sums of continuous functions are continuous), so the sum is continuous. Using convexity of D, continuity of f, and positivity of the derivative on the interior, we can then deduce that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 2 - 36 * x + 108) (Icc (2: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 2 - 36 * x + 108\n  let D := Icc (2: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the quadratic polynomial f(x) = 9 * x ^ 2 - 36 * x + 108 is monotonic on the set D = [2, 10]. We will prove this by showing D is convex, the derivative is positive on the interior of D, and that f is continuous on D. First, we prove D is convex. This follows since any closed interval in \u211d is convex. To show the derivative is positive on the interior of D: Begin by assuming x is in the interior of D, meaning 2 < x < 10. Differentiate the function. This process involves repeated use of standard differentiation rules. After simplification, you will get an inequality involving x (of the form 18 * x - 36 > 0). Show this inequality holds whenever 2 < x < 10. This typically involves simple algebra or direct computation, using the condition x > 2. Each time you use a differentiation rule, recall that you need to show the corresponding terms are differentiable. For polynomials, these proofs are straightforward. Altogether, this establishes that the derivative is positive on the interior of D. Next, prove that f is continuous on D. Since f is a polynomial, it is continuous everywhere, and thus certainly on D. With convexity of D, positivity of the derivative on the interior, and continuity, you may conclude that f is monotonic on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 84 * x + 1176) (Icc (7: \u211d) (11: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 84 * x + 1176\n  let D := Icc (7: \u211d) (11: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (7: \u211d) (11: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 6 * x ^ 2 - 84 * x + 1176 is monotonic on the set D = [7, 11]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: First, we can assume that x is in the interior of D, that is, 7 < x < 11. Next, we differentiate the function. This will involve using differentiation rules to obtain the form of the derivative, which will result in an expression of the form 12 * x - 84. We then must show that this expression is positive for all x in the interior of D. This will require us to show 12 * x - 84 > 0 when x > 7, which is straightforward. Each application of a differentiation rule requires verifying differentiability of the constituent functions, so we prove this for the relevant terms. Now we have proven f' is positive on the interior of D. We can show that f is continuous on D by showing each term in the polynomial is continuous, so their sum is continuous as well. Using these, we can then conclude that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 2 - 54 * x + 162) (Icc (3: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 2 - 54 * x + 162\n  let D := Icc (3: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the quadratic polynomial f(x) = 9 * x^2 - 54 * x + 162 is monotonic on the interval D = [3, 10]. We'll do this by showing D is convex, the derivative is positive on the interior of D, f is continuous on D, and then conclude monotonicity.  First, show D is convex. This is true because any closed interval is a convex set in \u211d. Next, show that the derivative of f is positive on the interior of D: Let x be an arbitrary point in the interior of D, so 3 < x < 10. Compute the derivative of f step-by-step using differentiation rules, which will yield f'(x) = 18*x - 54. Show that 18*x - 54 > 0 for all x in the interior of D. In this case, because x > 3, this inequality can be easily verified with basic algebra. For each differentiation step applied above, show that the relevant constituent functions are differentiable. Prove f is continuous on D. This is straightforward since each term in f is continuous and so their combination is continuous as well. In conclusion, since the derivative is positive, f is strictly increasing, and so is monotonic on D.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 2 - 108 * x + 324) (Icc (6: \u211d) (13: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 2 - 108 * x + 324\n  let D := Icc (6: \u211d) (13: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (6: \u211d) (13: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 9 * x ^ 2 - 108 * x + 324 is monotonic on the set D = [6, 13]. We will do this by showing D is convex, then showing the derivative of f is positive on the interior of D, then showing f is continuous on D, and finally applying a theorem that allows us to conclude monotonicity given these facts.  We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we proceed as follows: Assume x is in the interior of D, that is, 6 < x < 13. Compute the derivative of f step by step, breaking down each operation (such as addition, subtraction, scalar multiplication, and powers) and applying the appropriate differentiation rules for each. After simplification, show that the resulting expression for the derivative is positive for all x in the interior of D. In this concrete case, the derivative simplifies to a linear expression, so you should check positivity using the bounds on x. For each application of the differentiation rules in step 2.2, ensure that you verify the differentiability of each part of the function at the required points. After establishing the positivity of the derivative, show that f is continuous on D. This is done by noting that each term in f is a continuous function, and thus their sum (or difference) is also continuous. With convexity, continuity, and strict positivity of the derivative on the interior, you can then apply a result that allows you to conclude that f is monotonic on D.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 2 - 4 * x + 12) (Icc (1: \u211d) (5: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 2 - 4 * x + 12\n  let D := Icc (1: \u211d) (5: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (5: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 2 * x^2 - 4 * x + 12 is monotonic on the set D = [1, 5]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D.  We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we proceed as follows: Assume x is in the interior of D, that is, 1 < x < 5. Compute the derivative of f(x), making use of differentiation rules and algebraic simplification where needed. This leads to an inequality involving x that needs to be shown positive. Prove that this inequality is indeed true for x in the stated interval. Here, for x > 1, you can justify the sign of the result. Each differentiation rule used above requires justification for differentiability of the constituent functions, which you verify. Show that f is continuous on D by proving that each term in the polynomial is continuous, and thus the sum is continuous. Use the results from above to conclude that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 10 * x + 10) (Icc (1: \u211d) (2: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 10 * x + 10\n  let D := Icc (1: \u211d) (2: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (2: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 5 * x^2 - 10 * x + 10 is monotonic on the set D = [1, 2]. We will do this by first proving D is convex, then showing the derivative of f is positive on the interior of D, then showing f is continuous on D, and finally concluding monotonicity. First, show that D is convex. This can be established because any closed interval is convex. Next, show that the derivative of f is positive on the interior of D. Assume that x is in the interior of D, i.e., 1 < x < 2. Compute the derivative of f. This will involve applying differentiation rules (such as product, power, and constant rules). Through simplification, you will see that it suffices to show 10 * x - 10 > 0. Use the assumption 1 < x < 2 to show that 10 * x - 10 > 0. (This should follow easily by simple arithmetic.) As part of the above differentiation, verify that each piece is differentiable where necessary. Next, show that f is continuous on D. You can do this by observing that sums, products, and differences of continuous functions are continuous, and polynomials are continuous everywhere. Finally, use the above facts to conclude that f is monotonic (strictly increasing) on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 12 * x + 12) (Icc (1: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 12 * x + 12\n  let D := Icc (1: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 6 * x ^ 2 - 12 * x + 12 is monotonic on the interval D = [1, 6]. We do this by showing D is convex, the derivative of f is positive on the interior of D, and f is continuous on D; this allows us to conclude monotonicity. We start by showing that D is convex. This can be shown easily as any closed interval in \u211d is convex. Next, we show that the derivative of f is positive in the interior of D: 2.1 Assume that x is an interior point of D, so 1 < x < 6. 2.2 Differentiate f, by applying rules for sum, difference, and product, reducing the derivative to a linear form in x. 2.3 After simplifying, it will reduce to showing that the resulting linear expression is positive for all x in (1, 6). This is a straightforward inequality to check given that x > 1. 2.4 When differentiating, recall to check that each constituent function is differentiable at x. Show this for all terms. Show f is continuous on D, which can be done by noting each component (powers, products, sums) is continuous, so their combinations are continuous. Once all these intermediate results are established, conclude that f is monotonic on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 64 * x + 768) (Icc (4: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 64 * x + 768\n  let D := Icc (4: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 8 * x ^ 2 - 64 * x + 768 is monotonic on the set D = [4, 7]. We will do so by first proving that D is convex. Then, we will prove that the derivative of f is positive on the interior of D. Next, we will show that f is continuous on D. Finally, we will deduce that f is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To show the derivative of f is positive on the interior of D, proceed as follows: Assume x is in the interior of D, i.e., 4 < x < 7. Differentiate the function f. This will require using differentiation rules for polynomials, which involves applying rules to each term. This step yields that we wish to show the expression 16 * x - 64 > 0 in this interval. Now show the resulting inequality is true for all 4 < x < 7. Usually, this follows from the properties of the linear function and the interval bounds. Each differentiation rule you've used requires you to check differentiability of each constituent function, so confirm those are met. Now you've shown that f' is positive on the interior of D. Next, show that f is continuous on D by confirming each term in the polynomial is continuous, and thus so is their combination. Bringing all of this together, you can now conclude that f is monotonic on D. Done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 12 * x + 24) (Icc (1: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 12 * x + 24\n  let D := Icc (1: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 6 * x ^ 2 - 12 * x + 24 is monotonic on the set D = [1, 9]. We will accomplish this by showing D is convex, showing that the derivative of f is positive on the interior of D, showing f is continuous on D, and then concluding monotonicity. First, we prove that D is convex by using the fact that any closed interval is convex. Next, we show that the derivative of f is positive on the interior of D: Assume x is in the interior of D, i.e., 1 < x < 9. Differentiate the function step by step, applying relevant differentiation rules for sums, products, and constants. This reveals that f'(x) = 12 * x - 12. We need to show that 12 * x - 12 > 0. This can be concluded from the condition x > 1, since substituting x > 1 gives 12 * x - 12 > 0. Each differentiation rule used requires checking differentiability of the component functions, so we verify those. Thus, we have established that the derivative is positive on the interior of D. Then, we show f is continuous on D by noting that each term in the polynomial is continuous, and so their sum is as well. Finally, we combine these pieces to conclude that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 50 * x + 750) (Icc (5: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 50 * x + 750\n  let D := Icc (5: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (5: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 5 * x ^ 2 - 50 * x + 750 is monotonic on the interval D = [5, 9]. To do this, we follow a similar structure as in the earlier examples, using convexity, the sign of the derivative, and continuity: First, we show that D is convex. This follows since any closed real interval is convex. Next, we show that the derivative of f is positive on the interior of D: We assume that x is in the interior of D, i.e., 5 < x < 9. We compute the derivative of f, applying the appropriate differentiation rules for sums, scalar multiples, and powers. This yields that the derivative reduces to 10 * x - 50. We then show that 10 * x - 50 > 0 whenever 5 < x < 9. This is straightforward given x > 5. Each differentiation rule requires us to justify differentiability of the components, which is immediate for polynomials. We establish that f is continuous on D by noting the continuity of each polynomial term, and thus the sum remains continuous. Having shown D is convex, f is differentiable and continuous on D, and the derivative is positive on the interior, we can conclude that f is monotone increasing on D.  This completes the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 140 * x + 4200) (Icc (10: \u211d) (13: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 140 * x + 4200\n  let D := Icc (10: \u211d) (13: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (10: \u211d) (13: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to show that the function f(x) = 7 * x ^ 2 - 140 * x + 4200 is monotonic on the interval D = [10, 13]. We approach the proof by first proving that D is convex, then that the derivative of f is positive on the interior of D, and then that f is continuous on D. With these results we can conclude monotonicity.  We start by showing that D is convex. This follows since any closed interval in \u211d is convex. Next, we want to show that the derivative of f is positive on the interior of D: Assume x is an element of the interior of D. This means 10 < x < 13. The next step is to differentiate f, using the relevant rules for sums, products, and powers, which eventually leads to needing to show that the derivative expression is positive for x in (10, 13). We then show that the resulting derivative (which is a linear function in x) is positive on this interval, perhaps using the fact that x is greater than 10 (from the hypothesis). The differentiability of each term must also be shown as part of this process. Having completed these sub-steps, we establish that the derivative is positive on the interior. Then, we show that f is continuous on D. This can be done by demonstrating that each term of f (the polynomials and constant) is continuous, and sums and differences of continuous functions remain continuous. Combining these results, we can conclude that f is monotonic on D.  The proof is now complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 2 - 100 * x + 2000) (Icc (5: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 2 - 100 * x + 2000\n  let D := Icc (5: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (5: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 10 * x ^ 2 - 100 * x + 2000 is monotonic on the set D = [5, 10]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: First, we assume that x is in the interior of D, that is, 5 < x < 10. Second, we differentiate the function, applying the necessary differentiation rules for sums, products, and constants. This simplifies to checking that 20 * x - 100 > 0. Third, we must show the resulting inequality, namely that for x > 5, 20 * x - 100 > 0. This follows easily from the lower bound on x. Finally, for every differentiation rule used, we confirm the differentiability of the relevant functions is justified. We can demonstrate continuity by proving that each term in the polynomial is continuous, which ensures that the function itself is continuous on D. Using these results, we can conclude that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 2 - 160 * x + 1920) (Icc (8: \u211d) (15: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 2 - 160 * x + 1920\n  let D := Icc (8: \u211d) (15: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (8: \u211d) (15: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 10 * x ^ 2 - 160 * x + 1920 is monotonic on the interval D = [8, 15]. We do this by first establishing that D is convex, then proving the derivative of f is positive on the interior of D, next showing f is continuous on D, and finally combining these facts to conclude monotonicity. We establish that D is convex. This follows from the general result that closed intervals in \u211d are convex. To prove the derivative of f is positive on the interior of D: We assume x is an interior point of D, i.e., 8 < x < 15. We differentiate the function f. This step includes repeatedly applying differentiation rules for polynomials (sum, difference, product, constant, and power). Simplifying, we see it is enough to show that 20 * x - 160 > 0 when 8 < x < 15. We show that this inequality holds for all x in the open interval (8, 15), which follows from straightforward algebra given the lower bound on x. 2.5. We verify that differentiability holds for all constituent functions used in the differentiation process. We show that f is continuous on D, by noting that it is a polynomial and each term (as a function of x) is continuous, and thus so is their sum. Finally, using that D is convex, f is continuous, and the derivative is positive on the interior, we may conclude f is monotonic on D. This completes the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 90 * x + 4050) (Icc (9: \u211d) (11: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 90 * x + 4050\n  let D := Icc (9: \u211d) (11: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (11: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial \\( f(x) = 5x^2 - 90x + 4050 \\) is monotonic on the set \\( D = [9, 11] \\). We will do so by first proving that \\( D \\) is convex. Then we will prove that the derivative of \\( f \\) is positive on the interior of \\( D \\). Then we will show that \\( f \\) is continuous on \\( D \\). Finally, we can conclude it is monotonic on \\( D \\).  We can prove \\( D \\) is convex by using the fact that any closed interval is convex. To prove the derivative of \\( f \\) is positive on the interior of \\( D \\), we can do the following: First, we can assume that \\( x \\) is in the interior of \\( D \\), that is, \\( 9 < x < 11 \\). Then, we differentiate the function, applying the usual rules for derivatives of polynomials. This will show that it suffices to prove that \\( 10x - 90 > 0 \\). Next, we must show the inequality holds for \\( x \\) in the interval \\( (9, 11) \\). This is a straightforward real inequality arguing \\( x > 9 \\) implies \\( 10x - 90 > 0 \\). Finally, recall that we must show the differentiability of all parts of the function where we applied derivative rules. We can show continuity by showing that each term in the polynomial is continuous, and thus their sum is continuous. Using these facts, we can conclude that \\( f \\) is monotonic on \\( D \\).  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 2 - 180 * x + 6480) (Icc (9: \u211d) (18: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 2 - 180 * x + 6480\n  let D := Icc (9: \u211d) (18: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (18: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to show that the function f(x) = 10 * x ^ 2 - 180 * x + 6480 is monotonic on the interval D = [9, 18]. The proof proceeds by first establishing convexity of D, then showing that the derivative of f is positive in the interior of D, verifying continuity of f over D, and then concluding monotonicity. We show that D is convex. This follows by recognizing that any closed interval is convex. To prove that the derivative of f is positive on the interior of D: We fix an x in the interior of D, that is, with 9 < x < 18. We compute the derivative of f, applying differentiation rules systematically to each term in the expression, and reduce the problem to proving that 20 * x - 180 > 0. We verify that this inequality holds for all x in (9, 18), which is straightforward to check. Each application of a differentiation rule above requires justification that the corresponding function is differentiable, which we establish term by term. We check that f is continuous on D. This can be concluded by exhibiting that each term in f is continuous and thus their sum and difference gives a continuous function. With D convex, f continuous on D, and f' positive in the interior, we conclude that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 2 - 32 * x + 512) (Icc (8: \u211d) (14: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 2 - 32 * x + 512\n  let D := Icc (8: \u211d) (14: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (8: \u211d) (14: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 2 * x ^ 2 - 32 * x + 512 is monotonic on the set D = [8, 14]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D.  We can prove D is convex by using the theorem that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: First, assume that x is in the interior of D, that is, 8 < x < 14. Differentiate the function, using the appropriate differentiation rules for polynomials and combinations thereof. This will give an expression for f' in terms of x, and we want to show this is positive for all x in the interior of D. Show that the resulting expression (after simplification) is positive for all x in (8, 14). You may do this by direct estimation, algebraic manipulation, or considering the bounds on x given by the interval. At each differentiation step, you will need to check differentiability of the component functions used. Show that f is continuous on D by verifying the continuity of each term and operations in f (all polynomials are continuous, so this is straightforward). Using these facts\u2014convexity of D, positivity of the derivative on the interior, and continuity of f\u2014you can conclude that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 2 - 20 * x + 70) (Icc (1: \u211d) (4: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 2 - 20 * x + 70\n  let D := Icc (1: \u211d) (4: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (4: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 10 * x ^ 2 - 20 * x + 70 is monotonic on the set D = [1, 4]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the theorem that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can proceed as follows: First, assume x is in the interior of D, i.e., 1 < x < 4. Compute the derivative of f by applying the relevant differentiation rules for products, powers, and sums. Simplify the resulting expression, and show that the inequality for positivity holds. This typically reduces to checking an explicit inequality given the interval for x. Recall that each differentiation rule applied in (b) requires proving differentiability of the constituent functions, so verify that here. Now we have verified that f' is positive on the interior of D. Show continuity of f on D, which can be done by checking that each term in the polynomial is continuous, and hence the sum is continuous. Using the previous results, conclude that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 14 * x + 63) (Icc (1: \u211d) (3: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 14 * x + 63\n  let D := Icc (1: \u211d) (3: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (3: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 7 * x ^ 2 - 14 * x + 63 is monotonic on the set D = [1, 3]. We will do so by first proving that D is convex. Then, we will show that the derivative of f is positive on the interior of D. Next, we will confirm that f is continuous on D. Finally, using these facts, we can conclude that f is monotonic on D.  We can prove D is convex by using the general result that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we proceed as follows: Assume x is in the interior of D, that is, 1 < x < 3. Differentiate f(x), using standard differentiation rules; this reduces the problem to showing that the expression 14 * x - 14 > 0 on the interval. Show that this inequality holds when x > 1; this is immediate since 14 * x > 14 when x > 1. Recall that each differentiation rule used requires the differentiability of the terms involved, so we establish differentiability of each function present. At this point, we have proven that f' is positive on the interior of D. To establish continuity, observe that each term (both polynomials and constant functions) is continuous and their sums and differences preserve continuity, so f is continuous on D. Now, we can conclude, from these facts, that f is monotonic on D.  Thus, the result follows."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 84 * x + 882) (Icc (7: \u211d) (11: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 84 * x + 882\n  let D := Icc (7: \u211d) (11: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (7: \u211d) (11: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 6 * x^2 - 84 * x + 882 is monotonic on the interval D = [7, 11]. To do so, we will use properties of polynomials and real analysis: First, we prove that D is convex. This follows from the fact that every closed interval is convex. Next, we show that the derivative of f is positive on the interior of D. We assume x is in the interior of D, i.e., 7 < x < 11. We differentiate f, applying differentiation rules step by step. This yields an expression for f', and we simplify to see that f'(x) = 12 * x - 84. We now prove that 12 * x - 84 > 0 for x in (7, 11). This is a straightforward inequality using the lower bound of x in the interval. Each application of the differentiation rules in step (b) requires verifying differentiability of the constituent functions, which we address here. Now that we have f' > 0 on the interior of D, we need to show that f is continuous on D. This follows by showing continuity of the basic polynomial terms and their sums. With convexity of D, continuity of f, and f' > 0 on the interior, we may conclude that f is monotonic (specifically, strictly increasing) on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 2 - 16 * x + 224) (Icc (4: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 2 - 16 * x + 224\n  let D := Icc (4: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 2 * x ^ 2 - 16 * x + 224 is monotonic on the set D = [4, 8]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: Assume that x is in the interior of D, that is, 4 < x < 8. Differentiate the function, applying differentiation rules as needed. This will show that it suffices to prove 4 * x - 16 > 0, after simplifying the derivative expression. Show that this inequality is true; since x > 4, it is straightforward to show that 4 * x - 16 > 0. Recall that each differentiation rule we used requires that we prove differentiability of the constituent functions; we can check these here. Now we have shown that f' is positive on the interior of D. To show continuity, we can observe that each term in the polynomial is continuous, and thus the sum is continuous. Using these facts, we can then conclude that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 70 * x + 1050) (Icc (5: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 70 * x + 1050\n  let D := Icc (5: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (5: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 7 * x^2 - 70 * x + 1050 is monotonic on the set D = [5, 7]. We will do this by first showing D is convex, then show that the derivative of f is positive on the interior of D, then that f is continuous on D, which allows us to conclude the required monotonicity. We show that D is convex. This follows since any closed interval is convex. To show that the derivative of f is positive on the interior of D, we proceed as follows: Assume x is in the interior of D, meaning 5 < x < 7. Differentiate f by applying differentiation rules as necessary to each term. After simplifying, it will be sufficient to show that 14 * x - 70 > 0 for all x in the interior of D. We now prove this inequality given that x > 5 (from 2.1), which yields a linear inequality that is easy to check. For each differentiation step in 2.2, recall that you need to justify that the pieces you differentiate are themselves differentiable. Next, we show that f is continuous on D. Since all terms are polynomials (or constants), this will follow by observing each term is continuous, hence so is their sum. Having established convexity, strict positivity of the derivative on the interior, and continuity, we can conclude f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 90 * x + 1215) (Icc (9: \u211d) (17: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 90 * x + 1215\n  let D := Icc (9: \u211d) (17: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (17: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to show that the function f(x) = 5 * x^2 - 90 * x + 1215 is monotonic on D = [9, 17]. We do this by establishing convexity of D, positivity of the derivative on the interior, continuity on D, and then deducing monotonicity. We first show that D is convex, which follows since any closed interval is convex. Next, we show the derivative of f is positive in the interior of D: Assume x is in the interior of D, that is, 9 < x < 17. Compute the derivative of f. This requires multiple steps applying differentiation rules to each term of the polynomial. After differentiation, you\u2019ll see the expression can be simplified to an inequality in x (in this case: 10 * x - 90 > 0). Show that, since x > 9, the simplified expression is positive. This may require a short argument using elementary inequalities. 2.5. Each differentiation rule used requires justifying that the involved functions are differentiable at the point x. Prove that f is continuous on D. This follows because each constituent term (polynomials and constants) is continuous, so their sum is continuous on D. With convexity, derivative positivity, and continuity established, conclude that f is monotonic on D. The proof is now complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 2 - 144 * x + 2880) (Icc (8: \u211d) (11: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 2 - 144 * x + 2880\n  let D := Icc (8: \u211d) (11: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (8: \u211d) (11: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 9 * x ^ 2 - 144 * x + 2880 is monotonic on the set D = [8, 11]. We will proceed by showing D is convex, the derivative of f is positive on the interior of D, and that f is continuous on D. This will allow us to conclude that f is monotonic on D. First, we show that D is convex. This follows from the general result that any closed interval is convex. Next, we show that the derivative of f is positive on the interior of D: Assume x is in the interior of D, i.e., 8 < x < 11. Compute the derivative of f using basic differentiation rules (such as for addition, subtraction, multiplication, and powers), yielding an explicit formula for the derivative. Some algebraic simplification will be required so that you can see clearly what inequality must be shown. Show that this derivative is positive when x \u2208 (8, 11). In this quadratic case, you only need to confirm the inequality for the given range of x, which can be done using the hypothesis about x. Throughout, verify the differentiability of all component functions involved in the construction of f and its derivative. Establish that f is continuous on D. This can be shown by demonstrating each term (and thus the sum) is continuous, based on properties of polynomials. Combined, these results allow us to conclude that f is monotonic on D by invoking an appropriate result about monotonicity when the derivative is positive, the set is convex, and the function is continuous. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 48 * x + 768) (Icc (4: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 48 * x + 768\n  let D := Icc (4: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 6 * x^2 - 48 * x + 768 is monotonic on the interval D = [4, 8]. We will do so by showing that D is convex, that the derivative of f is positive on the interior of D, and that f is continuous on D, so that monotonicity follows. First, we prove D is convex by noting that any closed interval is convex. To prove that the derivative of f is positive on the interior of D, we proceed as follows: Assume x is in the interior of D, i.e., 4 < x < 8. Compute the derivative. This involves differentiating each term and simplifying, which will show that f' is a linear expression in x. Demonstrate that the resulting expression is positive for all x in (4, 8). In this case, you'll need to perform some simple inequalities using the lower bound of x from the interval. Justify differentiability of the terms used in these differentiations. Thus, we conclude that the derivative is positive on the interior. Argue that f is continuous on D, as each term in the polynomial is continuous, and thus their linear combinations are continuous. Now, since the set is convex, f is continuous on D, and the derivative is positive on the interior, we may conclude f is monotonic on D. That completes the argument."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 9 * x ^ 2 - 144 * x + 2880) (Icc (8: \u211d) (14: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 9 * x ^ 2 - 144 * x + 2880\n  let D := Icc (8: \u211d) (14: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (8: \u211d) (14: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 9 * x ^ 2 - 144 * x + 2880 is monotonic on the set D = [8, 14]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can proceed as follows: First, assume x is in the interior of D, that is, 8 < x < 14. Next, differentiate the function. This will require applying differentiation rules several times. Upon simplification, it will suffice to show that 18 * x - 144 > 0. Then, show that this inequality holds for all x in the interval, i.e., show that 18 * x - 144 is positive whenever 8 < x < 14. Recall that applying differentiation rules requires proving the differentiability of the building-block functions. Now we have proven that f' is positive on the interior of D. To show continuity, observe that each term in the polynomial is continuous, and so their sum is as well. Using these facts, we can then conclude that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 2 - 80 * x + 800) (Icc (4: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 2 - 80 * x + 800\n  let D := Icc (4: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 10 * x ^ 2 - 80 * x + 800 is monotonic on the set D = [4, 8]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D.  We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: First, assume x is in the interior of D, i.e., 4 < x < 8. Next, differentiate the function, which will require using rules for differentiation of sums, differences, and powers. This reduces the problem to showing that 20 * x - 80 > 0 for x in the interval. Then, show this inequality holds on the interval 4 < x < 8 (for example, by using simple inequalities and arithmetic). Recall that each differentiation rule used in 2.2 relies on differentiability of the relevant expressions for x in the domain, so we should check those. Now we have proven that f' is positive on the interior of D. We can show continuity by checking that each term (a quadratic, linear, and constant term) is continuous, and therefore their sum is continuous. Using all these facts, we can conclude that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 24 * x + 324) (Icc (3: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 24 * x + 324\n  let D := Icc (3: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 4 * x ^ 2 - 24 * x + 324 is monotonic on the set D = [3, 7]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we proceed as follows: First, we assume x is in the interior of D, that is, 3 < x < 7. Next, we differentiate the function. This will involve repeated use of differentiation rules (e.g., product, power, addition, subtraction). After simplification, we will get a linear expression, and we then need to show that this expression is positive on the interior of D. Then, we show the resulting inequality is true for all x in (3, 7), which should be straightforward. Each rule of differentiation applied in the previous steps requires separate justification of differentiability of the component functions, which we verify here. To show continuity on D, we confirm that each term of the polynomial is continuous and thus the sum is continuous on D. With all these established, we can conclude that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 10 * x ^ 2 - 20 * x + 100) (Icc (1: \u211d) (6: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 10 * x ^ 2 - 20 * x + 100\n  let D := Icc (1: \u211d) (6: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (6: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 10 * x^2 - 20 * x + 100 is monotonic on the set D = [1, 6]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D.  We can prove D is convex by using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: First, we can assume that x is in the interior of D, that is, 1 < x < 6. Next, we differentiate the function, using relevant rules for sums, products, constants, and powers. This will show it suffices to prove 20 * x - 20 > 0. We then show this inequality is true. In this case, since x > 1, this is easy to establish. We must also show each component is differentiable to justify the steps in the computation of the derivative. We can show continuity of f by proving that each term (as a polynomial) is continuous, and hence f is continuous on D. Using these results, we can then conclude that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 98 * x + 1372) (Icc (7: \u211d) (12: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 98 * x + 1372\n  let D := Icc (7: \u211d) (12: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (7: \u211d) (12: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 7 * x ^ 2 - 98 * x + 1372 is monotonic on the set D = [7, 12]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D.  We can prove D is convex by using the theorem that any closed interval is convex. To prove the derivative of f is positive on the interior of D, we can do the following: First, we assume x is in the interior of D, that is, 7 < x < 12. Next, we differentiate the function by applying the differentiation rules (such as sum, product, constant, and power rules) in sequence. This will show that the derivative simplifies to 14 * x - 98. Then, we need to show that 14 * x - 98 > 0 for x in (7, 12). This follows by noting x > 7, so 14 * x > 98. Afterwards, we need to prove that differentiation rules used above are valid by establishing the differentiability of the constituent terms. We can show f is continuous on D, because each term (polynomials and constants) is continuous, and the sum and difference of continuous functions are also continuous. Using these results, we can conclude that f is monotonic on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 42 * x + 252) (Icc (3: \u211d) (12: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 42 * x + 252\n  let D := Icc (3: \u211d) (12: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (12: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 7 * x ^ 2 - 42 * x + 252 is monotonic on the set D = [3, 12]. We will proceed by first showing D is convex, then showing that the derivative of f is positive on the interior of D, then establishing that f is continuous on D, and using these to conclude monotonicity.  We can prove that D is convex, since any closed interval is convex. To show that the derivative of f is positive on the interior of D: Assume x is in the interior of D, that is, 3 < x < 12. Compute the derivative of f. This will involve applying differentiation rules to each term of the polynomial. After simplification, it suffices to show that 14 * x - 42 > 0. Next, we must show that this expression is indeed positive for x in (3, 12). Since 14 * x - 42 is increasing and is clearly positive for all x > 3, this can be shown using properties of inequalities and basic algebra. Each differentiation rule used previously requires us to establish the differentiability of the involved functions (e.g., powers and products), which we check for completeness. Now we have verified the derivative is positive on the interior of D. We can show that f is continuous on D by noting that it is a polynomial, and thus each term is continuous, so the whole function is continuous. Using the convexity of D, the positivity of the derivative on its interior, and continuity on D, we can deduce that f is monotonic on D.  This completes the argument."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 56 * x + 112) (Icc (4: \u211d) (14: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 56 * x + 112\n  let D := Icc (4: \u211d) (14: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (14: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 7 * x^2 - 56 * x + 112 is monotonic on the interval D = [4, 14]. We will proceed by first showing that D is convex, then that the derivative of f is positive on the interior of D, then that f is continuous on D, and finally deducing monotonicity.  First, we show that D is convex. Any closed interval in \u211d is convex, so this step follows easily. Next, we show that the derivative of f is positive on the interior of D: We assume x is in the interior of D, so 4 < x < 14. We compute the derivative of f(x), which will require using linearity and the product/power rule on each term. This yields an expression; we then simplify it to something like 14 * x - 56. We need to show this simplified derivative is positive for x in (4, 14). This reduces to an inequality, which can be checked by simple arithmetic using the lower bound for x. We also need to verify the differentiability of each function involved (all polynomials and affine functions, so this is immediate). We then prove that f is continuous by noting each term (a polynomial or constant multiple) is continuous, so the sum is continuous, and thus f is continuous on D. With these facts (convexity of D, positivity of the derivative on the interior, and continuity), we can conclude by applying a general result about monotonicity on convex sets for functions with positive derivatives.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 2 * x ^ 2 - 4 * x + 8) (Icc (1: \u211d) (11: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 2 * x ^ 2 - 4 * x + 8\n  let D := Icc (1: \u211d) (11: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (11: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to show that the polynomial f(x) = 2 * x^2 - 4 * x + 8 is monotonic on the interval D = [1, 11]. We will do this by demonstrating that D is convex, the derivative of f is positive on the interior of D, and that f is continuous on D. We can then conclude f is monotonic on D. D is convex because any closed interval in \u211d is convex. To show the derivative of f is positive on the interior of D, we proceed as follows: Take any x in the interior of D; in this case, 1 < x < 11. Compute the derivative of f, combining differentiation rules such as for polynomials and sums/subtractions. After simplifying, the key is to show that 4 * x - 4 > 0. To finish this part, observe that since x > 1, we have 4 * x - 4 > 0. This shows the derivative is positive throughout the interior. Each differentiation used requires we verify differentiability of the terms, which are all polynomials or simple functions, so this is straightforward. For continuity, show each term of f is continuous and thus their sum is continuous on D. Having verified convexity, positivity of the derivative on the interior, and continuity, we conclude f is monotonic on D. Done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 70 * x + 1750) (Icc (5: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 70 * x + 1750\n  let D := Icc (5: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (5: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial \\( f(x) = 7x^2 - 70x + 1750 \\) is monotonic on the interval \\( D = [5, 8] \\). We achieve this through the following steps: First, show that the domain \\( D \\) is convex. This follows because any closed interval on \\( \\mathbb{R} \\) is convex. Next, prove that the derivative of \\( f \\) is positive on the interior of \\( D \\): Assume \\( x \\) is in the interior of \\( D \\), i.e., \\( 5 < x < 8 \\). Differentiate \\( f \\), using the sum, product, and power differentiation rules as necessary. You will see that the derivative simplifies to a linear expression in \\( x \\). Show that this derivative is positive for all \\( x \\) with \\( 5 < x < 8 \\). This will involve an explicit check given the interval. Verify that each function you differentiated is actually differentiable where required. Prove that \\( f \\) is continuous on \\( D \\) by showing that each term in the polynomial is continuous, so their combination is as well. Finally, deduce that \\( f \\) is monotonic on \\( D \\) by appealing to the positivity of its derivative on the interior, the convexity of the interval, and the continuity of \\( f \\).  Now the argument is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 6 * x ^ 2 - 72 * x + 1296) (Icc (6: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 6 * x ^ 2 - 72 * x + 1296\n  let D := Icc (6: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (6: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the quadratic polynomial f(x) = 6 * x ^ 2 - 72 * x + 1296 is monotonic on the interval D = [6, 10]. We will do so by showing D is convex, the derivative of f is positive on the interior of D, and f is continuous on D. This will allow us to conclude monotonicity.  First, we prove that D is convex. This follows because any closed interval in \u211d is convex. Next, we show that the derivative of f is positive on the interior of D: Assume x is in the interior of D, so 6 < x < 10. Compute the derivative of f. Using rules for polynomial differentiation, simplify the result to obtain an explicit expression for f'(x). Show that this expression is positive whenever 6 < x < 10. This involves a straightforward inequality for a linear function, which follows from the bounds on x. Note that for each differentiation and simplification, you will need to confirm differentiability of the respective parts (constants, identities, powers, sums, subtractions, etc). Establish that f is continuous on D. This follows directly since f is a sum of continuous functions (polynomials are continuous everywhere), and you should justify each term's continuity. Now you may conclude that f is monotonic on D, via the positivity of the derivative and the structure provided by convexity and continuity.  You are now done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 8 * x ^ 2 - 64 * x + 128) (Icc (4: \u211d) (12: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 8 * x ^ 2 - 64 * x + 128\n  let D := Icc (4: \u211d) (12: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (12: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the quadratic polynomial f(x) = 8 * x ^ 2 - 64 * x + 128 is monotonic on D = [4, 12]. The general strategy is to check convexity of D, show the derivative is positive on the interior, demonstrate continuity, and then deduce monotonicity. Here's how each step aligns with the proof structure:  Show D is convex. This can be done by using the fact that any closed interval is convex. Show the derivative of f is positive on the interior of D. Assume x is in the interior of D; that is, 4 < x < 12. Compute the derivative; use differentiation rules as needed. 2.2.1. The derivative simplifies to 16 * x - 64. Show that this expression is positive whenever 4 < x < 12. Prove the desired inequality: 16 * x - 64 > 0 for x in (4, 12) (that is, x > 4), which is clearly true in the interior of D. Whenever differentiation rules are applied, confirm differentiability of the constituent functions. Show continuity of f on D. This is immediate, as sums and differences of continuous functions (like polynomials) are continuous. Conclude that f is monotonic on D, since all the hypotheses are satisfied. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 32 * x + 192) (Icc (4: \u211d) (13: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 32 * x + 192\n  let D := Icc (4: \u211d) (13: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (13: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 4 * x ^ 2 - 32 * x + 192 is monotonic on the interval D = [4, 13]. We will achieve this by first showing that D is convex, then proving that the derivative of f is positive on the interior of D, and then demonstrating that f is continuous on D. These together allow us to conclude monotonicity. The interval D is convex; this follows from a general fact about closed intervals. To prove the derivative of f(x) is positive on the interior of D, we proceed as follows: Assume x is in the interior of D, i.e., 4 < x < 13. Differentiate f with respect to x, using the standard rules for polynomials (linearity, constant multiple, power rule, etc.), and simplify to reach an expression depending on x. Show that it suffices to prove an inequality involving x. Prove that the resulting inequality is true for x in the interior of D. In this case, check the sign of the expression for all x in (4,13) and use properties of x in that interval to justify the strict positivity. Check the differentiability of each term as part of the justification for applying differentiation rules. Show f is continuous on D by using continuity properties of polynomials (they are continuous everywhere, and sums/differences/products of continuous functions are continuous). With the above facts, conclude f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 3 * x ^ 2 - 18 * x + 189) (Icc (3: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 3 * x ^ 2 - 18 * x + 189\n  let D := Icc (3: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (3: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to show that the function f(x) = 3 * x ^ 2 - 18 * x + 189 is monotonic on the interval D = [3, 10]. We do this by following a sequence of intermediate steps.  First, we establish that the set D is convex. This follows from the property that any closed interval in the real numbers is convex. Next, we prove that the derivative of f is positive on the interior of D. This involves several sub-steps: Assume x is in the interior of D, so 3 < x < 10. Differentiate f using the appropriate rules for addition, subtraction, multiplication, and powers. After simplification, you will need to show that the expression 6 * x - 18 is positive. Prove that this expression is positive by using the fact that x > 3 in the interior of D. Justify that all differentiation steps are valid by confirming differentiability of each constituent function. Then, show that f is continuous on D. This follows from the continuity of each term (polynomials and constants) and their combinations. Finally, combine these results to conclude that f is monotonic on D. Now the argument is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 8 * x + 12) (Icc (1: \u211d) (9: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 8 * x + 12\n  let D := Icc (1: \u211d) (9: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (1: \u211d) (9: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 4 * x ^ 2 - 8 * x + 12 is monotonic on the set D = [1, 9]. We will do so by first showing D is convex, then proving the derivative of f is positive on the interior of D, then showing f is continuous on D, and finally concluding that f is monotonic on D.  First, we can show that D is convex by using the property that a closed interval is convex. To show that the derivative of f is positive on the interior of D, we proceed as follows: Assume x is in the interior of D, so 1 < x < 9. Compute the derivative of f by applying differentiation rules repeatedly. This results in a linear expression in x, and some algebraic simplification will reduce it to a simpler form. Show that this simplified form is positive for x in (1, 9). In this case, this is a linear inequality which can be verified using the lower bound for x. For each differentiation rule used in 2.2, we need to show that the relevant functions are differentiable, which is straightforward for polynomials. Next, we prove that f is continuous on D by noting that each term is continuous, and thus their sum is as well. With all these results, we can conclude that f is monotonic on D.  Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 126 * x + 5670) (Icc (9: \u211d) (16: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 126 * x + 5670\n  let D := Icc (9: \u211d) (16: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (9: \u211d) (16: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We want to prove that the polynomial f(x) = 7 * x ^ 2 - 126 * x + 5670 is monotonic on the interval D = [9, 16]. We'll proceed by first establishing that D is convex, then proving that the derivative of f is positive on the interior of D, then showing that f is continuous on D, and finally concluding monotonicity.  We can show that D is convex since any closed interval is convex. To show that the derivative of f is positive on the interior of D, we proceed as follows: First, assume that x belongs to the interior of D, that is, 9 < x < 16. Next, differentiate the function f(x). This involves applying the sum, subtraction, constant, and power differentiation rules. This will reduce the problem to an inequality involving x, specifically of the form 14 * x - 126 > 0. Then, argue that 14 * x - 126 > 0 holds for x in (9, 16). This is a straightforward linear inequality to check given the constraints on x. Throughout the differentiation process, you'll need to justify differentiability for each term involved. The continuity of f on D can be demonstrated by noting that each term is continuous and so their combination is as well. With these facts, you can now conclude f is monotonic on D.  That's the overall structure needed for the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 5 * x ^ 2 - 60 * x + 1080) (Icc (6: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 5 * x ^ 2 - 60 * x + 1080\n  let D := Icc (6: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (6: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 5 * x ^ 2 - 60 * x + 1080 is monotonic on the set D = [6, 8]. We will do this by first proving D is convex, then that the derivative of f is positive on the interior of D, then that f is continuous on D, and finally conclude monotonicity.  We show D is convex using the fact that any closed interval is convex. To prove the derivative of f is positive on the interior of D, proceed as follows: Assume x is in the interior of D, i.e., 6 < x < 8. Differentiate the function. Write the result in terms of x. This will require using rules for differentiation such as sum/difference, scaling, and product/power, which get you to an explicit expression for f'. Show that the obtained expression is positive for x in (6, 8). In this case, after expansion and simplification, it will reduce to an explicit inequality in x, and since x > 6 this will be straightforward. Ensure to prove each function in the sum/difference/multiplication is differentiable as justification for each differentiation step. Argue that f is continuous on D, which follows from the fact that polynomials are continuous, or by explicitly noting that each term is continuous and thus so is their sum and difference. Use these facts (convexity of D, positivity of derivative on the interior, and continuity) to deduce monotonicity of f on D.  Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 4 * x ^ 2 - 40 * x + 300) (Icc (5: \u211d) (7: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 4 * x ^ 2 - 40 * x + 300\n  let D := Icc (5: \u211d) (7: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (5: \u211d) (7: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the polynomial f(x) = 4 * x^2 - 40 * x + 300 is monotonic on the set D = [5, 7]. We will do so by first proving that D is convex. Then we will prove that the derivative of f is positive on the interior of D. Then we will show that f is continuous on D. Finally, we can conclude it is monotonic on D. We can show that D is convex by using the fact that any closed interval in \u211d is convex. To prove the derivative of f is positive on the interior of D, we do the following: Assume that x is in the interior of D, that is, 5 < x < 7. Differentiate the function, which involves using rules for differentiation several times (such as sum, difference, constant multiple, and power rules). After simplifying, this will reduce to needing to show the inequality 8 * x - 40 > 0 holds for all x in (5, 7). Show that this inequality is indeed true for 5 < x < 7 by reasoning about the bounds for x; this is typically done using basic algebra and the information about the interval. Recall that each application of the differentiation rules in 2.2 requires that we justify differentiability of the individual functions involved; we do so here. We can show continuity by noting that each term in the polynomial is continuous, and thus the sum is also continuous, which can be concluded directly from basic results about continuity. Using the previous results, we can conclude that f is monotonic on D. Now we are done."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 3 * x ^ 2 - 48 * x + 576) (Icc (8: \u211d) (11: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 3 * x ^ 2 - 48 * x + 576\n  let D := Icc (8: \u211d) (11: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (8: \u211d) (11: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to prove that the function f(x) = 3 * x ^ 2 - 48 * x + 576 is monotonic on the interval D = [8, 11]. To do this, we proceed as follows: First, we show that the domain D is convex. This follows from the general property that any closed interval in \u211d is convex. Next, we show that the derivative of f is positive on the interior of D: Assume that x is in the interior of D, that is, 8 < x < 11. Differentiate f(x), applying the standard differentiation rules for the sum, difference, constant multiples, powers, and constants. The result will be a linear expression in x, and we simplify this expression. Show that the resulting inequality for the derivative is positive for all x in the interior of D. This usually follows by substituting the bounds from (2.1) and showing the inequality holds, potentially using linarith or similar basic reasoning. Confirm as part of the differentiation step that the differentiability requirements for all function pieces are met, by checking that all relevant functions are differentiable at these x. Show that f is continuous on D. Since sums and products of continuous functions are continuous, and polynomials are continuous everywhere, this is straightforward. Having established these facts, we can then appeal to the theorem that says a function defined on a convex set with a positive derivative on the interior and continuous on the set is monotonic there. This completes the proof."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 28 * x + 168) (Icc (2: \u211d) (10: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 28 * x + 168\n  let D := Icc (2: \u211d) (10: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (2: \u211d) (10: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to show that the function f(x) = 7 * x ^ 2 - 28 * x + 168 is monotonic on the interval D = [2, 10]. We will achieve this by showing D is convex, that the derivative of f is positive on the interior of D, and that f is continuous on D. Then, the function will be monotonic on D. We can show that D is convex, since closed intervals are convex in \u211d. To show the derivative of f is positive on the interior of D: Assume x is in the interior of D, i.e., 2 < x < 10. Next, differentiate the function. You will use standard differentiation rules for polynomials and simplification. You ultimately need to show an inequality of the form 14 * x - 28 > 0. Show this inequality holds for all x in the interior of D. One way is to use the fact that x > 2 and argue algebraically that the expression is positive on this interval. In order to justify each differentiation step, verify differentiability for the component functions (such as x \u21a6 x^2 and x \u21a6 x). Show f is continuous on D by using the fact that each term (power functions, constant multiples, sums) is continuous, so their combination is also continuous. With these facts, you can conclude f is monotonic on D. Now the proof is complete."
    },
    {
        "theorem": "example: MonotoneOn (\u03bb x \u21a6 7 * x ^ 2 - 56 * x + 336) (Icc (4: \u211d) (8: \u211d)) := by",
        "proof": "\n  let f := \u03bb x : \u211d \u21a6 7 * x ^ 2 - 56 * x + 336\n  let D := Icc (4: \u211d) (8: \u211d)\n  have hD: Convex \u211d D := by\n    apply convex_Icc (4: \u211d) (8: \u211d)\n  have hf': \u2200 x0 \u2208 interior D, 0 < deriv f x0 := by\n    intro x hx\n    unfold f\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_const]\n\n    ring\n    rw [interior_Icc] at hx\n    linarith [hx.1]\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    exact differentiableAt_const _\n\n  have hf: ContinuousOn f D := by\n    simp [f]\n    apply (Continuous.add (Continuous.sub (Continuous.mul (continuous_const) (Continuous.pow (continuous_id) _)) (Continuous.mul (continuous_const) (continuous_id))) (continuous_const)).continuousOn\n  change MonotoneOn f D\n  apply (strictMonoOn_of_deriv_pos hD hf hf').monotoneOn\n",
        "annotation": "We need to show that the function f(x) = 7 * x ^ 2 - 56 * x + 336 is monotonic on the interval D = [4, 8]. We'll proceed by establishing that D is convex, then verify that the derivative of f is positive in the interior of D, next show that f is continuous on D, and finally conclude that f is monotonic on D.  First, we verify that D is convex. This can be done by recalling that a closed interval is always convex. Next, we show that the derivative of f is positive on the interior of D: Assume x is in the interior of D; that is, 4 < x < 8. Compute the derivative of f; this will involve applying differentiation rules to each term. Simplify the derivative to an expression involving x, and show that this expression is positive for all x in the interior of D. You can do this by using the fact that x > 4 and the form of the resulting expression. Verify the differentiability of the various terms/components involved in the differentiation. Now you have shown the derivative is positive on the interior of D. Establish that f is continuous on D by showing each term is continuous, so their sum is continuous as well. Finally, combine these facts to conclude that f is monotonic on D. Now the proof is complete."
    }
]