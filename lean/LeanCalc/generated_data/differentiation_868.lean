import Mathlib.Analysis.Calculus.Deriv.Mul
import Mathlib.Analysis.Calculus.Deriv.Pow
import Mathlib.Analysis.SpecialFunctions.Log.Deriv
import Mathlib.Analysis.SpecialFunctions.Trigonometric.Deriv
import Mathlib.Analysis.SpecialFunctions.Trigonometric.Basic
import Mathlib.Analysis.SpecialFunctions.Trigonometric.Inverse
import Mathlib.Analysis.SpecialFunctions.Trigonometric.InverseDeriv
import Mathlib.Analysis.SpecialFunctions.Trigonometric.ArctanDeriv
import Mathlib.Analysis.SpecialFunctions.Trigonometric.Arctan
import Mathlib.Analysis.SpecialFunctions.ExpDeriv
import Mathlib.Analysis.Calculus.Deriv.Inv
import Mathlib.Analysis.Calculus.Deriv.Comp
import Mathlib.Analysis.SpecialFunctions.Sqrt
import Mathlib.Analysis.SpecialFunctions.Exp
import Mathlib.Analysis.SpecialFunctions.Pow.Deriv
open Real

example (x: ℝ)  (h_log_ne_zero_15: x ≠ 0) (h_div_ne_zero_18: (x ^ 3) ≠ 0) (h_div_ne_zero_34: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_35: x ≠ 0) (h_log_ne_zero_37: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_div_ne_zero_18, h_div_ne_zero_34, h_log_ne_zero_35, h_log_ne_zero_37]
ring
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)
exact h_div_ne_zero_34
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_18
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_18)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15)))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_18)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34))

example (x: ℝ)  (h_log_ne_zero_15: x ≠ 0) (h_div_ne_zero_18: (x ^ 3) ≠ 0) (h_div_ne_zero_34: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_35: x ≠ 0) (h_log_ne_zero_37: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_div_ne_zero_18, h_div_ne_zero_34, h_log_ne_zero_35, h_log_ne_zero_37]
ring
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)
exact h_div_ne_zero_34
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_18
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_18)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15)))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_18)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34))

example (x: ℝ)  (h_div_ne_zero_13: (x ^ 3) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_div_ne_zero_34: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_35: x ≠ 0) (h_log_ne_zero_37: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * (x ^ 3) - (Real.cos (Real.log x) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_13, h_log_ne_zero_17, h_div_ne_zero_34, h_log_ne_zero_35, h_log_ne_zero_37]
ring
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)
exact h_div_ne_zero_34
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact differentiableAt_pow _
exact h_div_ne_zero_13
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (differentiableAt_pow _) (h_div_ne_zero_13)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (differentiableAt_pow _) (h_div_ne_zero_13)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34))

example (x: ℝ)  (h_div_ne_zero_13: (x ^ 3) ≠ 0) (h_div_ne_zero_14: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_div_ne_zero_34: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_35: x ≠ 0) (h_log_ne_zero_37: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * (x ^ 3) - (Real.cos (Real.log x) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_13, h_div_ne_zero_14, h_log_ne_zero_17, h_div_ne_zero_34, h_log_ne_zero_35, h_log_ne_zero_37]
ring
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)
exact h_div_ne_zero_34
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_14
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_14)
exact differentiableAt_pow _
exact h_div_ne_zero_13
exact DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_14)) (differentiableAt_pow _) (h_div_ne_zero_13)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_14)) (differentiableAt_pow _) (h_div_ne_zero_13)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34))

example (x: ℝ)  (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + Real.cos (Real.log x) + Real.exp (Real.cos (Real.log x))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_15, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15)))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))

example (x: ℝ)  (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + Real.cos (Real.log x) - Real.exp (Real.cos (Real.log x))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_15, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15)))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))

example (x: ℝ)  (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + Real.cos (Real.log x) * Real.exp (Real.cos (Real.log x))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * Real.exp (Real.cos (Real.log x))) + (Real.cos (Real.log x) * (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_log_ne_zero_15, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))) (DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))))

example (x: ℝ)  (h_div_ne_zero_12: Real.exp ((Real.cos ((Real.log (x))))) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + Real.cos (Real.log x) / Real.exp (Real.cos (Real.log x))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * Real.exp (Real.cos (Real.log x)) - Real.cos (Real.log x) * (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) / Real.exp (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_12, h_log_ne_zero_15, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))
exact h_div_ne_zero_12
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))) (DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))) (h_div_ne_zero_12)

example (x: ℝ)  (h_log_ne_zero_15: x ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15)))
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _)

example (x: ℝ)  (h_log_ne_zero_15: x ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15)))
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _)

example (x: ℝ)  (h_log_ne_zero_17: x ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_17, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _)

example (x: ℝ)  (h_div_ne_zero_14: (x ^ 3) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_14, h_log_ne_zero_17, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))
exact differentiableAt_pow _
exact h_div_ne_zero_14
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (differentiableAt_pow _) (h_div_ne_zero_14)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (differentiableAt_pow _) (h_div_ne_zero_14)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (differentiableAt_pow _) (h_div_ne_zero_14)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _)

example (x: ℝ)  (h_log_ne_zero_16: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - Real.cos (Real.log x) + (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) + (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.add (DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))) (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _

example (x: ℝ)  (h_log_ne_zero_16: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - Real.cos (Real.log x) - (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) - ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sub (DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))) (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _

example (x: ℝ)  (h_log_ne_zero_17: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - Real.cos (Real.log x) * (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * Real.exp x) + (Real.cos (Real.log x) * Real.exp x)) * (x ^ 2 + (3:ℝ))) + ((Real.cos (Real.log x) * Real.exp x) * ((2:ℝ) * x))) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (Real.differentiableAt_exp)
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (Real.differentiableAt_exp)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (Real.differentiableAt_exp)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _

example (x: ℝ)  (h_div_ne_zero_14: (Real.exp (x)) ≠ 0) (h_log_ne_zero_17: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - Real.cos (Real.log x) / (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * Real.exp x - Real.cos (Real.log x) * Real.exp x) / Real.exp x ^ 2) * (x ^ 2 + (3:ℝ))) + ((Real.cos (Real.log x) / Real.exp x) * ((2:ℝ) * x))) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_14, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))
exact Real.differentiableAt_exp
exact h_div_ne_zero_14
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (Real.differentiableAt_exp) (h_div_ne_zero_14)
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (Real.differentiableAt_exp) (h_div_ne_zero_14)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (Real.differentiableAt_exp) (h_div_ne_zero_14)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _

example (x: ℝ)  (h_log_ne_zero_15: x ≠ 0) (h_div_ne_zero_18: (x ^ 3) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_div_ne_zero_28: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_29: x ≠ 0) (h_log_ne_zero_31: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - Real.cos (Real.log x) + Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) + (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_div_ne_zero_18, h_log_ne_zero_21, h_div_ne_zero_28, h_log_ne_zero_29, h_log_ne_zero_31]
ring
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)
exact h_div_ne_zero_28
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact differentiableAt_pow _
exact h_div_ne_zero_18
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))) (differentiableAt_pow _) (h_div_ne_zero_18)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_29)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)) (h_div_ne_zero_28)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15)))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))) (differentiableAt_pow _) (h_div_ne_zero_18)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_29)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)) (h_div_ne_zero_28))

example (x: ℝ)  (h_log_ne_zero_15: x ≠ 0) (h_div_ne_zero_18: (x ^ 3) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_div_ne_zero_28: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_29: x ≠ 0) (h_log_ne_zero_31: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - Real.cos (Real.log x) - Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) - ((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_div_ne_zero_18, h_log_ne_zero_21, h_div_ne_zero_28, h_log_ne_zero_29, h_log_ne_zero_31]
ring
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)
exact h_div_ne_zero_28
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact differentiableAt_pow _
exact h_div_ne_zero_18
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))) (differentiableAt_pow _) (h_div_ne_zero_18)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_29)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)) (h_div_ne_zero_28)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15)))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))) (differentiableAt_pow _) (h_div_ne_zero_18)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_29)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)) (h_div_ne_zero_28))

example (x: ℝ)  (h_div_ne_zero_13: (x ^ 3) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_div_ne_zero_28: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_29: x ≠ 0) (h_log_ne_zero_31: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - Real.cos (Real.log x) * Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * Real.cos (Real.log x)) + (Real.cos (Real.log x) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) * (x ^ 3) - (Real.cos (Real.log x) * Real.cos (Real.log x)) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_13, h_log_ne_zero_17, h_log_ne_zero_21, h_div_ne_zero_28, h_log_ne_zero_29, h_log_ne_zero_31]
ring
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)
exact h_div_ne_zero_28
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))
exact differentiableAt_pow _
exact h_div_ne_zero_13
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))) (differentiableAt_pow _) (h_div_ne_zero_13)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_29)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)) (h_div_ne_zero_28)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))) (differentiableAt_pow _) (h_div_ne_zero_13)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_29)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)) (h_div_ne_zero_28))

example (x: ℝ)  (h_div_ne_zero_13: (x ^ 3) ≠ 0) (h_div_ne_zero_14: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_div_ne_zero_28: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_29: x ≠ 0) (h_log_ne_zero_31: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - Real.cos (Real.log x) / Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * Real.cos (Real.log x) - Real.cos (Real.log x) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2) * (x ^ 3) - (Real.cos (Real.log x) / Real.cos (Real.log x)) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_13, h_div_ne_zero_14, h_log_ne_zero_17, h_log_ne_zero_21, h_div_ne_zero_28, h_log_ne_zero_29, h_log_ne_zero_31]
ring
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)
exact h_div_ne_zero_28
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact h_div_ne_zero_14
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))) (h_div_ne_zero_14)
exact differentiableAt_pow _
exact h_div_ne_zero_13
exact DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))) (h_div_ne_zero_14)) (differentiableAt_pow _) (h_div_ne_zero_13)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_29)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)) (h_div_ne_zero_28)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))) (h_div_ne_zero_14)) (differentiableAt_pow _) (h_div_ne_zero_13)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_29)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)) (h_div_ne_zero_28))

example (x: ℝ)  (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_20: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - Real.cos (Real.log x) + Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) + (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_log_ne_zero_20]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15)))
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_20: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - Real.cos (Real.log x) - Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) - ((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_log_ne_zero_20]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15)))
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_16: x ≠ 0) (h_log_ne_zero_20: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - Real.cos (Real.log x) * Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * Real.cos (Real.log x)) + (Real.cos (Real.log x) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.cos (Real.log x) * Real.cos (Real.log x)) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16, h_log_ne_zero_20]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20))
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20)))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20)))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_13: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_16: x ≠ 0) (h_log_ne_zero_20: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - Real.cos (Real.log x) / Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * Real.cos (Real.log x) - Real.cos (Real.log x) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.cos (Real.log x) / Real.cos (Real.log x)) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_13, h_log_ne_zero_16, h_log_ne_zero_20]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20))
exact h_div_ne_zero_13
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20))) (h_div_ne_zero_13)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20))) (h_div_ne_zero_13)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_15: x ≠ 0) (h_div_ne_zero_17: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) + (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_div_ne_zero_17, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _
exact h_div_ne_zero_17
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15)))
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _) (h_div_ne_zero_17)

example (x: ℝ)  (h_log_ne_zero_15: x ≠ 0) (h_div_ne_zero_17: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) - ((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_div_ne_zero_17, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _
exact h_div_ne_zero_17
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15)))
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _) (h_div_ne_zero_17)

example (x: ℝ)  (h_div_ne_zero_1: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) * (x ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x)) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_17, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17)))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17)))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17)))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_1: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) * (x ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x)) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_3, h_log_ne_zero_17, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17)))
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17)))) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17)))) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_16: x ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _

example (x: ℝ)  (h_log_ne_zero_16: x ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _

example (x: ℝ)  (h_log_ne_zero_16: x ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x)) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _

example (x: ℝ)  (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_16: x ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.exp x * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x)) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_log_ne_zero_16, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _

example (x: ℝ)  (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x) + Real.cos (Real.cos (Real.log x))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) + (-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_15, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15)))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))

example (x: ℝ)  (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x) - Real.cos (Real.cos (Real.log x))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) - ((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_15, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15)))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))

example (x: ℝ)  (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x) * Real.cos (Real.cos (Real.log x))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) * Real.cos (Real.cos (Real.log x))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_15, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15)))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))

example (x: ℝ)  (h_div_ne_zero_1: Real.cos ((Real.cos ((Real.log (x))))) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x) / Real.cos (Real.cos (Real.log x))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) * Real.cos (Real.cos (Real.log x)) - (Real.exp x * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) / Real.cos (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_1, h_log_ne_zero_15, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15)))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_3: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_16: x ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x) + (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2 + (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_16, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))) (h_div_ne_zero_3)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.add (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))) (h_div_ne_zero_3)) (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _

example (x: ℝ)  (h_div_ne_zero_3: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_16: x ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x) - (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2 - ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_16, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))) (h_div_ne_zero_3)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sub (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))) (h_div_ne_zero_3)) (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _

example (x: ℝ)  (h_div_ne_zero_4: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x) * (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2) * Real.exp x) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x)) * Real.exp x)) * (x ^ 2 + (3:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x) * Real.exp x) * ((2:ℝ) * x)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_4, h_log_ne_zero_17, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (h_div_ne_zero_4)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (h_div_ne_zero_4)) (Real.differentiableAt_exp)
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (h_div_ne_zero_4)) (Real.differentiableAt_exp)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _

example (x: ℝ)  (h_div_ne_zero_3: (Real.exp (x)) ≠ 0) (h_div_ne_zero_4: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x) / (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2) * Real.exp x - (Real.exp x * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x)) * Real.exp x) / Real.exp x ^ 2) * (x ^ 2 + (3:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x) / Real.exp x) * ((2:ℝ) * x)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_div_ne_zero_4, h_log_ne_zero_17, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (h_div_ne_zero_4)
exact Real.differentiableAt_exp
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (h_div_ne_zero_4)) (Real.differentiableAt_exp) (h_div_ne_zero_3)
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (h_div_ne_zero_4)) (Real.differentiableAt_exp) (h_div_ne_zero_3)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _

example (x: ℝ)  (h_div_ne_zero_3: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_16: x ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_div_ne_zero_28: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_29: x ≠ 0) (h_log_ne_zero_31: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x) + Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2 + (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_16, h_log_ne_zero_20, h_div_ne_zero_28, h_log_ne_zero_29, h_log_ne_zero_31]
ring
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)
exact h_div_ne_zero_28
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_29)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)) (h_div_ne_zero_28)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))) (h_div_ne_zero_3)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20))
exact DifferentiableAt.add (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))) (h_div_ne_zero_3)) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20)))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_29)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)) (h_div_ne_zero_28))

example (x: ℝ)  (h_div_ne_zero_3: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_16: x ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_div_ne_zero_28: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_29: x ≠ 0) (h_log_ne_zero_31: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x) - Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2 - ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_16, h_log_ne_zero_20, h_div_ne_zero_28, h_log_ne_zero_29, h_log_ne_zero_31]
ring
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)
exact h_div_ne_zero_28
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_29)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)) (h_div_ne_zero_28)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))) (h_div_ne_zero_3)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20))
exact DifferentiableAt.sub (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))) (h_div_ne_zero_3)) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20)))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_29)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)) (h_div_ne_zero_28))

example (x: ℝ)  (h_div_ne_zero_3: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_16: x ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_div_ne_zero_28: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_29: x ≠ 0) (h_log_ne_zero_31: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x) * Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2) * Real.cos (Real.log x)) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_16, h_log_ne_zero_20, h_div_ne_zero_28, h_log_ne_zero_29, h_log_ne_zero_31]
ring
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)
exact h_div_ne_zero_28
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_29)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)) (h_div_ne_zero_28)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))) (h_div_ne_zero_3)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))) (h_div_ne_zero_3)) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20)))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_29)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)) (h_div_ne_zero_28))

example (x: ℝ)  (h_div_ne_zero_2: Real.cos ((Real.log (x))) ≠ 0) (h_div_ne_zero_3: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_16: x ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_div_ne_zero_28: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_29: x ≠ 0) (h_log_ne_zero_31: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x) / Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2) * Real.cos (Real.log x) - (Real.exp x * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2 - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_3, h_log_ne_zero_16, h_log_ne_zero_20, h_div_ne_zero_28, h_log_ne_zero_29, h_log_ne_zero_31]
ring
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)
exact h_div_ne_zero_28
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_29)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)) (h_div_ne_zero_28)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))) (h_div_ne_zero_3)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20))
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))) (h_div_ne_zero_3)) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20))) (h_div_ne_zero_2)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_29)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_31)) (h_div_ne_zero_28))

example (x: ℝ)  (h_div_ne_zero_2: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2 + (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_log_ne_zero_15, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))) (h_div_ne_zero_2)
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _)

example (x: ℝ)  (h_div_ne_zero_2: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2 - ((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_log_ne_zero_15, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_15))) (h_div_ne_zero_2)
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _)

example (x: ℝ)  (h_div_ne_zero_4: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2) * (x ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x)) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_4, h_log_ne_zero_17, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (h_div_ne_zero_4)
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (h_div_ne_zero_4)) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (h_div_ne_zero_4)) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_4: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * Real.cos (Real.log x) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2) * (x ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x)) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_div_ne_zero_4, h_log_ne_zero_17, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (h_div_ne_zero_4)
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (h_div_ne_zero_4)) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_17))) (h_div_ne_zero_4)) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _

example (x: ℝ)  (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_26, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))
exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _

example (x: ℝ)  (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_26, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))
exact DifferentiableAt.sub (DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _

example (x: ℝ)  (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.cos (Real.log x)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_26, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26)))
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _

example (x: ℝ)  (h_div_ne_zero_13: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2 + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_13, h_log_ne_zero_26, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))) (h_div_ne_zero_13)
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))) (h_div_ne_zero_13))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _

example (x: ℝ)  (h_log_ne_zero_26: x ≠ 0) (h_div_ne_zero_34: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_35: x ≠ 0) (h_log_ne_zero_37: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_26, h_div_ne_zero_34, h_log_ne_zero_35, h_log_ne_zero_37]
ring
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)
exact h_div_ne_zero_34
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))
exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26)))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34))

example (x: ℝ)  (h_log_ne_zero_26: x ≠ 0) (h_div_ne_zero_34: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_35: x ≠ 0) (h_log_ne_zero_37: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_26, h_div_ne_zero_34, h_log_ne_zero_35, h_log_ne_zero_37]
ring
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)
exact h_div_ne_zero_34
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))
exact DifferentiableAt.sub (DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26)))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34))

example (x: ℝ)  (h_log_ne_zero_26: x ≠ 0) (h_div_ne_zero_34: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_35: x ≠ 0) (h_log_ne_zero_37: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.cos (Real.log x)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_26, h_div_ne_zero_34, h_log_ne_zero_35, h_log_ne_zero_37]
ring
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)
exact h_div_ne_zero_34
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26)))
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34))

example (x: ℝ)  (h_div_ne_zero_13: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_div_ne_zero_34: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_35: x ≠ 0) (h_log_ne_zero_37: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2 + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_13, h_log_ne_zero_26, h_div_ne_zero_34, h_log_ne_zero_35, h_log_ne_zero_37]
ring
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)
exact h_div_ne_zero_34
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))) (h_div_ne_zero_13)
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))) (h_div_ne_zero_13))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34))

example (x: ℝ)  (h_div_ne_zero_23: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_36: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_23, h_log_ne_zero_36]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_36)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)) _
exact h_div_ne_zero_23
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)) _) (h_div_ne_zero_23)

example (x: ℝ)  (h_div_ne_zero_23: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_36: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_23, h_log_ne_zero_36]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_36)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)) _
exact h_div_ne_zero_23
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)) _) (h_div_ne_zero_23)

example (x: ℝ)  (h_div_ne_zero_12: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_36: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.exp x) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * Real.exp x)) * (x ^ 2 + (3:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * Real.exp x) * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_12, h_log_ne_zero_36]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_36)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (Real.differentiableAt_exp)
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (Real.differentiableAt_exp)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)) _
exact h_div_ne_zero_12
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (Real.differentiableAt_exp)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)) _) (h_div_ne_zero_12)

example (x: ℝ)  (h_div_ne_zero_12: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_14: (Real.exp (x)) ≠ 0) (h_log_ne_zero_36: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.exp x - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * Real.exp x) / Real.exp x ^ 2) * (x ^ 2 + (3:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / Real.exp x) * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_12, h_div_ne_zero_14, h_log_ne_zero_36]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_36)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_exp
exact h_div_ne_zero_14
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (Real.differentiableAt_exp) (h_div_ne_zero_14)
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (Real.differentiableAt_exp) (h_div_ne_zero_14)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)) _
exact h_div_ne_zero_12
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (Real.differentiableAt_exp) (h_div_ne_zero_14)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)) _) (h_div_ne_zero_12)

example (x: ℝ)  (h_log_ne_zero_36: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) + (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_36]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_36)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.add (DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)) _

example (x: ℝ)  (h_log_ne_zero_36: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) - ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_36]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_36)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sub (DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)) _

example (x: ℝ)  (h_log_ne_zero_36: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.exp x) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * Real.exp x)) * (x ^ 2 + (3:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * Real.exp x) * ((2:ℝ) * x))) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_36]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_36)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (Real.differentiableAt_exp)
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (Real.differentiableAt_exp)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (Real.differentiableAt_exp)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)) _

example (x: ℝ)  (h_div_ne_zero_14: (Real.exp (x)) ≠ 0) (h_log_ne_zero_36: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.exp x - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * Real.exp x) / Real.exp x ^ 2) * (x ^ 2 + (3:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / Real.exp x) * ((2:ℝ) * x))) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_14, h_log_ne_zero_36]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_36)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_exp
exact h_div_ne_zero_14
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (Real.differentiableAt_exp) (h_div_ne_zero_14)
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (Real.differentiableAt_exp) (h_div_ne_zero_14)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (Real.differentiableAt_exp) (h_div_ne_zero_14)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)) _

example (x: ℝ)  (h_log_ne_zero_26: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) + (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_26]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))
exact DifferentiableAt.add (DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26)))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _

example (x: ℝ)  (h_log_ne_zero_26: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) - ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_26]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))
exact DifferentiableAt.sub (DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26)))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _

example (x: ℝ)  (h_log_ne_zero_26: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.cos (Real.log x)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_26]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26)))
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _

example (x: ℝ)  (h_div_ne_zero_13: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_26: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_13, h_log_ne_zero_26]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))) (h_div_ne_zero_13)
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))) (h_div_ne_zero_13))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _

example (x: ℝ)  (h_log_ne_zero_26: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) + (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_26]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_26: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) - ((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_26]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_26: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.cos (Real.log x)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * Real.cos (Real.log x)) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_26]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26)))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26)))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_13: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_26: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / Real.cos (Real.log x)) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_13, h_log_ne_zero_26]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))
exact h_div_ne_zero_13
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))) (h_div_ne_zero_13)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_26))) (h_div_ne_zero_13)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) + (-1:ℝ) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ) : deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) - ((-1:ℝ) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ) : deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * Real.cos (Real.exp x * (x ^ 2 + (3:ℝ)))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_1: Real.cos (((Real.exp (x)) * (x ^ 2 + (3:ℝ)))) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) - (Real.exp x * (x ^ 2 + (3:ℝ)) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) / Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_1]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_40: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_41: x ≠ 0) (h_log_ne_zero_43: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) + (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_40, h_log_ne_zero_41, h_log_ne_zero_43]
ring
exact Real.differentiableAt_log (h_log_ne_zero_43)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_41)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)
exact h_div_ne_zero_40
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.add (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40))

example (x: ℝ)  (h_div_ne_zero_40: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_41: x ≠ 0) (h_log_ne_zero_43: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) - ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_40, h_log_ne_zero_41, h_log_ne_zero_43]
ring
exact Real.differentiableAt_log (h_log_ne_zero_43)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_41)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)
exact h_div_ne_zero_40
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sub (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40))

example (x: ℝ)  (h_div_ne_zero_40: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_41: x ≠ 0) (h_log_ne_zero_43: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * Real.exp x) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * Real.exp x)) * (x ^ 2 + (3:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * Real.exp x) * ((2:ℝ) * x)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_40, h_log_ne_zero_41, h_log_ne_zero_43]
ring
exact Real.differentiableAt_log (h_log_ne_zero_43)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_41)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)
exact h_div_ne_zero_40
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (Real.differentiableAt_exp)
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (Real.differentiableAt_exp)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40))

example (x: ℝ)  (h_div_ne_zero_3: (Real.exp (x)) ≠ 0) (h_div_ne_zero_40: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_41: x ≠ 0) (h_log_ne_zero_43: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * Real.exp x - (Real.exp x * (x ^ 2 + (3:ℝ)) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * Real.exp x) / Real.exp x ^ 2) * (x ^ 2 + (3:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / Real.exp x) * ((2:ℝ) * x)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_div_ne_zero_40, h_log_ne_zero_41, h_log_ne_zero_43]
ring
exact Real.differentiableAt_log (h_log_ne_zero_43)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_41)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)
exact h_div_ne_zero_40
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact Real.differentiableAt_exp
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (Real.differentiableAt_exp) (h_div_ne_zero_3)
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (Real.differentiableAt_exp) (h_div_ne_zero_3)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40))

example (x: ℝ)  (h_log_ne_zero_23: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) + ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_23]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_23)

example (x: ℝ)  (h_log_ne_zero_23: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) - (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_23]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_23)

example (x: ℝ)  (h_log_ne_zero_23: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_23]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_23)

example (x: ℝ)  (h_div_ne_zero_1: Real.log (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2)) ≠ 0) (h_log_ne_zero_23: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.exp x * (x ^ 2 + (3:ℝ)) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2))) / Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_23]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_23)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_24: (x ^ 3) ≠ 0) (h_div_ne_zero_40: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_41: x ≠ 0) (h_log_ne_zero_43: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 + (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_24, h_div_ne_zero_40, h_log_ne_zero_41, h_log_ne_zero_43]
ring
exact Real.differentiableAt_log (h_log_ne_zero_43)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_41)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)
exact h_div_ne_zero_40
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_24
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_24)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_24)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40))

example (x: ℝ)  (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_24: (x ^ 3) ≠ 0) (h_div_ne_zero_40: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_41: x ≠ 0) (h_log_ne_zero_43: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 - ((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_24, h_div_ne_zero_40, h_log_ne_zero_41, h_log_ne_zero_43]
ring
exact Real.differentiableAt_log (h_log_ne_zero_43)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_41)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)
exact h_div_ne_zero_40
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_24
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_24)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_24)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40))

example (x: ℝ)  (h_div_ne_zero_2: (x ^ 3) ≠ 0) (h_div_ne_zero_4: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_40: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_41: x ≠ 0) (h_log_ne_zero_43: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * (x ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ)) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_4, h_div_ne_zero_40, h_log_ne_zero_41, h_log_ne_zero_43]
ring
exact Real.differentiableAt_log (h_log_ne_zero_43)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_41)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)
exact h_div_ne_zero_40
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_4)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_4)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact differentiableAt_pow _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_4)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (differentiableAt_pow _) (h_div_ne_zero_2)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40)

example (x: ℝ)  (h_div_ne_zero_2: (x ^ 3) ≠ 0) (h_div_ne_zero_3: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_4: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_40: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_41: x ≠ 0) (h_log_ne_zero_43: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.exp x * (x ^ 2 + (3:ℝ)) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * (x ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ)) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_3, h_div_ne_zero_4, h_div_ne_zero_40, h_log_ne_zero_41, h_log_ne_zero_43]
ring
exact Real.differentiableAt_log (h_log_ne_zero_43)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_41)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)
exact h_div_ne_zero_40
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_4)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_4)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_3)
exact differentiableAt_pow _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_4)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_3)) (differentiableAt_pow _) (h_div_ne_zero_2)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40)

example (x: ℝ)  (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_23: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + Real.log (Real.cos (Real.log x))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 + ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_2, h_log_ne_zero_23, h_log_ne_zero_27]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (h_log_ne_zero_23)

example (x: ℝ)  (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_23: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - Real.log (Real.cos (Real.log x))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 - (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x)) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_2, h_log_ne_zero_23, h_log_ne_zero_27]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (h_log_ne_zero_23)

example (x: ℝ)  (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_23: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * Real.log (Real.cos (Real.log x))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * Real.log (Real.cos (Real.log x))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_2, h_log_ne_zero_23, h_log_ne_zero_27]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (h_log_ne_zero_23)

example (x: ℝ)  (h_div_ne_zero_1: Real.log ((Real.cos ((Real.log (x))))) ≠ 0) (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_23: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / Real.log (Real.cos (Real.log x))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * Real.log (Real.cos (Real.log x)) - (Real.exp x * (x ^ 2 + (3:ℝ)) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x))) / Real.log (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_1, h_div_ne_zero_2, h_log_ne_zero_23, h_log_ne_zero_27]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (h_log_ne_zero_23)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 + (-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)))

example (x: ℝ)  (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 - ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)))

example (x: ℝ)  (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)))

example (x: ℝ)  (h_div_ne_zero_1: Real.cos (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - (Real.exp x * (x ^ 2 + (3:ℝ)) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_2, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_41: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_42: x ≠ 0) (h_log_ne_zero_44: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_41, h_log_ne_zero_42, h_log_ne_zero_44]
ring
exact Real.differentiableAt_log (h_log_ne_zero_44)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_42)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)
exact h_div_ne_zero_41
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41)
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)))
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41))

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_41: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_42: x ≠ 0) (h_log_ne_zero_44: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_41, h_log_ne_zero_42, h_log_ne_zero_44]
ring
exact Real.differentiableAt_log (h_log_ne_zero_44)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_42)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)
exact h_div_ne_zero_41
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41)
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)))
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41))

example (x: ℝ)  (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0) (h_div_ne_zero_41: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_42: x ≠ 0) (h_log_ne_zero_44: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((((((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.exp x) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * Real.exp x)) * (x ^ 2 + (3:ℝ))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.exp x) * ((2:ℝ) * x))) * (x ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25, h_div_ne_zero_41, h_log_ne_zero_42, h_log_ne_zero_44]
ring
exact Real.differentiableAt_log (h_log_ne_zero_44)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_42)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)
exact h_div_ne_zero_41
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))) (Real.differentiableAt_exp)
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))) (Real.differentiableAt_exp)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))) (Real.differentiableAt_exp)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))) (Real.differentiableAt_exp)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41))

example (x: ℝ)  (h_div_ne_zero_15: (Real.exp (x)) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0) (h_div_ne_zero_41: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_42: x ≠ 0) (h_log_ne_zero_44: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((((((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.exp x - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * Real.exp x) / Real.exp x ^ 2) * (x ^ 2 + (3:ℝ))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.exp x) * ((2:ℝ) * x))) * (x ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_15, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25, h_div_ne_zero_41, h_log_ne_zero_42, h_log_ne_zero_44]
ring
exact Real.differentiableAt_log (h_log_ne_zero_44)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_42)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)
exact h_div_ne_zero_41
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact Real.differentiableAt_exp
exact h_div_ne_zero_15
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))) (Real.differentiableAt_exp) (h_div_ne_zero_15)
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))) (Real.differentiableAt_exp) (h_div_ne_zero_15)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))) (Real.differentiableAt_exp) (h_div_ne_zero_15)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))) (Real.differentiableAt_exp) (h_div_ne_zero_15)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41))

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _

example (x: ℝ)  (h_div_ne_zero_13: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_13, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_13)
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_13))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_log_ne_zero_27]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27)))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_log_ne_zero_27]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact DifferentiableAt.sub (DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27)))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.cos (Real.log x)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_log_ne_zero_27]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27)))
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _

example (x: ℝ)  (h_div_ne_zero_13: Real.cos ((Real.log (x))) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.cos (Real.log x) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2 + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_13, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_log_ne_zero_27]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (h_div_ne_zero_13)
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (h_div_ne_zero_13))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_32: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_33: x ≠ 0) (h_log_ne_zero_35: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_32, h_log_ne_zero_33, h_log_ne_zero_35]
ring
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)
exact h_div_ne_zero_32
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_32: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_33: x ≠ 0) (h_log_ne_zero_35: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) - (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_32, h_log_ne_zero_33, h_log_ne_zero_35]
ring
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)
exact h_div_ne_zero_32
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_32: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_33: x ≠ 0) (h_log_ne_zero_35: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_32, h_log_ne_zero_33, h_log_ne_zero_35]
ring
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)
exact h_div_ne_zero_32
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))) (DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))))

example (x: ℝ)  (h_div_ne_zero_12: Real.sin (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_32: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_33: x ≠ 0) (h_log_ne_zero_35: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_12, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_32, h_log_ne_zero_33, h_log_ne_zero_35]
ring
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)
exact h_div_ne_zero_32
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))
exact h_div_ne_zero_12
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))) (DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))) (h_div_ne_zero_12)

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_div_ne_zero_41: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_42: x ≠ 0) (h_log_ne_zero_44: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_div_ne_zero_41, h_log_ne_zero_42, h_log_ne_zero_44]
ring
exact Real.differentiableAt_log (h_log_ne_zero_44)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_42)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)
exact h_div_ne_zero_41
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41))

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_div_ne_zero_41: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_42: x ≠ 0) (h_log_ne_zero_44: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_div_ne_zero_41, h_log_ne_zero_42, h_log_ne_zero_44]
ring
exact Real.differentiableAt_log (h_log_ne_zero_44)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_42)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)
exact h_div_ne_zero_41
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41))

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_div_ne_zero_41: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_42: x ≠ 0) (h_log_ne_zero_44: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_div_ne_zero_41, h_log_ne_zero_42, h_log_ne_zero_44]
ring
exact Real.differentiableAt_log (h_log_ne_zero_44)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_42)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)
exact h_div_ne_zero_41
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41))

example (x: ℝ)  (h_div_ne_zero_13: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_div_ne_zero_41: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_42: x ≠ 0) (h_log_ne_zero_44: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_13, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_div_ne_zero_41, h_log_ne_zero_42, h_log_ne_zero_44]
ring
exact Real.differentiableAt_log (h_log_ne_zero_44)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_42)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)
exact h_div_ne_zero_41
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_13)
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_13))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41))

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) + (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.add (DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))) (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) - ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sub (DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))) (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _

example (x: ℝ)  (h_div_ne_zero_21: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_22: x ≠ 0) (h_log_ne_zero_24: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.exp x) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * Real.exp x)) * (x ^ 2 + (3:ℝ))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.exp x) * ((2:ℝ) * x))) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_21, h_log_ne_zero_22, h_log_ne_zero_24, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)
exact h_div_ne_zero_21
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))) (Real.differentiableAt_exp)
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))) (Real.differentiableAt_exp)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))) (Real.differentiableAt_exp)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _

example (x: ℝ)  (h_div_ne_zero_14: (Real.exp (x)) ≠ 0) (h_div_ne_zero_21: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_22: x ≠ 0) (h_log_ne_zero_24: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.exp x - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * Real.exp x) / Real.exp x ^ 2) * (x ^ 2 + (3:ℝ))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.exp x) * ((2:ℝ) * x))) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_14, h_div_ne_zero_21, h_log_ne_zero_22, h_log_ne_zero_24, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)
exact h_div_ne_zero_21
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))
exact Real.differentiableAt_exp
exact h_div_ne_zero_14
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))) (Real.differentiableAt_exp) (h_div_ne_zero_14)
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))) (Real.differentiableAt_exp) (h_div_ne_zero_14)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))) (Real.differentiableAt_exp) (h_div_ne_zero_14)) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_div_ne_zero_41: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_42: x ≠ 0) (h_log_ne_zero_44: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_div_ne_zero_41, h_log_ne_zero_42, h_log_ne_zero_44]
ring
exact Real.differentiableAt_log (h_log_ne_zero_44)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_42)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)
exact h_div_ne_zero_41
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41))

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_div_ne_zero_41: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_42: x ≠ 0) (h_log_ne_zero_44: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_div_ne_zero_41, h_log_ne_zero_42, h_log_ne_zero_44]
ring
exact Real.differentiableAt_log (h_log_ne_zero_44)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_42)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)
exact h_div_ne_zero_41
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41))

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_div_ne_zero_41: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_42: x ≠ 0) (h_log_ne_zero_44: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_div_ne_zero_41, h_log_ne_zero_42, h_log_ne_zero_44]
ring
exact Real.differentiableAt_log (h_log_ne_zero_44)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_42)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)
exact h_div_ne_zero_41
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41))

example (x: ℝ)  (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_div_ne_zero_41: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_42: x ≠ 0) (h_log_ne_zero_44: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_div_ne_zero_41, h_log_ne_zero_42, h_log_ne_zero_44]
ring
exact Real.differentiableAt_log (h_log_ne_zero_44)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_42)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)
exact h_div_ne_zero_41
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41))

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ)))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_1: Real.sin (((Real.exp (x)) * (x ^ 2 + (3:ℝ)))) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) - (Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) / Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_1, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_log_ne_zero_24: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_log_ne_zero_24]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_24)

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_log_ne_zero_24: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_log_ne_zero_24]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_24)

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_log_ne_zero_24: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.log (Real.exp x * (x ^ 2 + (3:ℝ)))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_log_ne_zero_24]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_24)

example (x: ℝ)  (h_div_ne_zero_1: Real.log (((Real.exp (x)) * (x ^ 2 + (3:ℝ)))) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_log_ne_zero_24: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.log (Real.exp x * (x ^ 2 + (3:ℝ))) - (Real.exp x * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))))) / Real.log (Real.exp x * (x ^ 2 + (3:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_1, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_log_ne_zero_24]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_24)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _)

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _)

example (x: ℝ)  (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.cos (Real.log x)) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.cos (Real.log x)) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_4, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _

example (x: ℝ)  (h_div_ne_zero_2: Real.cos ((Real.log (x))) ≠ 0) (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.cos (Real.log x) - (Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.cos (Real.log x)) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_4, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (h_div_ne_zero_2)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _)

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _)

example (x: ℝ)  (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_4, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _

example (x: ℝ)  (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_4, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_3, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_3, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ)))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_3, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_1: Real.sin (((Real.exp (x)) * (x ^ 2 + (3:ℝ)))) ≠ 0) (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (x ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) - (Real.exp x * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) / Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_1, h_div_ne_zero_3, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) + Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) - (Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _))

example (x: ℝ)  (h_div_ne_zero_12: Real.exp (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2)) ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) / Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_12, h_log_ne_zero_15]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact h_div_ne_zero_12
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (h_div_ne_zero_12)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) + (-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)))

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) - ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)))

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))))

example (x: ℝ)  (h_div_ne_zero_12: Real.cos (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_12, h_log_ne_zero_15, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)))
exact h_div_ne_zero_12
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)))) (h_div_ne_zero_12)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) + Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_15]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) - (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_15]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ)))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_15]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))))

example (x: ℝ)  (h_div_ne_zero_12: Real.sin (((Real.exp (x)) * (x ^ 2 + (3:ℝ)))) ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) + (((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) / Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_12, h_log_ne_zero_15]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact h_div_ne_zero_12
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))) (h_div_ne_zero_12)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.log (Real.cos (Real.log x))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) + ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_log_ne_zero_15, h_log_ne_zero_23, h_log_ne_zero_27]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (h_log_ne_zero_23)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.log (Real.cos (Real.log x))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) - (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x)) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_log_ne_zero_15, h_log_ne_zero_23, h_log_ne_zero_27]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (h_log_ne_zero_23)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.log (Real.cos (Real.log x))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.log (Real.cos (Real.log x))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_log_ne_zero_15, h_log_ne_zero_23, h_log_ne_zero_27]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (h_log_ne_zero_23)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (h_log_ne_zero_23))

example (x: ℝ)  (h_div_ne_zero_12: Real.log ((Real.cos ((Real.log (x))))) ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.log (Real.cos (Real.log x))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.log (Real.cos (Real.log x)) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x))) / Real.log (Real.cos (Real.log x)) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_12, h_log_ne_zero_15, h_log_ne_zero_23, h_log_ne_zero_27]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (h_log_ne_zero_23)
exact h_div_ne_zero_12
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (h_log_ne_zero_23)) (h_div_ne_zero_12)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.exp (Real.cos (Real.log x))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) + Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_15, h_log_ne_zero_27]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27)))

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.exp (Real.cos (Real.log x))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) - (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_15, h_log_ne_zero_27]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27)))

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.exp (Real.cos (Real.log x))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.exp (Real.cos (Real.log x))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_15, h_log_ne_zero_27]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27)))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))))

example (x: ℝ)  (h_div_ne_zero_12: Real.exp ((Real.cos ((Real.log (x))))) ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.exp (Real.cos (Real.log x))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.exp (Real.cos (Real.log x)) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) / Real.exp (Real.cos (Real.log x)) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_12, h_log_ne_zero_15, h_log_ne_zero_27]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27)))
exact h_div_ne_zero_12
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27)))) (h_div_ne_zero_12)

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_40: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_41: x ≠ 0) (h_log_ne_zero_43: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16, h_div_ne_zero_40, h_log_ne_zero_41, h_log_ne_zero_43]
ring
exact Real.differentiableAt_log (h_log_ne_zero_43)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_41)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)
exact h_div_ne_zero_40
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40))

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_40: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_41: x ≠ 0) (h_log_ne_zero_43: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16, h_div_ne_zero_40, h_log_ne_zero_41, h_log_ne_zero_43]
ring
exact Real.differentiableAt_log (h_log_ne_zero_43)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_41)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)
exact h_div_ne_zero_40
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40))

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_40: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_41: x ≠ 0) (h_log_ne_zero_43: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16, h_div_ne_zero_40, h_log_ne_zero_41, h_log_ne_zero_43]
ring
exact Real.differentiableAt_log (h_log_ne_zero_43)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_41)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)
exact h_div_ne_zero_40
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40))

example (x: ℝ)  (h_div_ne_zero_13: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_40: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_41: x ≠ 0) (h_log_ne_zero_43: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)) - ((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_13, h_log_ne_zero_16, h_div_ne_zero_40, h_log_ne_zero_41, h_log_ne_zero_43]
ring
exact Real.differentiableAt_log (h_log_ne_zero_43)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_41)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)
exact h_div_ne_zero_40
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_13)
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_13))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40))

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) + Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_15]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) - (Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_15]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.exp (Real.exp x * (x ^ 2 + (3:ℝ)))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_15]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_1: Real.exp (((Real.exp (x)) * (x ^ 2 + (3:ℝ)))) ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) - (Real.exp x * (x ^ 2 + (3:ℝ)) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) / Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_1, h_log_ne_zero_15]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_24: (x ^ 3) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_div_ne_zero_34: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_35: x ≠ 0) (h_log_ne_zero_37: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) + (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_div_ne_zero_24, h_log_ne_zero_27, h_div_ne_zero_34, h_log_ne_zero_35, h_log_ne_zero_37]
ring
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)
exact h_div_ne_zero_34
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_pow _
exact h_div_ne_zero_24
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (differentiableAt_pow _) (h_div_ne_zero_24)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (differentiableAt_pow _) (h_div_ne_zero_24)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34))

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_24: (x ^ 3) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_div_ne_zero_34: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_35: x ≠ 0) (h_log_ne_zero_37: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) - ((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_div_ne_zero_24, h_log_ne_zero_27, h_div_ne_zero_34, h_log_ne_zero_35, h_log_ne_zero_37]
ring
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)
exact h_div_ne_zero_34
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_pow _
exact h_div_ne_zero_24
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (differentiableAt_pow _) (h_div_ne_zero_24)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (differentiableAt_pow _) (h_div_ne_zero_24)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34))

example (x: ℝ)  (h_div_ne_zero_2: (x ^ 3) ≠ 0) (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_div_ne_zero_34: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_35: x ≠ 0) (h_log_ne_zero_37: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.cos (Real.log x)) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) * (x ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ)) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3 * Real.cos (Real.log x)) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3 * Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_log_ne_zero_17, h_log_ne_zero_27, h_div_ne_zero_34, h_log_ne_zero_35, h_log_ne_zero_37]
ring
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)
exact h_div_ne_zero_34
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _)) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27)))
exact differentiableAt_pow _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _)) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27)))) (differentiableAt_pow _) (h_div_ne_zero_2)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34)

example (x: ℝ)  (h_div_ne_zero_2: (x ^ 3) ≠ 0) (h_div_ne_zero_3: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_div_ne_zero_34: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_35: x ≠ 0) (h_log_ne_zero_37: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((((((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.cos (Real.log x) - (Real.exp x * (x ^ 2 + (3:ℝ)) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2) * (x ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ)) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3 / Real.cos (Real.log x)) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3 / Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_3, h_log_ne_zero_17, h_log_ne_zero_27, h_div_ne_zero_34, h_log_ne_zero_35, h_log_ne_zero_37]
ring
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)
exact h_div_ne_zero_34
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _)) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (h_div_ne_zero_3)
exact differentiableAt_pow _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _)) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (h_div_ne_zero_3)) (differentiableAt_pow _) (h_div_ne_zero_2)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) + ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_log_ne_zero_23, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))) (h_log_ne_zero_23)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) - (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_log_ne_zero_23, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))) (h_log_ne_zero_23)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_log_ne_zero_23, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))) (h_log_ne_zero_23)

example (x: ℝ)  (h_div_ne_zero_1: Real.log (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - (Real.exp x * (x ^ 2 + (3:ℝ)) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_15, h_log_ne_zero_23, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))) (h_log_ne_zero_23)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_40: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_41: x ≠ 0) (h_log_ne_zero_43: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_16, h_div_ne_zero_40, h_log_ne_zero_41, h_log_ne_zero_43]
ring
exact Real.differentiableAt_log (h_log_ne_zero_43)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_41)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)
exact h_div_ne_zero_40
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40))

example (x: ℝ)  (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_40: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_41: x ≠ 0) (h_log_ne_zero_43: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_16, h_div_ne_zero_40, h_log_ne_zero_41, h_log_ne_zero_43]
ring
exact Real.differentiableAt_log (h_log_ne_zero_43)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_41)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)
exact h_div_ne_zero_40
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40))

example (x: ℝ)  (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_40: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_41: x ≠ 0) (h_log_ne_zero_43: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_16, h_div_ne_zero_40, h_log_ne_zero_41, h_log_ne_zero_43]
ring
exact Real.differentiableAt_log (h_log_ne_zero_43)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_41)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)
exact h_div_ne_zero_40
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40))

example (x: ℝ)  (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_40: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_41: x ≠ 0) (h_log_ne_zero_43: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.exp x * (x ^ 2 + (3:ℝ)) / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_3, h_log_ne_zero_16, h_div_ne_zero_40, h_log_ne_zero_41, h_log_ne_zero_43]
ring
exact Real.differentiableAt_log (h_log_ne_zero_43)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_41)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)
exact h_div_ne_zero_40
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40))

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.log (Real.cos (Real.log x))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 + ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_2, h_log_ne_zero_15, h_log_ne_zero_23, h_log_ne_zero_27]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (h_log_ne_zero_23)

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.log (Real.cos (Real.log x))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 - (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x)) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_2, h_log_ne_zero_15, h_log_ne_zero_23, h_log_ne_zero_27]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (h_log_ne_zero_23)

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.log (Real.cos (Real.log x))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * Real.log (Real.cos (Real.log x))) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_2, h_log_ne_zero_15, h_log_ne_zero_23, h_log_ne_zero_27]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (h_log_ne_zero_23)

example (x: ℝ)  (h_div_ne_zero_1: Real.log ((Real.cos ((Real.log (x))))) ≠ 0) (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.log (Real.cos (Real.log x))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * Real.log (Real.cos (Real.log x)) - (Real.exp x * (x ^ 2 + (3:ℝ)) / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x))) / Real.log (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_1, h_div_ne_zero_2, h_log_ne_zero_15, h_log_ne_zero_23, h_log_ne_zero_27]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))) (h_log_ne_zero_23)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_40: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_41: x ≠ 0) (h_log_ne_zero_43: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_16, h_div_ne_zero_40, h_log_ne_zero_41, h_log_ne_zero_43]
ring
exact Real.differentiableAt_log (h_log_ne_zero_43)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_41)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)
exact h_div_ne_zero_40
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40))

example (x: ℝ)  (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_40: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_41: x ≠ 0) (h_log_ne_zero_43: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_16, h_div_ne_zero_40, h_log_ne_zero_41, h_log_ne_zero_43]
ring
exact Real.differentiableAt_log (h_log_ne_zero_43)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_41)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)
exact h_div_ne_zero_40
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40))

example (x: ℝ)  (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_40: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_41: x ≠ 0) (h_log_ne_zero_43: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.exp x * (x ^ 2 + (3:ℝ)) / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_16, h_div_ne_zero_40, h_log_ne_zero_41, h_log_ne_zero_43]
ring
exact Real.differentiableAt_log (h_log_ne_zero_43)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_41)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)
exact h_div_ne_zero_40
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40))

example (x: ℝ)  (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_40: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_41: x ≠ 0) (h_log_ne_zero_43: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.exp x * (x ^ 2 + (3:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.exp x * (x ^ 2 + (3:ℝ)) / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_3, h_log_ne_zero_16, h_div_ne_zero_40, h_log_ne_zero_41, h_log_ne_zero_43]
ring
exact Real.differentiableAt_log (h_log_ne_zero_43)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_41)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)
exact h_div_ne_zero_40
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_41)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_43)) (h_div_ne_zero_40))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.sub (DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_8: (x ^ 3) ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_div_ne_zero_8, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_8
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_8)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_8)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_8)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_5]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_5]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ)))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))))

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_6: Real.sin (((Real.exp (x)) * (x ^ 2 + (3:ℝ)))) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) / Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_4, h_div_ne_zero_6]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact h_div_ne_zero_6
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))) (h_div_ne_zero_6)

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_17: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_17)

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_17: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_17)

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_log_ne_zero_17: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_17)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_17))

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_6: Real.log (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2)) ≠ 0) (h_log_ne_zero_17: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2))) / Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_div_ne_zero_6, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_17)
exact h_div_ne_zero_6
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_17)) (h_div_ne_zero_6)

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) + (-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) - ((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _))

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_6: Real.cos (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) / Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_div_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact h_div_ne_zero_6
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (h_div_ne_zero_6)

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28]
ring
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) - (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28]
ring
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28]
ring
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))))

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_6: Real.exp (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_div_ne_zero_6, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28]
ring
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))
exact h_div_ne_zero_6
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))) (h_div_ne_zero_6)

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) + Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) - (Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _))

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_6: Real.sin (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) / Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_div_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact h_div_ne_zero_6
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (h_div_ne_zero_6)

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + Real.exp (Real.cos (Real.log x))) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) + Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_5, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - Real.exp (Real.cos (Real.log x))) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) - (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_5, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * Real.exp (Real.cos (Real.log x))) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * Real.exp (Real.cos (Real.log x))) + ((Real.cos (Real.log x) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_5, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))

example (x: ℝ)  (h_div_ne_zero_1: Real.exp ((Real.cos ((Real.log (x))))) ≠ 0) (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / Real.exp (Real.cos (Real.log x))) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * Real.exp (Real.cos (Real.log x)) - (Real.cos (Real.log x) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) / Real.exp (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_1, h_log_ne_zero_5, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) + (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _)

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) - ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.cos (Real.log x) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.cos (Real.log x) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _

example (x: ℝ)  (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.cos (Real.log x) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.cos (Real.log x) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_log_ne_zero_6, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) + (-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28]
ring
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) - ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28]
ring
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + ((Real.cos (Real.log x) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28]
ring
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))

example (x: ℝ)  (h_div_ne_zero_1: Real.cos (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - (Real.cos (Real.log x) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_5, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28]
ring
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_3: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_24: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 + (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_6, h_log_ne_zero_20, h_log_ne_zero_24]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_24)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_3)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20))
exact DifferentiableAt.add (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_3)) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_24)) _

example (x: ℝ)  (h_div_ne_zero_3: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_24: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 - ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_6, h_log_ne_zero_20, h_log_ne_zero_24]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_24)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_3)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20))
exact DifferentiableAt.sub (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_3)) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_24)) _

example (x: ℝ)  (h_div_ne_zero_3: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_24: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * Real.cos (Real.log x)) + ((Real.cos (Real.log x) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_6, h_log_ne_zero_20, h_log_ne_zero_24]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_24)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_3)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_3)) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_24)) _

example (x: ℝ)  (h_div_ne_zero_2: Real.cos ((Real.log (x))) ≠ 0) (h_div_ne_zero_3: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_24: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * Real.cos (Real.log x) - (Real.cos (Real.log x) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2 - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_3, h_log_ne_zero_6, h_log_ne_zero_20, h_log_ne_zero_24]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_24)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_3)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20))
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_3)) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_20))) (h_div_ne_zero_2)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_24)) _

example (x: ℝ)  (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_5: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 + Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_2, h_log_ne_zero_5]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_5: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 - (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_2, h_log_ne_zero_5]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_5: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ)))) + ((Real.cos (Real.log x) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_2, h_log_ne_zero_5]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_1: Real.sin (((Real.exp (x)) * (x ^ 2 + (3:ℝ)))) ≠ 0) (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_5: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) - (Real.cos (Real.log x) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) / Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_1, h_div_ne_zero_2, h_log_ne_zero_5]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_18: (x ^ 3) ≠ 0) (h_div_ne_zero_34: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_35: x ≠ 0) (h_log_ne_zero_37: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 + (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_log_ne_zero_5, h_div_ne_zero_18, h_div_ne_zero_34, h_log_ne_zero_35, h_log_ne_zero_37]
ring
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)
exact h_div_ne_zero_34
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_18
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_18)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_18)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34))

example (x: ℝ)  (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_18: (x ^ 3) ≠ 0) (h_div_ne_zero_34: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_35: x ≠ 0) (h_log_ne_zero_37: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 - ((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_log_ne_zero_5, h_div_ne_zero_18, h_div_ne_zero_34, h_log_ne_zero_35, h_log_ne_zero_37]
ring
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)
exact h_div_ne_zero_34
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_18
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_18)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_18)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34))

example (x: ℝ)  (h_div_ne_zero_2: (x ^ 3) ≠ 0) (h_div_ne_zero_4: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_7: x ≠ 0) (h_div_ne_zero_34: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_35: x ≠ 0) (h_log_ne_zero_37: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.cos (Real.log x) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * (x ^ 3) - (Real.cos (Real.log x) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_4, h_log_ne_zero_7, h_div_ne_zero_34, h_log_ne_zero_35, h_log_ne_zero_37]
ring
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)
exact h_div_ne_zero_34
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_4)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_4)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact differentiableAt_pow _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_4)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (differentiableAt_pow _) (h_div_ne_zero_2)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34)

example (x: ℝ)  (h_div_ne_zero_2: (x ^ 3) ≠ 0) (h_div_ne_zero_3: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_4: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_7: x ≠ 0) (h_div_ne_zero_34: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_35: x ≠ 0) (h_log_ne_zero_37: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (((((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.cos (Real.log x) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.cos (Real.log x) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * (x ^ 3) - (Real.cos (Real.log x) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_3, h_div_ne_zero_4, h_log_ne_zero_7, h_div_ne_zero_34, h_log_ne_zero_35, h_log_ne_zero_37]
ring
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)
exact h_div_ne_zero_34
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_4)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_4)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_3)
exact differentiableAt_pow _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_4)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_3)) (differentiableAt_pow _) (h_div_ne_zero_2)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_35)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_37)) (h_div_ne_zero_34)

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_div_ne_zero_26: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_log_ne_zero_29: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_div_ne_zero_26, h_log_ne_zero_27, h_log_ne_zero_29]
ring
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)
exact h_div_ne_zero_26
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)))

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_div_ne_zero_26: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_log_ne_zero_29: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_div_ne_zero_26, h_log_ne_zero_27, h_log_ne_zero_29]
ring
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)
exact h_div_ne_zero_26
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)))

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_div_ne_zero_26: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_log_ne_zero_29: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_div_ne_zero_26, h_log_ne_zero_27, h_log_ne_zero_29]
ring
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)
exact h_div_ne_zero_26
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))) (DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))))

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_6: Real.sin (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_div_ne_zero_26: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_log_ne_zero_29: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_div_ne_zero_6, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_div_ne_zero_26, h_log_ne_zero_27, h_log_ne_zero_29]
ring
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)
exact h_div_ne_zero_26
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)))
exact h_div_ne_zero_6
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))) (DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)))) (h_div_ne_zero_6)

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_div_ne_zero_18: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_25: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_div_ne_zero_18, h_log_ne_zero_21, h_log_ne_zero_25]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)) _
exact h_div_ne_zero_18
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)))
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)) _) (h_div_ne_zero_18)

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_div_ne_zero_18: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_25: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_div_ne_zero_18, h_log_ne_zero_21, h_log_ne_zero_25]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)) _
exact h_div_ne_zero_18
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)))
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)) _) (h_div_ne_zero_18)

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_6: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_25: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.cos (Real.log x)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.cos (Real.log x)) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_div_ne_zero_6, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17, h_log_ne_zero_21, h_log_ne_zero_25]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)) _
exact h_div_ne_zero_6
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)) _) (h_div_ne_zero_6)

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_6: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_7: Real.cos ((Real.log (x))) ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_25: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.cos (Real.log x) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.cos (Real.log x)) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_div_ne_zero_6, h_div_ne_zero_7, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17, h_log_ne_zero_21, h_log_ne_zero_25]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact h_div_ne_zero_7
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))) (h_div_ne_zero_7)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)) _
exact h_div_ne_zero_6
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))) (h_div_ne_zero_7)) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)) _) (h_div_ne_zero_6)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_7: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_div_ne_zero_7, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_7
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_7)
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_7))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_div_ne_zero_19: (x ^ 3) ≠ 0) (h_div_ne_zero_35: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_36: x ≠ 0) (h_log_ne_zero_38: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) + (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_div_ne_zero_19, h_div_ne_zero_35, h_log_ne_zero_36, h_log_ne_zero_38]
ring
exact Real.differentiableAt_log (h_log_ne_zero_38)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_36)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_38)
exact h_div_ne_zero_35
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_19
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_19)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_36)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_38)) (h_div_ne_zero_35)
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_19)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_36)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_38)) (h_div_ne_zero_35))

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_div_ne_zero_19: (x ^ 3) ≠ 0) (h_div_ne_zero_35: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_36: x ≠ 0) (h_log_ne_zero_38: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) - ((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_div_ne_zero_19, h_div_ne_zero_35, h_log_ne_zero_36, h_log_ne_zero_38]
ring
exact Real.differentiableAt_log (h_log_ne_zero_38)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_36)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_38)
exact h_div_ne_zero_35
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_19
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_19)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_36)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_38)) (h_div_ne_zero_35)
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_19)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_36)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_38)) (h_div_ne_zero_35))

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_7: (x ^ 3) ≠ 0) (h_div_ne_zero_15: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_16: x ≠ 0) (h_log_ne_zero_18: (5:ℝ) ≠ 0) (h_div_ne_zero_35: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_36: x ≠ 0) (h_log_ne_zero_38: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * (x ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_div_ne_zero_7, h_div_ne_zero_15, h_log_ne_zero_16, h_log_ne_zero_18, h_div_ne_zero_35, h_log_ne_zero_36, h_log_ne_zero_38]
ring
exact Real.differentiableAt_log (h_log_ne_zero_38)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_36)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_38)
exact h_div_ne_zero_35
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)
exact h_div_ne_zero_15
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_16)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)) (h_div_ne_zero_15)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_16)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)) (h_div_ne_zero_15))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_16)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)) (h_div_ne_zero_15))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact differentiableAt_pow _
exact h_div_ne_zero_7
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_16)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)) (h_div_ne_zero_15))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (differentiableAt_pow _) (h_div_ne_zero_7)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_36)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_38)) (h_div_ne_zero_35)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_16)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)) (h_div_ne_zero_15))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (differentiableAt_pow _) (h_div_ne_zero_7)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_36)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_38)) (h_div_ne_zero_35))

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_7: (x ^ 3) ≠ 0) (h_div_ne_zero_8: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_15: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_16: x ≠ 0) (h_log_ne_zero_18: (5:ℝ) ≠ 0) (h_div_ne_zero_35: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_36: x ≠ 0) (h_log_ne_zero_38: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * (x ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_div_ne_zero_7, h_div_ne_zero_8, h_div_ne_zero_15, h_log_ne_zero_16, h_log_ne_zero_18, h_div_ne_zero_35, h_log_ne_zero_36, h_log_ne_zero_38]
ring
exact Real.differentiableAt_log (h_log_ne_zero_38)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_36)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_38)
exact h_div_ne_zero_35
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)
exact h_div_ne_zero_15
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_16)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)) (h_div_ne_zero_15)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_16)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)) (h_div_ne_zero_15))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_8
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_16)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)) (h_div_ne_zero_15))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_8)
exact differentiableAt_pow _
exact h_div_ne_zero_7
exact DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_16)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)) (h_div_ne_zero_15))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_8)) (differentiableAt_pow _) (h_div_ne_zero_7)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_36)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_38)) (h_div_ne_zero_35)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_16)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)) (h_div_ne_zero_15))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_8)) (differentiableAt_pow _) (h_div_ne_zero_7)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_36)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_38)) (h_div_ne_zero_35))

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_log_ne_zero_18: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_26: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_log_ne_zero_29: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) + ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_log_ne_zero_18, h_div_ne_zero_26, h_log_ne_zero_27, h_log_ne_zero_29]
ring
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)
exact h_div_ne_zero_26
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)))
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))) (h_log_ne_zero_18)

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_log_ne_zero_18: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_26: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_log_ne_zero_29: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) - (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_log_ne_zero_18, h_div_ne_zero_26, h_log_ne_zero_27, h_log_ne_zero_29]
ring
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)
exact h_div_ne_zero_26
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)))
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))) (h_log_ne_zero_18)

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_log_ne_zero_18: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_26: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_log_ne_zero_29: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_log_ne_zero_18, h_div_ne_zero_26, h_log_ne_zero_27, h_log_ne_zero_29]
ring
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)
exact h_div_ne_zero_26
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))) (h_log_ne_zero_18)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))) (DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))) (h_log_ne_zero_18))

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_6: Real.log (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_log_ne_zero_18: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_26: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_log_ne_zero_29: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_div_ne_zero_6, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_log_ne_zero_18, h_div_ne_zero_26, h_log_ne_zero_27, h_log_ne_zero_29]
ring
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)
exact h_div_ne_zero_26
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))) (h_log_ne_zero_18)
exact h_div_ne_zero_6
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))) (DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))) (h_log_ne_zero_18)) (h_div_ne_zero_6)

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_log_ne_zero_22: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.cos (Real.cos (Real.log x))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) + (-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_5, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_log_ne_zero_22]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_22))
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_22)))

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_log_ne_zero_22: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.cos (Real.cos (Real.log x))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) - ((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_5, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_log_ne_zero_22]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_22))
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_22)))

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_log_ne_zero_22: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.cos (Real.cos (Real.log x))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.cos (Real.cos (Real.log x))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_4, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_log_ne_zero_22]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_22))
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_22)))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))) (DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_22))))

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_6: Real.cos ((Real.cos ((Real.log (x))))) ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_log_ne_zero_22: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.cos (Real.cos (Real.log x))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.cos (Real.cos (Real.log x)) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) / Real.cos (Real.cos (Real.log x)) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_4, h_div_ne_zero_6, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_log_ne_zero_22]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_22))
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_22)))
exact h_div_ne_zero_6
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))) (DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_22)))) (h_div_ne_zero_6)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_div_ne_zero_26: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_log_ne_zero_29: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_div_ne_zero_26, h_log_ne_zero_27, h_log_ne_zero_29]
ring
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)
exact h_div_ne_zero_26
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_div_ne_zero_26: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_log_ne_zero_29: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_div_ne_zero_26, h_log_ne_zero_27, h_log_ne_zero_29]
ring
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)
exact h_div_ne_zero_26
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_div_ne_zero_26: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_log_ne_zero_29: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + ((Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_div_ne_zero_26, h_log_ne_zero_27, h_log_ne_zero_29]
ring
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)
exact h_div_ne_zero_26
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)))

example (x: ℝ)  (h_div_ne_zero_1: Real.sin (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_div_ne_zero_26: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_log_ne_zero_29: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - (Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_6, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_div_ne_zero_26, h_log_ne_zero_27, h_log_ne_zero_29]
ring
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)
exact h_div_ne_zero_26
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_div_ne_zero_18: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_div_ne_zero_18, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _
exact h_div_ne_zero_18
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _) (h_div_ne_zero_18)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_div_ne_zero_18: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_div_ne_zero_18, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _
exact h_div_ne_zero_18
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _) (h_div_ne_zero_18)

example (x: ℝ)  (h_div_ne_zero_1: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_7: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_7, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_1: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_7: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_2, h_log_ne_zero_7, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_div_ne_zero_26: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_log_ne_zero_29: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_div_ne_zero_26, h_log_ne_zero_27, h_log_ne_zero_29]
ring
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)
exact h_div_ne_zero_26
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_div_ne_zero_26: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_log_ne_zero_29: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_div_ne_zero_26, h_log_ne_zero_27, h_log_ne_zero_29]
ring
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)
exact h_div_ne_zero_26
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_div_ne_zero_26: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_log_ne_zero_29: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + ((Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_div_ne_zero_26, h_log_ne_zero_27, h_log_ne_zero_29]
ring
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)
exact h_div_ne_zero_26
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)))

example (x: ℝ)  (h_div_ne_zero_1: Real.exp (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_div_ne_zero_26: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0) (h_log_ne_zero_29: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - (Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_6, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_div_ne_zero_26, h_log_ne_zero_27, h_log_ne_zero_29]
ring
exact Real.differentiableAt_log (h_log_ne_zero_29)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)
exact h_div_ne_zero_26
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26))
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_27)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_29)) (h_div_ne_zero_26)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_log_ne_zero_7: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0) (h_log_ne_zero_32: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_4, h_log_ne_zero_7, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28, h_log_ne_zero_32]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_32)
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact DifferentiableAt.add (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_32)) _

example (x: ℝ)  (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_log_ne_zero_7: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0) (h_log_ne_zero_32: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_4, h_log_ne_zero_7, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28, h_log_ne_zero_32]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_32)
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact DifferentiableAt.sub (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_32)) _

example (x: ℝ)  (h_div_ne_zero_5: (x ^ 3) ≠ 0) (h_log_ne_zero_8: x ≠ 0) (h_div_ne_zero_15: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_16: x ≠ 0) (h_log_ne_zero_18: (5:ℝ) ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0) (h_log_ne_zero_32: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (x ^ 3)) + ((Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_5, h_log_ne_zero_8, h_div_ne_zero_15, h_log_ne_zero_16, h_log_ne_zero_18, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28, h_log_ne_zero_32]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_32)
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)
exact h_div_ne_zero_15
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_8)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_8))
exact differentiableAt_pow _
exact h_div_ne_zero_5
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_8))) (differentiableAt_pow _) (h_div_ne_zero_5)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_16)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)) (h_div_ne_zero_15)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_8))) (differentiableAt_pow _) (h_div_ne_zero_5)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_16)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)) (h_div_ne_zero_15))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_8))) (differentiableAt_pow _) (h_div_ne_zero_5)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_16)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)) (h_div_ne_zero_15))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_8))) (differentiableAt_pow _) (h_div_ne_zero_5)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_16)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)) (h_div_ne_zero_15))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_32)) _

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_5: (x ^ 3) ≠ 0) (h_log_ne_zero_8: x ≠ 0) (h_div_ne_zero_15: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_16: x ≠ 0) (h_log_ne_zero_18: (5:ℝ) ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0) (h_log_ne_zero_32: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (x ^ 3) - (Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_div_ne_zero_5, h_log_ne_zero_8, h_div_ne_zero_15, h_log_ne_zero_16, h_log_ne_zero_18, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28, h_log_ne_zero_32]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_32)
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)
exact h_div_ne_zero_15
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_8)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_8))
exact differentiableAt_pow _
exact h_div_ne_zero_5
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_8))) (differentiableAt_pow _) (h_div_ne_zero_5)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_16)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)) (h_div_ne_zero_15)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_8))) (differentiableAt_pow _) (h_div_ne_zero_5)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_16)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)) (h_div_ne_zero_15))
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_8))) (differentiableAt_pow _) (h_div_ne_zero_5)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_16)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)) (h_div_ne_zero_15))) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_8))) (differentiableAt_pow _) (h_div_ne_zero_5)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_16)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_18)) (h_div_ne_zero_15))) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_32)) _

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_6, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_6, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_6, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_1: Real.cos (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2)) ≠ 0) (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) / Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_3, h_log_ne_zero_6, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_div_ne_zero_18: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_25: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_6, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_div_ne_zero_18, h_log_ne_zero_21, h_log_ne_zero_25]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)) _
exact h_div_ne_zero_18
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)) _) (h_div_ne_zero_18)

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_13: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_14: x ≠ 0) (h_log_ne_zero_16: (5:ℝ) ≠ 0) (h_div_ne_zero_18: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_25: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_6, h_div_ne_zero_13, h_log_ne_zero_14, h_log_ne_zero_16, h_div_ne_zero_18, h_log_ne_zero_21, h_log_ne_zero_25]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)) _
exact h_div_ne_zero_18
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)
exact h_div_ne_zero_13
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_14)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_16)) (h_div_ne_zero_13))
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)) _) (h_div_ne_zero_18)

example (x: ℝ)  (h_div_ne_zero_1: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_log_ne_zero_7: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_25: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.cos (Real.log x)) + ((Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.cos (Real.log x)) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_4, h_log_ne_zero_7, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17, h_log_ne_zero_21, h_log_ne_zero_25]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)) _
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_1: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_2: Real.cos ((Real.log (x))) ≠ 0) (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_log_ne_zero_7: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_25: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (x ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.cos (Real.log x) - (Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) / Real.cos (Real.log x) ^ 2) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.cos (Real.log x)) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_2, h_div_ne_zero_4, h_log_ne_zero_7, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17, h_log_ne_zero_21, h_log_ne_zero_25]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))) (h_div_ne_zero_2)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_25)) _
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_log_ne_zero_9, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28]
ring
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _)
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) - (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_log_ne_zero_9, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28]
ring
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _)
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_log_ne_zero_9, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28]
ring
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _) (DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))))

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_6: Real.exp (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_div_ne_zero_6, h_log_ne_zero_9, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28]
ring
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))
exact h_div_ne_zero_6
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _) (DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))) (h_div_ne_zero_6)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) + (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_log_ne_zero_10, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) - ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_log_ne_zero_10, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sub (DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _)) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_log_ne_zero_10, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_div_ne_zero_7: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_div_ne_zero_7, h_log_ne_zero_10, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_7
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_7)
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_7))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) + (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_log_ne_zero_9, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _)
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _)

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) - ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_log_ne_zero_9, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _)
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _)

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3 * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_log_ne_zero_10, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _)

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_7: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_30: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) + (((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3 / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_div_ne_zero_7, h_log_ne_zero_10, h_log_ne_zero_30]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_30)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_7
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_7)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_7)) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_30)) _)

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) + (-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_log_ne_zero_9, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28]
ring
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) - ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_log_ne_zero_9, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28]
ring
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_log_ne_zero_9, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28]
ring
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _) (DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))))

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_6: Real.cos (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_div_ne_zero_6, h_log_ne_zero_9, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28]
ring
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))
exact h_div_ne_zero_6
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _) (DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))) (h_div_ne_zero_6)

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_17: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) + (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_log_ne_zero_9, h_div_ne_zero_17, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _
exact h_div_ne_zero_17
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _)
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _) (h_div_ne_zero_17)

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_17: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) - ((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_log_ne_zero_9, h_div_ne_zero_17, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _
exact h_div_ne_zero_17
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _)
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _) (h_div_ne_zero_17)

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_6: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_11: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * (x ^ 3)) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3 * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_div_ne_zero_6, h_log_ne_zero_11, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_11)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_11)) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_11)) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_11)) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _
exact h_div_ne_zero_6
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_11)) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _) (h_div_ne_zero_6)

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_6: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_8: (x ^ 3) ≠ 0) (h_log_ne_zero_11: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * (x ^ 3) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_4, h_div_ne_zero_6, h_div_ne_zero_8, h_log_ne_zero_11, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_11)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_11)) _
exact differentiableAt_pow _
exact h_div_ne_zero_8
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_11)) _) (differentiableAt_pow _) (h_div_ne_zero_8)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_11)) _) (differentiableAt_pow _) (h_div_ne_zero_8)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _
exact h_div_ne_zero_6
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_11)) _) (differentiableAt_pow _) (h_div_ne_zero_8)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _) (h_div_ne_zero_6)

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.sin (Real.cos (Real.log x))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) + Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_5, h_log_ne_zero_9, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _)
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.sin (Real.cos (Real.log x))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) - (Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_5, h_log_ne_zero_9, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _)
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.sin (Real.cos (Real.log x))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.sin (Real.cos (Real.log x))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_4, h_log_ne_zero_9, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _) (DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))))

example (x: ℝ)  (h_log_ne_zero_4: x ≠ 0) (h_div_ne_zero_6: Real.sin ((Real.cos ((Real.log (x))))) ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.sin (Real.cos (Real.log x))) x = (-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x) - ((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.sin (Real.cos (Real.log x)) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) / Real.sin (Real.cos (Real.log x)) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_4, h_div_ne_zero_6, h_log_ne_zero_9, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))
exact h_div_ne_zero_6
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_4)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_4))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _) (DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))) (h_div_ne_zero_6)

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.exp (Real.cos (Real.log x))) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) + Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_5, h_log_ne_zero_9, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _)
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.exp (Real.cos (Real.log x))) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) - (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_5, h_log_ne_zero_9, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _)
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.exp (Real.cos (Real.log x))) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.exp (Real.cos (Real.log x))) + ((Real.cos (Real.log x) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_5, h_log_ne_zero_9, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _)
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))

example (x: ℝ)  (h_div_ne_zero_1: Real.exp ((Real.cos ((Real.log (x))))) ≠ 0) (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.exp (Real.cos (Real.log x))) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.exp (Real.cos (Real.log x)) - (Real.cos (Real.log x) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) / Real.exp (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_1, h_log_ne_zero_5, h_log_ne_zero_9, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _)
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_log_ne_zero_10, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.add (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _)) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_log_ne_zero_10, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.sub (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _)) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _

example (x: ℝ)  (h_log_ne_zero_7: x ≠ 0) (h_log_ne_zero_11: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * (x ^ 3)) + ((Real.cos (Real.log x) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_7, h_log_ne_zero_11, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_11)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_11)) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_11)) _)
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_11)) _)) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_11)) _)) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_log_ne_zero_7: x ≠ 0) (h_log_ne_zero_11: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_24: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_25: x ≠ 0) (h_log_ne_zero_27: (5:ℝ) ≠ 0) (h_log_ne_zero_31: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * (x ^ 3) - (Real.cos (Real.log x) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_7, h_log_ne_zero_11, h_div_ne_zero_24, h_log_ne_zero_25, h_log_ne_zero_27, h_log_ne_zero_31]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)
exact h_div_ne_zero_24
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_11)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_11)) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_11)) _)
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_11)) _)) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_11)) _)) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_25)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_27)) (h_div_ne_zero_24))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_31)) _

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) + (-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_log_ne_zero_9, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28]
ring
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) - ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_log_ne_zero_9, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28]
ring
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))

example (x: ℝ)  (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + ((Real.cos (Real.log x) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_5, h_log_ne_zero_9, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28]
ring
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))

example (x: ℝ)  (h_div_ne_zero_1: Real.cos (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_25: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_26: x ≠ 0) (h_log_ne_zero_28: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - (Real.cos (Real.log x) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_5, h_log_ne_zero_9, h_div_ne_zero_25, h_log_ne_zero_26, h_log_ne_zero_28]
ring
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)
exact h_div_ne_zero_25
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_26)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_28)) (h_div_ne_zero_25)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_17: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.log (Real.cos (Real.log x))) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 + ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_2, h_log_ne_zero_5, h_log_ne_zero_9, h_log_ne_zero_17, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))) (h_log_ne_zero_17)

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_17: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.log (Real.cos (Real.log x))) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 - (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x)) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_2, h_log_ne_zero_5, h_log_ne_zero_9, h_log_ne_zero_17, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))) (h_log_ne_zero_17)

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_17: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.log (Real.cos (Real.log x))) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * Real.log (Real.cos (Real.log x))) + ((Real.cos (Real.log x) / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_2, h_log_ne_zero_5, h_log_ne_zero_9, h_log_ne_zero_17, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))) (h_log_ne_zero_17)

example (x: ℝ)  (h_div_ne_zero_1: Real.log ((Real.cos ((Real.log (x))))) ≠ 0) (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_17: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_21: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.log (Real.cos (Real.log x))) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * Real.log (Real.cos (Real.log x)) - (Real.cos (Real.log x) / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x))) / Real.log (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_1, h_div_ne_zero_2, h_log_ne_zero_5, h_log_ne_zero_9, h_log_ne_zero_17, h_log_ne_zero_21]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_21))) (h_log_ne_zero_17)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 + Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_2, h_log_ne_zero_5, h_log_ne_zero_9]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _) (h_div_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 - (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_2, h_log_ne_zero_5, h_log_ne_zero_9]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _) (h_div_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ)))) + ((Real.cos (Real.log x) / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_2, h_log_ne_zero_5, h_log_ne_zero_9]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _) (h_div_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_1: Real.sin (((Real.exp (x)) * (x ^ 2 + (3:ℝ)))) ≠ 0) (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) - (Real.cos (Real.log x) / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) / Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_1, h_div_ne_zero_2, h_log_ne_zero_5, h_log_ne_zero_9]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _) (h_div_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_17: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 + ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_log_ne_zero_5, h_log_ne_zero_9, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_17)

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_17: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 - (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_log_ne_zero_5, h_log_ne_zero_9, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_17)

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_17: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.cos (Real.log x) / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_log_ne_zero_5, h_log_ne_zero_9, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_17)

example (x: ℝ)  (h_div_ne_zero_1: Real.log (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2)) ≠ 0) (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_5: x ≠ 0) (h_log_ne_zero_9: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_17: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - Real.cos (Real.log x) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.cos (Real.log x) / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2))) / Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_2, h_log_ne_zero_5, h_log_ne_zero_9, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_5)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_9)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_17)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.add (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.add (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ)))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))) (DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))))

example (x: ℝ)  (h_div_ne_zero_12: Real.sin (((Real.exp (x)) * (x ^ 2 + (3:ℝ)))) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) / Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_12, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact h_div_ne_zero_12
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))) (DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))) (h_div_ne_zero_12)

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.add (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _)

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.add (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _)

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _)

example (x: ℝ)  (h_div_ne_zero_13: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_13, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_13
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_13)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_13)) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _)

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.add (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)))
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - (Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.add (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)))
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.exp (Real.exp x * (x ^ 2 + (3:ℝ)))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))) (DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))))

example (x: ℝ)  (h_div_ne_zero_12: Real.exp (((Real.exp (x)) * (x ^ 2 + (3:ℝ)))) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) / Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_12, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact h_div_ne_zero_12
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))) (DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))) (h_div_ne_zero_12)

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_41: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_42: x ≠ 0) (h_log_ne_zero_44: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) + (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_41, h_log_ne_zero_42, h_log_ne_zero_44]
ring
exact Real.differentiableAt_log (h_log_ne_zero_44)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_42)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)
exact h_div_ne_zero_41
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41)
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)))
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41))

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_41: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_42: x ≠ 0) (h_log_ne_zero_44: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) - ((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_41, h_log_ne_zero_42, h_log_ne_zero_44]
ring
exact Real.differentiableAt_log (h_log_ne_zero_44)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_42)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)
exact h_div_ne_zero_41
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41)
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)))
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41))

example (x: ℝ)  (h_div_ne_zero_21: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_22: x ≠ 0) (h_log_ne_zero_24: (5:ℝ) ≠ 0) (h_div_ne_zero_41: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_42: x ≠ 0) (h_log_ne_zero_44: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * (x ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_21, h_log_ne_zero_22, h_log_ne_zero_24, h_div_ne_zero_41, h_log_ne_zero_42, h_log_ne_zero_44]
ring
exact Real.differentiableAt_log (h_log_ne_zero_44)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_42)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)
exact h_div_ne_zero_41
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)
exact h_div_ne_zero_21
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41))

example (x: ℝ)  (h_div_ne_zero_14: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_21: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_22: x ≠ 0) (h_log_ne_zero_24: (5:ℝ) ≠ 0) (h_div_ne_zero_41: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_42: x ≠ 0) (h_log_ne_zero_44: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * (x ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 5 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_14, h_div_ne_zero_21, h_log_ne_zero_22, h_log_ne_zero_24, h_div_ne_zero_41, h_log_ne_zero_42, h_log_ne_zero_44]
ring
exact Real.differentiableAt_log (h_log_ne_zero_44)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_42)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)
exact h_div_ne_zero_41
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)
exact h_div_ne_zero_21
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_14
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_14)
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_14)) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_14)) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_42)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_44)) (h_div_ne_zero_41))

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_32: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_33: x ≠ 0) (h_log_ne_zero_35: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_32, h_log_ne_zero_33, h_log_ne_zero_35]
ring
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)
exact h_div_ne_zero_32
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_32: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_33: x ≠ 0) (h_log_ne_zero_35: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) - (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_32, h_log_ne_zero_33, h_log_ne_zero_35]
ring
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)
exact h_div_ne_zero_32
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_32: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_33: x ≠ 0) (h_log_ne_zero_35: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_32, h_log_ne_zero_33, h_log_ne_zero_35]
ring
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)
exact h_div_ne_zero_32
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))) (DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))))

example (x: ℝ)  (h_div_ne_zero_12: Real.sin (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_32: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_33: x ≠ 0) (h_log_ne_zero_35: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_12, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_32, h_log_ne_zero_33, h_log_ne_zero_35]
ring
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)
exact h_div_ne_zero_32
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))
exact h_div_ne_zero_12
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))) (DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))) (h_div_ne_zero_12)

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_32: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_33: x ≠ 0) (h_log_ne_zero_35: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) + (-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_32, h_log_ne_zero_33, h_log_ne_zero_35]
ring
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)
exact h_div_ne_zero_32
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_32: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_33: x ≠ 0) (h_log_ne_zero_35: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) - ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_32, h_log_ne_zero_33, h_log_ne_zero_35]
ring
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)
exact h_div_ne_zero_32
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_32: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_33: x ≠ 0) (h_log_ne_zero_35: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_32, h_log_ne_zero_33, h_log_ne_zero_35]
ring
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)
exact h_div_ne_zero_32
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))) (DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))))

example (x: ℝ)  (h_div_ne_zero_12: Real.cos (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_32: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_33: x ≠ 0) (h_log_ne_zero_35: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_12, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_32, h_log_ne_zero_33, h_log_ne_zero_35]
ring
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)
exact h_div_ne_zero_32
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))
exact h_div_ne_zero_12
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))) (DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))) (h_div_ne_zero_12)

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0) (h_log_ne_zero_38: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34, h_log_ne_zero_38]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_38)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_38)
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_38)) _
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_38)) _)

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0) (h_log_ne_zero_38: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34, h_log_ne_zero_38]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_38)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_38)
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_38)) _
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_38)) _)

example (x: ℝ)  (h_div_ne_zero_21: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_22: x ≠ 0) (h_log_ne_zero_24: (5:ℝ) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0) (h_log_ne_zero_38: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (x ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_21, h_log_ne_zero_22, h_log_ne_zero_24, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34, h_log_ne_zero_38]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_38)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_38)
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)
exact h_div_ne_zero_21
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_38)) _

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_21: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_22: x ≠ 0) (h_log_ne_zero_24: (5:ℝ) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0) (h_log_ne_zero_38: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_div_ne_zero_21, h_log_ne_zero_22, h_log_ne_zero_24, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34, h_log_ne_zero_38]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_38)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_38)
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)
exact h_div_ne_zero_21
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_22)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_24)) (h_div_ne_zero_21))) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_38)) _

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.sin (Real.cos (Real.log x))) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.sin (Real.cos (Real.log x))) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - (Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.sin (Real.cos (Real.log x))) x = (((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.sin (Real.cos (Real.log x))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))

example (x: ℝ)  (h_div_ne_zero_1: Real.sin ((Real.cos ((Real.log (x))))) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.sin (Real.cos (Real.log x))) x = (((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.sin (Real.cos (Real.log x)) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) / Real.sin (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_1, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_32: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_33: x ≠ 0) (h_log_ne_zero_35: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_32, h_log_ne_zero_33, h_log_ne_zero_35]
ring
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)
exact h_div_ne_zero_32
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_32: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_33: x ≠ 0) (h_log_ne_zero_35: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_32, h_log_ne_zero_33, h_log_ne_zero_35]
ring
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)
exact h_div_ne_zero_32
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))

example (x: ℝ)  (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_32: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_33: x ≠ 0) (h_log_ne_zero_35: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_32, h_log_ne_zero_33, h_log_ne_zero_35]
ring
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)
exact h_div_ne_zero_32
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))

example (x: ℝ)  (h_div_ne_zero_1: Real.cos (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_div_ne_zero_32: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_33: x ≠ 0) (h_log_ne_zero_35: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_div_ne_zero_32, h_log_ne_zero_33, h_log_ne_zero_35]
ring
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)
exact h_div_ne_zero_32
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.cos (Real.cos (Real.log x))) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_3, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.cos (Real.cos (Real.log x))) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_3, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.cos (Real.cos (Real.log x))) x = (((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.cos (Real.cos (Real.log x))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_3, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))

example (x: ℝ)  (h_div_ne_zero_1: Real.cos ((Real.cos ((Real.log (x))))) ≠ 0) (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.cos (Real.cos (Real.log x))) x = (((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.cos (Real.cos (Real.log x)) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) / Real.cos (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_1, h_div_ne_zero_3, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - (Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_1: Real.sin (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2)) ≠ 0) (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) / Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_3, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _)

example (x: ℝ)  (h_div_ne_zero_3: (x ^ 3) ≠ 0) (h_div_ne_zero_19: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_20: x ≠ 0) (h_log_ne_zero_22: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_div_ne_zero_19, h_log_ne_zero_20, h_log_ne_zero_22, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _
exact Real.differentiableAt_log (h_log_ne_zero_22)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_20)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)
exact h_div_ne_zero_19
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_3
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_3)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_3)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_20)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_22)) (h_div_ne_zero_19))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _)

example (x: ℝ)  (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_4, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _

example (x: ℝ)  (h_div_ne_zero_2: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (((((((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (x ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_4, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_2)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_36: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) + (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_log_ne_zero_36]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_36)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.add (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)) _)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_36: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) - ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_log_ne_zero_36]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_36)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.add (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)) _)

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_36: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3 * Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16, h_log_ne_zero_36]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_36)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)) _)

example (x: ℝ)  (h_div_ne_zero_13: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_36: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3 / Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_13, h_log_ne_zero_16, h_log_ne_zero_36]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_36)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_13
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_13)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_13)) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_36)) _)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) + ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_15, h_log_ne_zero_23]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.add (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_23)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) - (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_15, h_log_ne_zero_23]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.add (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_23)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.log (Real.exp x * (x ^ 2 + (3:ℝ)))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_log_ne_zero_23]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_23)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_23))

example (x: ℝ)  (h_div_ne_zero_12: Real.log (((Real.exp (x)) * (x ^ 2 + (3:ℝ)))) ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.log (Real.exp x * (x ^ 2 + (3:ℝ))) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))))) / Real.log (Real.exp x * (x ^ 2 + (3:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_12, h_log_ne_zero_15, h_log_ne_zero_23]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_23)
exact h_div_ne_zero_12
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_23)) (h_div_ne_zero_12)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.cos (Real.cos (Real.log x))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) + (-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_15, h_log_ne_zero_27]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.add (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27)))

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.cos (Real.cos (Real.log x))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) - ((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_15, h_log_ne_zero_27]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.add (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27)))

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.cos (Real.cos (Real.log x))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.cos (Real.cos (Real.log x))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_log_ne_zero_15, h_log_ne_zero_27]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27)))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))))

example (x: ℝ)  (h_div_ne_zero_12: Real.cos ((Real.cos ((Real.log (x))))) ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_27: x ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.cos (Real.cos (Real.log x))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) + (((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.cos (Real.cos (Real.log x)) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) / Real.cos (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_12, h_log_ne_zero_15, h_log_ne_zero_27]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_27)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27)))
exact h_div_ne_zero_12
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_27)))) (h_div_ne_zero_12)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) + ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_log_ne_zero_23, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))) (h_log_ne_zero_23)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) - (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_log_ne_zero_23, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))) (h_log_ne_zero_23)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_log_ne_zero_23, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))) (h_log_ne_zero_23)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))) (h_log_ne_zero_23))

example (x: ℝ)  (h_div_ne_zero_12: Real.log (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_12, h_log_ne_zero_15, h_log_ne_zero_23, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))) (h_log_ne_zero_23)
exact h_div_ne_zero_12
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))) (h_log_ne_zero_23)) (h_div_ne_zero_12)

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_30: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_31: x ≠ 0) (h_log_ne_zero_33: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16, h_div_ne_zero_30, h_log_ne_zero_31, h_log_ne_zero_33, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)
exact h_div_ne_zero_30
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30))
exact DifferentiableAt.add (DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_30: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_31: x ≠ 0) (h_log_ne_zero_33: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16, h_div_ne_zero_30, h_log_ne_zero_31, h_log_ne_zero_33, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)
exact h_div_ne_zero_30
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30))
exact DifferentiableAt.sub (DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _

example (x: ℝ)  (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_30: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_31: x ≠ 0) (h_log_ne_zero_33: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * (x ^ 3)) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_17, h_div_ne_zero_30, h_log_ne_zero_31, h_log_ne_zero_33, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)
exact h_div_ne_zero_30
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30))
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _

example (x: ℝ)  (h_div_ne_zero_14: (x ^ 3) ≠ 0) (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_30: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_31: x ≠ 0) (h_log_ne_zero_33: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * (x ^ 3) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_14, h_log_ne_zero_17, h_div_ne_zero_30, h_log_ne_zero_31, h_log_ne_zero_33, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)
exact h_div_ne_zero_30
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact differentiableAt_pow _
exact h_div_ne_zero_14
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _) (differentiableAt_pow _) (h_div_ne_zero_14)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _) (differentiableAt_pow _) (h_div_ne_zero_14)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30))
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _) (differentiableAt_pow _) (h_div_ne_zero_14)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_30: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_31: x ≠ 0) (h_log_ne_zero_33: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) + (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16, h_div_ne_zero_30, h_log_ne_zero_31, h_log_ne_zero_33, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)
exact h_div_ne_zero_30
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30))
exact DifferentiableAt.add (DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_30: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_31: x ≠ 0) (h_log_ne_zero_33: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) - ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16, h_div_ne_zero_30, h_log_ne_zero_31, h_log_ne_zero_33, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)
exact h_div_ne_zero_30
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30))
exact DifferentiableAt.sub (DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _

example (x: ℝ)  (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_30: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_31: x ≠ 0) (h_log_ne_zero_33: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * (x ^ 3)) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((3:ℝ) * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3 * (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_17, h_div_ne_zero_30, h_log_ne_zero_31, h_log_ne_zero_33, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)
exact h_div_ne_zero_30
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30))
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _

example (x: ℝ)  (h_div_ne_zero_14: (x ^ 3) ≠ 0) (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_30: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_31: x ≠ 0) (h_log_ne_zero_33: (5:ℝ) ≠ 0) (h_log_ne_zero_37: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) x = (2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)) - ((((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * (x ^ 3) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((3:ℝ) * x ^ 2)) / (x ^ 3) ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3 / (x ^ 3)) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_14, h_log_ne_zero_17, h_div_ne_zero_30, h_log_ne_zero_31, h_log_ne_zero_33, h_log_ne_zero_37]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_37)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_31)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)
exact h_div_ne_zero_30
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact differentiableAt_pow _
exact h_div_ne_zero_14
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _) (differentiableAt_pow _) (h_div_ne_zero_14)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _) (differentiableAt_pow _) (h_div_ne_zero_14)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30))
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _) (differentiableAt_pow _) (h_div_ne_zero_14)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_31)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_33)) (h_div_ne_zero_30)))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_37)) _

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) + ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_log_ne_zero_23, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))) (h_log_ne_zero_23)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) - (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_log_ne_zero_23, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))) (h_log_ne_zero_23)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_log_ne_zero_23, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))) (h_log_ne_zero_23)

example (x: ℝ)  (h_div_ne_zero_1: Real.log (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_15, h_log_ne_zero_23, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))) (h_log_ne_zero_23)
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) + (-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)))

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) - ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)))

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)))

example (x: ℝ)  (h_div_ne_zero_1: Real.cos (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_15, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) + Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) - (Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_15]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_1: Real.sin (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2)) ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) / Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_15]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _)
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 + (-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_log_ne_zero_15, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (h_div_ne_zero_2)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)))

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 - ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_log_ne_zero_15, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (h_div_ne_zero_2)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)))

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_log_ne_zero_15, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (h_div_ne_zero_2)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)))

example (x: ℝ)  (h_div_ne_zero_1: Real.cos (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_2, h_log_ne_zero_15, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (h_div_ne_zero_2)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 + Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_2, h_log_ne_zero_15]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (h_div_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 - (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_2, h_log_ne_zero_15]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (h_div_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ)))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_2, h_log_ne_zero_15]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (h_div_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_1: Real.sin (((Real.exp (x)) * (x ^ 2 + (3:ℝ)))) ≠ 0) (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) / Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_1, h_div_ne_zero_2, h_log_ne_zero_15]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (h_div_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 + ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_log_ne_zero_15, h_log_ne_zero_23, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))) (h_log_ne_zero_23)

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 - (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_log_ne_zero_15, h_log_ne_zero_23, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))) (h_log_ne_zero_23)

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + ((Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_log_ne_zero_15, h_log_ne_zero_23, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))) (h_log_ne_zero_23)

example (x: ℝ)  (h_div_ne_zero_1: Real.log (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_15: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_23: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_31: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_32: x ≠ 0) (h_log_ne_zero_34: (5:ℝ) ≠ 0): deriv (λ x ↦ (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2 / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_2, h_log_ne_zero_15, h_log_ne_zero_23, h_div_ne_zero_31, h_log_ne_zero_32, h_log_ne_zero_34]
ring
exact Real.differentiableAt_log (h_log_ne_zero_34)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_32)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)
exact h_div_ne_zero_31
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31)
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_15)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_32)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_34)) (h_div_ne_zero_31))) (h_log_ne_zero_23)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.sin (Real.cos (Real.log x))) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) + Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.sin (Real.cos (Real.log x))) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) - (Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))

example (x: ℝ)  (h_div_ne_zero_8: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_9: x ≠ 0) (h_log_ne_zero_11: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.sin (Real.cos (Real.log x))) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.sin (Real.cos (Real.log x))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_8, h_log_ne_zero_9, h_log_ne_zero_11, h_log_ne_zero_16, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)
exact h_div_ne_zero_8
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))))

example (x: ℝ)  (h_div_ne_zero_8: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_9: x ≠ 0) (h_log_ne_zero_11: (5:ℝ) ≠ 0) (h_div_ne_zero_13: Real.sin ((Real.cos ((Real.log (x))))) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.sin (Real.cos (Real.log x))) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.sin (Real.cos (Real.log x)) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) / Real.sin (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_8, h_log_ne_zero_9, h_log_ne_zero_11, h_div_ne_zero_13, h_log_ne_zero_16, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))
exact h_div_ne_zero_13
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)
exact h_div_ne_zero_8
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))) (h_div_ne_zero_13)

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) + Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) - (Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_8: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_9: x ≠ 0) (h_log_ne_zero_11: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_8, h_log_ne_zero_9, h_log_ne_zero_11, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)
exact h_div_ne_zero_8
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _))

example (x: ℝ)  (h_div_ne_zero_8: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_9: x ≠ 0) (h_log_ne_zero_11: (5:ℝ) ≠ 0) (h_div_ne_zero_13: Real.sin (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2)) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) / Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_8, h_log_ne_zero_9, h_log_ne_zero_11, h_div_ne_zero_13, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact h_div_ne_zero_13
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)
exact h_div_ne_zero_8
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)) (h_div_ne_zero_13)

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_24: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.log (Real.cos (Real.log x))) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) + ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_24, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))) (h_log_ne_zero_24)

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_24: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.log (Real.cos (Real.log x))) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))) - (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x)) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_24, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))) (h_log_ne_zero_24)

example (x: ℝ)  (h_div_ne_zero_8: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_9: x ≠ 0) (h_log_ne_zero_11: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_24: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.log (Real.cos (Real.log x))) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.log (Real.cos (Real.log x))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_8, h_log_ne_zero_9, h_log_ne_zero_11, h_log_ne_zero_16, h_log_ne_zero_24, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))) (h_log_ne_zero_24)
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)
exact h_div_ne_zero_8
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))) (h_log_ne_zero_24))

example (x: ℝ)  (h_div_ne_zero_8: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_9: x ≠ 0) (h_log_ne_zero_11: (5:ℝ) ≠ 0) (h_div_ne_zero_13: Real.log ((Real.cos ((Real.log (x))))) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_24: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.log (Real.cos (Real.log x))) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) + (((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.log (Real.cos (Real.log x)) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x))) / Real.log (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_8, h_log_ne_zero_9, h_log_ne_zero_11, h_div_ne_zero_13, h_log_ne_zero_16, h_log_ne_zero_24, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))) (h_log_ne_zero_24)
exact h_div_ne_zero_13
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)
exact h_div_ne_zero_8
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))) (h_log_ne_zero_24)) (h_div_ne_zero_13)

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_32: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_33: x ≠ 0) (h_log_ne_zero_35: (5:ℝ) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_div_ne_zero_32, h_log_ne_zero_33, h_log_ne_zero_35]
ring
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)
exact h_div_ne_zero_32
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_32: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_33: x ≠ 0) (h_log_ne_zero_35: (5:ℝ) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) - (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_div_ne_zero_32, h_log_ne_zero_33, h_log_ne_zero_35]
ring
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)
exact h_div_ne_zero_32
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))

example (x: ℝ)  (h_div_ne_zero_8: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_9: x ≠ 0) (h_log_ne_zero_11: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_32: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_33: x ≠ 0) (h_log_ne_zero_35: (5:ℝ) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_8, h_log_ne_zero_9, h_log_ne_zero_11, h_log_ne_zero_16, h_div_ne_zero_32, h_log_ne_zero_33, h_log_ne_zero_35]
ring
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)
exact h_div_ne_zero_32
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)
exact h_div_ne_zero_8
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))))

example (x: ℝ)  (h_div_ne_zero_8: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_9: x ≠ 0) (h_log_ne_zero_11: (5:ℝ) ≠ 0) (h_div_ne_zero_13: Real.sin (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_div_ne_zero_32: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_33: x ≠ 0) (h_log_ne_zero_35: (5:ℝ) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 4 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_8, h_log_ne_zero_9, h_log_ne_zero_11, h_div_ne_zero_13, h_log_ne_zero_16, h_div_ne_zero_32, h_log_ne_zero_33, h_log_ne_zero_35]
ring
exact Real.differentiableAt_log (h_log_ne_zero_35)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_33)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)
exact h_div_ne_zero_32
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))
exact h_div_ne_zero_13
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)
exact h_div_ne_zero_8
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_33)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_35)) (h_div_ne_zero_32)))) (h_div_ne_zero_13)

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.sin (Real.cos (Real.log x))) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) + Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.sin (Real.cos (Real.log x))) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) - (Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))

example (x: ℝ)  (h_div_ne_zero_8: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_9: x ≠ 0) (h_log_ne_zero_11: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.sin (Real.cos (Real.log x))) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.sin (Real.cos (Real.log x))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_8, h_log_ne_zero_9, h_log_ne_zero_11, h_log_ne_zero_16, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)
exact h_div_ne_zero_8
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))))

example (x: ℝ)  (h_div_ne_zero_8: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_9: x ≠ 0) (h_log_ne_zero_11: (5:ℝ) ≠ 0) (h_div_ne_zero_13: Real.sin ((Real.cos ((Real.log (x))))) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.sin (Real.cos (Real.log x))) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.sin (Real.cos (Real.log x)) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) / Real.sin (Real.cos (Real.log x)) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_8, h_log_ne_zero_9, h_log_ne_zero_11, h_div_ne_zero_13, h_log_ne_zero_16, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))
exact h_div_ne_zero_13
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)
exact h_div_ne_zero_8
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))) (h_div_ne_zero_13)

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) + Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) - (Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_8: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_9: x ≠ 0) (h_log_ne_zero_11: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.exp (Real.exp x * (x ^ 2 + (3:ℝ)))) + ((Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_8, h_log_ne_zero_9, h_log_ne_zero_11, h_log_ne_zero_16]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)
exact h_div_ne_zero_8
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8))
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))))

example (x: ℝ)  (h_div_ne_zero_8: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_9: x ≠ 0) (h_log_ne_zero_11: (5:ℝ) ≠ 0) (h_div_ne_zero_13: Real.exp (((Real.exp (x)) * (x ^ 2 + (3:ℝ)))) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)) - ((((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))) * Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) - (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) / Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) ^ 2) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_8, h_log_ne_zero_9, h_log_ne_zero_11, h_div_ne_zero_13, h_log_ne_zero_16]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact h_div_ne_zero_13
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_9)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)
exact h_div_ne_zero_8
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_9)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_11)) (h_div_ne_zero_8))
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))) (h_div_ne_zero_13)

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_24: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) + ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_24]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_24)

example (x: ℝ)  (h_log_ne_zero_14: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ))) + Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) + ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_14]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_14)

example (x: ℝ)  (h_log_ne_zero_14: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ))) - Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) - (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_14]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_14)

example (x: ℝ)  (h_log_ne_zero_14: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ))) * Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = ((Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) * Real.log (Real.exp x * (x ^ 2 + (3:ℝ)))) + (Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_14]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_14)

example (x: ℝ)  (h_div_ne_zero_1: Real.log (((Real.exp (x)) * (x ^ 2 + (3:ℝ)))) ≠ 0) (h_log_ne_zero_14: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ))) / Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = ((Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) * Real.log (Real.exp x * (x ^ 2 + (3:ℝ))) - Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))))) / Real.log (Real.exp x * (x ^ 2 + (3:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_1, h_log_ne_zero_14]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_14)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_1: Real.exp (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2)) ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ))) / Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = ((Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) * Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * (Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) / Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact h_div_ne_zero_1


example (x: ℝ) : deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ))) + Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (-1:ℝ) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) + Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ) : deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ))) - Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (-1:ℝ) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) - (Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ) : deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ))) * Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((-1:ℝ) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) * Real.exp (Real.exp x * (x ^ 2 + (3:ℝ)))) + (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * (Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_div_ne_zero_1: Real.exp (((Real.exp (x)) * (x ^ 2 + (3:ℝ)))) ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ))) / Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((-1:ℝ) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) * Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) - Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * (Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))))) / Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_1]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_14: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ))) + Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (-1:ℝ) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) + ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_14]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_14)

example (x: ℝ)  (h_log_ne_zero_14: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ))) - Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (-1:ℝ) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) - (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_14]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_14)

example (x: ℝ)  (h_log_ne_zero_14: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ))) * Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((-1:ℝ) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) * Real.log (Real.exp x * (x ^ 2 + (3:ℝ)))) + (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_14]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_14)

example (x: ℝ)  (h_div_ne_zero_1: Real.log (((Real.exp (x)) * (x ^ 2 + (3:ℝ)))) ≠ 0) (h_log_ne_zero_14: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ))) / Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((-1:ℝ) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) * Real.log (Real.exp x * (x ^ 2 + (3:ℝ))) - Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))))) / Real.log (Real.exp x * (x ^ 2 + (3:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_1, h_log_ne_zero_14]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_14)
exact h_div_ne_zero_1


example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x)) + Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) + Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x)) - Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) - (Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x)) * Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = ((Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) * Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.sin (Real.cos (Real.log x)) * (Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_1: Real.exp (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2)) ≠ 0) (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x)) / Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = ((Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) * Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.sin (Real.cos (Real.log x)) * (Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) / Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_8: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x)) + Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) + ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_log_ne_zero_8, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_8)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))) (h_log_ne_zero_8)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_8: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x)) - Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) - (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_log_ne_zero_8, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_8)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))) (h_log_ne_zero_8)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_8: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x)) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.sin (Real.cos (Real.log x)) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_log_ne_zero_8, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_8)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))) (h_log_ne_zero_8)

example (x: ℝ)  (h_div_ne_zero_1: Real.log (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_8: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x)) / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.sin (Real.cos (Real.log x)) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_6, h_log_ne_zero_8, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_8)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))) (h_log_ne_zero_8)
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_12: x ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x)) + Real.exp (Real.cos (Real.log x))) x = Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) + Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_6, h_log_ne_zero_12]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12)))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_12: x ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x)) - Real.exp (Real.cos (Real.log x))) x = Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) - (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_6, h_log_ne_zero_12]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12)))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_12: x ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x)) * Real.exp (Real.cos (Real.log x))) x = ((Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) * Real.exp (Real.cos (Real.log x))) + (Real.sin (Real.cos (Real.log x)) * (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_6, h_log_ne_zero_12]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12)))

example (x: ℝ)  (h_div_ne_zero_1: Real.exp ((Real.cos ((Real.log (x))))) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_12: x ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x)) / Real.exp (Real.cos (Real.log x))) x = ((Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) * Real.exp (Real.cos (Real.log x)) - Real.sin (Real.cos (Real.log x)) * (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) / Real.exp (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_1, h_log_ne_zero_6, h_log_ne_zero_12]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x)) + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x)) - Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) - (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x)) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.cos (Real.cos (Real.log x)) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)))

example (x: ℝ)  (h_div_ne_zero_1: Real.exp (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x)) / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.cos (Real.cos (Real.log x)) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_6, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_8: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_12: x ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x)) + Real.log (Real.cos (Real.log x))) x = (-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) + ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_log_ne_zero_6, h_log_ne_zero_8, h_log_ne_zero_12]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact Real.differentiableAt_log (h_log_ne_zero_8)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12))) (h_log_ne_zero_8)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_8: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_12: x ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x)) - Real.log (Real.cos (Real.log x))) x = (-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) - (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x)) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_log_ne_zero_6, h_log_ne_zero_8, h_log_ne_zero_12]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact Real.differentiableAt_log (h_log_ne_zero_8)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12))) (h_log_ne_zero_8)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_8: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_12: x ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x)) * Real.log (Real.cos (Real.log x))) x = (((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) * Real.log (Real.cos (Real.log x))) + (Real.cos (Real.cos (Real.log x)) * (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_log_ne_zero_6, h_log_ne_zero_8, h_log_ne_zero_12]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact Real.differentiableAt_log (h_log_ne_zero_8)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12))) (h_log_ne_zero_8)

example (x: ℝ)  (h_div_ne_zero_1: Real.log ((Real.cos ((Real.log (x))))) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_8: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_12: x ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x)) / Real.log (Real.cos (Real.log x))) x = (((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) * Real.log (Real.cos (Real.log x)) - Real.cos (Real.cos (Real.log x)) * (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x))) / Real.log (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_1, h_log_ne_zero_6, h_log_ne_zero_8, h_log_ne_zero_12]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact Real.differentiableAt_log (h_log_ne_zero_8)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12))) (h_log_ne_zero_8)
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_12: x ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x)) + Real.exp (Real.cos (Real.log x))) x = (-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) + Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_6, h_log_ne_zero_12]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12)))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_12: x ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x)) - Real.exp (Real.cos (Real.log x))) x = (-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) - (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_6, h_log_ne_zero_12]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12)))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_12: x ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x)) * Real.exp (Real.cos (Real.log x))) x = (((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) * Real.exp (Real.cos (Real.log x))) + (Real.cos (Real.cos (Real.log x)) * (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_6, h_log_ne_zero_12]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12)))

example (x: ℝ)  (h_div_ne_zero_1: Real.exp ((Real.cos ((Real.log (x))))) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_12: x ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x)) / Real.exp (Real.cos (Real.log x))) x = (((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) * Real.exp (Real.cos (Real.log x)) - Real.cos (Real.cos (Real.log x)) * (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) / Real.exp (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_1, h_log_ne_zero_6, h_log_ne_zero_12]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_12)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x)) + Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x)) - Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) - (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x)) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.exp (Real.cos (Real.log x)) * (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)))

example (x: ℝ)  (h_div_ne_zero_1: Real.sin (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x)) / Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.exp (Real.cos (Real.log x)) * (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_6, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x)) + Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) + (-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x)) - Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) - ((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x)) * Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = ((Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) * Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_1: Real.cos (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2)) ≠ 0) (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x)) / Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = ((Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) * Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) / Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x)) + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) + (-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x)) - Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) - ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x)) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)))

example (x: ℝ)  (h_div_ne_zero_1: Real.cos (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x)) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_6, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6)))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_2: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x)) + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x) + (-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_log_ne_zero_6, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (h_log_ne_zero_2)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_2: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x)) - Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x) - ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_log_ne_zero_6, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (h_log_ne_zero_2)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_2: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x)) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x)) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.log (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_log_ne_zero_6, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (h_log_ne_zero_2)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)))

example (x: ℝ)  (h_div_ne_zero_1: Real.cos (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_2: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x)) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x)) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.log (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_2, h_log_ne_zero_6, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (h_log_ne_zero_2)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_2: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x)) + Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x) + (-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (h_log_ne_zero_2)
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_2: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x)) - Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x) - ((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (h_log_ne_zero_2)
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_2: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x)) * Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = ((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x)) * Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.log (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (h_log_ne_zero_2)
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_1: Real.cos (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2)) ≠ 0) (h_log_ne_zero_2: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x)) / Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = ((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x)) * Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.log (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) / Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_2, h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (h_log_ne_zero_2)
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_2: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x)) + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x) + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_log_ne_zero_6, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (h_log_ne_zero_2)
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_2: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x)) - Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x) - (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_log_ne_zero_6, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (h_log_ne_zero_2)
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_2: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x)) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x)) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.log (Real.cos (Real.log x)) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_log_ne_zero_6, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (h_log_ne_zero_2)
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)))

example (x: ℝ)  (h_div_ne_zero_1: Real.exp (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_2: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_16: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_17: x ≠ 0) (h_log_ne_zero_19: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x)) / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x)) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.log (Real.cos (Real.log x)) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_2, h_log_ne_zero_6, h_div_ne_zero_16, h_log_ne_zero_17, h_log_ne_zero_19]
ring
exact Real.differentiableAt_log (h_log_ne_zero_19)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)
exact h_div_ne_zero_16
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (h_log_ne_zero_2)
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_17)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_19)) (h_div_ne_zero_16)))
exact h_div_ne_zero_1

example (x: ℝ) : deriv (λ x ↦ Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) + Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) + Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) - Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) - (Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = ((Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) * Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_1: Real.exp (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2)) ≠ 0): deriv (λ x ↦ Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) / Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = ((Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) * Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) / Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_16: x ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) + Real.cos (Real.log x))) x = Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) + Real.cos (Real.log x)) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) + (-1) * Real.sin (Real.log x) * (1 / x)) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_16]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact Real.differentiableAt_sin
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_16: x ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) + Real.cos (Real.log x))) x = (-1) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) + Real.cos (Real.log x)) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) + (-1) * Real.sin (Real.log x) * (1 / x)) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_16]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact Real.differentiableAt_cos
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_16: x ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) + Real.cos (Real.log x))) x = Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) + Real.cos (Real.log x)) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) + (-1) * Real.sin (Real.log x) * (1 / x)) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_16]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact Real.differentiableAt_exp
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_1: ((Real.exp (x)) * (x ^ 2 + (3:ℝ)) + Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_16: x ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)) + Real.cos (Real.log x))) x = (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) + (-1) * Real.sin (Real.log x) * (1 / x)) / ((Real.exp x) * (x ^ 2 + (3:ℝ)) + Real.cos (Real.log x)) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_1, h_log_ne_zero_16]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_16: x ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) - Real.cos (Real.log x))) x = Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) - Real.cos (Real.log x)) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) - ((-1) * Real.sin (Real.log x) * (1 / x))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_16]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_16: x ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) - Real.cos (Real.log x))) x = (-1) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) - Real.cos (Real.log x)) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) - ((-1) * Real.sin (Real.log x) * (1 / x))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_16]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact Real.differentiableAt_cos
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_16: x ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) - Real.cos (Real.log x))) x = Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) - Real.cos (Real.log x)) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) - ((-1) * Real.sin (Real.log x) * (1 / x))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_16]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact Real.differentiableAt_exp
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_1: ((Real.exp (x)) * (x ^ 2 + (3:ℝ)) - Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_16: x ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)) - Real.cos (Real.log x))) x = (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) - ((-1) * Real.sin (Real.log x) * (1 / x))) / ((Real.exp x) * (x ^ 2 + (3:ℝ)) - Real.cos (Real.log x)) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_1, h_log_ne_zero_16]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_16: x ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x))) x = Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x)) * (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * (Real.cos (Real.log x))) + (((Real.exp x) * (x ^ 2 + (3:ℝ))) * ((-1) * Real.sin (Real.log x) * (1 / x)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_16]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_16: x ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x))) x = (-1) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x)) * (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * (Real.cos (Real.log x))) + (((Real.exp x) * (x ^ 2 + (3:ℝ))) * ((-1) * Real.sin (Real.log x) * (1 / x)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_16]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_16: x ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x))) x = Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x)) * (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * (Real.cos (Real.log x))) + (((Real.exp x) * (x ^ 2 + (3:ℝ))) * ((-1) * Real.sin (Real.log x) * (1 / x)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_16]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))

example (x: ℝ)  (h_log_ne_zero_1: ((Real.exp (x)) * (x ^ 2 + (3:ℝ)) * Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_16: x ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x))) x = (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * (Real.cos (Real.log x))) + (((Real.exp x) * (x ^ 2 + (3:ℝ))) * ((-1) * Real.sin (Real.log x) * (1 / x)))) / ((Real.exp x) * (x ^ 2 + (3:ℝ)) * Real.cos (Real.log x)) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_1, h_log_ne_zero_16]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))

example (x: ℝ)  (h_div_ne_zero_3: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_16: x ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x))) x = Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x)) * (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * (Real.cos (Real.log x)) - ((Real.exp x) * (x ^ 2 + (3:ℝ))) * ((-1) * Real.sin (Real.log x) * (1 / x))) / (Real.cos (Real.log x))^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_3, h_log_ne_zero_16]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact h_div_ne_zero_3
exact Real.differentiableAt_sin
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))) (h_div_ne_zero_3)

example (x: ℝ)  (h_div_ne_zero_3: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_16: x ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x))) x = (-1) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x)) * (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * (Real.cos (Real.log x)) - ((Real.exp x) * (x ^ 2 + (3:ℝ))) * ((-1) * Real.sin (Real.log x) * (1 / x))) / (Real.cos (Real.log x))^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_3, h_log_ne_zero_16]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact h_div_ne_zero_3
exact Real.differentiableAt_cos
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))) (h_div_ne_zero_3)

example (x: ℝ)  (h_div_ne_zero_3: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_16: x ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x))) x = Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x)) * (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * (Real.cos (Real.log x)) - ((Real.exp x) * (x ^ 2 + (3:ℝ))) * ((-1) * Real.sin (Real.log x) * (1 / x))) / (Real.cos (Real.log x))^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_3, h_log_ne_zero_16]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact h_div_ne_zero_3
exact Real.differentiableAt_exp
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))) (h_div_ne_zero_3)

example (x: ℝ)  (h_log_ne_zero_1: ((Real.exp (x)) * (x ^ 2 + (3:ℝ)) / Real.cos ((Real.log (x)))) ≠ 0) (h_div_ne_zero_3: Real.cos ((Real.log (x))) ≠ 0) (h_log_ne_zero_16: x ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x))) x = (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * (Real.cos (Real.log x)) - ((Real.exp x) * (x ^ 2 + (3:ℝ))) * ((-1) * Real.sin (Real.log x) * (1 / x))) / (Real.cos (Real.log x))^2) / ((Real.exp x) * (x ^ 2 + (3:ℝ)) / Real.cos (Real.log x)) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_log_ne_zero_1, h_div_ne_zero_3, h_log_ne_zero_16]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))
exact h_div_ne_zero_3
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))) (h_div_ne_zero_3)

example (x: ℝ) : deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) + 2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_sin
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) + 2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) + 2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_1: ((Real.exp (x)) * (x ^ 2 + (3:ℝ)) + (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) + 2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) / ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) - (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) - (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) - (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_exp
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_1: ((Real.exp (x)) * (x ^ 2 + (3:ℝ)) - (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) - (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) / ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) + (((Real.exp x) * (x ^ 2 + (3:ℝ))) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) + (((Real.exp x) * (x ^ 2 + (3:ℝ))) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) + (((Real.exp x) * (x ^ 2 + (3:ℝ))) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_1: ((Real.exp (x)) * (x ^ 2 + (3:ℝ)) * (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) + (((Real.exp x) * (x ^ 2 + (3:ℝ))) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))))) / ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_3: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) - ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) / ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_3
exact Real.differentiableAt_sin
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_div_ne_zero_3: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) - ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) / ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_3
exact Real.differentiableAt_cos
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_div_ne_zero_3: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) - ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) / ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_3
exact Real.differentiableAt_exp
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_log_ne_zero_1: ((Real.exp (x)) * (x ^ 2 + (3:ℝ)) / (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0) (h_div_ne_zero_3: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) - ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) / ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)^2) / ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_3]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_3
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) + ((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact Real.differentiableAt_exp
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))

example (x: ℝ)  (h_log_ne_zero_1: ((Real.exp (x)) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) + ((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) / ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) - (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) - (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact Real.differentiableAt_cos
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) - (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact Real.differentiableAt_exp
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))

example (x: ℝ)  (h_log_ne_zero_1: ((Real.exp (x)) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) - (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) / ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * (x ^ 3)) + (((Real.exp x) * (x ^ 2 + (3:ℝ))) * (3 * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + (((Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * (x ^ 3)) + (((Real.exp x) * (x ^ 2 + (3:ℝ))) * (3 * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + (((Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * (x ^ 3)) + (((Real.exp x) * (x ^ 2 + (3:ℝ))) * (3 * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + (((Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))

example (x: ℝ)  (h_log_ne_zero_1: ((Real.exp (x)) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * (x ^ 3)) + (((Real.exp x) * (x ^ 2 + (3:ℝ))) * (3 * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + (((Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) / ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))

example (x: ℝ)  (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * (x ^ 3) - ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (3 * x ^ 2)) / (x ^ 3)^2) * (Real.log x / Real.log (5:ℝ))) + (((Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_4, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))

example (x: ℝ)  (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * (x ^ 3) - ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (3 * x ^ 2)) / (x ^ 3)^2) * (Real.log x / Real.log (5:ℝ))) + (((Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_4, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))

example (x: ℝ)  (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * (x ^ 3) - ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (3 * x ^ 2)) / (x ^ 3)^2) * (Real.log x / Real.log (5:ℝ))) + (((Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_4, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))

example (x: ℝ)  (h_log_ne_zero_1: ((Real.exp (x)) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * (x ^ 3) - ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (3 * x ^ 2)) / (x ^ 3)^2) * (Real.log x / Real.log (5:ℝ))) + (((Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) / ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_4, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) + 3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_sin
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (-1) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) + 3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_cos
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) + 3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_1: ((Real.exp (x)) * (x ^ 2 + (3:ℝ)) + (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) + 3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))) / ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_1, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) - (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (-1) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) - (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_cos
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) - (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_exp
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_1: ((Real.exp (x)) * (x ^ 2 + (3:ℝ)) - (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) - (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) / ((Real.exp x) * (x ^ 2 + (3:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_1, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.sub (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) + (((Real.exp x) * (x ^ 2 + (3:ℝ))) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (-1) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) + (((Real.exp x) * (x ^ 2 + (3:ℝ))) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) + (((Real.exp x) * (x ^ 2 + (3:ℝ))) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_1: ((Real.exp (x)) * (x ^ 2 + (3:ℝ)) * (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) + (((Real.exp x) * (x ^ 2 + (3:ℝ))) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))))) / ((Real.exp x) * (x ^ 2 + (3:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_1, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.mul (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) - ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) / ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_3
exact Real.differentiableAt_sin
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (-1) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) - ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) / ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_3
exact Real.differentiableAt_cos
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) - ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) / ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_3
exact Real.differentiableAt_exp
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_log_ne_zero_1: ((Real.exp (x)) * (x ^ 2 + (3:ℝ)) / (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3) ≠ 0) (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) - ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) / ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)^2) / ((Real.exp x) * (x ^ 2 + (3:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_3, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_3
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.div (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.cos (Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * ((-1) * Real.sin (Real.log x) * (1 / x) + 2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_sin
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1) * Real.sin (Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * ((-1) * Real.sin (Real.log x) * (1 / x) + 2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.exp (Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * ((-1) * Real.sin (Real.log x) * (1 / x) + 2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_1: (Real.cos ((Real.log (x))) + (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0) (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = ((-1) * Real.sin (Real.log x) * (1 / x) + 2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) / (Real.cos (Real.log x) + (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_1, h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.cos (Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * ((-1) * Real.sin (Real.log x) * (1 / x) - (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1) * Real.sin (Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * ((-1) * Real.sin (Real.log x) * (1 / x) - (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.exp (Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * ((-1) * Real.sin (Real.log x) * (1 / x) - (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_exp
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_1: (Real.cos ((Real.log (x))) - (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0) (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = ((-1) * Real.sin (Real.log x) * (1 / x) - (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) / (Real.cos (Real.log x) - (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_1, h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.cos (Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * ((((-1) * Real.sin (Real.log x) * (1 / x)) * ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) + ((Real.cos (Real.log x)) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1) * Real.sin (Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * ((((-1) * Real.sin (Real.log x) * (1 / x)) * ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) + ((Real.cos (Real.log x)) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.exp (Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * ((((-1) * Real.sin (Real.log x) * (1 / x)) * ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) + ((Real.cos (Real.log x)) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_1: (Real.cos ((Real.log (x))) * (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0) (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = ((((-1) * Real.sin (Real.log x) * (1 / x)) * ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) + ((Real.cos (Real.log x)) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))))) / (Real.cos (Real.log x) * (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_1, h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_3: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.cos (Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * ((((-1) * Real.sin (Real.log x) * (1 / x)) * ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) - (Real.cos (Real.log x)) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) / ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_3
exact Real.differentiableAt_sin
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_div_ne_zero_3: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1) * Real.sin (Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * ((((-1) * Real.sin (Real.log x) * (1 / x)) * ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) - (Real.cos (Real.log x)) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) / ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_3
exact Real.differentiableAt_cos
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_div_ne_zero_3: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.exp (Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * ((((-1) * Real.sin (Real.log x) * (1 / x)) * ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) - (Real.cos (Real.log x)) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) / ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_3
exact Real.differentiableAt_exp
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_log_ne_zero_1: (Real.cos ((Real.log (x))) / (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0) (h_div_ne_zero_3: (Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 ≠ 0) (h_log_ne_zero_6: x ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = ((((-1) * Real.sin (Real.log x) * (1 / x)) * ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) - (Real.cos (Real.log x)) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) / ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)^2) / (Real.cos (Real.log x) / (Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_3, h_log_ne_zero_6]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact h_div_ne_zero_3
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos (Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1) * Real.sin (Real.log x) * (1 / x) + ((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17]
ring
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))
exact Real.differentiableAt_sin
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1) * Real.sin (Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1) * Real.sin (Real.log x) * (1 / x) + ((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17]
ring
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))
exact Real.differentiableAt_cos
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp (Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1) * Real.sin (Real.log x) * (1 / x) + ((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17]
ring
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))
exact Real.differentiableAt_exp
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)))

example (x: ℝ)  (h_log_ne_zero_1: (Real.cos ((Real.log (x))) + (x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((-1) * Real.sin (Real.log x) * (1 / x) + ((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) / (Real.cos (Real.log x) + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_log_ne_zero_6, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17]
ring
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos (Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1) * Real.sin (Real.log x) * (1 / x) - (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17]
ring
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1) * Real.sin (Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1) * Real.sin (Real.log x) * (1 / x) - (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17]
ring
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))
exact Real.differentiableAt_cos
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp (Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1) * Real.sin (Real.log x) * (1 / x) - (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17]
ring
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))
exact Real.differentiableAt_exp
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)))

example (x: ℝ)  (h_log_ne_zero_1: (Real.cos ((Real.log (x))) - (x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((-1) * Real.sin (Real.log x) * (1 / x) - (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) / (Real.cos (Real.log x) - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_log_ne_zero_6, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17]
ring
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)))

example (x: ℝ)  (h_log_ne_zero_7: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos (Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((((-1) * Real.sin (Real.log x) * (1 / x)) * (x ^ 3)) + ((Real.cos (Real.log x)) * (3 * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_7, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17]
ring
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))

example (x: ℝ)  (h_log_ne_zero_7: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1) * Real.sin (Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((((-1) * Real.sin (Real.log x) * (1 / x)) * (x ^ 3)) + ((Real.cos (Real.log x)) * (3 * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_7, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17]
ring
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))

example (x: ℝ)  (h_log_ne_zero_7: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp (Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((((-1) * Real.sin (Real.log x) * (1 / x)) * (x ^ 3)) + ((Real.cos (Real.log x)) * (3 * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_7, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17]
ring
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))

example (x: ℝ)  (h_log_ne_zero_1: (Real.cos ((Real.log (x))) * (x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_log_ne_zero_7: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((((((-1) * Real.sin (Real.log x) * (1 / x)) * (x ^ 3)) + ((Real.cos (Real.log x)) * (3 * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) * (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) / (Real.cos (Real.log x) * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_log_ne_zero_7, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17]
ring
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))

example (x: ℝ)  (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_log_ne_zero_7: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos (Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((((-1) * Real.sin (Real.log x) * (1 / x)) * (x ^ 3) - (Real.cos (Real.log x)) * (3 * x ^ 2)) / (x ^ 3)^2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_4, h_log_ne_zero_7, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17]
ring
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))

example (x: ℝ)  (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_log_ne_zero_7: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1) * Real.sin (Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((((-1) * Real.sin (Real.log x) * (1 / x)) * (x ^ 3) - (Real.cos (Real.log x)) * (3 * x ^ 2)) / (x ^ 3)^2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_4, h_log_ne_zero_7, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17]
ring
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))

example (x: ℝ)  (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_log_ne_zero_7: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp (Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((((-1) * Real.sin (Real.log x) * (1 / x)) * (x ^ 3) - (Real.cos (Real.log x)) * (3 * x ^ 2)) / (x ^ 3)^2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_4, h_log_ne_zero_7, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17]
ring
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))

example (x: ℝ)  (h_log_ne_zero_1: (Real.cos ((Real.log (x))) / (x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_log_ne_zero_7: x ≠ 0) (h_div_ne_zero_14: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_15: x ≠ 0) (h_log_ne_zero_17: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((((((-1) * Real.sin (Real.log x) * (1 / x)) * (x ^ 3) - (Real.cos (Real.log x)) * (3 * x ^ 2)) / (x ^ 3)^2) * (Real.log x / Real.log (5:ℝ))) + ((Real.cos (Real.log x) / (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) / (Real.cos (Real.log x) / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_4, h_log_ne_zero_7, h_div_ne_zero_14, h_log_ne_zero_15, h_log_ne_zero_17]
ring
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)
exact h_div_ne_zero_14
exact differentiableAt_id
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14)
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_15)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_17)) (h_div_ne_zero_14))

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.cos (Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * ((-1) * Real.sin (Real.log x) * (1 / x) + 3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_log_ne_zero_10]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact Real.differentiableAt_sin
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (-1) * Real.sin (Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * ((-1) * Real.sin (Real.log x) * (1 / x) + 3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_log_ne_zero_10]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact Real.differentiableAt_cos
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.exp (Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * ((-1) * Real.sin (Real.log x) * (1 / x) + 3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_log_ne_zero_10]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _)

example (x: ℝ)  (h_log_ne_zero_1: (Real.cos ((Real.log (x))) + (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = ((-1) * Real.sin (Real.log x) * (1 / x) + 3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))) / (Real.cos (Real.log x) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_1, h_log_ne_zero_6, h_log_ne_zero_10]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.add (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.cos (Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * ((-1) * Real.sin (Real.log x) * (1 / x) - (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_log_ne_zero_10]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (-1) * Real.sin (Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * ((-1) * Real.sin (Real.log x) * (1 / x) - (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_log_ne_zero_10]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact Real.differentiableAt_cos
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.exp (Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * ((-1) * Real.sin (Real.log x) * (1 / x) - (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_log_ne_zero_10]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact Real.differentiableAt_exp
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _)

example (x: ℝ)  (h_log_ne_zero_1: (Real.cos ((Real.log (x))) - (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = ((-1) * Real.sin (Real.log x) * (1 / x) - (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) / (Real.cos (Real.log x) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_1, h_log_ne_zero_6, h_log_ne_zero_10]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.cos (Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * ((((-1) * Real.sin (Real.log x) * (1 / x)) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) + ((Real.cos (Real.log x)) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_log_ne_zero_10]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (-1) * Real.sin (Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * ((((-1) * Real.sin (Real.log x) * (1 / x)) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) + ((Real.cos (Real.log x)) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_log_ne_zero_10]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _)

example (x: ℝ)  (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.exp (Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * ((((-1) * Real.sin (Real.log x) * (1 / x)) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) + ((Real.cos (Real.log x)) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_6, h_log_ne_zero_10]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _)

example (x: ℝ)  (h_log_ne_zero_1: (Real.cos ((Real.log (x))) * (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3) ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = ((((-1) * Real.sin (Real.log x) * (1 / x)) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) + ((Real.cos (Real.log x)) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))))) / (Real.cos (Real.log x) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_1, h_log_ne_zero_6, h_log_ne_zero_10]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _)

example (x: ℝ)  (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.cos (Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * ((((-1) * Real.sin (Real.log x) * (1 / x)) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) - (Real.cos (Real.log x)) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) / ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_6, h_log_ne_zero_10]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact h_div_ne_zero_3
exact Real.differentiableAt_sin
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (-1) * Real.sin (Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * ((((-1) * Real.sin (Real.log x) * (1 / x)) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) - (Real.cos (Real.log x)) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) / ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_6, h_log_ne_zero_10]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact h_div_ne_zero_3
exact Real.differentiableAt_cos
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.exp (Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * ((((-1) * Real.sin (Real.log x) * (1 / x)) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) - (Real.cos (Real.log x)) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) / ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_6, h_log_ne_zero_10]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact h_div_ne_zero_3
exact Real.differentiableAt_exp
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_log_ne_zero_1: (Real.cos ((Real.log (x))) / (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3) ≠ 0) (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_6: x ≠ 0) (h_log_ne_zero_10: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = ((((-1) * Real.sin (Real.log x) * (1 / x)) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) - (Real.cos (Real.log x)) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) / ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)^2) / (Real.cos (Real.log x) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_3, h_log_ne_zero_6, h_log_ne_zero_10]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_6)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _
exact h_div_ne_zero_3
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.div (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_10)) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))) + ((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact Real.differentiableAt_exp
exact DifferentiableAt.add (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))

example (x: ℝ)  (h_log_ne_zero_1: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 + (x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))) + ((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) / ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.add (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))) - (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1) * Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))) - (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact Real.differentiableAt_cos
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))) - (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact Real.differentiableAt_exp
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))

example (x: ℝ)  (h_log_ne_zero_1: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 - (x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))) - (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) / ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((((2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) * (x ^ 3)) + (((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (3 * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + (((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1) * Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((((2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) * (x ^ 3)) + (((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (3 * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + (((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((((2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) * (x ^ 3)) + (((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (3 * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + (((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))

example (x: ℝ)  (h_log_ne_zero_1: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 * (x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) * (x ^ 3)) + (((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (3 * x ^ 2))) * (Real.log x / Real.log (5:ℝ))) + (((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) / ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.mul (DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))

example (x: ℝ)  (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((((2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) * (x ^ 3) - ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (3 * x ^ 2)) / (x ^ 3)^2) * (Real.log x / Real.log (5:ℝ))) + (((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_4, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))

example (x: ℝ)  (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1) * Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((((2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) * (x ^ 3) - ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (3 * x ^ 2)) / (x ^ 3)^2) * (Real.log x / Real.log (5:ℝ))) + (((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_4, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))

example (x: ℝ)  (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((((2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) * (x ^ 3) - ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (3 * x ^ 2)) / (x ^ 3)^2) * (Real.log x / Real.log (5:ℝ))) + (((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_4, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))

example (x: ℝ)  (h_log_ne_zero_1: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 / (x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_4: (x ^ 3) ≠ 0) (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((((2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) * (x ^ 3) - ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (3 * x ^ 2)) / (x ^ 3)^2) * (Real.log x / Real.log (5:ℝ))) + (((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3)) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) / ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_4, h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_pow _
exact h_div_ne_zero_4
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_4)
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.mul (DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (differentiableAt_pow _) (h_div_ne_zero_4)) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))) + 3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_sin
exact DifferentiableAt.add (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (-1) * Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))) + 3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_cos
exact DifferentiableAt.add (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))) + 3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_1: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 + (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))) + 3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))) / ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_1, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.add (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))) - (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (-1) * Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))) - (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_cos
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))) - (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_exp
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_1: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 - (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))) - (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) / ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_1, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.sub (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) + (((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (-1) * Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) + (((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) + (((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_log_ne_zero_1: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 * (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (((2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) + (((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))))) / ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_1, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.mul (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)

example (x: ℝ)  (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) - ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) / ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_3
exact Real.differentiableAt_sin
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (-1) * Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) - ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) / ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_3
exact Real.differentiableAt_cos
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) - ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) / ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_3
exact Real.differentiableAt_exp
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_log_ne_zero_1: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2 / (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3) ≠ 0) (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (((2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) - ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) / ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)^2) / ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2 / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_3, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_3
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.div (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)) + 3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact Real.differentiableAt_sin
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _)

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (-1) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)) + 3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact Real.differentiableAt_cos
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _)

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)) + 3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _)

example (x: ℝ)  (h_log_ne_zero_1: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))) + (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3) ≠ 0) (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)) + 3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) + (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _)

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)) - (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _)

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (-1) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)) - (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact Real.differentiableAt_cos
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _)

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)) - (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact Real.differentiableAt_exp
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _)

example (x: ℝ)  (h_log_ne_zero_1: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))) - (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3) ≠ 0) (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)) - (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) - (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _)

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _)

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (-1) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _)

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _)

example (x: ℝ)  (h_log_ne_zero_1: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))) * (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3) ≠ 0) (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (((((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ)))))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _)

example (x: ℝ)  (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) / ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact h_div_ne_zero_3
exact Real.differentiableAt_sin
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (-1) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) / ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact h_div_ne_zero_3
exact Real.differentiableAt_cos
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) * (((((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) / ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)^2) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_3, h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact h_div_ne_zero_3
exact Real.differentiableAt_exp
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _) (h_div_ne_zero_3)

example (x: ℝ)  (h_log_ne_zero_1: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))) / (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3) ≠ 0) (h_div_ne_zero_3: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_17: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)) x = (((((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) * ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (3 * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 2 * (((0 * x) + (5:ℝ)) / ((5:ℝ) * x + (2:ℝ))))) / ((Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3)^2) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_3, h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_17]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_17)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _
exact h_div_ne_zero_3
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_17)) _) (h_div_ne_zero_3)

example (x: ℝ) : deriv (λ x ↦ Real.sin (Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ))))) x = Real.cos (Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) * (Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ) : deriv (λ x ↦ Real.cos (Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ))))) x = (-1) * Real.sin (Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) * (Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ) : deriv (λ x ↦ Real.exp (Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ))))) x = Real.exp (Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) * (Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_log_ne_zero_1: (Real.sin (((Real.exp (x)) * (x ^ 2 + (3:ℝ))))) ≠ 0): deriv (λ x ↦ Real.log (Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ))))) x = (Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)))) / (Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_1]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ) : deriv (λ x ↦ Real.sin (Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ))))) x = Real.cos (Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)))) * ((-1) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ) : deriv (λ x ↦ Real.cos (Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ))))) x = (-1) * Real.sin (Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)))) * ((-1) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ) : deriv (λ x ↦ Real.exp (Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ))))) x = Real.exp (Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)))) * ((-1) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_log_ne_zero_1: (Real.cos (((Real.exp (x)) * (x ^ 2 + (3:ℝ))))) ≠ 0): deriv (λ x ↦ Real.log (Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ))))) x = ((-1) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)))) / (Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_1]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.cos (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ) : deriv (λ x ↦ Real.sin (Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ))))) x = Real.cos (Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)))) * (Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ) : deriv (λ x ↦ Real.cos (Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ))))) x = (-1) * Real.sin (Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)))) * (Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ) : deriv (λ x ↦ Real.exp (Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ))))) x = Real.exp (Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)))) * (Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_log_ne_zero_1: (Real.exp (((Real.exp (x)) * (x ^ 2 + (3:ℝ))))) ≠ 0): deriv (λ x ↦ Real.log (Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ))))) x = (Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ))) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)))) / (Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_1]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))

example (x: ℝ)  (h_log_ne_zero_3: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ Real.sin (Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ))))) x = Real.cos (Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) * ((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) / ((Real.exp x) * (x ^ 2 + (3:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_3]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_3)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_3)

example (x: ℝ)  (h_log_ne_zero_3: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ Real.cos (Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ))))) x = (-1) * Real.sin (Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) * ((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) / ((Real.exp x) * (x ^ 2 + (3:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_3]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_3)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_3)

example (x: ℝ)  (h_log_ne_zero_3: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ Real.exp (Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ))))) x = Real.exp (Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) * ((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) / ((Real.exp x) * (x ^ 2 + (3:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_3]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_3)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_3)

example (x: ℝ)  (h_log_ne_zero_1: (Real.log (((Real.exp (x)) * (x ^ 2 + (3:ℝ))))) ≠ 0) (h_log_ne_zero_3: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ Real.log (Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ))))) x = ((((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x))) / ((Real.exp x) * (x ^ 2 + (3:ℝ)))) / (Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_log_ne_zero_1, h_log_ne_zero_3]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_3)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_3)

example (x: ℝ)  (h_log_ne_zero_7: x ≠ 0): deriv (λ x ↦ Real.sin (Real.sin (Real.cos (Real.log x)))) x = Real.cos (Real.sin (Real.cos (Real.log x))) * (Real.cos (Real.cos (Real.log x)) * ((-1) * Real.sin (Real.log x) * (1 / x))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_7]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact Real.differentiableAt_sin
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7)))

example (x: ℝ)  (h_log_ne_zero_7: x ≠ 0): deriv (λ x ↦ Real.cos (Real.sin (Real.cos (Real.log x)))) x = (-1) * Real.sin (Real.sin (Real.cos (Real.log x))) * (Real.cos (Real.cos (Real.log x)) * ((-1) * Real.sin (Real.log x) * (1 / x))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_7]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact Real.differentiableAt_cos
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7)))

example (x: ℝ)  (h_log_ne_zero_7: x ≠ 0): deriv (λ x ↦ Real.exp (Real.sin (Real.cos (Real.log x)))) x = Real.exp (Real.sin (Real.cos (Real.log x))) * (Real.cos (Real.cos (Real.log x)) * ((-1) * Real.sin (Real.log x) * (1 / x))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_7]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact Real.differentiableAt_exp
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7)))

example (x: ℝ)  (h_log_ne_zero_1: (Real.sin ((Real.cos ((Real.log (x)))))) ≠ 0) (h_log_ne_zero_7: x ≠ 0): deriv (λ x ↦ Real.log (Real.sin (Real.cos (Real.log x)))) x = (Real.cos (Real.cos (Real.log x)) * ((-1) * Real.sin (Real.log x) * (1 / x))) / (Real.sin (Real.cos (Real.log x))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_1, h_log_ne_zero_7]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7)))

example (x: ℝ)  (h_log_ne_zero_7: x ≠ 0): deriv (λ x ↦ Real.sin (Real.cos (Real.cos (Real.log x)))) x = Real.cos (Real.cos (Real.cos (Real.log x))) * ((-1) * Real.sin (Real.cos (Real.log x)) * ((-1) * Real.sin (Real.log x) * (1 / x))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_7]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7)))

example (x: ℝ)  (h_log_ne_zero_7: x ≠ 0): deriv (λ x ↦ Real.cos (Real.cos (Real.cos (Real.log x)))) x = (-1) * Real.sin (Real.cos (Real.cos (Real.log x))) * ((-1) * Real.sin (Real.cos (Real.log x)) * ((-1) * Real.sin (Real.log x) * (1 / x))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_7]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7)))

example (x: ℝ)  (h_log_ne_zero_7: x ≠ 0): deriv (λ x ↦ Real.exp (Real.cos (Real.cos (Real.log x)))) x = Real.exp (Real.cos (Real.cos (Real.log x))) * ((-1) * Real.sin (Real.cos (Real.log x)) * ((-1) * Real.sin (Real.log x) * (1 / x))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_7]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7)))

example (x: ℝ)  (h_log_ne_zero_1: (Real.cos ((Real.cos ((Real.log (x)))))) ≠ 0) (h_log_ne_zero_7: x ≠ 0): deriv (λ x ↦ Real.log (Real.cos (Real.cos (Real.log x)))) x = ((-1) * Real.sin (Real.cos (Real.log x)) * ((-1) * Real.sin (Real.log x) * (1 / x))) / (Real.cos (Real.cos (Real.log x))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_1, h_log_ne_zero_7]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7)))

example (x: ℝ)  (h_log_ne_zero_7: x ≠ 0): deriv (λ x ↦ Real.sin (Real.exp (Real.cos (Real.log x)))) x = Real.cos (Real.exp (Real.cos (Real.log x))) * (Real.exp (Real.cos (Real.log x)) * ((-1) * Real.sin (Real.log x) * (1 / x))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_7]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact Real.differentiableAt_sin
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7)))

example (x: ℝ)  (h_log_ne_zero_7: x ≠ 0): deriv (λ x ↦ Real.cos (Real.exp (Real.cos (Real.log x)))) x = (-1) * Real.sin (Real.exp (Real.cos (Real.log x))) * (Real.exp (Real.cos (Real.log x)) * ((-1) * Real.sin (Real.log x) * (1 / x))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_7]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact Real.differentiableAt_cos
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7)))

example (x: ℝ)  (h_log_ne_zero_7: x ≠ 0): deriv (λ x ↦ Real.exp (Real.exp (Real.cos (Real.log x)))) x = Real.exp (Real.exp (Real.cos (Real.log x))) * (Real.exp (Real.cos (Real.log x)) * ((-1) * Real.sin (Real.log x) * (1 / x))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_7]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact Real.differentiableAt_exp
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7)))

example (x: ℝ)  (h_log_ne_zero_1: (Real.exp ((Real.cos ((Real.log (x)))))) ≠ 0) (h_log_ne_zero_7: x ≠ 0): deriv (λ x ↦ Real.log (Real.exp (Real.cos (Real.log x)))) x = (Real.exp (Real.cos (Real.log x)) * ((-1) * Real.sin (Real.log x) * (1 / x))) / (Real.exp (Real.cos (Real.log x))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_1, h_log_ne_zero_7]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7)))

example (x: ℝ)  (h_log_ne_zero_3: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_7: x ≠ 0): deriv (λ x ↦ Real.sin (Real.log (Real.cos (Real.log x)))) x = Real.cos (Real.log (Real.cos (Real.log x))) * (((-1) * Real.sin (Real.log x) * (1 / x)) / (Real.cos (Real.log x))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_3, h_log_ne_zero_7]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact Real.differentiableAt_log (h_log_ne_zero_3)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact Real.differentiableAt_sin
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (h_log_ne_zero_3)

example (x: ℝ)  (h_log_ne_zero_3: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_7: x ≠ 0): deriv (λ x ↦ Real.cos (Real.log (Real.cos (Real.log x)))) x = (-1) * Real.sin (Real.log (Real.cos (Real.log x))) * (((-1) * Real.sin (Real.log x) * (1 / x)) / (Real.cos (Real.log x))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_3, h_log_ne_zero_7]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact Real.differentiableAt_log (h_log_ne_zero_3)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact Real.differentiableAt_cos
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (h_log_ne_zero_3)

example (x: ℝ)  (h_log_ne_zero_3: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_7: x ≠ 0): deriv (λ x ↦ Real.exp (Real.log (Real.cos (Real.log x)))) x = Real.exp (Real.log (Real.cos (Real.log x))) * (((-1) * Real.sin (Real.log x) * (1 / x)) / (Real.cos (Real.log x))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_3, h_log_ne_zero_7]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact Real.differentiableAt_log (h_log_ne_zero_3)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact Real.differentiableAt_exp
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (h_log_ne_zero_3)

example (x: ℝ)  (h_log_ne_zero_1: (Real.log ((Real.cos ((Real.log (x)))))) ≠ 0) (h_log_ne_zero_3: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_7: x ≠ 0): deriv (λ x ↦ Real.log (Real.log (Real.cos (Real.log x)))) x = (((-1) * Real.sin (Real.log x) * (1 / x)) / (Real.cos (Real.log x))) / (Real.log (Real.cos (Real.log x))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_1, h_log_ne_zero_3, h_log_ne_zero_7]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_7)
exact Real.differentiableAt_log (h_log_ne_zero_3)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_7))) (h_log_ne_zero_3)

example (x: ℝ) : deriv (λ x ↦ Real.sin (Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2))) x = Real.cos (Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) * (Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_sin
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.cos (Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2))) x = (-1) * Real.sin (Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) * (Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.exp (Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2))) x = Real.exp (Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) * (Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_exp
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_1: (Real.sin (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2))) ≠ 0): deriv (λ x ↦ Real.log (Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2))) x = (Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) / (Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.sin (Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2))) x = Real.cos (Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) * ((-1) * Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.cos (Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2))) x = (-1) * Real.sin (Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) * ((-1) * Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.exp (Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2))) x = Real.exp (Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) * ((-1) * Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_1: (Real.cos (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2))) ≠ 0): deriv (λ x ↦ Real.log (Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2))) x = ((-1) * Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) / (Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.sin (Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2))) x = Real.cos (Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) * (Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_sin
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.cos (Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2))) x = (-1) * Real.sin (Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) * (Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.exp (Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2))) x = Real.exp (Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) * (Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_exp
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_1: (Real.exp (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2))) ≠ 0): deriv (λ x ↦ Real.log (Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2))) x = (Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * (2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ))))) / (Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_log_ne_zero_3: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ Real.sin (Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2))) x = Real.cos (Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) * ((2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) / ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_3]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_3)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_sin
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_3)

example (x: ℝ)  (h_log_ne_zero_3: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ Real.cos (Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2))) x = (-1) * Real.sin (Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) * ((2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) / ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_3]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_3)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_cos
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_3)

example (x: ℝ)  (h_log_ne_zero_3: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ Real.exp (Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2))) x = Real.exp (Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) * ((2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) / ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_3]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_3)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_exp
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_3)

example (x: ℝ)  (h_log_ne_zero_1: (Real.log (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2))) ≠ 0) (h_log_ne_zero_3: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ Real.log (Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2))) x = ((2 * (Real.sin ((2:ℝ) * x - (1:ℝ))) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * ((0 * x) + (2:ℝ)))) / ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) / (Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_log_ne_zero_3]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_3)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_3)

example (x: ℝ)  (h_div_ne_zero_11: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_12: x ≠ 0) (h_log_ne_zero_14: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin (Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) x = Real.cos (Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) * (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_11, h_log_ne_zero_12, h_log_ne_zero_14]
ring
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)
exact h_div_ne_zero_11
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11))
exact Real.differentiableAt_sin
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)))

example (x: ℝ)  (h_div_ne_zero_11: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_12: x ≠ 0) (h_log_ne_zero_14: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) x = (-1) * Real.sin (Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) * (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_11, h_log_ne_zero_12, h_log_ne_zero_14]
ring
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)
exact h_div_ne_zero_11
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11))
exact Real.differentiableAt_cos
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)))

example (x: ℝ)  (h_div_ne_zero_11: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_12: x ≠ 0) (h_log_ne_zero_14: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp (Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) x = Real.exp (Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) * (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_11, h_log_ne_zero_12, h_log_ne_zero_14]
ring
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)
exact h_div_ne_zero_11
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11))
exact Real.differentiableAt_exp
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)))

example (x: ℝ)  (h_log_ne_zero_1: (Real.sin (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))))) ≠ 0) (h_div_ne_zero_11: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_12: x ≠ 0) (h_log_ne_zero_14: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log (Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) x = (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) / (Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_11, h_log_ne_zero_12, h_log_ne_zero_14]
ring
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)
exact h_div_ne_zero_11
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11))
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)))

example (x: ℝ)  (h_div_ne_zero_11: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_12: x ≠ 0) (h_log_ne_zero_14: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) x = Real.cos (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) * ((-1) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_11, h_log_ne_zero_12, h_log_ne_zero_14]
ring
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)
exact h_div_ne_zero_11
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11))
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)))

example (x: ℝ)  (h_div_ne_zero_11: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_12: x ≠ 0) (h_log_ne_zero_14: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) x = (-1) * Real.sin (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) * ((-1) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_11, h_log_ne_zero_12, h_log_ne_zero_14]
ring
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)
exact h_div_ne_zero_11
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11))
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)))

example (x: ℝ)  (h_div_ne_zero_11: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_12: x ≠ 0) (h_log_ne_zero_14: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) x = Real.exp (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) * ((-1) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_11, h_log_ne_zero_12, h_log_ne_zero_14]
ring
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)
exact h_div_ne_zero_11
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11))
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)))

example (x: ℝ)  (h_log_ne_zero_1: (Real.cos (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))))) ≠ 0) (h_div_ne_zero_11: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_12: x ≠ 0) (h_log_ne_zero_14: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) x = ((-1) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) / (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_11, h_log_ne_zero_12, h_log_ne_zero_14]
ring
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)
exact h_div_ne_zero_11
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11))
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)))

example (x: ℝ)  (h_div_ne_zero_11: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_12: x ≠ 0) (h_log_ne_zero_14: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) x = Real.cos (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_11, h_log_ne_zero_12, h_log_ne_zero_14]
ring
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)
exact h_div_ne_zero_11
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11))
exact Real.differentiableAt_sin
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)))

example (x: ℝ)  (h_div_ne_zero_11: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_12: x ≠ 0) (h_log_ne_zero_14: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) x = (-1) * Real.sin (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_11, h_log_ne_zero_12, h_log_ne_zero_14]
ring
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)
exact h_div_ne_zero_11
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11))
exact Real.differentiableAt_cos
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)))

example (x: ℝ)  (h_div_ne_zero_11: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_12: x ≠ 0) (h_log_ne_zero_14: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) x = Real.exp (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_11, h_log_ne_zero_12, h_log_ne_zero_14]
ring
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)
exact h_div_ne_zero_11
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11))
exact Real.differentiableAt_exp
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)))

example (x: ℝ)  (h_log_ne_zero_1: (Real.exp (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))))) ≠ 0) (h_div_ne_zero_11: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_12: x ≠ 0) (h_log_ne_zero_14: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) x = (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2)))) / (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_1, h_div_ne_zero_11, h_log_ne_zero_12, h_log_ne_zero_14]
ring
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)
exact h_div_ne_zero_11
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11))
exact Real.differentiableAt_log (h_log_ne_zero_1)
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_12)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_14)) (h_div_ne_zero_11)))

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_24: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) - (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_24]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_24)

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_24: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_24]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_24)

example (x: ℝ)  (h_div_ne_zero_1: Real.log (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2)) ≠ 0) (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_24: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2))) / Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_24]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_24)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.sin (Real.cos (Real.log x))) x = (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) + Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.sin (Real.cos (Real.log x))) x = (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) - (Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.sin (Real.cos (Real.log x))) x = (((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.sin (Real.cos (Real.log x))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))

example (x: ℝ)  (h_div_ne_zero_1: Real.sin ((Real.cos ((Real.log (x))))) ≠ 0) (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.sin (Real.cos (Real.log x))) x = (((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.sin (Real.cos (Real.log x)) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) / Real.sin (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_1, h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_24: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.log (Real.cos (Real.log x))) x = (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) + ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_24, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))) (h_log_ne_zero_24)

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_24: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.log (Real.cos (Real.log x))) x = (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) - (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x)) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_24, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))) (h_log_ne_zero_24)

example (x: ℝ)  (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_24: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.log (Real.cos (Real.log x))) x = (((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.log (Real.cos (Real.log x))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_24, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))) (h_log_ne_zero_24)

example (x: ℝ)  (h_div_ne_zero_1: Real.log ((Real.cos ((Real.log (x))))) ≠ 0) (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_24: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) * (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.log (Real.cos (Real.log x))) x = (((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ)))))) * Real.log (Real.cos (Real.log x)) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x))) / Real.log (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_1, h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_24, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact DifferentiableAt.mul (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))) (h_log_ne_zero_24)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_24: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.log (Real.cos (Real.log x))) x = (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 + ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_2, h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_24, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))) (h_log_ne_zero_24)

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_24: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.log (Real.cos (Real.log x))) x = (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 - (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x)) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_2, h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_24, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))) (h_log_ne_zero_24)

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_24: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.log (Real.cos (Real.log x))) x = (((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * Real.log (Real.cos (Real.log x))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_2, h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_24, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))) (h_log_ne_zero_24)

example (x: ℝ)  (h_div_ne_zero_1: Real.log ((Real.cos ((Real.log (x))))) ≠ 0) (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_24: (Real.cos ((Real.log (x)))) ≠ 0) (h_log_ne_zero_28: x ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.log (Real.cos (Real.log x))) x = (((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * Real.log (Real.cos (Real.log x)) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) / Real.cos (Real.log x))) / Real.log (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
field_simp [h_div_ne_zero_1, h_div_ne_zero_2, h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_24, h_log_ne_zero_28]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_28)
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_28))) (h_log_ne_zero_24)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 + Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 - (Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_2, h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_1: Real.sin (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2)) ≠ 0) (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) / Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_2, h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_24: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 + Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 + ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_2, h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_24]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_24)

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_24: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 - Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2 - (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_2, h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_24]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_24)

example (x: ℝ)  (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_24: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 * Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * Real.log (Real.exp x * (x ^ 2 + (3:ℝ)))) + (((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_2, h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_24]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_24)

example (x: ℝ)  (h_div_ne_zero_1: Real.log (((Real.exp (x)) * (x ^ 2 + (3:ℝ)))) ≠ 0) (h_div_ne_zero_2: (Real.log (((5:ℝ) * x + (2:ℝ)))) ^ 3 ≠ 0) (h_div_ne_zero_9: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_10: x ≠ 0) (h_log_ne_zero_12: (5:ℝ) ≠ 0) (h_log_ne_zero_16: ((5:ℝ) * x + (2:ℝ)) ≠ 0) (h_log_ne_zero_24: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0): deriv (λ x ↦ (x ^ 3) * (Real.log x / Real.log (5:ℝ)) / (Real.log ((5:ℝ) * x + (2:ℝ))) ^ 3 / Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ)))) x = (((((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) * (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((3:ℝ) * Real.log ((5:ℝ) * x + (2:ℝ)) ^ 2 * ((5:ℝ) / ((5:ℝ) * x + (2:ℝ))))) / (Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) ^ 2) * Real.log (Real.exp x * (x ^ 2 + (3:ℝ))) - ((x ^ 3) * (Real.log x / Real.log (5:ℝ)) / Real.log ((5:ℝ) * x + (2:ℝ)) ^ 3) * (((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))))) / Real.log (Real.exp x * (x ^ 2 + (3:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_1, h_div_ne_zero_2, h_div_ne_zero_9, h_log_ne_zero_10, h_log_ne_zero_12, h_log_ne_zero_16, h_log_ne_zero_24]
ring
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_16)
exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)
exact Real.differentiableAt_log (h_log_ne_zero_12)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_10)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)
exact h_div_ne_zero_9
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))
exact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _
exact h_div_ne_zero_2
exact DifferentiableAt.div (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_10)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_12)) (h_div_ne_zero_9))) (DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_16)) _) (h_div_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_24)
exact h_div_ne_zero_1

example (x: ℝ) : deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ))) + Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) + Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ))) - Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) - (Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ))) * Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = ((Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) * Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * (Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ))) + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ))) - Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) - (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_1: Real.exp (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ))) / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.sin (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_18: x ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ))) + Real.cos (Real.cos (Real.log x))) x = (-1:ℝ) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) + (-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_18]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18)))

example (x: ℝ)  (h_log_ne_zero_18: x ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ))) - Real.cos (Real.cos (Real.log x))) x = (-1:ℝ) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) - ((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_18]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18)))

example (x: ℝ)  (h_log_ne_zero_18: x ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ))) * Real.cos (Real.cos (Real.log x))) x = (((-1:ℝ) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) * Real.cos (Real.cos (Real.log x))) + (Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_18]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18)))

example (x: ℝ)  (h_div_ne_zero_1: Real.cos ((Real.cos ((Real.log (x))))) ≠ 0) (h_log_ne_zero_18: x ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ))) / Real.cos (Real.cos (Real.log x))) x = (((-1:ℝ) * Real.sin (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) * Real.cos (Real.cos (Real.log x)) - Real.cos (Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) / Real.cos (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_1, h_log_ne_zero_18]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact Real.differentiableAt_cos
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.cos (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.cos (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ))) + Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ))) - Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) - (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ))) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_1: Real.sin (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ))) / Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ))) + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ))) - Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) - (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_1: Real.exp (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ))) / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_18: x ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ))) + Real.exp (Real.cos (Real.log x))) x = Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) + Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_18]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18)))

example (x: ℝ)  (h_log_ne_zero_18: x ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ))) - Real.exp (Real.cos (Real.log x))) x = Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) - (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_18]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18)))

example (x: ℝ)  (h_log_ne_zero_18: x ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ))) * Real.exp (Real.cos (Real.log x))) x = ((Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) * Real.exp (Real.cos (Real.log x))) + (Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_18]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18)))

example (x: ℝ)  (h_div_ne_zero_1: Real.exp ((Real.cos ((Real.log (x))))) ≠ 0) (h_log_ne_zero_18: x ≠ 0): deriv (λ x ↦ Real.exp ((Real.exp x) * (x ^ 2 + (3:ℝ))) / Real.exp (Real.cos (Real.log x))) x = ((Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x)))) * Real.exp (Real.cos (Real.log x)) - Real.exp (Real.exp x * (x ^ 2 + (3:ℝ))) * (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) / Real.exp (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_1, h_log_ne_zero_18]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.exp (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)))
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_2: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0) (h_log_ne_zero_18: x ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ))) + Real.exp (Real.cos (Real.log x))) x = ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))) + Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_2, h_log_ne_zero_18]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_2)
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18)))

example (x: ℝ)  (h_log_ne_zero_2: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0) (h_log_ne_zero_18: x ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ))) - Real.exp (Real.cos (Real.log x))) x = ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))) - (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_2, h_log_ne_zero_18]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_2)
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18)))

example (x: ℝ)  (h_log_ne_zero_2: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0) (h_log_ne_zero_18: x ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ))) * Real.exp (Real.cos (Real.log x))) x = ((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ)))) * Real.exp (Real.cos (Real.log x))) + (Real.log (Real.exp x * (x ^ 2 + (3:ℝ))) * (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_2, h_log_ne_zero_18]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_2)
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18)))

example (x: ℝ)  (h_div_ne_zero_1: Real.exp ((Real.cos ((Real.log (x))))) ≠ 0) (h_log_ne_zero_2: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0) (h_log_ne_zero_18: x ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ))) / Real.exp (Real.cos (Real.log x))) x = ((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ)))) * Real.exp (Real.cos (Real.log x)) - Real.log (Real.exp x * (x ^ 2 + (3:ℝ))) * (Real.exp (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) / Real.exp (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_1, h_log_ne_zero_2, h_log_ne_zero_18]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact Real.differentiableAt_exp
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_2)
exact DifferentiableAt.exp (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_2: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ))) + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))) + (-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_2)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_log_ne_zero_2: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ))) - Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))) - ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_2)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_log_ne_zero_2: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ)))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.log (Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_2)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_1: Real.cos (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_2: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ))) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ)))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.log (Real.exp x * (x ^ 2 + (3:ℝ))) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_2, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_2)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_2: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0) (h_log_ne_zero_18: x ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ))) + Real.sin (Real.cos (Real.log x))) x = ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))) + Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_2, h_log_ne_zero_18]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18)))

example (x: ℝ)  (h_log_ne_zero_2: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0) (h_log_ne_zero_18: x ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ))) - Real.sin (Real.cos (Real.log x))) x = ((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ))) - (Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_2, h_log_ne_zero_18]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18)))

example (x: ℝ)  (h_log_ne_zero_2: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0) (h_log_ne_zero_18: x ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ))) * Real.sin (Real.cos (Real.log x))) x = ((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ)))) * Real.sin (Real.cos (Real.log x))) + (Real.log (Real.exp x * (x ^ 2 + (3:ℝ))) * (Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_log_ne_zero_2, h_log_ne_zero_18]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18)))

example (x: ℝ)  (h_div_ne_zero_1: Real.sin ((Real.cos ((Real.log (x))))) ≠ 0) (h_log_ne_zero_2: ((Real.exp (x)) * (x ^ 2 + (3:ℝ))) ≠ 0) (h_log_ne_zero_18: x ≠ 0): deriv (λ x ↦ Real.log ((Real.exp x) * (x ^ 2 + (3:ℝ))) / Real.sin (Real.cos (Real.log x))) x = ((((Real.exp x * (x ^ 2 + (3:ℝ))) + (Real.exp x * ((2:ℝ) * x))) / (Real.exp x * (x ^ 2 + (3:ℝ)))) * Real.sin (Real.cos (Real.log x)) - Real.log (Real.exp x * (x ^ 2 + (3:ℝ))) * (Real.cos (Real.cos (Real.log x)) * ((-1:ℝ) * Real.sin (Real.log x) * ((1:ℝ) / x)))) / Real.sin (Real.cos (Real.log x)) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [Real.deriv_log]
-- field_simp [h_div_ne_zero_1, h_log_ne_zero_2, h_log_ne_zero_18]
ring
exact Real.differentiableAt_cos
exact Real.differentiableAt_log (h_log_ne_zero_18)
exact Real.differentiableAt_sin
exact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18))
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.log (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (h_log_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_18)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) + (-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) - Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) - ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_1: Real.cos (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))
exact h_div_ne_zero_1

example (x: ℝ) : deriv (λ x ↦ Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) + Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) + (-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) - Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) - ((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = ((Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) * Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_1: Real.cos (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2)) ≠ 0): deriv (λ x ↦ Real.sin ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) / Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = ((Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) * Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) / Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_sin
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.sin (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact h_div_ne_zero_1

example (x: ℝ) : deriv (λ x ↦ Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) + Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) + Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) - Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) - (Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ) : deriv (λ x ↦ Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) * Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)

example (x: ℝ)  (h_div_ne_zero_1: Real.exp (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2)) ≠ 0): deriv (λ x ↦ Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) / Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = (((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) * Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))))) / Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) - Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) - (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_1: Real.exp (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_14: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) + Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) + ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_14, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))) (h_log_ne_zero_14)

example (x: ℝ)  (h_log_ne_zero_14: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) - Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) - (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_14, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))) (h_log_ne_zero_14)

example (x: ℝ)  (h_log_ne_zero_14: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_14, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))) (h_log_ne_zero_14)

example (x: ℝ)  (h_div_ne_zero_1: Real.log (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_14: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((-1:ℝ) * Real.sin (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.cos (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_14, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_cos
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.cos (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))) (h_log_ne_zero_14)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) + (-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) - Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) - ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_1: Real.cos (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_14: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) + Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) + ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_14]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_14)

example (x: ℝ)  (h_log_ne_zero_14: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) - Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) - (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_14]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_14)

example (x: ℝ)  (h_log_ne_zero_14: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = ((Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) * Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) + (Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_14]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_14)

example (x: ℝ)  (h_div_ne_zero_1: Real.log (((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2)) ≠ 0) (h_log_ne_zero_14: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0): deriv (λ x ↦ Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) / Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2)) x = ((Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) * Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2))) / Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_14]
ring
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_14)
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_14: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) + Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) + ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_14, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))) (h_log_ne_zero_14)

example (x: ℝ)  (h_log_ne_zero_14: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) - Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) - (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_14, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))) (h_log_ne_zero_14)

example (x: ℝ)  (h_log_ne_zero_14: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_14, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))) (h_log_ne_zero_14)

example (x: ℝ)  (h_div_ne_zero_1: Real.log (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_14: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ)))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.exp (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_14, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_exp
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.exp (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))) (h_log_ne_zero_14)
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_2: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_2)
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_log_ne_zero_2: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) - Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_2)
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_log_ne_zero_2: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_2)
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_1: Real.exp (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_2: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_2, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_2)
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_2: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) + Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_log_ne_zero_2: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) - Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_log_ne_zero_2: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))

example (x: ℝ)  (h_div_ne_zero_1: Real.sin (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_2: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) / Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_2, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_2)
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_log_ne_zero_2: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0) (h_log_ne_zero_14: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) + Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) + ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_log_ne_zero_14, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))) (h_log_ne_zero_14)

example (x: ℝ)  (h_log_ne_zero_2: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0) (h_log_ne_zero_14: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) - Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) - (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_log_ne_zero_14, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))) (h_log_ne_zero_14)

example (x: ℝ)  (h_log_ne_zero_2: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0) (h_log_ne_zero_14: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_log_ne_zero_2, h_log_ne_zero_14, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))) (h_log_ne_zero_14)

example (x: ℝ)  (h_div_ne_zero_1: Real.log (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_log_ne_zero_2: ((Real.sin (((2:ℝ) * x - (1:ℝ)))) ^ 2) ≠ 0) (h_log_ne_zero_14: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_22: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_23: x ≠ 0) (h_log_ne_zero_25: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.log ((Real.sin ((2:ℝ) * x - (1:ℝ))) ^ 2) / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((((2:ℝ) * Real.sin ((2:ℝ) * x - (1:ℝ)) * (Real.cos ((2:ℝ) * x - (1:ℝ)) * (2:ℝ))) / (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2)) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.log (Real.sin ((2:ℝ) * x - (1:ℝ)) ^ 2) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_log_ne_zero_2, h_log_ne_zero_14, h_div_ne_zero_22, h_log_ne_zero_23, h_log_ne_zero_25]
ring
exact Real.differentiableAt_log (h_log_ne_zero_25)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)
exact h_div_ne_zero_22
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22)
exact Real.differentiableAt_log (h_log_ne_zero_14)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))
exact differentiableAt_const _
exact differentiableAt_id
exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)
exact differentiableAt_const _
exact Real.differentiableAt_sin
exact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)
exact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))
exact Real.differentiableAt_log (h_log_ne_zero_2)
exact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _
exact DifferentiableAt.log (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _) (h_log_ne_zero_2)
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_23)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_25)) (h_div_ne_zero_22))) (h_log_ne_zero_14)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_15: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) + Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) + ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_15, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))) (h_log_ne_zero_15)

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_15: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) - (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_15, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))) (h_log_ne_zero_15)

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_15: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_15, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))) (h_log_ne_zero_15)

example (x: ℝ)  (h_div_ne_zero_1: Real.log (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_15: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_15, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))) (h_log_ne_zero_15)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) + Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) + (-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)))

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) - ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)))

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)))

example (x: ℝ)  (h_div_ne_zero_1: Real.cos (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) * Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)))

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) - (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)))

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)))

example (x: ℝ)  (h_div_ne_zero_1: Real.exp (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_sin
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.sin (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) + Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)))

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) - (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)))

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)))

example (x: ℝ)  (h_div_ne_zero_1: Real.exp (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) * Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))))) / Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)))
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_15: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) + Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) + ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_15, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))) (h_log_ne_zero_15)

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_15: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) - (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_15, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))) (h_log_ne_zero_15)

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_15: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_15, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))) (h_log_ne_zero_15)

example (x: ℝ)  (h_div_ne_zero_1: Real.log (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_15: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (((-1:ℝ) * Real.sin ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.cos ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_15, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_cos
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.cos (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))) (h_log_ne_zero_15)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_15: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) + Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) + ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) := by
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_15, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))) (h_log_ne_zero_15)

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_15: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) - (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) := by
nth_rewrite 1 [deriv_sub]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_15, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))) (h_log_ne_zero_15)

example (x: ℝ)  (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_15: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) + (Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) := by
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_15, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))) (h_log_ne_zero_15)

example (x: ℝ)  (h_div_ne_zero_1: Real.log (((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ))))) ≠ 0) (h_div_ne_zero_10: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_11: x ≠ 0) (h_log_ne_zero_13: (5:ℝ) ≠ 0) (h_log_ne_zero_15: ((x ^ 3) * (Real.log (x) / Real.log ((5:ℝ)))) ≠ 0) (h_div_ne_zero_23: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_24: x ≠ 0) (h_log_ne_zero_26: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = ((Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * ((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2)))) * Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) - Real.exp ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((((3:ℝ) * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * ((((1:ℝ) / x) * Real.log (5:ℝ)) / Real.log (5:ℝ) ^ 2))) / ((x ^ 3) * (Real.log x / Real.log (5:ℝ))))) / Real.log ((x ^ 3) * (Real.log x / Real.log (5:ℝ))) ^ 2 := by
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
nth_rewrite 2 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
field_simp [h_div_ne_zero_1, h_div_ne_zero_10, h_log_ne_zero_11, h_log_ne_zero_13, h_log_ne_zero_15, h_div_ne_zero_23, h_log_ne_zero_24, h_log_ne_zero_26]
ring
exact Real.differentiableAt_log (h_log_ne_zero_26)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_24)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)
exact h_div_ne_zero_23
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23)
exact Real.differentiableAt_log (h_log_ne_zero_15)
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))
exact Real.differentiableAt_log (h_log_ne_zero_13)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_11)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)
exact h_div_ne_zero_10
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)
exact Real.differentiableAt_exp
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10))
exact DifferentiableAt.exp (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_11)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_13)) (h_div_ne_zero_10)))
exact DifferentiableAt.log (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_24)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_26)) (h_div_ne_zero_23))) (h_log_ne_zero_15)
exact h_div_ne_zero_1

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) + ((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_sin]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact Real.differentiableAt_sin
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))

example (x: ℝ)  (h_div_ne_zero_20: Real.log ((5:ℝ)) ≠ 0) (h_log_ne_zero_21: x ≠ 0) (h_log_ne_zero_23: (5:ℝ) ≠ 0): deriv (λ x ↦ Real.cos ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ)))) x = (-1) * Real.sin ((Real.exp x) * (x ^ 2 + (3:ℝ)) + (x ^ 3) * (Real.log x / Real.log (5:ℝ))) * (((Real.exp x) * (x ^ 2 + (3:ℝ))) + ((Real.exp x) * (2 * x)) + ((3 * x ^ 2) * (Real.log x / Real.log (5:ℝ))) + ((x ^ 3) * (((1 / x) * (Real.log (5:ℝ)) - (Real.log x) * (0 / (5:ℝ))) / (Real.log (5:ℝ))^2))) := by
nth_rewrite 1 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_cos]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [Real.deriv_exp]
nth_rewrite 1 [deriv_add]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_const]
nth_rewrite 1 [deriv_mul]
nth_rewrite 1 [deriv_pow'']
nth_rewrite 1 [deriv_id'']
nth_rewrite 1 [deriv_div]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 3 [← Function.comp_def]
nth_rewrite 1 [deriv_comp]
nth_rewrite 1 [Real.deriv_log]
nth_rewrite 1 [deriv_const]
-- field_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]
ring
exact Real.differentiableAt_log (h_log_ne_zero_23)
exact differentiableAt_const _
exact Real.differentiableAt_log (h_log_ne_zero_21)
exact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)
exact h_div_ne_zero_20
exact differentiableAt_id
exact differentiableAt_pow _
exact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)
exact differentiableAt_id
exact differentiableAt_pow _
exact differentiableAt_const _
exact Real.differentiableAt_exp
exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)
exact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))
exact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))
exact Real.differentiableAt_cos
exact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))
