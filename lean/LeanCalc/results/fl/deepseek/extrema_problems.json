{
    "tactics": [
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 0,
            "pos": {
                "line": 5,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 6 + 5 * x ^ 5 - 82 * x ^ 2 + 127 * x) \u2192 deriv f 1 = 0 \u2227 deriv (deriv f) 1 < 0",
            "endPos": {
                "line": 5,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all [h]",
            "proofState": 1,
            "pos": {
                "line": 6,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 + 5 * x ^ 5 - 82 * x ^ 2 + 127 * x\n\u22a2 deriv f 1 = 0 \u2227 deriv (deriv f) 1 < 0",
            "endPos": {
                "line": 6,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 2,
            "pos": {
                "line": 7,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 + 5 * x ^ 5 - 82 * x ^ 2 + 127 * x\n\u22a2 deriv (fun x => 2 * x ^ 6 + 5 * x ^ 5 - 82 * x ^ 2 + 127 * x) 1 = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 6 + 5 * x ^ 5 - 82 * x ^ 2 + 127 * x) 1 < 0",
            "endPos": {
                "line": 7,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 3,
            "pos": {
                "line": 8,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 + 5 * x ^ 5 - 82 * x ^ 2 + 127 * x\n\u22a2 deriv (fun x => 2 * x ^ 6 + 5 * x ^ 5 - 82 * x ^ 2 + 127 * x) 1 = 0",
            "endPos": {
                "line": 8,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 4,
            "pos": {
                "line": 8,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 + 5 * x ^ 5 - 82 * x ^ 2 + 127 * x\n\u22a2 deriv (deriv fun x => 2 * x ^ 6 + 5 * x ^ 5 - 82 * x ^ 2 + 127 * x) 1 < 0",
            "endPos": {
                "line": 8,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_sq_nonneg (fun x => 2 * x ^ 6 + 5 * x ^ 5 - 82 * x ^ 2 + 127 * x) 1]",
            "proofState": 5,
            "pos": {
                "line": 9,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 + 5 * x ^ 5 - 82 * x ^ 2 + 127 * x\n\u22a2 deriv (fun x => 2 * x ^ 6 + 5 * x ^ 5 - 82 * x ^ 2 + 127 * x) 1 = 0",
            "endPos": {
                "line": 9,
                "column": 90
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_sq_nonneg (fun x => 2 * x ^ 6 + 5 * x ^ 5 - 82 * x ^ 2 + 127 * x) 1]",
            "proofState": 6,
            "pos": {
                "line": 9,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 + 5 * x ^ 5 - 82 * x ^ 2 + 127 * x\n\u22a2 deriv (deriv fun x => 2 * x ^ 6 + 5 * x ^ 5 - 82 * x ^ 2 + 127 * x) 1 < 0",
            "endPos": {
                "line": 9,
                "column": 90
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 7,
            "pos": {
                "line": 14,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 4 - x ^ 3) \u2192 deriv f 0 = 0 \u2227 deriv (deriv f) 0 = 0",
            "endPos": {
                "line": 14,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all [deriv_const, deriv_sub, deriv_mul, deriv_pow]",
            "proofState": 8,
            "pos": {
                "line": 15,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 4 - x ^ 3\n\u22a2 deriv f 0 = 0 \u2227 deriv (deriv f) 0 = 0",
            "endPos": {
                "line": 15,
                "column": 57
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp",
            "proofState": 9,
            "pos": {
                "line": 16,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 4 - x ^ 3\n\u22a2 deriv (fun x => 2 * x ^ 4 - x ^ 3) 0 = 0 \u2227 deriv (deriv fun x => 2 * x ^ 4 - x ^ 3) 0 = 0",
            "endPos": {
                "line": 16,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 10,
            "pos": {
                "line": 22,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 3 - 17 * x ^ 2 + 96 * x) \u2192 deriv f 6 = 0 \u2227 deriv (deriv f) 6 > 0",
            "endPos": {
                "line": 22,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_pow, deriv_sub, deriv_const, deriv_mul, deriv_id'', deriv_neg, deriv_comp, deriv_add, deriv_pow,\n  deriv_sub, deriv_const, deriv_mul, deriv_id'', deriv_neg, deriv_comp, deriv_add]",
            "proofState": 11,
            "pos": {
                "line": 23,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 - 17 * x ^ 2 + 96 * x\n\u22a2 deriv f 6 = 0 \u2227 deriv (deriv f) 6 > 0",
            "endPos": {
                "line": 25,
                "column": 37
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 12,
            "pos": {
                "line": 26,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 - 17 * x ^ 2 + 96 * x\n\u22a2 deriv (fun x => x ^ 3 - 17 * x ^ 2 + 96 * x) 6 = 0 \u2227 deriv (deriv fun x => x ^ 3 - 17 * x ^ 2 + 96 * x) 6 > 0",
            "endPos": {
                "line": 26,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_sq_nonneg (fun x : \u211d => x ^ 2 - 17 * x + 96) 6]",
            "proofState": 13,
            "pos": {
                "line": 27,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 - 17 * x ^ 2 + 96 * x\n\u22a2 deriv (fun x => x ^ 3 - 17 * x ^ 2 + 96 * x) 6 = 0 \u2227 0 < deriv (deriv fun x => x ^ 3 - 17 * x ^ 2 + 96 * x) 6",
            "endPos": {
                "line": 27,
                "column": 69
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 14,
            "pos": {
                "line": 30,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 4 - 121 * x ^ 2 + 324 * x) \u2192 deriv f 2 = 0 \u2227 deriv (deriv f) 2 < 0",
            "endPos": {
                "line": 30,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_const', deriv_add, deriv_sub, deriv_mul, deriv_pow, Nat.cast_bit0, Nat.cast_one, deriv_pow,\n  Nat.cast_bit0, Nat.cast_one, deriv_pow, Nat.cast_bit0, Nat.cast_one, deriv_pow, Nat.cast_bit0, Nat.cast_one,\n  deriv_pow, Nat.cast_bit0, Nat.cast_one]",
            "proofState": 15,
            "pos": {
                "line": 31,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 121 * x ^ 2 + 324 * x\n\u22a2 deriv f 2 = 0 \u2227 deriv (deriv f) 2 < 0",
            "endPos": {
                "line": 33,
                "column": 72
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 16,
            "pos": {
                "line": 34,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 121 * x ^ 2 + 324 * x\n\u22a2 deriv (fun x => 5 * x ^ 4 - 121 * x ^ 2 + 324 * x) 2 = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 4 - 121 * x ^ 2 + 324 * x) 2 < 0",
            "endPos": {
                "line": 34,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 17,
            "pos": {
                "line": 35,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 121 * x ^ 2 + 324 * x\n\u22a2 deriv (fun x => 5 * x ^ 4 - 121 * x ^ 2 + 324 * x) 2 = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 4 - 121 * x ^ 2 + 324 * x) 2 < 0",
            "endPos": {
                "line": 35,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 18,
            "pos": {
                "line": 38,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 3 + 30 * x ^ 2 + 60 * x) \u2192 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) = 0",
            "endPos": {
                "line": 38,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp [h, deriv_add, deriv_mul, deriv_const, deriv_pow, Nat.cast_bit1, Nat.cast_one, Nat.cast_bit0]",
            "proofState": 19,
            "pos": {
                "line": 39,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 3 + 30 * x ^ 2 + 60 * x\n\u22a2 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) = 0",
            "endPos": {
                "line": 39,
                "column": 100
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 20,
            "pos": {
                "line": 40,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 3 + 30 * x ^ 2 + 60 * x\n\u22a2 deriv (fun x => 5 * x ^ 3 + 30 * x ^ 2 + 60 * x) (-2) = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 3 + 30 * x ^ 2 + 60 * x) (-2) = 0",
            "endPos": {
                "line": 40,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp",
            "proofState": 21,
            "pos": {
                "line": 41,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 3 + 30 * x ^ 2 + 60 * x\n\u22a2 deriv (fun x => 5 * x ^ 3 + 30 * x ^ 2 + 60 * x) (-2) = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 3 + 30 * x ^ 2 + 60 * x) (-2) = 0",
            "endPos": {
                "line": 41,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 22,
            "pos": {
                "line": 45,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x) \u2192\n    deriv f (-3) = 0 \u2227 deriv (deriv f) (-3) = 0",
            "endPos": {
                "line": 45,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [h]",
            "proofState": 23,
            "pos": {
                "line": 46,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x\n\u22a2 deriv f (-3) = 0 \u2227 deriv (deriv f) (-3) = 0",
            "endPos": {
                "line": 46,
                "column": 15
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num [deriv_const, deriv_add, deriv_sub, deriv_mul, deriv_pow, deriv_neg, deriv_comp, deriv_id'', deriv_pow,\n  deriv_sub, deriv_mul, deriv_const, deriv_comp, deriv_id'']",
            "proofState": 24,
            "pos": {
                "line": 47,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x\n\u22a2 deriv (fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x) (-3) = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x) (-3) = 0",
            "endPos": {
                "line": 49,
                "column": 27
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 25,
            "pos": {
                "line": 50,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x\n\u22a2 deriv (fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x) (-3) = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x) (-3) = 0",
            "endPos": {
                "line": 50,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 26,
            "pos": {
                "line": 51,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x\n\u22a2 deriv (fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x) (-3) = 0",
            "endPos": {
                "line": 51,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 27,
            "pos": {
                "line": 51,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x\n\u22a2 deriv (deriv fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x) (-3) = 0",
            "endPos": {
                "line": 51,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "apply And.intro",
            "proofState": 28,
            "pos": {
                "line": 52,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x\n\u22a2 deriv (fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x) (-3) = 0",
            "endPos": {
                "line": 52,
                "column": 21
            }
        },
        {
            "usedConstants": [],
            "tactic": "apply And.intro",
            "proofState": 29,
            "pos": {
                "line": 52,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x\n\u22a2 deriv (deriv fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x) (-3) = 0",
            "endPos": {
                "line": 52,
                "column": 21
            }
        },
        {
            "usedConstants": [
                "Real",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "HPow.hPow",
                "Nat",
                "instHPow",
                "OfNat.ofNat",
                "Eq"
            ],
            "tactic": "intro h",
            "proofState": 30,
            "pos": {
                "line": 58,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 2) \u2192 deriv f 0 = 0 \u2227 deriv (deriv f) 0 > 0",
            "endPos": {
                "line": 58,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "deriv_pow",
                "NormedField.toField",
                "Monoid.toNatPow",
                "id",
                "AddMonoidWithOne.toNatCast",
                "instSubNat",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.cast",
                "Field.toSemifield",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "congr",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "NontriviallyNormedField.toNormedField",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "Ring.toAddGroupWithOne",
                "MonoidWithZero.toMonoid",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Semiring.toMonoidWithZero",
                "instHMul"
            ],
            "tactic": "simp only [h, deriv_pow, Nat.cast_bit0, Nat.cast_one, deriv_id'', zero_mul, zero_add]",
            "proofState": 31,
            "pos": {
                "line": 59,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2\n\u22a2 deriv f 0 = 0 \u2227 deriv (deriv f) 0 > 0",
            "endPos": {
                "line": 59,
                "column": 87
            }
        },
        {
            "usedConstants": [
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Mathlib.Meta.NormNum.isNat_eq_true",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "NormedField.toField",
                "Mathlib.Meta.NormNum.isNat_natSub",
                "Monoid.toNatPow",
                "Real.semiring",
                "id",
                "AddMonoidWithOne.toNatCast",
                "instSubNat",
                "Real.instRing",
                "instOfNatNat",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_natCast",
                "Nat.cast",
                "Field.toSemifield",
                "Mathlib.Meta.NormNum.zero_natPow",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "Real.instMonoid",
                "funext",
                "GT.gt",
                "And",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "pow_one",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "congr",
                "LT.lt",
                "True",
                "Mathlib.Meta.NormNum.IsNat.to_eq",
                "eq_true",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Mathlib.Meta.NormNum.isNat_mul",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "Mathlib.Meta.NormNum.instAddMonoidWithOneNat",
                "NontriviallyNormedField.toNormedField",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "Nat.cast_zero",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "deriv_pow'",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "Mathlib.Meta.NormNum.isNat_pow",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "MonoidWithZero.toMonoid",
                "true_and",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Semiring.toMonoidWithZero",
                "instHMul"
            ],
            "tactic": "norm_num",
            "proofState": 32,
            "pos": {
                "line": 60,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2\n\u22a2 \u21912 * 0 ^ (2 - 1) = 0 \u2227 deriv (deriv fun x => x ^ 2) 0 > 0",
            "endPos": {
                "line": 60,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 33,
            "pos": {
                "line": 61,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2\n\u22a2 0 < deriv (fun x => 2 * x) 0",
            "endPos": {
                "line": 61,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 34,
            "pos": {
                "line": 64,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 5 + 3 * x ^ 3 + 20 * x - 17 * x ^ 2) \u2192 deriv f 1 = 0 \u2227 deriv (deriv f) 1 > 0",
            "endPos": {
                "line": 64,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [hf]",
            "proofState": 35,
            "pos": {
                "line": 65,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 5 + 3 * x ^ 3 + 20 * x - 17 * x ^ 2\n\u22a2 deriv f 1 = 0 \u2227 deriv (deriv f) 1 > 0",
            "endPos": {
                "line": 65,
                "column": 16
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 36,
            "pos": {
                "line": 66,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 5 + 3 * x ^ 3 + 20 * x - 17 * x ^ 2\n\u22a2 deriv (fun x => x ^ 5 + 3 * x ^ 3 + 20 * x - 17 * x ^ 2) 1 = 0 \u2227\n    deriv (deriv fun x => x ^ 5 + 3 * x ^ 3 + 20 * x - 17 * x ^ 2) 1 > 0",
            "endPos": {
                "line": 66,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_add, deriv_pow, deriv_mul, deriv_const, deriv_sub, deriv_id]",
            "proofState": 37,
            "pos": {
                "line": 67,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 5 + 3 * x ^ 3 + 20 * x - 17 * x ^ 2\n\u22a2 deriv (fun x => x ^ 5 + 3 * x ^ 3 + 20 * x - 17 * x ^ 2) 1 = 0\ncase right\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 5 + 3 * x ^ 3 + 20 * x - 17 * x ^ 2\n\u22a2 deriv (deriv fun x => x ^ 5 + 3 * x ^ 3 + 20 * x - 17 * x ^ 2) 1 > 0",
            "endPos": {
                "line": 67,
                "column": 74
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 38,
            "pos": {
                "line": 73,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 4 + 2 * x ^ 3 - 214 * x ^ 2 + 1104 * x) \u2192 deriv f 4 = 0 \u2227 deriv (deriv f) 4 > 0",
            "endPos": {
                "line": 73,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h]",
            "proofState": 39,
            "pos": {
                "line": 74,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 4 + 2 * x ^ 3 - 214 * x ^ 2 + 1104 * x\n\u22a2 deriv f 4 = 0 \u2227 deriv (deriv f) 4 > 0",
            "endPos": {
                "line": 74,
                "column": 19
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 40,
            "pos": {
                "line": 75,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 4 + 2 * x ^ 3 - 214 * x ^ 2 + 1104 * x\n\u22a2 deriv (fun x => 2 * x ^ 4 + 2 * x ^ 3 - 214 * x ^ 2 + 1104 * x) 4 = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 4 + 2 * x ^ 3 - 214 * x ^ 2 + 1104 * x) 4 > 0",
            "endPos": {
                "line": 75,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 41,
            "pos": {
                "line": 76,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 4 + 2 * x ^ 3 - 214 * x ^ 2 + 1104 * x\n\u22a2 deriv (fun x => 2 * x ^ 4 + 2 * x ^ 3 - 214 * x ^ 2 + 1104 * x) 4 = 0",
            "endPos": {
                "line": 76,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 42,
            "pos": {
                "line": 76,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 4 + 2 * x ^ 3 - 214 * x ^ 2 + 1104 * x\n\u22a2 deriv (deriv fun x => 2 * x ^ 4 + 2 * x ^ 3 - 214 * x ^ 2 + 1104 * x) 4 > 0",
            "endPos": {
                "line": 76,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 43,
            "pos": {
                "line": 77,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 4 + 2 * x ^ 3 - 214 * x ^ 2 + 1104 * x\n\u22a2 deriv (fun x => 2 * x ^ 4 + 2 * x ^ 3 - 214 * x ^ 2 + 1104 * x) 4 = 0",
            "endPos": {
                "line": 77,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 44,
            "pos": {
                "line": 77,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 4 + 2 * x ^ 3 - 214 * x ^ 2 + 1104 * x\n\u22a2 0 < deriv (deriv fun x => 2 * x ^ 4 + 2 * x ^ 3 - 214 * x ^ 2 + 1104 * x) 4",
            "endPos": {
                "line": 77,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 45,
            "pos": {
                "line": 87,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 6 + 3 * x ^ 5 - x ^ 4 + 4 * x ^ 3 + 109488 * x - 17230 * x ^ 2) \u2192\n    deriv f 4 = 0 \u2227 deriv (deriv f) 4 > 0",
            "endPos": {
                "line": 87,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [hf, deriv_add, deriv_const, deriv_mul, deriv_pow, deriv_sub, deriv_id'', deriv_pow, deriv_const, deriv_id'',\n  deriv_pow, deriv_const, deriv_id'', deriv_pow, deriv_const, deriv_id'']",
            "proofState": 46,
            "pos": {
                "line": 88,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 4 * x ^ 6 + 3 * x ^ 5 - x ^ 4 + 4 * x ^ 3 + 109488 * x - 17230 * x ^ 2\n\u22a2 deriv f 4 = 0 \u2227 deriv (deriv f) 4 > 0",
            "endPos": {
                "line": 89,
                "column": 100
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 47,
            "pos": {
                "line": 90,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 4 * x ^ 6 + 3 * x ^ 5 - x ^ 4 + 4 * x ^ 3 + 109488 * x - 17230 * x ^ 2\n\u22a2 deriv (fun x => 4 * x ^ 6 + 3 * x ^ 5 - x ^ 4 + 4 * x ^ 3 + 109488 * x - 17230 * x ^ 2) 4 = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 6 + 3 * x ^ 5 - x ^ 4 + 4 * x ^ 3 + 109488 * x - 17230 * x ^ 2) 4 > 0",
            "endPos": {
                "line": 90,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 48,
            "pos": {
                "line": 93,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 2 + 36 * x) \u2192 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) > 0",
            "endPos": {
                "line": 93,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_add, deriv_mul, deriv_const, deriv_pow, Nat.cast_bit0, Nat.cast_one, deriv_pow, Nat.cast_bit0,\n  Nat.cast_one, deriv_add, deriv_mul, deriv_const, deriv_pow, Nat.cast_bit0, Nat.cast_one, deriv_pow, Nat.cast_bit0,\n  Nat.cast_one, deriv_add, deriv_mul, deriv_const, deriv_pow, Nat.cast_bit0, Nat.cast_one, deriv_pow, Nat.cast_bit0,\n  Nat.cast_one]",
            "proofState": 49,
            "pos": {
                "line": 94,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 + 36 * x\n\u22a2 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) > 0",
            "endPos": {
                "line": 97,
                "column": 96
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 50,
            "pos": {
                "line": 98,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 + 36 * x\n\u22a2 deriv (fun x => 3 * x ^ 2 + 36 * x) (-6) = 0 \u2227 deriv (deriv fun x => 3 * x ^ 2 + 36 * x) (-6) > 0",
            "endPos": {
                "line": 98,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 51,
            "pos": {
                "line": 99,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 + 36 * x\n\u22a2 deriv (fun x => 3 * x ^ 2 + 36 * x) (-6) = 0\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 + 36 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 2 + 36 * x) (-6) > 0",
            "endPos": {
                "line": 99,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 52,
            "pos": {
                "line": 100,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 + 36 * x\n\u22a2 deriv (fun x => 3 * x ^ 2 + 36 * x) (-6) = 0\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 + 36 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 2 + 36 * x) (-6) > 0",
            "endPos": {
                "line": 100,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 53,
            "pos": {
                "line": 103,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 6 + 2 * x ^ 5 + x ^ 4 - 4 * x ^ 3 - 93166 * x ^ 2 - 896376 * x) \u2192\n    deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) > 0",
            "endPos": {
                "line": 103,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_const', deriv_add, deriv_sub, deriv_pow, deriv_mul, deriv_C, deriv_id'', deriv_comp, deriv_pow,\n  deriv_mul, deriv_C, deriv_id'', zero_add, zero_sub, sub_zero, mul_one, mul_zero, sub_neg_eq_add, neg_mul_eq_neg_mul,\n  mul_neg, mul_zero, zero_mul, mul_neg, neg_neg, mul_one, mul_zero, mul_neg, neg_mul_eq_neg_mul, neg_neg]",
            "proofState": 54,
            "pos": {
                "line": 104,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 + 2 * x ^ 5 + x ^ 4 - 4 * x ^ 3 - 93166 * x ^ 2 - 896376 * x\n\u22a2 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) > 0",
            "endPos": {
                "line": 107,
                "column": 60
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 55,
            "pos": {
                "line": 108,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 + 2 * x ^ 5 + x ^ 4 - 4 * x ^ 3 - 93166 * x ^ 2 - 896376 * x\n\u22a2 deriv (fun x => 5 * x ^ 6 + 2 * x ^ 5 + x ^ 4 - 4 * x ^ 3 - 93166 * x ^ 2 - 896376 * x) (-6) = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 6 + 2 * x ^ 5 + x ^ 4 - 4 * x ^ 3 - 93166 * x ^ 2 - 896376 * x) (-6) > 0",
            "endPos": {
                "line": 108,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 56,
            "pos": {
                "line": 109,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 + 2 * x ^ 5 + x ^ 4 - 4 * x ^ 3 - 93166 * x ^ 2 - 896376 * x\n\u22a2 deriv (fun x => 5 * x ^ 6 + 2 * x ^ 5 + x ^ 4 - 4 * x ^ 3 - 93166 * x ^ 2 - 896376 * x) (-6) = 0 \u2227\n    0 < deriv (deriv fun x => 5 * x ^ 6 + 2 * x ^ 5 + x ^ 4 - 4 * x ^ 3 - 93166 * x ^ 2 - 896376 * x) (-6)",
            "endPos": {
                "line": 109,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 57,
            "pos": {
                "line": 112,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 5 - x ^ 4 - 214 * x ^ 2 + 987 * x) \u2192 deriv f 3 = 0 \u2227 deriv (deriv f) 3 > 0",
            "endPos": {
                "line": 112,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_pow, deriv_sub, deriv_add, deriv_id'', deriv_const', deriv_pow, deriv_sub, deriv_add, deriv_id'',\n  deriv_const', deriv_pow, deriv_sub, deriv_add, deriv_id'', deriv_const']",
            "proofState": 58,
            "pos": {
                "line": 113,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 5 - x ^ 4 - 214 * x ^ 2 + 987 * x\n\u22a2 deriv f 3 = 0 \u2227 deriv (deriv f) 3 > 0",
            "endPos": {
                "line": 115,
                "column": 17
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 59,
            "pos": {
                "line": 116,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 5 - x ^ 4 - 214 * x ^ 2 + 987 * x\n\u22a2 deriv (fun x => x ^ 5 - x ^ 4 - 214 * x ^ 2 + 987 * x) 3 = 0 \u2227\n    deriv (deriv fun x => x ^ 5 - x ^ 4 - 214 * x ^ 2 + 987 * x) 3 > 0",
            "endPos": {
                "line": 116,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_pow 5 3, deriv_pow 4 3, deriv_pow 2 3]",
            "proofState": 60,
            "pos": {
                "line": 117,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 5 - x ^ 4 - 214 * x ^ 2 + 987 * x\n\u22a2 deriv (fun x => x ^ 5 - x ^ 4 - 214 * x ^ 2 + 987 * x) 3 = 0 \u2227\n    0 < deriv (deriv fun x => x ^ 5 - x ^ 4 - 214 * x ^ 2 + 987 * x) 3",
            "endPos": {
                "line": 117,
                "column": 60
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 61,
            "pos": {
                "line": 120,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 3 - 15 * x ^ 2 + 15 * x) \u2192 deriv f 1 = 0 \u2227 deriv (deriv f) 1 = 0",
            "endPos": {
                "line": 120,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all [deriv_pow]",
            "proofState": 62,
            "pos": {
                "line": 121,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 3 - 15 * x ^ 2 + 15 * x\n\u22a2 deriv f 1 = 0 \u2227 deriv (deriv f) 1 = 0",
            "endPos": {
                "line": 121,
                "column": 22
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NegZeroClass.toNeg",
                "NormedCommRing.toSeminormedCommRing",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "Mathlib.Tactic.Ring.single_pow",
                "Mathlib.Tactic.RingNF.add_assoc_rev",
                "Real",
                "Mathlib.Tactic.RingNF.mul_neg",
                "HMul.hMul",
                "Nat.rawCast",
                "Ring.toNonAssocRing",
                "Mathlib.Tactic.Ring.mul_zero",
                "Mathlib.Tactic.Ring.mul_pf_left",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "AddGroupWithOne.toAddGroup",
                "Mathlib.Tactic.Ring.add_pf_add_gt",
                "congrArg",
                "CommSemiring.toSemiring",
                "Mathlib.Tactic.Ring.mul_pow",
                "deriv",
                "Mathlib.Tactic.Ring.neg_zero",
                "Real.instSub",
                "Mathlib.Tactic.Ring.mul_pf_right",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "Int.rawCast",
                "Mathlib.Tactic.Ring.one_mul",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Mathlib.Tactic.Ring.zero_mul",
                "Mathlib.Meta.NormNum.IsNat.of_raw",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "Mathlib.Tactic.Ring.instCommSemiringNat",
                "Monoid.toNatPow",
                "Mathlib.Tactic.Ring.neg_mul",
                "Mathlib.Tactic.Ring.sub_pf",
                "Mathlib.Tactic.Ring.neg_add",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Int.ofNat",
                "Real.instRing",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "instOfNatNat",
                "Int",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Mathlib.Tactic.Ring.sub_congr",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "Mathlib.Meta.NormNum.isInt_mul",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "Mathlib.Tactic.Ring.one_pow",
                "Nat.instAddMonoidWithOne",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "Mathlib.Tactic.Ring.mul_congr",
                "Real.instAdd",
                "Real.instOne",
                "SubNegMonoid.toSub",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "funext",
                "Mathlib.Tactic.Ring.add_mul",
                "instHAdd",
                "And",
                "Mathlib.Tactic.Ring.add_pf_add_zero",
                "instHSub",
                "Mathlib.Tactic.RingNF.add_neg",
                "instNatAtLeastTwo",
                "AddGroup.toSubNegMonoid",
                "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "HAdd.hAdd",
                "pow_one",
                "NonAssocSemiring.toNonUnitalNonAssocSemiring",
                "Ring.toAddCommGroup",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Mathlib.Tactic.Ring.pow_add",
                "Nat",
                "Real.instMul",
                "Mathlib.Tactic.Ring.mul_one",
                "congr",
                "AddZeroClass.toZero",
                "Nat.instCommSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "Eq.refl",
                "Mathlib.Meta.NormNum.IsInt.of_raw",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "Mathlib.Tactic.Ring.cast_pos",
                "Mathlib.Tactic.RingNF.nat_rawCast_1",
                "Mathlib.Tactic.Ring.atom_pf",
                "AddCommGroup.toDivisionAddCommMonoid",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "add_zero",
                "OfNat.ofNat",
                "Mathlib.Tactic.RingNF.int_rawCast_neg",
                "AddZeroClass.toAdd",
                "UniformSpace.toTopologicalSpace",
                "Semiring.toNonAssocSemiring",
                "Eq",
                "Mathlib.Tactic.Ring.neg_one_mul",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "MonoidWithZero.toMonoid",
                "Mathlib.Tactic.Ring.mul_add",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "MulZeroClass.toZero",
                "Mathlib.Tactic.Ring.add_congr",
                "Real.instCommSemiring",
                "Mathlib.Tactic.Ring.pow_congr",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "Mathlib.Tactic.Ring.pow_zero",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "ring_nf",
            "proofState": 63,
            "pos": {
                "line": 122,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 3 - 15 * x ^ 2 + 15 * x\n\u22a2 deriv (fun x => 5 * x ^ 3 - 15 * x ^ 2 + 15 * x) 1 = 0 \u2227 deriv (deriv fun x => 5 * x ^ 3 - 15 * x ^ 2 + 15 * x) 1 = 0",
            "endPos": {
                "line": 122,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NegZeroClass.toNeg",
                "NormedCommRing.toSeminormedCommRing",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "deriv_const'",
                "Ring.toNonAssocRing",
                "Real.denselyNormedField",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "AddGroupWithOne.toAddGroup",
                "congrArg",
                "CommSemiring.toSemiring",
                "DifferentiableAt",
                "deriv",
                "deriv_sub",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "Mathlib.Meta.NormNum.one_natPow",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "NormedField.toField",
                "Mathlib.Meta.NormNum.isNat_natSub",
                "Monoid.toNatPow",
                "Mathlib.Meta.NormNum.IsInt.neg_to_eq",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "Int.ofNat",
                "Real.instAddGroup",
                "Real.instRing",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Int",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "NormedAddGroup.toAddGroup",
                "Mathlib.Meta.NormNum.isInt_sub",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_natCast",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "Nat.cast",
                "Field.toSemifield",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "SubNegMonoid.toSub",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Add.0._proof_25",
                "instHAdd",
                "And",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "AddGroup.toSubNegMonoid",
                "HPow.hPow",
                "Real.normedCommRing",
                "neg_add_cancel",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "congrFun",
                "NonAssocSemiring.toNonUnitalNonAssocSemiring",
                "Ring.toAddCommGroup",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "NormedAddCommGroup.toNormedAddGroup",
                "congr",
                "AddZeroClass.toZero",
                "NormedRing.toSeminormedRing",
                "Nat.instCommSemiring",
                "True",
                "eq_self",
                "Mathlib.Meta.NormNum.IsNat.to_eq",
                "eq_true",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "Mathlib.Meta.NormNum.isNat_mul",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "NontriviallyNormedField.toNormedField",
                "ENormedAddCommMonoid.toAddCommMonoid",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "AddCommSemigroup.toAddCommMagma",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "Nat.cast_zero",
                "AddMonoidWithOne.toAddMonoid",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "SubNegMonoid.toAddMonoid",
                "mul_one",
                "AddCommGroup.toDivisionAddCommMonoid",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "add_zero",
                "deriv_pow''",
                "OfNat.ofNat",
                "AddCommMonoid.toAddCommSemigroup",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Ring.toSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Nat.cast_one",
                "Mathlib.Meta.NormNum.isNat_pow",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "one_mul",
                "deriv_add",
                "MonoidWithZero.toMonoid",
                "true_and",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "MulZeroClass.toZero",
                "AddCommMagma.toAdd",
                "Real.instCommSemiring",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "True.intro",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "NormedAddCommGroup.toENormedAddCommMonoid"
            ],
            "tactic": "norm_num",
            "proofState": 64,
            "pos": {
                "line": 123,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 3 - 15 * x ^ 2 + 15 * x\n\u22a2 deriv (fun x => x * 15 - x ^ 2 * 15 + x ^ 3 * 5) 1 = 0 \u2227 deriv (deriv fun x => x * 15 - x ^ 2 * 15 + x ^ 3 * 5) 1 = 0",
            "endPos": {
                "line": 123,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 65,
            "pos": {
                "line": 126,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 5 - 5 * x ^ 4 - 4 * x ^ 3 - 258 * x ^ 2 + 840 * x) \u2192 deriv f 2 = 0 \u2227 deriv (deriv f) 2 < 0",
            "endPos": {
                "line": 126,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all [deriv_const, deriv_add, deriv_sub, deriv_mul, deriv_pow]",
            "proofState": 66,
            "pos": {
                "line": 127,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 5 - 5 * x ^ 4 - 4 * x ^ 3 - 258 * x ^ 2 + 840 * x\n\u22a2 deriv f 2 = 0 \u2227 deriv (deriv f) 2 < 0",
            "endPos": {
                "line": 127,
                "column": 68
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 67,
            "pos": {
                "line": 128,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 5 - 5 * x ^ 4 - 4 * x ^ 3 - 258 * x ^ 2 + 840 * x\n\u22a2 deriv (fun x => 5 * x ^ 5 - 5 * x ^ 4 - 4 * x ^ 3 - 258 * x ^ 2 + 840 * x) 2 = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 5 - 5 * x ^ 4 - 4 * x ^ 3 - 258 * x ^ 2 + 840 * x) 2 < 0",
            "endPos": {
                "line": 128,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 68,
            "pos": {
                "line": 128,
                "column": 18
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 5 - 5 * x ^ 4 - 4 * x ^ 3 - 258 * x ^ 2 + 840 * x\n\u22a2 deriv (fun x => 5 * x ^ 5 - 5 * x ^ 4 - 4 * x ^ 3 - 258 * x ^ 2 + 840 * x) 2 = 0",
            "endPos": {
                "line": 128,
                "column": 26
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 69,
            "pos": {
                "line": 128,
                "column": 18
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 5 - 5 * x ^ 4 - 4 * x ^ 3 - 258 * x ^ 2 + 840 * x\n\u22a2 deriv (deriv fun x => 5 * x ^ 5 - 5 * x ^ 4 - 4 * x ^ 3 - 258 * x ^ 2 + 840 * x) 2 < 0",
            "endPos": {
                "line": 128,
                "column": 26
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 70,
            "pos": {
                "line": 129,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 5 - 5 * x ^ 4 - 4 * x ^ 3 - 258 * x ^ 2 + 840 * x\n\u22a2 deriv (fun x => 5 * x ^ 5 - 5 * x ^ 4 - 4 * x ^ 3 - 258 * x ^ 2 + 840 * x) 2 = 0",
            "endPos": {
                "line": 129,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 71,
            "pos": {
                "line": 129,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 5 - 5 * x ^ 4 - 4 * x ^ 3 - 258 * x ^ 2 + 840 * x\n\u22a2 deriv (deriv fun x => 5 * x ^ 5 - 5 * x ^ 4 - 4 * x ^ 3 - 258 * x ^ 2 + 840 * x) 2 < 0",
            "endPos": {
                "line": 129,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 72,
            "pos": {
                "line": 132,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 5 - 4319 * x ^ 2 + 38868 * x) \u2192 deriv f 6 = 0 \u2227 deriv (deriv f) 6 > 0",
            "endPos": {
                "line": 132,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [h]",
            "proofState": 73,
            "pos": {
                "line": 133,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 - 4319 * x ^ 2 + 38868 * x\n\u22a2 deriv f 6 = 0 \u2227 deriv (deriv f) 6 > 0",
            "endPos": {
                "line": 133,
                "column": 8
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 74,
            "pos": {
                "line": 134,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 - 4319 * x ^ 2 + 38868 * x\n\u22a2 deriv (fun x => 2 * x ^ 5 - 4319 * x ^ 2 + 38868 * x) 6 = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 5 - 4319 * x ^ 2 + 38868 * x) 6 > 0",
            "endPos": {
                "line": 134,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 75,
            "pos": {
                "line": 135,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 - 4319 * x ^ 2 + 38868 * x\n\u22a2 deriv (fun x => 2 * x ^ 5 - 4319 * x ^ 2 + 38868 * x) 6 = 0 \u2227\n    0 < deriv (deriv fun x => 2 * x ^ 5 - 4319 * x ^ 2 + 38868 * x) 6",
            "endPos": {
                "line": 135,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 76,
            "pos": {
                "line": 136,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 - 4319 * x ^ 2 + 38868 * x\n\u22a2 deriv (fun x => 2 * x ^ 5 - 4319 * x ^ 2 + 38868 * x) 6 = 0",
            "endPos": {
                "line": 136,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 77,
            "pos": {
                "line": 136,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 - 4319 * x ^ 2 + 38868 * x\n\u22a2 0 < deriv (deriv fun x => 2 * x ^ 5 - 4319 * x ^ 2 + 38868 * x) 6",
            "endPos": {
                "line": 136,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_mul (fun x => 2 * x ^ 5) (fun x => -4319 * x ^ 2 + 38868 * x) 6]",
            "proofState": 78,
            "pos": {
                "line": 137,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 - 4319 * x ^ 2 + 38868 * x\n\u22a2 deriv (fun x => 2 * x ^ 5 - 4319 * x ^ 2 + 38868 * x) 6 = 0",
            "endPos": {
                "line": 137,
                "column": 86
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_mul (fun x => 2 * x ^ 5) (fun x => -4319 * x ^ 2 + 38868 * x) 6]",
            "proofState": 79,
            "pos": {
                "line": 137,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 - 4319 * x ^ 2 + 38868 * x\n\u22a2 0 < deriv (deriv fun x => 2 * x ^ 5 - 4319 * x ^ 2 + 38868 * x) 6",
            "endPos": {
                "line": 137,
                "column": 86
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 80,
            "pos": {
                "line": 145,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 2 - 24 * x) \u2192 deriv f 6 = 0 \u2227 deriv (deriv f) 6 > 0",
            "endPos": {
                "line": 145,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_sub, deriv_const, deriv_mul, deriv_pow, deriv_id'', deriv_pow, deriv_id', deriv_const', deriv_sub,\n  deriv_const, deriv_mul, deriv_pow, deriv_id'', deriv_pow, deriv_id']",
            "proofState": 81,
            "pos": {
                "line": 146,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv f 6 = 0 \u2227 deriv (deriv f) 6 > 0",
            "endPos": {
                "line": 147,
                "column": 97
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 82,
            "pos": {
                "line": 148,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 24 * x) 6 = 0 \u2227 deriv (deriv fun x => 2 * x ^ 2 - 24 * x) 6 > 0",
            "endPos": {
                "line": 148,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 83,
            "pos": {
                "line": 151,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 2 + 24 * x) \u2192 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) > 0",
            "endPos": {
                "line": 151,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_add, deriv_const, deriv_mul, deriv_pow, Nat.cast_bit0, Nat.cast_one, deriv_id'', zero_add,\n  zero_mul, mul_one, mul_zero, bit0_zero, add_zero, sub_zero, mul_comm 2]",
            "proofState": 84,
            "pos": {
                "line": 152,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 24 * x\n\u22a2 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) > 0",
            "endPos": {
                "line": 154,
                "column": 15
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 85,
            "pos": {
                "line": 155,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 24 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 + 24 * x) (-6) = 0 \u2227 deriv (deriv fun x => 2 * x ^ 2 + 24 * x) (-6) > 0",
            "endPos": {
                "line": 155,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 86,
            "pos": {
                "line": 158,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 2 + 24 * x) \u2192 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) > 0",
            "endPos": {
                "line": 158,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all [deriv_add, deriv_mul, deriv_pow, deriv_const]",
            "proofState": 87,
            "pos": {
                "line": 159,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 24 * x\n\u22a2 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) > 0",
            "endPos": {
                "line": 159,
                "column": 57
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 88,
            "pos": {
                "line": 160,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 24 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 + 24 * x) (-6) = 0 \u2227 0 < deriv (deriv fun x => 2 * x ^ 2 + 24 * x) (-6)",
            "endPos": {
                "line": 160,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 89,
            "pos": {
                "line": 161,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 24 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 + 24 * x) (-6) = 0 \u2227 0 < deriv (deriv fun x => 2 * x ^ 2 + 24 * x) (-6)",
            "endPos": {
                "line": 161,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 90,
            "pos": {
                "line": 164,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 3 - 75 * x ^ 2 + 375 * x) \u2192 deriv f 5 = 0 \u2227 deriv (deriv f) 5 = 0",
            "endPos": {
                "line": 164,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_const', deriv_pow, deriv_sub, deriv_mul, deriv_id'', deriv_const, zero_mul, zero_sub, zero_add,\n  one_mul, deriv_pow, deriv_sub, deriv_mul, deriv_id'', deriv_const, zero_mul, zero_sub, zero_add, one_mul, deriv_pow,\n  deriv_sub, deriv_mul, deriv_id'', deriv_const, zero_mul, zero_sub, zero_add, one_mul]",
            "proofState": 91,
            "pos": {
                "line": 165,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 3 - 75 * x ^ 2 + 375 * x\n\u22a2 deriv f 5 = 0 \u2227 deriv (deriv f) 5 = 0",
            "endPos": {
                "line": 168,
                "column": 32
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 92,
            "pos": {
                "line": 169,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 3 - 75 * x ^ 2 + 375 * x\n\u22a2 deriv (fun x => 5 * x ^ 3 - 75 * x ^ 2 + 375 * x) 5 = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 3 - 75 * x ^ 2 + 375 * x) 5 = 0",
            "endPos": {
                "line": 169,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 93,
            "pos": {
                "line": 170,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 3 - 75 * x ^ 2 + 375 * x\n\u22a2 deriv (fun x => 5 * x ^ 3 - 75 * x ^ 2 + 375 * x) 5 = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 3 - 75 * x ^ 2 + 375 * x) 5 = 0",
            "endPos": {
                "line": 170,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 94,
            "pos": {
                "line": 171,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 3 - 75 * x ^ 2 + 375 * x\n\u22a2 deriv (fun x => 5 * x ^ 3 - 75 * x ^ 2 + 375 * x) 5 = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 3 - 75 * x ^ 2 + 375 * x) 5 = 0",
            "endPos": {
                "line": 171,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 95,
            "pos": {
                "line": 174,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 2 + 4 * x) \u2192 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) > 0",
            "endPos": {
                "line": 174,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_add, deriv_pow, deriv_const, zero_mul, zero_add, zero_sub, sub_zero, mul_one, mul_neg, mul_zero,\n  neg_neg, neg_zero]",
            "proofState": 96,
            "pos": {
                "line": 175,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 + 4 * x\n\u22a2 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) > 0",
            "endPos": {
                "line": 175,
                "column": 141
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 97,
            "pos": {
                "line": 176,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 + 4 * x\n\u22a2 deriv (fun x => x ^ 2 + 4 * x) (-2) = 0 \u2227 deriv (deriv fun x => x ^ 2 + 4 * x) (-2) > 0",
            "endPos": {
                "line": 176,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 98,
            "pos": {
                "line": 176,
                "column": 18
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 + 4 * x\n\u22a2 deriv (fun x => x ^ 2 + 4 * x) (-2) = 0",
            "endPos": {
                "line": 176,
                "column": 26
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 99,
            "pos": {
                "line": 176,
                "column": 18
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 + 4 * x\n\u22a2 deriv (deriv fun x => x ^ 2 + 4 * x) (-2) > 0",
            "endPos": {
                "line": 176,
                "column": 26
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 100,
            "pos": {
                "line": 177,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 + 4 * x\n\u22a2 deriv (fun x => x ^ 2 + 4 * x) (-2) = 0",
            "endPos": {
                "line": 177,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 101,
            "pos": {
                "line": 177,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 + 4 * x\n\u22a2 0 < deriv (deriv fun x => x ^ 2 + 4 * x) (-2)",
            "endPos": {
                "line": 177,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 102,
            "pos": {
                "line": 180,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 2 + 2 * x) \u2192 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) > 0",
            "endPos": {
                "line": 180,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [hf, deriv_add, deriv_pow, deriv_mul, deriv_id'', deriv_const', deriv_pow, Nat.cast_one, Nat.cast_zero,\n  Nat.cast_succ, deriv_add, deriv_mul, deriv_id'', deriv_const', deriv_pow, Nat.cast_one, Nat.cast_zero, Nat.cast_succ,\n  deriv_add, deriv_mul, deriv_id'', deriv_const', deriv_pow, Nat.cast_one, Nat.cast_zero, Nat.cast_succ]",
            "proofState": 103,
            "pos": {
                "line": 181,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 2 * x\n\u22a2 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) > 0",
            "endPos": {
                "line": 184,
                "column": 33
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 104,
            "pos": {
                "line": 185,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 2 * x\n\u22a2 deriv (fun x => x ^ 2 + 2 * x) (-1) = 0 \u2227 deriv (deriv fun x => x ^ 2 + 2 * x) (-1) > 0",
            "endPos": {
                "line": 185,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 105,
            "pos": {
                "line": 185,
                "column": 18
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 2 * x\n\u22a2 deriv (fun x => x ^ 2 + 2 * x) (-1) = 0",
            "endPos": {
                "line": 185,
                "column": 26
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 106,
            "pos": {
                "line": 185,
                "column": 18
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 2 * x\n\u22a2 deriv (deriv fun x => x ^ 2 + 2 * x) (-1) > 0",
            "endPos": {
                "line": 185,
                "column": 26
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 107,
            "pos": {
                "line": 188,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 3 + 18 * x ^ 2 + 108 * x) \u2192 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) = 0",
            "endPos": {
                "line": 188,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all",
            "proofState": 108,
            "pos": {
                "line": 189,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 3 + 18 * x ^ 2 + 108 * x\n\u22a2 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) = 0",
            "endPos": {
                "line": 189,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 109,
            "pos": {
                "line": 190,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 3 + 18 * x ^ 2 + 108 * x\n\u22a2 deriv (fun x => x ^ 3 + 18 * x ^ 2 + 108 * x) (-6) = 0 \u2227 deriv (deriv fun x => x ^ 3 + 18 * x ^ 2 + 108 * x) (-6) = 0",
            "endPos": {
                "line": 190,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 110,
            "pos": {
                "line": 191,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 3 + 18 * x ^ 2 + 108 * x\n\u22a2 deriv (fun x => x ^ 3 + 18 * x ^ 2 + 108 * x) (-6) = 0",
            "endPos": {
                "line": 191,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 111,
            "pos": {
                "line": 191,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 3 + 18 * x ^ 2 + 108 * x\n\u22a2 deriv (deriv fun x => x ^ 3 + 18 * x ^ 2 + 108 * x) (-6) = 0",
            "endPos": {
                "line": 191,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 112,
            "pos": {
                "line": 192,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 3 + 18 * x ^ 2 + 108 * x\n\u22a2 deriv (fun x => x ^ 3 + 18 * x ^ 2 + 108 * x) (-6) = 0",
            "endPos": {
                "line": 192,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 113,
            "pos": {
                "line": 192,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 3 + 18 * x ^ 2 + 108 * x\n\u22a2 deriv (deriv fun x => x ^ 3 + 18 * x ^ 2 + 108 * x) (-6) = 0",
            "endPos": {
                "line": 192,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 114,
            "pos": {
                "line": 201,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 4 + 5 * x ^ 3 - 2635 * x - 376 * x ^ 2) \u2192 deriv f (-5) = 0 \u2227 deriv (deriv f) (-5) < 0",
            "endPos": {
                "line": 201,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [hf]",
            "proofState": 115,
            "pos": {
                "line": 202,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 3 * x ^ 4 + 5 * x ^ 3 - 2635 * x - 376 * x ^ 2\n\u22a2 deriv f (-5) = 0 \u2227 deriv (deriv f) (-5) < 0",
            "endPos": {
                "line": 202,
                "column": 9
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_add, deriv_mul, deriv_pow, deriv_const]",
            "proofState": 116,
            "pos": {
                "line": 203,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 3 * x ^ 4 + 5 * x ^ 3 - 2635 * x - 376 * x ^ 2\n\u22a2 deriv (fun x => 3 * x ^ 4 + 5 * x ^ 3 - 2635 * x - 376 * x ^ 2) (-5) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 4 + 5 * x ^ 3 - 2635 * x - 376 * x ^ 2) (-5) < 0",
            "endPos": {
                "line": 203,
                "column": 53
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 117,
            "pos": {
                "line": 208,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 2 - 24 * x) \u2192 deriv f 6 = 0 \u2227 deriv (deriv f) 6 > 0",
            "endPos": {
                "line": 208,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h]",
            "proofState": 118,
            "pos": {
                "line": 209,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv f 6 = 0 \u2227 deriv (deriv f) 6 > 0",
            "endPos": {
                "line": 209,
                "column": 19
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 119,
            "pos": {
                "line": 210,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 24 * x) 6 = 0 \u2227 deriv (deriv fun x => 2 * x ^ 2 - 24 * x) 6 > 0",
            "endPos": {
                "line": 210,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 120,
            "pos": {
                "line": 211,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 24 * x) 6 = 0",
            "endPos": {
                "line": 211,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 121,
            "pos": {
                "line": 211,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv (deriv fun x => 2 * x ^ 2 - 24 * x) 6 > 0",
            "endPos": {
                "line": 211,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "nlinarith",
            "proofState": 122,
            "pos": {
                "line": 212,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 24 * x) 6 = 0",
            "endPos": {
                "line": 212,
                "column": 15
            }
        },
        {
            "usedConstants": [],
            "tactic": "nlinarith",
            "proofState": 123,
            "pos": {
                "line": 212,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 0 < deriv (deriv fun x => 2 * x ^ 2 - 24 * x) 6",
            "endPos": {
                "line": 212,
                "column": 15
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 124,
            "pos": {
                "line": 220,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 2 + 6 * x) \u2192 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) > 0",
            "endPos": {
                "line": 220,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [h]",
            "proofState": 125,
            "pos": {
                "line": 221,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 + 6 * x\n\u22a2 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) > 0",
            "endPos": {
                "line": 221,
                "column": 8
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 126,
            "pos": {
                "line": 222,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 + 6 * x\n\u22a2 deriv (fun x => 3 * x ^ 2 + 6 * x) (-1) = 0 \u2227 deriv (deriv fun x => 3 * x ^ 2 + 6 * x) (-1) > 0",
            "endPos": {
                "line": 222,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 127,
            "pos": {
                "line": 223,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 + 6 * x\n\u22a2 deriv (fun x => 3 * x ^ 2 + 6 * x) (-1) = 0 \u2227 0 < deriv (deriv fun x => 3 * x ^ 2 + 6 * x) (-1)",
            "endPos": {
                "line": 223,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_add, deriv_mul, deriv_pow, deriv_const, deriv_id]",
            "proofState": 128,
            "pos": {
                "line": 224,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 + 6 * x\n\u22a2 deriv (fun x => 3 * x ^ 2 + 6 * x) (-1) = 0",
            "endPos": {
                "line": 224,
                "column": 67
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_add, deriv_mul, deriv_pow, deriv_const, deriv_id]",
            "proofState": 129,
            "pos": {
                "line": 224,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 + 6 * x\n\u22a2 0 < deriv (deriv fun x => 3 * x ^ 2 + 6 * x) (-1)",
            "endPos": {
                "line": 224,
                "column": 67
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 130,
            "pos": {
                "line": 229,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 2 - 4 * x) \u2192 deriv f 1 = 0 \u2227 deriv (deriv f) 1 > 0",
            "endPos": {
                "line": 229,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [hf]",
            "proofState": 131,
            "pos": {
                "line": 230,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 - 4 * x\n\u22a2 deriv f 1 = 0 \u2227 deriv (deriv f) 1 > 0",
            "endPos": {
                "line": 230,
                "column": 9
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv]",
            "proofState": 132,
            "pos": {
                "line": 231,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 - 4 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 4 * x) 1 = 0 \u2227 deriv (deriv fun x => 2 * x ^ 2 - 4 * x) 1 > 0",
            "endPos": {
                "line": 231,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 133,
            "pos": {
                "line": 236,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 4 - 2 * x ^ 2) \u2192 deriv f 0 = 0 \u2227 deriv (deriv f) 0 < 0",
            "endPos": {
                "line": 236,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all",
            "proofState": 134,
            "pos": {
                "line": 237,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 2 * x ^ 2\n\u22a2 deriv f 0 = 0 \u2227 deriv (deriv f) 0 < 0",
            "endPos": {
                "line": 237,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 135,
            "pos": {
                "line": 238,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 2 * x ^ 2\n\u22a2 deriv (fun x => 3 * x ^ 4 - 2 * x ^ 2) 0 = 0 \u2227 deriv (deriv fun x => 3 * x ^ 4 - 2 * x ^ 2) 0 < 0",
            "endPos": {
                "line": 238,
                "column": 13
            }
        },
        {
            "usedConstants": [
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "deriv_const'",
                "Ring.toNonAssocRing",
                "sub_self",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "congrArg",
                "DifferentiableAt",
                "deriv",
                "deriv_sub",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "NormedField.toField",
                "Mathlib.Meta.NormNum.isNat_natSub",
                "Monoid.toNatPow",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "Real.instAddGroup",
                "Real.instRing",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "NormedAddGroup.toAddGroup",
                "SubNegZeroMonoid.toNegZeroClass",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_natCast",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "Nat.cast",
                "Field.toSemifield",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "Mathlib.Meta.NormNum.zero_natPow",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "SubNegMonoid.toSub",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "AddGroup.toSubNegMonoid",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "congrFun",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "NormedAddCommGroup.toNormedAddGroup",
                "Real.instMul",
                "congr",
                "AddZeroClass.toZero",
                "NormedRing.toSeminormedRing",
                "True",
                "eq_self",
                "Mathlib.Meta.NormNum.IsNat.to_eq",
                "eq_true",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "Mathlib.Meta.NormNum.isNat_mul",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "NontriviallyNormedField.toNormedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "Nat.cast_zero",
                "AddMonoidWithOne.toAddMonoid",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "SubNegMonoid.toAddMonoid",
                "mul_one",
                "AddCommGroup.toDivisionAddCommMonoid",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "add_zero",
                "deriv_pow''",
                "OfNat.ofNat",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Nat.cast_one",
                "Mathlib.Meta.NormNum.isNat_pow",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "MonoidWithZero.toMonoid",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "MulZeroClass.toZero",
                "True.intro",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 136,
            "pos": {
                "line": 239,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 2 * x ^ 2\n\u22a2 deriv (fun x => 3 * x ^ 4 - 2 * x ^ 2) 0 = 0",
            "endPos": {
                "line": 239,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 137,
            "pos": {
                "line": 239,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 2 * x ^ 2\n\u22a2 deriv (deriv fun x => 3 * x ^ 4 - 2 * x ^ 2) 0 < 0",
            "endPos": {
                "line": 239,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_sq_pos_of_pos (show (0 : \u211d) < 2 by norm_num)]",
            "proofState": 138,
            "pos": {
                "line": 240,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 2 * x ^ 2\n\u22a2 deriv (deriv fun x => 3 * x ^ 4 - 2 * x ^ 2) 0 < 0",
            "endPos": {
                "line": 240,
                "column": 67
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 139,
            "pos": {
                "line": 243,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 2 + 12 * x) \u2192 deriv f (-3) = 0 \u2227 deriv (deriv f) (-3) > 0",
            "endPos": {
                "line": 243,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_add, deriv_mul, deriv_const, deriv_id'', deriv_pow, one_mul, mul_one, mul_zero, add_zero,\n  zero_mul, sub_zero]",
            "proofState": 140,
            "pos": {
                "line": 244,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 12 * x\n\u22a2 deriv f (-3) = 0 \u2227 deriv (deriv f) (-3) > 0",
            "endPos": {
                "line": 245,
                "column": 33
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 141,
            "pos": {
                "line": 246,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 12 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 + 12 * x) (-3) = 0 \u2227 deriv (deriv fun x => 2 * x ^ 2 + 12 * x) (-3) > 0",
            "endPos": {
                "line": 246,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 142,
            "pos": {
                "line": 249,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 6 - x ^ 5 + 3 * x ^ 3 - 60426 * x ^ 2 - 578988 * x) \u2192\n    deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) = 0",
            "endPos": {
                "line": 249,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_add, deriv_sub, deriv_const, deriv_mul, deriv_pow, deriv_id'', h, Nat.cast_ofNat, zero_add,\n  zero_sub, add_zero, sub_zero, Nat.cast_one, one_mul, mul_one, mul_zero, zero_mul, sub_neg_eq_add]",
            "proofState": 143,
            "pos": {
                "line": 250,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 - x ^ 5 + 3 * x ^ 3 - 60426 * x ^ 2 - 578988 * x\n\u22a2 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) = 0",
            "endPos": {
                "line": 252,
                "column": 48
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 144,
            "pos": {
                "line": 253,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 - x ^ 5 + 3 * x ^ 3 - 60426 * x ^ 2 - 578988 * x\n\u22a2 deriv (fun x => 3 * x ^ 6 - x ^ 5 + 3 * x ^ 3 - 60426 * x ^ 2 - 578988 * x) (-6) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 6 - x ^ 5 + 3 * x ^ 3 - 60426 * x ^ 2 - 578988 * x) (-6) = 0",
            "endPos": {
                "line": 253,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 145,
            "pos": {
                "line": 254,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 - x ^ 5 + 3 * x ^ 3 - 60426 * x ^ 2 - 578988 * x\n\u22a2 deriv (fun x => 3 * x ^ 6 - x ^ 5 + 3 * x ^ 3 - 60426 * x ^ 2 - 578988 * x) (-6) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 6 - x ^ 5 + 3 * x ^ 3 - 60426 * x ^ 2 - 578988 * x) (-6) = 0",
            "endPos": {
                "line": 254,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 146,
            "pos": {
                "line": 254,
                "column": 19
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 - x ^ 5 + 3 * x ^ 3 - 60426 * x ^ 2 - 578988 * x\n\u22a2 deriv (fun x => 3 * x ^ 6 - x ^ 5 + 3 * x ^ 3 - 60426 * x ^ 2 - 578988 * x) (-6) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 6 - x ^ 5 + 3 * x ^ 3 - 60426 * x ^ 2 - 578988 * x) (-6) = 0",
            "endPos": {
                "line": 254,
                "column": 27
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 147,
            "pos": {
                "line": 257,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 2 + 8 * x) \u2192 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) > 0",
            "endPos": {
                "line": 257,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp [h, deriv_add, deriv_mul, deriv_const, deriv_pow, Nat.cast_ofNat]",
            "proofState": 148,
            "pos": {
                "line": 258,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 8 * x\n\u22a2 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) > 0",
            "endPos": {
                "line": 258,
                "column": 72
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 149,
            "pos": {
                "line": 259,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 8 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 + 8 * x) (-2) = 0 \u2227 0 < deriv (deriv fun x => 2 * x ^ 2 + 8 * x) (-2)",
            "endPos": {
                "line": 259,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 150,
            "pos": {
                "line": 262,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 2 + 4 * x) \u2192 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) > 0",
            "endPos": {
                "line": 262,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_add, deriv_const, deriv_mul, deriv_id'', deriv_pow, Nat.cast_one, Nat.cast_zero, Nat.cast_succ,\n  Nat.cast_zero, Nat.cast_one, deriv_pow, Nat.cast_one, Nat.cast_zero, Nat.cast_succ, Nat.cast_zero, Nat.cast_one]",
            "proofState": 151,
            "pos": {
                "line": 263,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 + 4 * x\n\u22a2 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) > 0",
            "endPos": {
                "line": 265,
                "column": 62
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 152,
            "pos": {
                "line": 266,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 + 4 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 + 4 * x) (-1) = 0 \u2227 deriv (deriv fun x => 2 * x ^ 2 + 4 * x) (-1) > 0",
            "endPos": {
                "line": 266,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 153,
            "pos": {
                "line": 267,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 + 4 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 + 4 * x) (-1) = 0 \u2227 0 < deriv (deriv fun x => 2 * x ^ 2 + 4 * x) (-1)",
            "endPos": {
                "line": 267,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 154,
            "pos": {
                "line": 270,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 3 + 80 * x + 22 * x ^ 2) \u2192 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) < 0",
            "endPos": {
                "line": 270,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all",
            "proofState": 155,
            "pos": {
                "line": 271,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 3 + 80 * x + 22 * x ^ 2\n\u22a2 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) < 0",
            "endPos": {
                "line": 271,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 156,
            "pos": {
                "line": 272,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 3 + 80 * x + 22 * x ^ 2\n\u22a2 deriv (fun x => 2 * x ^ 3 + 80 * x + 22 * x ^ 2) (-4) = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 3 + 80 * x + 22 * x ^ 2) (-4) < 0",
            "endPos": {
                "line": 272,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 157,
            "pos": {
                "line": 273,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 3 + 80 * x + 22 * x ^ 2\n\u22a2 deriv (fun x => 2 * x ^ 3 + 80 * x + 22 * x ^ 2) (-4) = 0",
            "endPos": {
                "line": 273,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 158,
            "pos": {
                "line": 273,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 3 + 80 * x + 22 * x ^ 2\n\u22a2 deriv (deriv fun x => 2 * x ^ 3 + 80 * x + 22 * x ^ 2) (-4) < 0",
            "endPos": {
                "line": 273,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [hasDerivAt_id (-4 : \u211d), hasDerivAt_const (-4 : \u211d) 80, hasDerivAt_pow 3 (-4 : \u211d),\n  hasDerivAt_mul_const 2 (-4 : \u211d), hasDerivAt_mul_const 22 (-4 : \u211d)]",
            "proofState": 159,
            "pos": {
                "line": 274,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 3 + 80 * x + 22 * x ^ 2\n\u22a2 deriv (fun x => 2 * x ^ 3 + 80 * x + 22 * x ^ 2) (-4) = 0",
            "endPos": {
                "line": 274,
                "column": 163
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [hasDerivAt_id (-4 : \u211d), hasDerivAt_const (-4 : \u211d) 80, hasDerivAt_pow 3 (-4 : \u211d),\n  hasDerivAt_mul_const 2 (-4 : \u211d), hasDerivAt_mul_const 22 (-4 : \u211d)]",
            "proofState": 160,
            "pos": {
                "line": 274,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 3 + 80 * x + 22 * x ^ 2\n\u22a2 deriv (deriv fun x => 2 * x ^ 3 + 80 * x + 22 * x ^ 2) (-4) < 0",
            "endPos": {
                "line": 274,
                "column": 163
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 161,
            "pos": {
                "line": 283,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 4 + 5 * x ^ 3 - 39 * x ^ 2 + 47 * x) \u2192 deriv f 1 = 0 \u2227 deriv (deriv f) 1 = 0",
            "endPos": {
                "line": 283,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_add, deriv_mul, deriv_pow, deriv_const, zero_add, zero_sub, zero_mul, zero_pow, zero_sub, sub_zero,\n  sub_neg_eq_add, neg_mul, neg_neg, mul_neg, mul_zero, neg_zero]",
            "proofState": 162,
            "pos": {
                "line": 284,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 + 5 * x ^ 3 - 39 * x ^ 2 + 47 * x\n\u22a2 deriv f 1 = 0 \u2227 deriv (deriv f) 1 = 0",
            "endPos": {
                "line": 285,
                "column": 96
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 163,
            "pos": {
                "line": 286,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 + 5 * x ^ 3 - 39 * x ^ 2 + 47 * x\n\u22a2 deriv (fun x => 4 * x ^ 4 + 5 * x ^ 3 - 39 * x ^ 2 + 47 * x) 1 = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 4 + 5 * x ^ 3 - 39 * x ^ 2 + 47 * x) 1 = 0",
            "endPos": {
                "line": 286,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 164,
            "pos": {
                "line": 287,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 + 5 * x ^ 3 - 39 * x ^ 2 + 47 * x\n\u22a2 deriv (fun x => 4 * x ^ 4 + 5 * x ^ 3 - 39 * x ^ 2 + 47 * x) 1 = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 4 + 5 * x ^ 3 - 39 * x ^ 2 + 47 * x) 1 = 0",
            "endPos": {
                "line": 287,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 165,
            "pos": {
                "line": 290,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 5 - x ^ 4 - 2347 * x ^ 2 + 17720 * x) \u2192 deriv f 5 = 0 \u2227 deriv (deriv f) 5 > 0",
            "endPos": {
                "line": 290,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_sub, deriv_const, deriv_mul, deriv_pow, deriv_id'', deriv_pow, deriv_sub, deriv_const,\n  deriv_mul, deriv_pow, deriv_id'', deriv_pow, deriv_sub, deriv_const, deriv_mul, deriv_pow, deriv_id'', deriv_pow]",
            "proofState": 166,
            "pos": {
                "line": 291,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 - x ^ 4 - 2347 * x ^ 2 + 17720 * x\n\u22a2 deriv f 5 = 0 \u2227 deriv (deriv f) 5 > 0",
            "endPos": {
                "line": 293,
                "column": 48
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 167,
            "pos": {
                "line": 294,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 - x ^ 4 - 2347 * x ^ 2 + 17720 * x\n\u22a2 deriv (fun x => 2 * x ^ 5 - x ^ 4 - 2347 * x ^ 2 + 17720 * x) 5 = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 5 - x ^ 4 - 2347 * x ^ 2 + 17720 * x) 5 > 0",
            "endPos": {
                "line": 294,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 168,
            "pos": {
                "line": 295,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 - x ^ 4 - 2347 * x ^ 2 + 17720 * x\n\u22a2 deriv (fun x => 2 * x ^ 5 - x ^ 4 - 2347 * x ^ 2 + 17720 * x) 5 = 0 \u2227\n    0 < deriv (deriv fun x => 2 * x ^ 5 - x ^ 4 - 2347 * x ^ 2 + 17720 * x) 5",
            "endPos": {
                "line": 295,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 169,
            "pos": {
                "line": 298,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 3 - 9 * x ^ 2 + 27 * x) \u2192 deriv f 3 = 0 \u2227 deriv (deriv f) 3 = 0",
            "endPos": {
                "line": 298,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [h]",
            "proofState": 170,
            "pos": {
                "line": 299,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 3 - 9 * x ^ 2 + 27 * x\n\u22a2 deriv f 3 = 0 \u2227 deriv (deriv f) 3 = 0",
            "endPos": {
                "line": 299,
                "column": 8
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 171,
            "pos": {
                "line": 300,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 3 - 9 * x ^ 2 + 27 * x\n\u22a2 deriv (fun x => x ^ 3 - 9 * x ^ 2 + 27 * x) 3 = 0 \u2227 deriv (deriv fun x => x ^ 3 - 9 * x ^ 2 + 27 * x) 3 = 0",
            "endPos": {
                "line": 300,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_sub, deriv_pow, deriv_id', deriv_const, deriv_mul, deriv_add, deriv_pow, deriv_id', deriv_const, deriv_mul,\n  deriv_add, deriv_pow, deriv_id', deriv_const, deriv_mul, deriv_add, deriv_pow, deriv_id', deriv_const, deriv_mul,\n  deriv_add]",
            "proofState": 172,
            "pos": {
                "line": 301,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 3 - 9 * x ^ 2 + 27 * x\n\u22a2 deriv (fun x => x ^ 3 - 9 * x ^ 2 + 27 * x) 3 = 0",
            "endPos": {
                "line": 303,
                "column": 60
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_sub, deriv_pow, deriv_id', deriv_const, deriv_mul, deriv_add, deriv_pow, deriv_id', deriv_const, deriv_mul,\n  deriv_add, deriv_pow, deriv_id', deriv_const, deriv_mul, deriv_add, deriv_pow, deriv_id', deriv_const, deriv_mul,\n  deriv_add]",
            "proofState": 173,
            "pos": {
                "line": 301,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 3 - 9 * x ^ 2 + 27 * x\n\u22a2 deriv (deriv fun x => x ^ 3 - 9 * x ^ 2 + 27 * x) 3 = 0",
            "endPos": {
                "line": 303,
                "column": 60
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 174,
            "pos": {
                "line": 308,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 2) \u2192 deriv f 0 = 0 \u2227 deriv (deriv f) 0 > 0",
            "endPos": {
                "line": 308,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "_private.Mathlib.Algebra.CharZero.Defs.0._proof_6",
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Real.instIsOrderedRing",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "False",
                "Real.partialOrder",
                "Real",
                "Preorder.toLT",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "deriv_const'",
                "Ring.toNonAssocRing",
                "MulZeroClass.toMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "congrArg",
                "DifferentiableAt",
                "deriv",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "PartialOrder.toPreorder",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "deriv_const_mul_field'",
                "Real.instLT",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "_private.Mathlib.Algebra.Order.GroupWithZero.Unbundled.Basic.0._proof_1",
                "NormedField.toField",
                "Nat.instCharZero",
                "Monoid.toNatPow",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Real.instMonoidWithZero",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "Nat.cast",
                "Field.toSemifield",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "funext",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "MonoidWithZero.toMulZeroOneClass",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "congrFun",
                "pow_one",
                "NonAssocSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "AddZeroClass.toZero",
                "NormedRing.toSeminormedRing",
                "LT.lt",
                "True",
                "eq_self",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "NormedAddCommGroup.toAddCommGroup",
                "PosMulStrictMono.toPosMulReflectLE",
                "NontriviallyNormedField.toNormedField",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "AddMonoidWithOne.toAddMonoid",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "MulZeroOneClass.toMulZeroClass",
                "mul_one",
                "AddCommGroup.toDivisionAddCommMonoid",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "add_zero",
                "deriv_pow''",
                "OfNat.ofNat",
                "not_false_eq_true",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Ring.toSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "_private.Mathlib.Data.Nat.Cast.Order.Ring.0._proof_7",
                "IsStrictOrderedRing.toPosMulStrictMono",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Not",
                "Real.instNontrivial",
                "Real.instPreorder",
                "zero_pow",
                "MonoidWithZero.toMonoid",
                "true_and",
                "Real.linearOrder",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "MulZeroClass.toZero",
                "PosMulReflectLE.toPosMulReflectLT",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast",
                "Real.instIsStrictOrderedRing"
            ],
            "tactic": "simp_all [deriv_pow, deriv_mul, deriv_id]",
            "proofState": 175,
            "pos": {
                "line": 309,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2\n\u22a2 deriv f 0 = 0 \u2227 deriv (deriv f) 0 > 0",
            "endPos": {
                "line": 309,
                "column": 43
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 176,
            "pos": {
                "line": 310,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2\n\u22a2 0 < deriv (HMul.hMul 2) 0",
            "endPos": {
                "line": 310,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 177,
            "pos": {
                "line": 313,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 3 + 9 * x ^ 2 + 12 * x) \u2192 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) < 0",
            "endPos": {
                "line": 313,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [hf]",
            "proofState": 178,
            "pos": {
                "line": 314,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 3 + 9 * x ^ 2 + 12 * x\n\u22a2 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) < 0",
            "endPos": {
                "line": 314,
                "column": 16
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 179,
            "pos": {
                "line": 315,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 3 + 9 * x ^ 2 + 12 * x\n\u22a2 deriv (fun x => 2 * x ^ 3 + 9 * x ^ 2 + 12 * x) (-2) = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 3 + 9 * x ^ 2 + 12 * x) (-2) < 0",
            "endPos": {
                "line": 315,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num [deriv_add, deriv_mul, deriv_const, deriv_pow]",
            "proofState": 180,
            "pos": {
                "line": 316,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 3 + 9 * x ^ 2 + 12 * x\n\u22a2 deriv (fun x => 2 * x ^ 3 + 9 * x ^ 2 + 12 * x) (-2) = 0",
            "endPos": {
                "line": 316,
                "column": 61
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num [deriv_add, deriv_mul, deriv_const, deriv_pow]",
            "proofState": 181,
            "pos": {
                "line": 316,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 3 + 9 * x ^ 2 + 12 * x\n\u22a2 deriv (deriv fun x => 2 * x ^ 3 + 9 * x ^ 2 + 12 * x) (-2) < 0",
            "endPos": {
                "line": 316,
                "column": 61
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 182,
            "pos": {
                "line": 317,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 3 + 9 * x ^ 2 + 12 * x\n\u22a2 deriv (fun x => 2 * x ^ 3 + 9 * x ^ 2 + 12 * x) (-2) = 0",
            "endPos": {
                "line": 317,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 183,
            "pos": {
                "line": 317,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 3 + 9 * x ^ 2 + 12 * x\n\u22a2 deriv (deriv fun x => 2 * x ^ 3 + 9 * x ^ 2 + 12 * x) (-2) < 0",
            "endPos": {
                "line": 317,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 184,
            "pos": {
                "line": 320,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 2 - 20 * x) \u2192 deriv f 5 = 0 \u2227 deriv (deriv f) 5 > 0",
            "endPos": {
                "line": 320,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all",
            "proofState": 185,
            "pos": {
                "line": 321,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 20 * x\n\u22a2 deriv f 5 = 0 \u2227 deriv (deriv f) 5 > 0",
            "endPos": {
                "line": 321,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 186,
            "pos": {
                "line": 322,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 20 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 20 * x) 5 = 0 \u2227 0 < deriv (deriv fun x => 2 * x ^ 2 - 20 * x) 5",
            "endPos": {
                "line": 322,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 187,
            "pos": {
                "line": 323,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 20 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 20 * x) 5 = 0",
            "endPos": {
                "line": 323,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 188,
            "pos": {
                "line": 323,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 20 * x\n\u22a2 0 < deriv (deriv fun x => 2 * x ^ 2 - 20 * x) 5",
            "endPos": {
                "line": 323,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 189,
            "pos": {
                "line": 324,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 20 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 20 * x) 5 = 0",
            "endPos": {
                "line": 324,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 190,
            "pos": {
                "line": 324,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 20 * x\n\u22a2 0 < deriv (deriv fun x => 2 * x ^ 2 - 20 * x) 5",
            "endPos": {
                "line": 324,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 191,
            "pos": {
                "line": 333,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 5 - 4 * x ^ 4 + 5 * x ^ 3 - 13 * x ^ 2 + 40 * x) \u2192 deriv f 2 = 0 \u2227 deriv (deriv f) 2 > 0",
            "endPos": {
                "line": 333,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp [h, deriv_pow, deriv_add, deriv_sub, deriv_mul, deriv_const]",
            "proofState": 192,
            "pos": {
                "line": 334,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 - 4 * x ^ 4 + 5 * x ^ 3 - 13 * x ^ 2 + 40 * x\n\u22a2 deriv f 2 = 0 \u2227 deriv (deriv f) 2 > 0",
            "endPos": {
                "line": 334,
                "column": 67
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 193,
            "pos": {
                "line": 335,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 - 4 * x ^ 4 + 5 * x ^ 3 - 13 * x ^ 2 + 40 * x\n\u22a2 deriv (fun x => x ^ 5 - 4 * x ^ 4 + 5 * x ^ 3 - 13 * x ^ 2 + 40 * x) 2 = 0 \u2227\n    0 < deriv (deriv fun x => x ^ 5 - 4 * x ^ 4 + 5 * x ^ 3 - 13 * x ^ 2 + 40 * x) 2",
            "endPos": {
                "line": 335,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_pow_two_eq_mul_nat_succ (fun x => x ^ 3) 1, deriv_pow_two_eq_mul_nat_succ (fun x => x ^ 2) 1,\n  deriv_pow_two_eq_mul_nat_succ (fun x => x) 1]",
            "proofState": 194,
            "pos": {
                "line": 336,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 - 4 * x ^ 4 + 5 * x ^ 3 - 13 * x ^ 2 + 40 * x\n\u22a2 deriv (fun x => x ^ 5 - 4 * x ^ 4 + 5 * x ^ 3 - 13 * x ^ 2 + 40 * x) 2 = 0 \u2227\n    0 < deriv (deriv fun x => x ^ 5 - 4 * x ^ 4 + 5 * x ^ 3 - 13 * x ^ 2 + 40 * x) 2",
            "endPos": {
                "line": 338,
                "column": 49
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 195,
            "pos": {
                "line": 341,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 4 - 2 * x ^ 3 - 121 * x ^ 2 - 616 * x) \u2192 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) < 0",
            "endPos": {
                "line": 341,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, neg_mul, neg_sub, mul_neg, mul_one, sub_neg_eq_add, add_assoc, add_left_comm, add_right_comm,\n  add_assoc]",
            "proofState": 196,
            "pos": {
                "line": 342,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 2 * x ^ 3 - 121 * x ^ 2 - 616 * x\n\u22a2 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) < 0",
            "endPos": {
                "line": 343,
                "column": 30
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 197,
            "pos": {
                "line": 344,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 2 * x ^ 3 - 121 * x ^ 2 - 616 * x\n\u22a2 deriv (fun x => x ^ 4 - 2 * x ^ 3 - 121 * x ^ 2 - 616 * x) (-4) = 0 \u2227\n    deriv (deriv fun x => x ^ 4 - 2 * x ^ 3 - 121 * x ^ 2 - 616 * x) (-4) < 0",
            "endPos": {
                "line": 344,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "apply And.intro",
            "proofState": 198,
            "pos": {
                "line": 345,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 2 * x ^ 3 - 121 * x ^ 2 - 616 * x\n\u22a2 deriv (fun x => x ^ 4 - 2 * x ^ 3 - 121 * x ^ 2 - 616 * x) (-4) = 0 \u2227\n    deriv (deriv fun x => x ^ 4 - 2 * x ^ 3 - 121 * x ^ 2 - 616 * x) (-4) < 0",
            "endPos": {
                "line": 345,
                "column": 21
            }
        },
        {
            "usedConstants": [
                "HasDerivAt.deriv"
            ],
            "tactic": "apply HasDerivAt.deriv",
            "proofState": 199,
            "pos": {
                "line": 346,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 2 * x ^ 3 - 121 * x ^ 2 - 616 * x\n\u22a2 deriv (fun x => x ^ 4 - 2 * x ^ 3 - 121 * x ^ 2 - 616 * x) (-4) = 0",
            "endPos": {
                "line": 346,
                "column": 28
            }
        },
        {
            "usedConstants": [],
            "tactic": "apply HasDerivAt.deriv",
            "proofState": 200,
            "pos": {
                "line": 346,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 2 * x ^ 3 - 121 * x ^ 2 - 616 * x\n\u22a2 deriv (deriv fun x => x ^ 4 - 2 * x ^ 3 - 121 * x ^ 2 - 616 * x) (-4) < 0",
            "endPos": {
                "line": 346,
                "column": 28
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 201,
            "pos": {
                "line": 371,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 5 + x ^ 4 + x ^ 3 + 8445 * x ^ 2 + 76176 * x) \u2192 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) > 0",
            "endPos": {
                "line": 371,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [hf]",
            "proofState": 202,
            "pos": {
                "line": 372,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 4 * x ^ 5 + x ^ 4 + x ^ 3 + 8445 * x ^ 2 + 76176 * x\n\u22a2 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) > 0",
            "endPos": {
                "line": 372,
                "column": 16
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num [deriv_const, deriv_add, deriv_mul, deriv_pow]",
            "proofState": 203,
            "pos": {
                "line": 373,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 4 * x ^ 5 + x ^ 4 + x ^ 3 + 8445 * x ^ 2 + 76176 * x\n\u22a2 deriv (fun x => 4 * x ^ 5 + x ^ 4 + x ^ 3 + 8445 * x ^ 2 + 76176 * x) (-6) = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 5 + x ^ 4 + x ^ 3 + 8445 * x ^ 2 + 76176 * x) (-6) > 0",
            "endPos": {
                "line": 373,
                "column": 57
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 204,
            "pos": {
                "line": 374,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 4 * x ^ 5 + x ^ 4 + x ^ 3 + 8445 * x ^ 2 + 76176 * x\n\u22a2 deriv (fun x => 4 * x ^ 5 + x ^ 4 + x ^ 3 + 8445 * x ^ 2 + 76176 * x) (-6) = 0 \u2227\n    0 < deriv (deriv fun x => 4 * x ^ 5 + x ^ 4 + x ^ 3 + 8445 * x ^ 2 + 76176 * x) (-6)",
            "endPos": {
                "line": 374,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 205,
            "pos": {
                "line": 375,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 4 * x ^ 5 + x ^ 4 + x ^ 3 + 8445 * x ^ 2 + 76176 * x\n\u22a2 deriv (fun x => 4 * x ^ 5 + x ^ 4 + x ^ 3 + 8445 * x ^ 2 + 76176 * x) (-6) = 0 \u2227\n    0 < deriv (deriv fun x => 4 * x ^ 5 + x ^ 4 + x ^ 3 + 8445 * x ^ 2 + 76176 * x) (-6)",
            "endPos": {
                "line": 375,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 206,
            "pos": {
                "line": 378,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 5 + x ^ 3 + 279 * x ^ 2 + 1242 * x) \u2192 deriv f (-3) = 0 \u2227 deriv (deriv f) (-3) = 0",
            "endPos": {
                "line": 378,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [hf, deriv_add, deriv_pow, deriv_const, deriv_mul, deriv_id'', Finset.sum_range_succ,\n  Finset.sum_range_one, Finset.sum_singleton, Finset.sum_range_zero, Nat.cast_one, Nat.cast_zero, Nat.cast_succ,\n  Nat.cast_zero, Nat.cast_succ, Nat.cast_zero, Nat.cast_succ, Nat.cast_zero, Nat.cast_succ, Nat.cast_zero,\n  Nat.cast_succ, Nat.cast_zero, Nat.cast_succ, Nat.cast_zero, Nat.cast_succ, Nat.cast_zero, Nat.cast_succ,\n  Nat.cast_zero, Nat.cast_succ, Nat.cast_zero]",
            "proofState": 207,
            "pos": {
                "line": 379,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 5 + x ^ 3 + 279 * x ^ 2 + 1242 * x\n\u22a2 deriv f (-3) = 0 \u2227 deriv (deriv f) (-3) = 0",
            "endPos": {
                "line": 384,
                "column": 33
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 208,
            "pos": {
                "line": 385,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 5 + x ^ 3 + 279 * x ^ 2 + 1242 * x\n\u22a2 deriv (fun x => x ^ 5 + x ^ 3 + 279 * x ^ 2 + 1242 * x) (-3) = 0 \u2227\n    deriv (deriv fun x => x ^ 5 + x ^ 3 + 279 * x ^ 2 + 1242 * x) (-3) = 0",
            "endPos": {
                "line": 385,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 209,
            "pos": {
                "line": 386,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 5 + x ^ 3 + 279 * x ^ 2 + 1242 * x\n\u22a2 deriv (fun x => x ^ 5 + x ^ 3 + 279 * x ^ 2 + 1242 * x) (-3) = 0 \u2227\n    deriv (deriv fun x => x ^ 5 + x ^ 3 + 279 * x ^ 2 + 1242 * x) (-3) = 0",
            "endPos": {
                "line": 386,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 210,
            "pos": {
                "line": 387,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 5 + x ^ 3 + 279 * x ^ 2 + 1242 * x\n\u22a2 deriv (fun x => x ^ 5 + x ^ 3 + 279 * x ^ 2 + 1242 * x) (-3) = 0 \u2227\n    deriv (deriv fun x => x ^ 5 + x ^ 3 + 279 * x ^ 2 + 1242 * x) (-3) = 0",
            "endPos": {
                "line": 387,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 211,
            "pos": {
                "line": 388,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 5 + x ^ 3 + 279 * x ^ 2 + 1242 * x\n\u22a2 deriv (fun x => x ^ 5 + x ^ 3 + 279 * x ^ 2 + 1242 * x) (-3) = 0 \u2227\n    deriv (deriv fun x => x ^ 5 + x ^ 3 + 279 * x ^ 2 + 1242 * x) (-3) = 0",
            "endPos": {
                "line": 388,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 212,
            "pos": {
                "line": 391,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 6 - 4 * x ^ 5 + 3 * x ^ 4 + 4 * x ^ 3 - 42387 * x ^ 2 + 340820 * x) \u2192\n    deriv f 5 = 0 \u2227 deriv (deriv f) 5 < 0",
            "endPos": {
                "line": 391,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Semigroup.toMul",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "HMul.hMul",
                "pow_two",
                "Real.denselyNormedField",
                "Real.instZero",
                "Monoid.toMulOneClass",
                "Real.instRCLike",
                "MulOneClass.toMul",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "mul_assoc",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "Eq.mp",
                "id",
                "CommMagma.toMul",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Real.instAdd",
                "Real.instMonoid",
                "funext",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "LT.lt",
                "mul_comm",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "Real.instSemigroup",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_const', deriv_pow, deriv_add, deriv_sub, deriv_mul, deriv_X, deriv_C, zero_sub, zero_mul, zero_add,\n  sub_zero, mul_one, mul_zero, sub_neg_eq_add, add_zero, mul_comm, mul_left_comm, mul_assoc, pow_one, pow_two,\n  deriv_pow, deriv_mul, deriv_X, deriv_C, mul_one, mul_zero, sub_zero, zero_add, sub_neg_eq_add, mul_comm,\n  mul_left_comm, mul_assoc, pow_one, pow_two, deriv_pow, deriv_mul, deriv_X, deriv_C, mul_one, mul_zero, sub_zero,\n  zero_add, sub_neg_eq_add, mul_comm, mul_left_comm, mul_assoc, pow_one, pow_two, deriv_pow, deriv_mul, deriv_X,\n  deriv_C, mul_one, mul_zero, sub_zero, zero_add, sub_neg_eq_add, mul_comm, mul_left_comm, mul_assoc, pow_one, pow_two]",
            "proofState": 213,
            "pos": {
                "line": 392,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - 4 * x ^ 5 + 3 * x ^ 4 + 4 * x ^ 3 - 42387 * x ^ 2 + 340820 * x\n\u22a2 deriv f 5 = 0 \u2227 deriv (deriv f) 5 < 0",
            "endPos": {
                "line": 392,
                "column": 678
            }
        },
        {
            "usedConstants": [
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NegZeroClass.toNeg",
                "NormedCommRing.toSeminormedCommRing",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Mathlib.Meta.NormNum.isNat_add",
                "Semigroup.toMul",
                "Real",
                "Mathlib.Meta.NormNum.instAddMonoidWithOne",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "deriv_const'",
                "Ring.toNonAssocRing",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "congrArg",
                "Mathlib.Meta.NormNum.IsNatPowT.run",
                "DifferentiableAt",
                "deriv",
                "deriv_sub",
                "Real.instSub",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "NormedField.toField",
                "Mathlib.Meta.NormNum.isNat_natSub",
                "Monoid.toNatPow",
                "Mathlib.Meta.NormNum.IsInt.neg_to_eq",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "id",
                "Distrib.toAdd",
                "Mathlib.Meta.NormNum.IsNatPowT.bit1",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "Int.ofNat",
                "Real.instAddGroup",
                "Mathlib.Meta.NormNum.IsNatPowT.bit0",
                "Real.instRing",
                "CommMagma.toMul",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Int",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Mathlib.Meta.NormNum.IsNatPowT.trans",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "NormedAddGroup.toAddGroup",
                "Mathlib.Meta.NormNum.isInt_sub",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_natCast",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "Nat.cast",
                "Field.toSemifield",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "Real.instAdd",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Add.0._proof_1",
                "SubNegMonoid.toSub",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Add.0._proof_25",
                "instHAdd",
                "And",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "AddGroup.toSubNegMonoid",
                "HPow.hPow",
                "Real.normedCommRing",
                "neg_add_cancel",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "congrFun",
                "Mathlib.Meta.NormNum.IsInt.to_isNat",
                "Ring.toAddCommGroup",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "NormedAddCommGroup.toNormedAddGroup",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "AddZeroClass.toZero",
                "NormedRing.toSeminormedRing",
                "LT.lt",
                "True",
                "eq_self",
                "Mathlib.Meta.NormNum.IsNat.to_eq",
                "Nat.pow",
                "eq_true",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "Mathlib.Meta.NormNum.isNat_mul",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "NontriviallyNormedField.toNormedField",
                "ENormedAddCommMonoid.toAddCommMonoid",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "AddCommSemigroup.toAddCommMagma",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "Nat.cast_zero",
                "AddMonoidWithOne.toAddMonoid",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "SubNegMonoid.toAddMonoid",
                "mul_one",
                "AddCommGroup.toDivisionAddCommMonoid",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "add_zero",
                "deriv_pow''",
                "OfNat.ofNat",
                "AddCommMonoid.toAddCommSemigroup",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "Real.instSemigroup",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Ring.toSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Nat.cast_one",
                "Mathlib.Meta.NormNum.isNat_pow",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "one_mul",
                "deriv_add",
                "MonoidWithZero.toMonoid",
                "true_and",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "MulZeroClass.toZero",
                "AddCommMagma.toAdd",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "True.intro",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast",
                "NormedAddCommGroup.toENormedAddCommMonoid"
            ],
            "tactic": "norm_num",
            "proofState": 214,
            "pos": {
                "line": 393,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 6 * 5 - x ^ 5 * 4 + x ^ 4 * 3 + x ^ 3 * 4 - x * (x * 42387) + x * 340820\n\u22a2 deriv (fun x => x ^ 6 * 5 - x ^ 5 * 4 + x ^ 4 * 3 + x ^ 3 * 4 - x * (x * 42387) + x * 340820) 5 = 0 \u2227\n    deriv (deriv fun x => x ^ 6 * 5 - x ^ 5 * 4 + x ^ 4 * 3 + x ^ 3 * 4 - x * (x * 42387) + x * 340820) 5 < 0",
            "endPos": {
                "line": 393,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 215,
            "pos": {
                "line": 396,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 5 + x ^ 4 + 2 * x ^ 3) \u2192 deriv f 0 = 0 \u2227 deriv (deriv f) 0 = 0",
            "endPos": {
                "line": 396,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "Eq.mp",
                "id",
                "CommMagma.toMul",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Real.instAdd",
                "Real.instMonoid",
                "funext",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "mul_comm",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_add, deriv_const, deriv_mul, deriv_pow, deriv_id'', pow_one, zero_mul, zero_add, mul_zero, mul_one,\n  zero_sub, sub_zero, one_mul, mul_comm]",
            "proofState": 216,
            "pos": {
                "line": 397,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 5 + x ^ 4 + 2 * x ^ 3\n\u22a2 deriv f 0 = 0 \u2227 deriv (deriv f) 0 = 0",
            "endPos": {
                "line": 398,
                "column": 71
            }
        },
        {
            "usedConstants": [
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "deriv_const'",
                "Ring.toNonAssocRing",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "congrArg",
                "DifferentiableAt",
                "deriv",
                "MulZeroClass.zero_mul",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "NormedField.toField",
                "Mathlib.Meta.NormNum.isNat_natSub",
                "Monoid.toNatPow",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "Real.instRing",
                "CommMagma.toMul",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_natCast",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "Nat.cast",
                "Field.toSemifield",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "Mathlib.Meta.NormNum.zero_natPow",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "Real.instAdd",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Add.0._proof_1",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "congrFun",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "AddZeroClass.toZero",
                "NormedRing.toSeminormedRing",
                "True",
                "eq_self",
                "Mathlib.Meta.NormNum.IsNat.to_eq",
                "eq_true",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "Mathlib.Meta.NormNum.isNat_mul",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "NontriviallyNormedField.toNormedField",
                "ENormedAddCommMonoid.toAddCommMonoid",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "AddCommSemigroup.toAddCommMagma",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "Nat.cast_zero",
                "AddMonoidWithOne.toAddMonoid",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "mul_one",
                "AddCommGroup.toDivisionAddCommMonoid",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "add_zero",
                "deriv_pow''",
                "OfNat.ofNat",
                "AddCommMonoid.toAddCommSemigroup",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Nat.cast_one",
                "Mathlib.Meta.NormNum.isNat_pow",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "deriv_add",
                "MonoidWithZero.toMonoid",
                "true_and",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "MulZeroClass.toZero",
                "AddCommMagma.toAdd",
                "True.intro",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast",
                "NormedAddCommGroup.toENormedAddCommMonoid"
            ],
            "tactic": "norm_num",
            "proofState": 217,
            "pos": {
                "line": 399,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 * 5 + x ^ 4 + x ^ 3 * 2\n\u22a2 deriv (fun x => x ^ 5 * 5 + x ^ 4 + x ^ 3 * 2) 0 = 0 \u2227 deriv (deriv fun x => x ^ 5 * 5 + x ^ 4 + x ^ 3 * 2) 0 = 0",
            "endPos": {
                "line": 399,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 218,
            "pos": {
                "line": 402,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 4 - 2 * x ^ 3 - 170 * x ^ 2 + 944 * x) \u2192 deriv f 4 = 0 \u2227 deriv (deriv f) 4 < 0",
            "endPos": {
                "line": 402,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_sub, deriv_add, deriv_mul, deriv_pow, deriv_const, deriv_id'', deriv_pow, deriv_const, deriv_id'']",
            "proofState": 219,
            "pos": {
                "line": 403,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 4 - 2 * x ^ 3 - 170 * x ^ 2 + 944 * x\n\u22a2 deriv f 4 = 0 \u2227 deriv (deriv f) 4 < 0",
            "endPos": {
                "line": 404,
                "column": 39
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 220,
            "pos": {
                "line": 405,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 4 - 2 * x ^ 3 - 170 * x ^ 2 + 944 * x\n\u22a2 deriv (fun x => 2 * x ^ 4 - 2 * x ^ 3 - 170 * x ^ 2 + 944 * x) 4 = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 4 - 2 * x ^ 3 - 170 * x ^ 2 + 944 * x) 4 < 0",
            "endPos": {
                "line": 405,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 221,
            "pos": {
                "line": 406,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 4 - 2 * x ^ 3 - 170 * x ^ 2 + 944 * x\n\u22a2 deriv (fun x => 2 * x ^ 4 - 2 * x ^ 3 - 170 * x ^ 2 + 944 * x) 4 = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 4 - 2 * x ^ 3 - 170 * x ^ 2 + 944 * x) 4 < 0",
            "endPos": {
                "line": 406,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 222,
            "pos": {
                "line": 409,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 5 - 2 * x ^ 4 - x ^ 3 - 2996 * x ^ 2 + 18128 * x) \u2192 deriv f 4 = 0 \u2227 deriv (deriv f) 4 = 0",
            "endPos": {
                "line": 409,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "Eq.mp",
                "id",
                "CommMagma.toMul",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Real.instAdd",
                "Real.instMonoid",
                "funext",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "mul_comm",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_const, zero_mul, zero_add, zero_sub, mul_zero, mul_one, mul_neg, neg_mul, neg_neg, mul_comm,\n  mul_left_comm, mul_assoc]",
            "proofState": 223,
            "pos": {
                "line": 410,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 5 - 2 * x ^ 4 - x ^ 3 - 2996 * x ^ 2 + 18128 * x\n\u22a2 deriv f 4 = 0 \u2227 deriv (deriv f) 4 = 0",
            "endPos": {
                "line": 411,
                "column": 57
            }
        },
        {
            "usedConstants": [
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NegZeroClass.toNeg",
                "NormedCommRing.toSeminormedCommRing",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Real",
                "Mathlib.Meta.NormNum.instAddMonoidWithOne",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "deriv_const'",
                "Ring.toNonAssocRing",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "congrArg",
                "Mathlib.Meta.NormNum.IsNatPowT.run",
                "DifferentiableAt",
                "deriv",
                "deriv_sub",
                "Real.instSub",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "NormedField.toField",
                "Mathlib.Meta.NormNum.isNat_natSub",
                "Monoid.toNatPow",
                "Mathlib.Meta.NormNum.IsInt.neg_to_eq",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "id",
                "Distrib.toAdd",
                "Mathlib.Meta.NormNum.IsNatPowT.bit1",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "Int.ofNat",
                "Real.instAddGroup",
                "Mathlib.Meta.NormNum.IsNatPowT.bit0",
                "Real.instRing",
                "CommMagma.toMul",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Int",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Mathlib.Meta.NormNum.IsNatPowT.trans",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "NormedAddGroup.toAddGroup",
                "Mathlib.Meta.NormNum.isInt_sub",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_natCast",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "Nat.cast",
                "Field.toSemifield",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "Real.instAdd",
                "SubNegMonoid.toSub",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Add.0._proof_25",
                "instHAdd",
                "And",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "AddGroup.toSubNegMonoid",
                "HPow.hPow",
                "Real.normedCommRing",
                "neg_add_cancel",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "congrFun",
                "Mathlib.Meta.NormNum.IsInt.to_isNat",
                "Ring.toAddCommGroup",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "NormedAddCommGroup.toNormedAddGroup",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "AddZeroClass.toZero",
                "NormedRing.toSeminormedRing",
                "True",
                "eq_self",
                "Mathlib.Meta.NormNum.IsNat.to_eq",
                "Nat.pow",
                "eq_true",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "Mathlib.Meta.NormNum.isNat_mul",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "NontriviallyNormedField.toNormedField",
                "ENormedAddCommMonoid.toAddCommMonoid",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "AddCommSemigroup.toAddCommMagma",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "Nat.cast_zero",
                "AddMonoidWithOne.toAddMonoid",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "SubNegMonoid.toAddMonoid",
                "mul_one",
                "AddCommGroup.toDivisionAddCommMonoid",
                "Mathlib.Meta.NormNum.natPow_one",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "add_zero",
                "deriv_pow''",
                "OfNat.ofNat",
                "AddCommMonoid.toAddCommSemigroup",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Ring.toSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Nat.cast_one",
                "Mathlib.Meta.NormNum.isNat_pow",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "one_mul",
                "deriv_add",
                "MonoidWithZero.toMonoid",
                "true_and",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "MulZeroClass.toZero",
                "AddCommMagma.toAdd",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "True.intro",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast",
                "NormedAddCommGroup.toENormedAddCommMonoid"
            ],
            "tactic": "norm_num",
            "proofState": 224,
            "pos": {
                "line": 412,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 5 * 5 - x ^ 4 * 2 - x ^ 3 - x ^ 2 * 2996 + x * 18128\n\u22a2 deriv (fun x => x ^ 5 * 5 - x ^ 4 * 2 - x ^ 3 - x ^ 2 * 2996 + x * 18128) 4 = 0 \u2227\n    deriv (deriv fun x => x ^ 5 * 5 - x ^ 4 * 2 - x ^ 3 - x ^ 2 * 2996 + x * 18128) 4 = 0",
            "endPos": {
                "line": 412,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "constructor",
            "proofState": 225,
            "pos": {
                "line": 413,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 5 * 5 - x ^ 4 * 2 - x ^ 3 - x ^ 2 * 2996 + x * 18128\n\u22a2 deriv (deriv fun x => x ^ 5 * 5 - x ^ 4 * 2 - x ^ 3 - x ^ 2 * 2996 + x * 18128) 4 = 0",
            "endPos": {
                "line": 413,
                "column": 13
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 226,
            "pos": {
                "line": 417,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 2 - 20 * x) \u2192 deriv f 5 = 0 \u2227 deriv (deriv f) 5 > 0",
            "endPos": {
                "line": 417,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "pow_two",
                "Real.denselyNormedField",
                "Real.instZero",
                "Monoid.toMulOneClass",
                "Real.instRCLike",
                "MulOneClass.toMul",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "Eq.mp",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "funext",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_sub, deriv_const, deriv_mul, deriv_id'', deriv_pow, deriv_pow, pow_two, deriv_add, deriv_sub,\n  deriv_const, deriv_mul, deriv_id'', deriv_pow, deriv_pow, pow_two, deriv_add, deriv_sub, deriv_const, deriv_mul,\n  deriv_id'', deriv_pow, deriv_pow, pow_two]",
            "proofState": 227,
            "pos": {
                "line": 418,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 20 * x\n\u22a2 deriv f 5 = 0 \u2227 deriv (deriv f) 5 > 0",
            "endPos": {
                "line": 420,
                "column": 92
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Monoid.toMulOneClass",
                "Real.instRCLike",
                "MulOneClass.toMul",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 228,
            "pos": {
                "line": 421,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * (x * x) - 20 * x\n\u22a2 deriv (fun x => 2 * (x * x) - 20 * x) 5 = 0 \u2227 deriv (deriv fun x => 2 * (x * x) - 20 * x) 5 > 0",
            "endPos": {
                "line": 421,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 229,
            "pos": {
                "line": 422,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * (x * x) - 20 * x\n\u22a2 deriv (fun x => 2 * (x * x) - 20 * x) 5 = 0 \u2227 0 < deriv (deriv fun x => 2 * (x * x) - 20 * x) 5",
            "endPos": {
                "line": 422,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 230,
            "pos": {
                "line": 425,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 4 + 5 * x ^ 3 - 158 * x ^ 2 + 768 * x) \u2192 deriv f 4 = 0 \u2227 deriv (deriv f) 4 < 0",
            "endPos": {
                "line": 425,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "pow_two",
                "Real.denselyNormedField",
                "Real.instZero",
                "Monoid.toMulOneClass",
                "Real.instRCLike",
                "MulOneClass.toMul",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "Eq.mp",
                "pow_three",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "funext",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_add, deriv_pow, deriv_const, deriv_mul, deriv_id'', pow_one, pow_two, pow_three, mul_one, mul_zero,\n  add_zero, zero_add, mul_neg, mul_assoc]",
            "proofState": 231,
            "pos": {
                "line": 426,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 + 5 * x ^ 3 - 158 * x ^ 2 + 768 * x\n\u22a2 deriv f 4 = 0 \u2227 deriv (deriv f) 4 < 0",
            "endPos": {
                "line": 427,
                "column": 73
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 232,
            "pos": {
                "line": 428,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 + 5 * (x * (x * x)) - 158 * (x * x) + 768 * x\n\u22a2 deriv (fun x => x ^ 4 + 5 * (x * (x * x)) - 158 * (x * x) + 768 * x) 4 = 0 \u2227\n    deriv (deriv fun x => x ^ 4 + 5 * (x * (x * x)) - 158 * (x * x) + 768 * x) 4 < 0",
            "endPos": {
                "line": 428,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 233,
            "pos": {
                "line": 429,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 + 5 * (x * (x * x)) - 158 * (x * x) + 768 * x\n\u22a2 deriv (fun x => x ^ 4 + 5 * (x * (x * x)) - 158 * (x * x) + 768 * x) 4 = 0 \u2227\n    deriv (deriv fun x => x ^ 4 + 5 * (x * (x * x)) - 158 * (x * x) + 768 * x) 4 < 0",
            "endPos": {
                "line": 429,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 234,
            "pos": {
                "line": 430,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 + 5 * (x * (x * x)) - 158 * (x * x) + 768 * x\n\u22a2 deriv (fun x => x ^ 4 + 5 * (x * (x * x)) - 158 * (x * x) + 768 * x) 4 = 0 \u2227\n    deriv (deriv fun x => x ^ 4 + 5 * (x * (x * x)) - 158 * (x * x) + 768 * x) 4 < 0",
            "endPos": {
                "line": 430,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 235,
            "pos": {
                "line": 431,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 + 5 * (x * (x * x)) - 158 * (x * x) + 768 * x\n\u22a2 deriv (fun x => x ^ 4 + 5 * (x * (x * x)) - 158 * (x * x) + 768 * x) 4 = 0 \u2227\n    deriv (deriv fun x => x ^ 4 + 5 * (x * (x * x)) - 158 * (x * x) + 768 * x) 4 < 0",
            "endPos": {
                "line": 431,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 236,
            "pos": {
                "line": 432,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 + 5 * (x * (x * x)) - 158 * (x * x) + 768 * x\n\u22a2 deriv (fun x => x ^ 4 + 5 * (x * (x * x)) - 158 * (x * x) + 768 * x) 4 = 0 \u2227\n    deriv (deriv fun x => x ^ 4 + 5 * (x * (x * x)) - 158 * (x * x) + 768 * x) 4 < 0",
            "endPos": {
                "line": 432,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_pow_succ 4 3, deriv_pow_succ 3 2, deriv_pow_succ 2 1, deriv_pow_succ 1 0]",
            "proofState": 237,
            "pos": {
                "line": 433,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 + 5 * (x * (x * x)) - 158 * (x * x) + 768 * x\n\u22a2 deriv (fun x => x ^ 4 + 5 * (x * (x * x)) - 158 * (x * x) + 768 * x) 4 = 0 \u2227\n    deriv (deriv fun x => x ^ 4 + 5 * (x * (x * x)) - 158 * (x * x) + 768 * x) 4 < 0",
            "endPos": {
                "line": 433,
                "column": 91
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 238,
            "pos": {
                "line": 436,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 6 + 4 * x ^ 3 - 71 * x ^ 2 + 106 * x) \u2192 deriv f 1 = 0 \u2227 deriv (deriv f) 1 > 0",
            "endPos": {
                "line": 436,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [h]",
            "proofState": 239,
            "pos": {
                "line": 437,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 + 4 * x ^ 3 - 71 * x ^ 2 + 106 * x\n\u22a2 deriv f 1 = 0 \u2227 deriv (deriv f) 1 > 0",
            "endPos": {
                "line": 437,
                "column": 8
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 240,
            "pos": {
                "line": 438,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 + 4 * x ^ 3 - 71 * x ^ 2 + 106 * x\n\u22a2 deriv (fun x => 4 * x ^ 6 + 4 * x ^ 3 - 71 * x ^ 2 + 106 * x) 1 = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 6 + 4 * x ^ 3 - 71 * x ^ 2 + 106 * x) 1 > 0",
            "endPos": {
                "line": 438,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 241,
            "pos": {
                "line": 439,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 + 4 * x ^ 3 - 71 * x ^ 2 + 106 * x\n\u22a2 deriv (fun x => 4 * x ^ 6 + 4 * x ^ 3 - 71 * x ^ 2 + 106 * x) 1 = 0 \u2227\n    0 < deriv (deriv fun x => 4 * x ^ 6 + 4 * x ^ 3 - 71 * x ^ 2 + 106 * x) 1",
            "endPos": {
                "line": 439,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_add, deriv_mul, deriv_pow, deriv_const, deriv_id]",
            "proofState": 242,
            "pos": {
                "line": 440,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 + 4 * x ^ 3 - 71 * x ^ 2 + 106 * x\n\u22a2 deriv (fun x => 4 * x ^ 6 + 4 * x ^ 3 - 71 * x ^ 2 + 106 * x) 1 = 0",
            "endPos": {
                "line": 440,
                "column": 63
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_add, deriv_mul, deriv_pow, deriv_const, deriv_id]",
            "proofState": 243,
            "pos": {
                "line": 440,
                "column": 2
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 + 4 * x ^ 3 - 71 * x ^ 2 + 106 * x\n\u22a2 0 < deriv (deriv fun x => 4 * x ^ 6 + 4 * x ^ 3 - 71 * x ^ 2 + 106 * x) 1",
            "endPos": {
                "line": 440,
                "column": 63
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 244,
            "pos": {
                "line": 446,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 2 - 16 * x) \u2192 deriv f 4 = 0 \u2227 deriv (deriv f) 4 > 0",
            "endPos": {
                "line": 446,
                "column": 9
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp_all [deriv]",
            "proofState": 245,
            "pos": {
                "line": 447,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 16 * x\n\u22a2 deriv f 4 = 0 \u2227 deriv (deriv f) 4 > 0",
            "endPos": {
                "line": 447,
                "column": 18
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 246,
            "pos": {
                "line": 453,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 3 - 3 * x) \u2192 deriv f 1 = 0 \u2227 deriv (deriv f) 1 > 0",
            "endPos": {
                "line": 453,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_pow, deriv_sub, deriv_id'', deriv_const', deriv_mul, deriv_pow, deriv_sub, deriv_id'',\n  deriv_const', deriv_mul, deriv_pow, deriv_sub, deriv_id'', deriv_const', deriv_mul]",
            "proofState": 247,
            "pos": {
                "line": 454,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 3 - 3 * x\n\u22a2 deriv f 1 = 0 \u2227 deriv (deriv f) 1 > 0",
            "endPos": {
                "line": 455,
                "column": 99
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 248,
            "pos": {
                "line": 456,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 3 - 3 * x\n\u22a2 deriv (fun x => x ^ 3 - 3 * x) 1 = 0 \u2227 deriv (deriv fun x => x ^ 3 - 3 * x) 1 > 0",
            "endPos": {
                "line": 456,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 249,
            "pos": {
                "line": 457,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 3 - 3 * x\n\u22a2 deriv (fun x => x ^ 3 - 3 * x) 1 = 0 \u2227 0 < deriv (deriv fun x => x ^ 3 - 3 * x) 1",
            "endPos": {
                "line": 457,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 250,
            "pos": {
                "line": 460,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 4 - 2 * x ^ 3 + 2 * x) \u2192 deriv f 1 = 0 \u2227 deriv (deriv f) 1 = 0",
            "endPos": {
                "line": 460,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h]",
            "proofState": 251,
            "pos": {
                "line": 461,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 2 * x ^ 3 + 2 * x\n\u22a2 deriv f 1 = 0 \u2227 deriv (deriv f) 1 = 0",
            "endPos": {
                "line": 461,
                "column": 19
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 252,
            "pos": {
                "line": 462,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 2 * x ^ 3 + 2 * x\n\u22a2 deriv (fun x => x ^ 4 - 2 * x ^ 3 + 2 * x) 1 = 0 \u2227 deriv (deriv fun x => x ^ 4 - 2 * x ^ 3 + 2 * x) 1 = 0",
            "endPos": {
                "line": 462,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 253,
            "pos": {
                "line": 463,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 2 * x ^ 3 + 2 * x\n\u22a2 deriv (fun x => x ^ 4 - 2 * x ^ 3 + 2 * x) 1 = 0",
            "endPos": {
                "line": 463,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 254,
            "pos": {
                "line": 463,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 2 * x ^ 3 + 2 * x\n\u22a2 deriv (deriv fun x => x ^ 4 - 2 * x ^ 3 + 2 * x) 1 = 0",
            "endPos": {
                "line": 463,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 255,
            "pos": {
                "line": 464,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 2 * x ^ 3 + 2 * x\n\u22a2 deriv (fun x => x ^ 4 - 2 * x ^ 3 + 2 * x) 1 = 0",
            "endPos": {
                "line": 464,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 256,
            "pos": {
                "line": 464,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 2 * x ^ 3 + 2 * x\n\u22a2 deriv (deriv fun x => x ^ 4 - 2 * x ^ 3 + 2 * x) 1 = 0",
            "endPos": {
                "line": 464,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 257,
            "pos": {
                "line": 470,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 4 + x ^ 3 - 27 * x ^ 2 - 37 * x) \u2192 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) = 0",
            "endPos": {
                "line": 470,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [h]",
            "proofState": 258,
            "pos": {
                "line": 471,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 + x ^ 3 - 27 * x ^ 2 - 37 * x\n\u22a2 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) = 0",
            "endPos": {
                "line": 471,
                "column": 8
            }
        },
        {
            "usedConstants": [
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "CommMagma.toMul",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "funext",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "Real.instNeg",
                "mul_comm",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [deriv_add, deriv_sub, deriv_pow, deriv_const, deriv_mul, deriv_id'', zero_add, zero_sub, zero_mul, sub_zero,\n  mul_one, mul_zero, mul_assoc, mul_comm, mul_left_comm]",
            "proofState": 259,
            "pos": {
                "line": 472,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 + x ^ 3 - 27 * x ^ 2 - 37 * x\n\u22a2 deriv (fun x => 5 * x ^ 4 + x ^ 3 - 27 * x ^ 2 - 37 * x) (-1) = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 4 + x ^ 3 - 27 * x ^ 2 - 37 * x) (-1) = 0",
            "endPos": {
                "line": 473,
                "column": 78
            }
        },
        {
            "usedConstants": [
                "Mathlib.Meta.NormNum.isInt_pow",
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NegZeroClass.toNeg",
                "NormedCommRing.toSeminormedCommRing",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Real",
                "Mathlib.Meta.NormNum.instAddMonoidWithOne",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "deriv_const'",
                "Mathlib.Meta.NormNum.intPow_negOfNat_bit1",
                "Mathlib.Meta.NormNum.natPow_zero",
                "Ring.toNonAssocRing",
                "sub_self",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "congrArg",
                "DifferentiableAt",
                "deriv",
                "deriv_sub",
                "Real.instSub",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "Mathlib.Meta.NormNum.one_natPow",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "NormedField.toField",
                "Mathlib.Meta.NormNum.isNat_natSub",
                "Monoid.toNatPow",
                "Mathlib.Meta.NormNum.IsInt.neg_to_eq",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "Int.ofNat",
                "Real.instAddGroup",
                "Real.instRing",
                "CommMagma.toMul",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Int",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "SubtractionMonoid.toSubNegMonoid",
                "Mathlib.Meta.NormNum.isInt_mul",
                "Mathlib.Meta.NormNum.isInt_neg",
                "NormedAddGroup.toAddGroup",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_natCast",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "Nat.cast",
                "Field.toSemifield",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "Real.instAdd",
                "NonUnitalNonAssocRing.toHasDistribNeg",
                "Real.instOne",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Add.0._proof_1",
                "SubNegMonoid.toSub",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Add.0._proof_25",
                "instHAdd",
                "And",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "AddGroup.toSubNegMonoid",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "congrFun",
                "Mathlib.Meta.NormNum.IsInt.to_isNat",
                "Ring.toAddCommGroup",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "NormedAddCommGroup.toNormedAddGroup",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "AddZeroClass.toZero",
                "NormedRing.toSeminormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
                "True",
                "Real.instNeg",
                "eq_self",
                "Mathlib.Meta.NormNum.IsNat.to_eq",
                "Mathlib.Meta.NormNum.intPow_negOfNat_bit0",
                "eq_true",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "Mathlib.Meta.NormNum.isNat_mul",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "Mathlib.Meta.NormNum.isInt_add",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "NontriviallyNormedField.toNormedField",
                "neg_mul",
                "ENormedAddCommMonoid.toAddCommMonoid",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "AddCommSemigroup.toAddCommMagma",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "Nat.cast_zero",
                "AddMonoidWithOne.toAddMonoid",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "HasDistribNeg.toInvolutiveNeg",
                "SubNegMonoid.toAddMonoid",
                "mul_one",
                "AddCommGroup.toDivisionAddCommMonoid",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "InvolutiveNeg.toNeg",
                "add_zero",
                "deriv_pow''",
                "OfNat.ofNat",
                "AddCommMonoid.toAddCommSemigroup",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "AddZeroClass.toAdd",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Ring.toSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Nat.cast_one",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "one_mul",
                "deriv_add",
                "sub_neg_eq_add",
                "MonoidWithZero.toMonoid",
                "true_and",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "MulZeroClass.toZero",
                "AddCommMagma.toAdd",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "True.intro",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast",
                "NormedAddCommGroup.toENormedAddCommMonoid"
            ],
            "tactic": "norm_num",
            "proofState": 260,
            "pos": {
                "line": 474,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 + x ^ 3 - 27 * x ^ 2 - 37 * x\n\u22a2 deriv (fun x => x ^ 4 * 5 + x ^ 3 - x ^ 2 * 27 - x * 37) (-1) = 0 \u2227\n    deriv (deriv fun x => x ^ 4 * 5 + x ^ 3 - x ^ 2 * 27 - x * 37) (-1) = 0",
            "endPos": {
                "line": 474,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 261,
            "pos": {
                "line": 477,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 2 - 8 * x) \u2192 deriv f 4 = 0 \u2227 deriv (deriv f) 4 > 0",
            "endPos": {
                "line": 477,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [h]",
            "proofState": 262,
            "pos": {
                "line": 478,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 - 8 * x\n\u22a2 deriv f 4 = 0 \u2227 deriv (deriv f) 4 > 0",
            "endPos": {
                "line": 478,
                "column": 8
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 263,
            "pos": {
                "line": 479,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 - 8 * x\n\u22a2 deriv (fun x => x ^ 2 - 8 * x) 4 = 0 \u2227 deriv (deriv fun x => x ^ 2 - 8 * x) 4 > 0",
            "endPos": {
                "line": 479,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_pow]",
            "proofState": 264,
            "pos": {
                "line": 480,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 - 8 * x\n\u22a2 deriv (fun x => x ^ 2 - 8 * x) 4 = 0\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 - 8 * x\n\u22a2 deriv (deriv fun x => x ^ 2 - 8 * x) 4 > 0",
            "endPos": {
                "line": 480,
                "column": 18
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 265,
            "pos": {
                "line": 486,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 4 - 2 * x ^ 3 - 180 * x ^ 2 + 1512 * x) \u2192 deriv f 6 = 0 \u2227 deriv (deriv f) 6 = 0",
            "endPos": {
                "line": 486,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [hf]",
            "proofState": 266,
            "pos": {
                "line": 487,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 - 2 * x ^ 3 - 180 * x ^ 2 + 1512 * x\n\u22a2 deriv f 6 = 0 \u2227 deriv (deriv f) 6 = 0",
            "endPos": {
                "line": 487,
                "column": 9
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp only [deriv_pow, deriv_add, deriv_sub, deriv_const, deriv_mul, deriv_id, deriv_pow, deriv_add, deriv_sub,\n  deriv_const, deriv_mul, deriv_id, deriv_pow, deriv_add, deriv_sub, deriv_const, deriv_mul, deriv_id, deriv_pow,\n  deriv_add, deriv_sub, deriv_const, deriv_mul, deriv_id, deriv_pow, deriv_add, deriv_sub, deriv_const, deriv_mul,\n  deriv_id]",
            "proofState": 267,
            "pos": {
                "line": 488,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 - 2 * x ^ 3 - 180 * x ^ 2 + 1512 * x\n\u22a2 deriv (fun x => x ^ 4 - 2 * x ^ 3 - 180 * x ^ 2 + 1512 * x) 6 = 0 \u2227\n    deriv (deriv fun x => x ^ 4 - 2 * x ^ 3 - 180 * x ^ 2 + 1512 * x) 6 = 0",
            "endPos": {
                "line": 491,
                "column": 80
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 268,
            "pos": {
                "line": 495,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 6 - x ^ 5 + x ^ 4 + 3 * x ^ 3 - 1164 * x ^ 2 + 3708 * x) \u2192 deriv f 2 = 0 \u2227 deriv (deriv f) 2 < 0",
            "endPos": {
                "line": 495,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [h, deriv_sub, deriv_add, deriv_pow, deriv_const, deriv_mul, deriv_id'', zero_sub, zero_add, zero_mul,\n  sub_zero, mul_one]",
            "proofState": 269,
            "pos": {
                "line": 496,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - x ^ 5 + x ^ 4 + 3 * x ^ 3 - 1164 * x ^ 2 + 3708 * x\n\u22a2 deriv f 2 = 0 \u2227 deriv (deriv f) 2 < 0",
            "endPos": {
                "line": 497,
                "column": 52
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 270,
            "pos": {
                "line": 498,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - x ^ 5 + x ^ 4 + 3 * x ^ 3 - 1164 * x ^ 2 + 3708 * x\n\u22a2 deriv (fun x => 5 * x ^ 6 - x ^ 5 + x ^ 4 + 3 * x ^ 3 - 1164 * x ^ 2 + 3708 * x) 2 = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 6 - x ^ 5 + x ^ 4 + 3 * x ^ 3 - 1164 * x ^ 2 + 3708 * x) 2 < 0",
            "endPos": {
                "line": 498,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [h]",
            "proofState": 271,
            "pos": {
                "line": 499,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - x ^ 5 + x ^ 4 + 3 * x ^ 3 - 1164 * x ^ 2 + 3708 * x\n\u22a2 deriv (fun x => 5 * x ^ 6 - x ^ 5 + x ^ 4 + 3 * x ^ 3 - 1164 * x ^ 2 + 3708 * x) 2 = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 6 - x ^ 5 + x ^ 4 + 3 * x ^ 3 - 1164 * x ^ 2 + 3708 * x) 2 < 0",
            "endPos": {
                "line": 499,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 272,
            "pos": {
                "line": 504,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 2 + 18 * x) \u2192 deriv f (-3) = 0 \u2227 deriv (deriv f) (-3) > 0",
            "endPos": {
                "line": 504,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [h]",
            "proofState": 273,
            "pos": {
                "line": 505,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 + 18 * x\n\u22a2 deriv f (-3) = 0 \u2227 deriv (deriv f) (-3) > 0",
            "endPos": {
                "line": 505,
                "column": 15
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 274,
            "pos": {
                "line": 506,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 + 18 * x\n\u22a2 deriv (fun x => 3 * x ^ 2 + 18 * x) (-3) = 0 \u2227 deriv (deriv fun x => 3 * x ^ 2 + 18 * x) (-3) > 0",
            "endPos": {
                "line": 506,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 275,
            "pos": {
                "line": 507,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 + 18 * x\n\u22a2 deriv (fun x => 3 * x ^ 2 + 18 * x) (-3) = 0",
            "endPos": {
                "line": 507,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 276,
            "pos": {
                "line": 507,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 + 18 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 2 + 18 * x) (-3) > 0",
            "endPos": {
                "line": 507,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_sq_pos_of_deriv_pos (by norm_num : (fun x : \u211d => 3 * x ^ 2 + 18 * x) = fun x : \u211d => 3 * x ^ 2 + 18 * x)]",
            "proofState": 277,
            "pos": {
                "line": 508,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 + 18 * x\n\u22a2 deriv (fun x => 3 * x ^ 2 + 18 * x) (-3) = 0",
            "endPos": {
                "line": 508,
                "column": 122
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_sq_pos_of_deriv_pos (by norm_num : (fun x : \u211d => 3 * x ^ 2 + 18 * x) = fun x : \u211d => 3 * x ^ 2 + 18 * x)]",
            "proofState": 278,
            "pos": {
                "line": 508,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 + 18 * x\n\u22a2 0 < deriv (deriv fun x => 3 * x ^ 2 + 18 * x) (-3)",
            "endPos": {
                "line": 508,
                "column": 122
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 279,
            "pos": {
                "line": 511,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 4 - x ^ 3 - 397 * x ^ 2 - 2104 * x) \u2192 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) < 0",
            "endPos": {
                "line": 511,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [h]",
            "proofState": 280,
            "pos": {
                "line": 512,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 - x ^ 3 - 397 * x ^ 2 - 2104 * x\n\u22a2 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) < 0",
            "endPos": {
                "line": 512,
                "column": 15
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 281,
            "pos": {
                "line": 513,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 - x ^ 3 - 397 * x ^ 2 - 2104 * x\n\u22a2 deriv (fun x => 4 * x ^ 4 - x ^ 3 - 397 * x ^ 2 - 2104 * x) (-4) = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 4 - x ^ 3 - 397 * x ^ 2 - 2104 * x) (-4) < 0",
            "endPos": {
                "line": 513,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 282,
            "pos": {
                "line": 514,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 - x ^ 3 - 397 * x ^ 2 - 2104 * x\n\u22a2 deriv (fun x => 4 * x ^ 4 - x ^ 3 - 397 * x ^ 2 - 2104 * x) (-4) = 0",
            "endPos": {
                "line": 514,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 283,
            "pos": {
                "line": 514,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 - x ^ 3 - 397 * x ^ 2 - 2104 * x\n\u22a2 deriv (deriv fun x => 4 * x ^ 4 - x ^ 3 - 397 * x ^ 2 - 2104 * x) (-4) < 0",
            "endPos": {
                "line": 514,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 284,
            "pos": {
                "line": 515,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 - x ^ 3 - 397 * x ^ 2 - 2104 * x\n\u22a2 deriv (fun x => 4 * x ^ 4 - x ^ 3 - 397 * x ^ 2 - 2104 * x) (-4) = 0",
            "endPos": {
                "line": 515,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 285,
            "pos": {
                "line": 515,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 - x ^ 3 - 397 * x ^ 2 - 2104 * x\n\u22a2 deriv (deriv fun x => 4 * x ^ 4 - x ^ 3 - 397 * x ^ 2 - 2104 * x) (-4) < 0",
            "endPos": {
                "line": 515,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 286,
            "pos": {
                "line": 548,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 6 - x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 - 59958 * x ^ 2 - 575316 * x) \u2192\n    deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) = 0",
            "endPos": {
                "line": 548,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all",
            "proofState": 287,
            "pos": {
                "line": 549,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 - x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 - 59958 * x ^ 2 - 575316 * x\n\u22a2 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) = 0",
            "endPos": {
                "line": 549,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 288,
            "pos": {
                "line": 550,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 - x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 - 59958 * x ^ 2 - 575316 * x\n\u22a2 deriv (fun x => 3 * x ^ 6 - x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 - 59958 * x ^ 2 - 575316 * x) (-6) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 6 - x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 - 59958 * x ^ 2 - 575316 * x) (-6) = 0",
            "endPos": {
                "line": 550,
                "column": 13
            }
        },
        {
            "usedConstants": [
                "sorryAx",
                "instOfNatNat",
                "Lean.Name.num",
                "Lean.Name.str",
                "Lean.Name.anonymous",
                "Bool.true",
                "Nat",
                "Lean.Name",
                "OfNat.ofNat"
            ],
            "tactic": "all_goals\n  norm_num\n  linarith [deriv_const' 0, deriv_const' 1, deriv_const' 2, deriv_const' 3, deriv_const' 4, deriv_const' 5]",
            "proofState": 289,
            "pos": {
                "line": 551,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 - x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 - 59958 * x ^ 2 - 575316 * x\n\u22a2 deriv (fun x => 3 * x ^ 6 - x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 - 59958 * x ^ 2 - 575316 * x) (-6) = 0\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 - x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 - 59958 * x ^ 2 - 575316 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 6 - x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 - 59958 * x ^ 2 - 575316 * x) (-6) = 0",
            "endPos": {
                "line": 553,
                "column": 109
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 290,
            "pos": {
                "line": 552,
                "column": 4
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 - x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 - 59958 * x ^ 2 - 575316 * x\n\u22a2 deriv (fun x => 3 * x ^ 6 - x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 - 59958 * x ^ 2 - 575316 * x) (-6) = 0",
            "endPos": {
                "line": 552,
                "column": 12
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_const' 0, deriv_const' 1, deriv_const' 2, deriv_const' 3, deriv_const' 4, deriv_const' 5]",
            "proofState": 291,
            "pos": {
                "line": 553,
                "column": 4
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 - x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 - 59958 * x ^ 2 - 575316 * x\n\u22a2 deriv (fun x => 3 * x ^ 6 - x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 - 59958 * x ^ 2 - 575316 * x) (-6) = 0",
            "endPos": {
                "line": 553,
                "column": 109
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 292,
            "pos": {
                "line": 552,
                "column": 4
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 - x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 - 59958 * x ^ 2 - 575316 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 6 - x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 - 59958 * x ^ 2 - 575316 * x) (-6) = 0",
            "endPos": {
                "line": 552,
                "column": 12
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_const' 0, deriv_const' 1, deriv_const' 2, deriv_const' 3, deriv_const' 4, deriv_const' 5]",
            "proofState": 293,
            "pos": {
                "line": 553,
                "column": 4
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 - x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 - 59958 * x ^ 2 - 575316 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 6 - x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 - 59958 * x ^ 2 - 575316 * x) (-6) = 0",
            "endPos": {
                "line": 553,
                "column": 109
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 294,
            "pos": {
                "line": 556,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 5 - 4 * x ^ 4 - 2 * x ^ 3 - 2 * x ^ 2 + 11 * x) \u2192 deriv f 1 = 0 \u2227 deriv (deriv f) 1 < 0",
            "endPos": {
                "line": 556,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [h, deriv_sub, deriv_add, deriv_const, deriv_mul, deriv_pow, one_mul, Nat.cast_one, sub_zero, zero_add]",
            "proofState": 295,
            "pos": {
                "line": 557,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 5 - 4 * x ^ 4 - 2 * x ^ 3 - 2 * x ^ 2 + 11 * x\n\u22a2 deriv f 1 = 0 \u2227 deriv (deriv f) 1 < 0",
            "endPos": {
                "line": 558,
                "column": 23
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 296,
            "pos": {
                "line": 559,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 5 - 4 * x ^ 4 - 2 * x ^ 3 - 2 * x ^ 2 + 11 * x\n\u22a2 deriv (fun x => 3 * x ^ 5 - 4 * x ^ 4 - 2 * x ^ 3 - 2 * x ^ 2 + 11 * x) 1 = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 5 - 4 * x ^ 4 - 2 * x ^ 3 - 2 * x ^ 2 + 11 * x) 1 < 0",
            "endPos": {
                "line": 559,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_sub (deriv_pow' 5 1) (deriv_pow' 4 1), deriv_sub (deriv_pow' 3 1) (deriv_pow' 2 1)]",
            "proofState": 297,
            "pos": {
                "line": 560,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 5 - 4 * x ^ 4 - 2 * x ^ 3 - 2 * x ^ 2 + 11 * x\n\u22a2 deriv (fun x => 3 * x ^ 5 - 4 * x ^ 4 - 2 * x ^ 3 - 2 * x ^ 2 + 11 * x) 1 = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 5 - 4 * x ^ 4 - 2 * x ^ 3 - 2 * x ^ 2 + 11 * x) 1 < 0",
            "endPos": {
                "line": 561,
                "column": 48
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 298,
            "pos": {
                "line": 564,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 6 - 1200 * x ^ 2 + 3840 * x) \u2192 deriv f 2 = 0 \u2227 deriv (deriv f) 2 = 0",
            "endPos": {
                "line": 564,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_const', deriv_add', deriv_sub', deriv_mul', deriv_pow', deriv_id'', deriv_const, zero_mul,\n  zero_sub, zero_add, mul_one, sub_zero, mul_zero, sub_neg_eq_add]",
            "proofState": 299,
            "pos": {
                "line": 565,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 6 - 1200 * x ^ 2 + 3840 * x\n\u22a2 deriv f 2 = 0 \u2227 deriv (deriv f) 2 = 0",
            "endPos": {
                "line": 566,
                "column": 91
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 300,
            "pos": {
                "line": 567,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 6 - 1200 * x ^ 2 + 3840 * x\n\u22a2 deriv (fun x => 5 * x ^ 6 - 1200 * x ^ 2 + 3840 * x) 2 = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 6 - 1200 * x ^ 2 + 3840 * x) 2 = 0",
            "endPos": {
                "line": 567,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 301,
            "pos": {
                "line": 568,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 6 - 1200 * x ^ 2 + 3840 * x\n\u22a2 deriv (fun x => 5 * x ^ 6 - 1200 * x ^ 2 + 3840 * x) 2 = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 6 - 1200 * x ^ 2 + 3840 * x) 2 = 0",
            "endPos": {
                "line": 568,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "HPow.hPow",
                "Nat",
                "instHPow",
                "OfNat.ofNat",
                "Eq"
            ],
            "tactic": "intro h",
            "proofState": 302,
            "pos": {
                "line": 571,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 2) \u2192 deriv f 0 = 0 \u2227 deriv (deriv f) 0 > 0",
            "endPos": {
                "line": 571,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "DifferentiableAt",
                "deriv",
                "NormedSpace.toModule",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "NormedField.toField",
                "Monoid.toNatPow",
                "Real.semiring",
                "id",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.cast",
                "Field.toSemifield",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "funext",
                "GT.gt",
                "And",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "congrFun",
                "pow_one",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "congr",
                "LT.lt",
                "True",
                "eq_self",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "NormedAddCommGroup.toAddCommGroup",
                "NontriviallyNormedField.toNormedField",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "mul_one",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "deriv_pow''",
                "OfNat.ofNat",
                "deriv_pow'",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "UniformSpace.toTopologicalSpace",
                "Semiring.toNonAssocSemiring",
                "Eq",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "MonoidWithZero.toMonoid",
                "true_and",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "MulZeroClass.toZero",
                "Semiring.toMonoidWithZero",
                "instHMul"
            ],
            "tactic": "simp_all",
            "proofState": 303,
            "pos": {
                "line": 572,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2\n\u22a2 deriv f 0 = 0 \u2227 deriv (deriv f) 0 > 0",
            "endPos": {
                "line": 572,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Unit.unit",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "deriv",
                "NormedSpace.toModule",
                "AddGroupWithOne.toAddMonoidWithOne",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "sorryAx",
                "AddMonoidWithOne.toNatCast",
                "instOfNatNat",
                "Lean.Name.num",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Lean.Name.str",
                "Lean.Name.anonymous",
                "Bool.true",
                "Unit",
                "instNatAtLeastTwo",
                "Real.normedCommRing",
                "Distrib.toMul",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Function.const",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Lean.Name",
                "Zero.toOfNat0",
                "NontriviallyNormedField.toNormedField",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul"
            ],
            "tactic": "exact \u27e8by simp [deriv], by simp [deriv]\u27e9",
            "proofState": 304,
            "pos": {
                "line": 573,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2\n\u22a2 0 < deriv (fun x => 2 * x) 0",
            "endPos": {
                "line": 573,
                "column": 42
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 305,
            "pos": {
                "line": 576,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 5 + x ^ 4 + 5 * x ^ 3 - 38 * x ^ 2 + 47 * x) \u2192 deriv f 1 = 0 \u2227 deriv (deriv f) 1 > 0",
            "endPos": {
                "line": 576,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [hf]",
            "proofState": 306,
            "pos": {
                "line": 577,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 5 + x ^ 4 + 5 * x ^ 3 - 38 * x ^ 2 + 47 * x\n\u22a2 deriv f 1 = 0 \u2227 deriv (deriv f) 1 > 0",
            "endPos": {
                "line": 577,
                "column": 16
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 307,
            "pos": {
                "line": 578,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 5 + x ^ 4 + 5 * x ^ 3 - 38 * x ^ 2 + 47 * x\n\u22a2 deriv (fun x => 2 * x ^ 5 + x ^ 4 + 5 * x ^ 3 - 38 * x ^ 2 + 47 * x) 1 = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 5 + x ^ 4 + 5 * x ^ 3 - 38 * x ^ 2 + 47 * x) 1 > 0",
            "endPos": {
                "line": 578,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 308,
            "pos": {
                "line": 579,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 5 + x ^ 4 + 5 * x ^ 3 - 38 * x ^ 2 + 47 * x\n\u22a2 deriv (fun x => 2 * x ^ 5 + x ^ 4 + 5 * x ^ 3 - 38 * x ^ 2 + 47 * x) 1 = 0",
            "endPos": {
                "line": 579,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 309,
            "pos": {
                "line": 579,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 5 + x ^ 4 + 5 * x ^ 3 - 38 * x ^ 2 + 47 * x\n\u22a2 deriv (deriv fun x => 2 * x ^ 5 + x ^ 4 + 5 * x ^ 3 - 38 * x ^ 2 + 47 * x) 1 > 0",
            "endPos": {
                "line": 579,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NegZeroClass.toNeg",
                "NormedCommRing.toSeminormedCommRing",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "Mathlib.Tactic.Ring.single_pow",
                "Mathlib.Tactic.RingNF.add_assoc_rev",
                "Real",
                "Mathlib.Tactic.RingNF.mul_neg",
                "HMul.hMul",
                "Nat.rawCast",
                "Ring.toNonAssocRing",
                "Mathlib.Tactic.Ring.mul_zero",
                "Mathlib.Tactic.Ring.mul_pf_left",
                "Real.denselyNormedField",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "AddGroupWithOne.toAddGroup",
                "Mathlib.Tactic.Ring.add_pf_add_gt",
                "congrArg",
                "CommSemiring.toSemiring",
                "Mathlib.Tactic.Ring.mul_pow",
                "deriv",
                "Mathlib.Tactic.Ring.neg_zero",
                "Real.instSub",
                "Mathlib.Tactic.Ring.mul_pf_right",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "Int.rawCast",
                "Mathlib.Tactic.Ring.one_mul",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Mathlib.Tactic.Ring.zero_mul",
                "Mathlib.Meta.NormNum.IsNat.of_raw",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "Mathlib.Tactic.Ring.instCommSemiringNat",
                "Monoid.toNatPow",
                "Real.semiring",
                "Mathlib.Tactic.Ring.neg_mul",
                "Mathlib.Tactic.Ring.sub_pf",
                "Mathlib.Tactic.Ring.neg_add",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Int.ofNat",
                "Real.instRing",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Int",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Mathlib.Tactic.Ring.sub_congr",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "Mathlib.Meta.NormNum.isInt_mul",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "Mathlib.Tactic.Ring.one_pow",
                "Nat.instAddMonoidWithOne",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "Mathlib.Tactic.Ring.mul_congr",
                "MulZeroOneClass.toMulOneClass",
                "Real.instAdd",
                "SubNegMonoid.toSub",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "funext",
                "Mathlib.Tactic.Ring.add_mul",
                "instHAdd",
                "Mathlib.Tactic.Ring.add_pf_add_zero",
                "instHSub",
                "Mathlib.Tactic.RingNF.add_neg",
                "instNatAtLeastTwo",
                "AddGroup.toSubNegMonoid",
                "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "HAdd.hAdd",
                "pow_one",
                "NonAssocSemiring.toNonUnitalNonAssocSemiring",
                "Ring.toAddCommGroup",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Mathlib.Tactic.Ring.pow_add",
                "Nat",
                "Real.instMul",
                "Mathlib.Tactic.Ring.mul_one",
                "congr",
                "AddZeroClass.toZero",
                "Nat.instCommSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "Eq.refl",
                "Mathlib.Meta.NormNum.IsInt.of_raw",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "Mathlib.Tactic.Ring.cast_pos",
                "Mathlib.Tactic.RingNF.nat_rawCast_1",
                "mul_one",
                "Mathlib.Tactic.Ring.atom_pf",
                "AddCommGroup.toDivisionAddCommMonoid",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "add_zero",
                "OfNat.ofNat",
                "Mathlib.Tactic.RingNF.int_rawCast_neg",
                "AddZeroClass.toAdd",
                "UniformSpace.toTopologicalSpace",
                "Semiring.toNonAssocSemiring",
                "Eq",
                "Mathlib.Tactic.Ring.neg_one_mul",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "MonoidWithZero.toMonoid",
                "Mathlib.Tactic.Ring.mul_add",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "MulZeroClass.toZero",
                "Mathlib.Tactic.Ring.add_congr",
                "Real.instCommSemiring",
                "Mathlib.Tactic.Ring.pow_congr",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "Mathlib.Tactic.Ring.pow_zero",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "ring_nf",
            "proofState": 310,
            "pos": {
                "line": 580,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 5 + x ^ 4 + 5 * x ^ 3 - 38 * x ^ 2 + 47 * x\n\u22a2 deriv (fun x => 2 * x ^ 5 + x ^ 4 + 5 * x ^ 3 - 38 * x ^ 2 + 47 * x) 1 = 0",
            "endPos": {
                "line": 580,
                "column": 13
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NegZeroClass.toNeg",
                "NormedCommRing.toSeminormedCommRing",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "Mathlib.Tactic.Ring.single_pow",
                "Mathlib.Tactic.RingNF.add_assoc_rev",
                "Real",
                "Mathlib.Tactic.RingNF.mul_neg",
                "HMul.hMul",
                "Nat.rawCast",
                "Ring.toNonAssocRing",
                "Mathlib.Tactic.Ring.mul_zero",
                "Mathlib.Tactic.Ring.mul_pf_left",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "AddGroupWithOne.toAddGroup",
                "Mathlib.Tactic.Ring.add_pf_add_gt",
                "congrArg",
                "CommSemiring.toSemiring",
                "Mathlib.Tactic.Ring.mul_pow",
                "deriv",
                "Mathlib.Tactic.Ring.neg_zero",
                "Real.instSub",
                "Mathlib.Tactic.Ring.mul_pf_right",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "Int.rawCast",
                "Mathlib.Tactic.Ring.one_mul",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Mathlib.Tactic.Ring.zero_mul",
                "Mathlib.Meta.NormNum.IsNat.of_raw",
                "Real.instLT",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "Mathlib.Tactic.Ring.instCommSemiringNat",
                "Monoid.toNatPow",
                "Real.semiring",
                "Mathlib.Tactic.Ring.neg_mul",
                "Mathlib.Tactic.Ring.sub_pf",
                "Mathlib.Tactic.Ring.neg_add",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Int.ofNat",
                "Real.instRing",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Int",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Mathlib.Tactic.Ring.sub_congr",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "Mathlib.Meta.NormNum.isInt_mul",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "Mathlib.Tactic.Ring.one_pow",
                "Nat.instAddMonoidWithOne",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "Mathlib.Tactic.Ring.mul_congr",
                "MulZeroOneClass.toMulOneClass",
                "Real.instAdd",
                "Real.instOne",
                "SubNegMonoid.toSub",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "funext",
                "Mathlib.Tactic.Ring.add_mul",
                "instHAdd",
                "Mathlib.Tactic.Ring.add_pf_add_zero",
                "instHSub",
                "Mathlib.Tactic.RingNF.add_neg",
                "instNatAtLeastTwo",
                "AddGroup.toSubNegMonoid",
                "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "HAdd.hAdd",
                "pow_one",
                "NonAssocSemiring.toNonUnitalNonAssocSemiring",
                "Ring.toAddCommGroup",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Mathlib.Tactic.Ring.pow_add",
                "Nat",
                "Real.instMul",
                "Mathlib.Tactic.Ring.mul_one",
                "congr",
                "AddZeroClass.toZero",
                "LT.lt",
                "Nat.instCommSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "Eq.refl",
                "Mathlib.Meta.NormNum.IsInt.of_raw",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "Mathlib.Tactic.Ring.cast_pos",
                "Mathlib.Tactic.RingNF.nat_rawCast_1",
                "mul_one",
                "Mathlib.Tactic.Ring.atom_pf",
                "AddCommGroup.toDivisionAddCommMonoid",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "add_zero",
                "OfNat.ofNat",
                "Mathlib.Tactic.RingNF.int_rawCast_neg",
                "AddZeroClass.toAdd",
                "UniformSpace.toTopologicalSpace",
                "Semiring.toNonAssocSemiring",
                "Eq",
                "Mathlib.Tactic.Ring.neg_one_mul",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "MonoidWithZero.toMonoid",
                "Mathlib.Tactic.Ring.mul_add",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "MulZeroClass.toZero",
                "Mathlib.Tactic.Ring.add_congr",
                "Real.instCommSemiring",
                "Mathlib.Tactic.Ring.pow_congr",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "Mathlib.Tactic.Ring.pow_zero",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "ring_nf",
            "proofState": 311,
            "pos": {
                "line": 580,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 5 + x ^ 4 + 5 * x ^ 3 - 38 * x ^ 2 + 47 * x\n\u22a2 0 < deriv (deriv fun x => 2 * x ^ 5 + x ^ 4 + 5 * x ^ 3 - 38 * x ^ 2 + 47 * x) 1",
            "endPos": {
                "line": 580,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_one_pow 5, deriv_one_pow 4, deriv_one_pow 3, deriv_one_pow 2]",
            "proofState": 312,
            "pos": {
                "line": 581,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 5 + x ^ 4 + 5 * x ^ 3 - 38 * x ^ 2 + 47 * x\n\u22a2 deriv (fun x => x * 47 - x ^ 2 * 38 + x ^ 3 * 5 + x ^ 4 + x ^ 5 * 2) 1 = 0",
            "endPos": {
                "line": 581,
                "column": 83
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_one_pow 5, deriv_one_pow 4, deriv_one_pow 3, deriv_one_pow 2]",
            "proofState": 313,
            "pos": {
                "line": 581,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 5 + x ^ 4 + 5 * x ^ 3 - 38 * x ^ 2 + 47 * x\n\u22a2 0 < deriv (deriv fun x => x * 47 - x ^ 2 * 38 + x ^ 3 * 5 + x ^ 4 + x ^ 5 * 2) 1",
            "endPos": {
                "line": 581,
                "column": 83
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 314,
            "pos": {
                "line": 584,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 3 + 8 * x ^ 2 + 7 * x) \u2192 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) < 0",
            "endPos": {
                "line": 584,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "pow_two",
                "Real.denselyNormedField",
                "Real.instZero",
                "Monoid.toMulOneClass",
                "Real.instRCLike",
                "MulOneClass.toMul",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "Eq.mp",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "funext",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_add, deriv_const, deriv_mul, deriv_pow, one_mul, zero_mul, zero_add, deriv_id'', deriv_pow,\n  pow_one, pow_two, deriv_add, deriv_mul, deriv_pow, one_mul, zero_mul, zero_add, deriv_id'', deriv_pow, pow_one,\n  pow_two]",
            "proofState": 315,
            "pos": {
                "line": 585,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 + 8 * x ^ 2 + 7 * x\n\u22a2 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) < 0",
            "endPos": {
                "line": 587,
                "column": 64
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 316,
            "pos": {
                "line": 588,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 + 8 * (x * x) + 7 * x\n\u22a2 deriv (fun x => 3 * x ^ 3 + 8 * (x * x) + 7 * x) (-1) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 3 + 8 * (x * x) + 7 * x) (-1) < 0",
            "endPos": {
                "line": 588,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_mul (fun x => x + 1) (fun x => x + 1)]",
            "proofState": 317,
            "pos": {
                "line": 589,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 + 8 * (x * x) + 7 * x\n\u22a2 deriv (fun x => 3 * x ^ 3 + 8 * (x * x) + 7 * x) (-1) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 3 + 8 * (x * x) + 7 * x) (-1) < 0",
            "endPos": {
                "line": 589,
                "column": 60
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 318,
            "pos": {
                "line": 592,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 6 - 5 * x ^ 5 - 5 * x ^ 4 - 3 * x ^ 3 + 2 * x ^ 2) \u2192 deriv f 0 = 0 \u2227 deriv (deriv f) 0 > 0",
            "endPos": {
                "line": 592,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp [h]",
            "proofState": 319,
            "pos": {
                "line": 593,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 - 5 * x ^ 5 - 5 * x ^ 4 - 3 * x ^ 3 + 2 * x ^ 2\n\u22a2 deriv f 0 = 0 \u2227 deriv (deriv f) 0 > 0",
            "endPos": {
                "line": 593,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "deriv_const'",
                "Ring.toNonAssocRing",
                "sub_self",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "congrArg",
                "DifferentiableAt",
                "deriv",
                "deriv_sub",
                "Real.instSub",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "NormedField.toField",
                "Mathlib.Meta.NormNum.isNat_natSub",
                "Monoid.toNatPow",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "Real.instAddGroup",
                "Real.instRing",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "NormedAddGroup.toAddGroup",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_natCast",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "Nat.cast",
                "Field.toSemifield",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "Mathlib.Meta.NormNum.zero_natPow",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "Real.instAdd",
                "SubNegMonoid.toSub",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Add.0._proof_25",
                "instHAdd",
                "And",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "AddGroup.toSubNegMonoid",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "congrFun",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "NormedAddCommGroup.toNormedAddGroup",
                "Real.instMul",
                "congr",
                "AddZeroClass.toZero",
                "NormedRing.toSeminormedRing",
                "LT.lt",
                "True",
                "eq_self",
                "Mathlib.Meta.NormNum.IsNat.to_eq",
                "eq_true",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "Mathlib.Meta.NormNum.isNat_mul",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "NontriviallyNormedField.toNormedField",
                "ENormedAddCommMonoid.toAddCommMonoid",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "AddCommSemigroup.toAddCommMagma",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "Nat.cast_zero",
                "AddMonoidWithOne.toAddMonoid",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "SubNegMonoid.toAddMonoid",
                "mul_one",
                "AddCommGroup.toDivisionAddCommMonoid",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "add_zero",
                "deriv_pow''",
                "OfNat.ofNat",
                "AddCommMonoid.toAddCommSemigroup",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Nat.cast_one",
                "Mathlib.Meta.NormNum.isNat_pow",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "deriv_add",
                "MonoidWithZero.toMonoid",
                "true_and",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "MulZeroClass.toZero",
                "AddCommMagma.toAdd",
                "True.intro",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast",
                "NormedAddCommGroup.toENormedAddCommMonoid"
            ],
            "tactic": "norm_num",
            "proofState": 320,
            "pos": {
                "line": 594,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 - 5 * x ^ 5 - 5 * x ^ 4 - 3 * x ^ 3 + 2 * x ^ 2\n\u22a2 deriv (fun x => 3 * x ^ 6 - 5 * x ^ 5 - 5 * x ^ 4 - 3 * x ^ 3 + 2 * x ^ 2) 0 = 0 \u2227\n    0 < deriv (deriv fun x => 3 * x ^ 6 - 5 * x ^ 5 - 5 * x ^ 4 - 3 * x ^ 3 + 2 * x ^ 2) 0",
            "endPos": {
                "line": 594,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "constructor",
            "proofState": 321,
            "pos": {
                "line": 596,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 - 5 * x ^ 5 - 5 * x ^ 4 - 3 * x ^ 3 + 2 * x ^ 2\n\u22a2 0 < deriv (deriv fun x => 3 * x ^ 6 - 5 * x ^ 5 - 5 * x ^ 4 - 3 * x ^ 3 + 2 * x ^ 2) 0",
            "endPos": {
                "line": 596,
                "column": 13
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 322,
            "pos": {
                "line": 604,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 2 + 10 * x) \u2192 deriv f (-5) = 0 \u2227 deriv (deriv f) (-5) > 0",
            "endPos": {
                "line": 604,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [hf]",
            "proofState": 323,
            "pos": {
                "line": 605,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 10 * x\n\u22a2 deriv f (-5) = 0 \u2227 deriv (deriv f) (-5) > 0",
            "endPos": {
                "line": 605,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp [deriv_add, deriv_pow, deriv_const, deriv_id, deriv_mul, deriv_pow, deriv_const, deriv_id, deriv_add, deriv_pow,\n  deriv_const, deriv_id, deriv_mul, deriv_pow, deriv_const, deriv_id]",
            "proofState": 324,
            "pos": {
                "line": 606,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 10 * x\n\u22a2 deriv (fun x => x ^ 2 + 10 * x) (-5) = 0 \u2227 deriv (deriv fun x => x ^ 2 + 10 * x) (-5) > 0",
            "endPos": {
                "line": 607,
                "column": 93
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 325,
            "pos": {
                "line": 608,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 10 * x\n\u22a2 deriv (fun x => x ^ 2 + 10 * x) (-5) = 0 \u2227 0 < deriv (deriv fun x => x ^ 2 + 10 * x) (-5)",
            "endPos": {
                "line": 608,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 326,
            "pos": {
                "line": 609,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 10 * x\n\u22a2 deriv (fun x => x ^ 2 + 10 * x) (-5) = 0 \u2227 0 < deriv (deriv fun x => x ^ 2 + 10 * x) (-5)",
            "endPos": {
                "line": 609,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 327,
            "pos": {
                "line": 609,
                "column": 19
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 10 * x\n\u22a2 deriv (fun x => x ^ 2 + 10 * x) (-5) = 0 \u2227 0 < deriv (deriv fun x => x ^ 2 + 10 * x) (-5)",
            "endPos": {
                "line": 609,
                "column": 27
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 328,
            "pos": {
                "line": 612,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 4 - x ^ 3 - 16 * x ^ 2 + 44 * x) \u2192 deriv f 2 = 0 \u2227 deriv (deriv f) 2 > 0",
            "endPos": {
                "line": 612,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all",
            "proofState": 329,
            "pos": {
                "line": 613,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - x ^ 3 - 16 * x ^ 2 + 44 * x\n\u22a2 deriv f 2 = 0 \u2227 deriv (deriv f) 2 > 0",
            "endPos": {
                "line": 613,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 330,
            "pos": {
                "line": 614,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - x ^ 3 - 16 * x ^ 2 + 44 * x\n\u22a2 deriv (fun x => x ^ 4 - x ^ 3 - 16 * x ^ 2 + 44 * x) 2 = 0 \u2227\n    0 < deriv (deriv fun x => x ^ 4 - x ^ 3 - 16 * x ^ 2 + 44 * x) 2",
            "endPos": {
                "line": 614,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 331,
            "pos": {
                "line": 615,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - x ^ 3 - 16 * x ^ 2 + 44 * x\n\u22a2 deriv (fun x => x ^ 4 - x ^ 3 - 16 * x ^ 2 + 44 * x) 2 = 0",
            "endPos": {
                "line": 615,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 332,
            "pos": {
                "line": 615,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - x ^ 3 - 16 * x ^ 2 + 44 * x\n\u22a2 0 < deriv (deriv fun x => x ^ 4 - x ^ 3 - 16 * x ^ 2 + 44 * x) 2",
            "endPos": {
                "line": 615,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_fderiv.mpr (differentiable_fderiv.mpr (by simp [h]; ring_nf; nlinarith))]",
            "proofState": 333,
            "pos": {
                "line": 616,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - x ^ 3 - 16 * x ^ 2 + 44 * x\n\u22a2 deriv (fun x => x ^ 4 - x ^ 3 - 16 * x ^ 2 + 44 * x) 2 = 0",
            "endPos": {
                "line": 616,
                "column": 95
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_fderiv.mpr (differentiable_fderiv.mpr (by simp [h]; ring_nf; nlinarith))]",
            "proofState": 334,
            "pos": {
                "line": 616,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - x ^ 3 - 16 * x ^ 2 + 44 * x\n\u22a2 0 < deriv (deriv fun x => x ^ 4 - x ^ 3 - 16 * x ^ 2 + 44 * x) 2",
            "endPos": {
                "line": 616,
                "column": 95
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 335,
            "pos": {
                "line": 619,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 6 + x ^ 3 - 29115 * x - 6063 * x ^ 2) \u2192 deriv f (-3) = 0 \u2227 deriv (deriv f) (-3) > 0",
            "endPos": {
                "line": 619,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [hf]",
            "proofState": 336,
            "pos": {
                "line": 620,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 6 + x ^ 3 - 29115 * x - 6063 * x ^ 2\n\u22a2 deriv f (-3) = 0 \u2227 deriv (deriv f) (-3) > 0",
            "endPos": {
                "line": 620,
                "column": 16
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num [deriv_add, deriv_sub, deriv_pow, deriv_const, deriv_mul, deriv_id, deriv_comp, deriv_pow, deriv_const,\n  deriv_mul, deriv_id, deriv_comp, deriv_pow, deriv_const, deriv_mul, deriv_id, deriv_comp, deriv_pow, deriv_const,\n  deriv_mul, deriv_id, deriv_comp]",
            "proofState": 337,
            "pos": {
                "line": 621,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 6 + x ^ 3 - 29115 * x - 6063 * x ^ 2\n\u22a2 deriv (fun x => 5 * x ^ 6 + x ^ 3 - 29115 * x - 6063 * x ^ 2) (-3) = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 6 + x ^ 3 - 29115 * x - 6063 * x ^ 2) (-3) > 0",
            "endPos": {
                "line": 624,
                "column": 36
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 338,
            "pos": {
                "line": 625,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 6 + x ^ 3 - 29115 * x - 6063 * x ^ 2\n\u22a2 deriv (fun x => 5 * x ^ 6 + x ^ 3 - 29115 * x - 6063 * x ^ 2) (-3) = 0 \u2227\n    0 < deriv (deriv fun x => 5 * x ^ 6 + x ^ 3 - 29115 * x - 6063 * x ^ 2) (-3)",
            "endPos": {
                "line": 625,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "apply And.intro",
            "proofState": 339,
            "pos": {
                "line": 626,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 6 + x ^ 3 - 29115 * x - 6063 * x ^ 2\n\u22a2 deriv (fun x => 5 * x ^ 6 + x ^ 3 - 29115 * x - 6063 * x ^ 2) (-3) = 0 \u2227\n    0 < deriv (deriv fun x => 5 * x ^ 6 + x ^ 3 - 29115 * x - 6063 * x ^ 2) (-3)",
            "endPos": {
                "line": 626,
                "column": 21
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 340,
            "pos": {
                "line": 626,
                "column": 26
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 6 + x ^ 3 - 29115 * x - 6063 * x ^ 2\n\u22a2 deriv (fun x => 5 * x ^ 6 + x ^ 3 - 29115 * x - 6063 * x ^ 2) (-3) = 0",
            "endPos": {
                "line": 626,
                "column": 34
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 341,
            "pos": {
                "line": 626,
                "column": 26
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 6 + x ^ 3 - 29115 * x - 6063 * x ^ 2\n\u22a2 0 < deriv (deriv fun x => 5 * x ^ 6 + x ^ 3 - 29115 * x - 6063 * x ^ 2) (-3)",
            "endPos": {
                "line": 626,
                "column": 34
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 342,
            "pos": {
                "line": 629,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 2 + 8 * x) \u2192 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) > 0",
            "endPos": {
                "line": 629,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h]",
            "proofState": 343,
            "pos": {
                "line": 630,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 + 8 * x\n\u22a2 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) > 0",
            "endPos": {
                "line": 630,
                "column": 19
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 344,
            "pos": {
                "line": 631,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 + 8 * x\n\u22a2 deriv (fun x => x ^ 2 + 8 * x) (-4) = 0 \u2227 deriv (deriv fun x => x ^ 2 + 8 * x) (-4) > 0",
            "endPos": {
                "line": 631,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_add, deriv_const, deriv_pow, deriv_id, deriv_mul, deriv_const, deriv_pow, deriv_id, deriv_mul, deriv_const,\n  deriv_pow, deriv_id, deriv_mul, deriv_const, deriv_pow, deriv_id, deriv_mul, deriv_const, deriv_pow, deriv_id,\n  deriv_mul]",
            "proofState": 345,
            "pos": {
                "line": 632,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 + 8 * x\n\u22a2 deriv (fun x => x ^ 2 + 8 * x) (-4) = 0",
            "endPos": {
                "line": 634,
                "column": 59
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp [deriv_add, deriv_const, deriv_pow, deriv_id, deriv_mul, deriv_const, deriv_pow, deriv_id, deriv_mul, deriv_const,\n  deriv_pow, deriv_id, deriv_mul, deriv_const, deriv_pow, deriv_id, deriv_mul, deriv_const, deriv_pow, deriv_id,\n  deriv_mul]",
            "proofState": 346,
            "pos": {
                "line": 632,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 + 8 * x\n\u22a2 deriv (deriv fun x => x ^ 2 + 8 * x) (-4) > 0",
            "endPos": {
                "line": 634,
                "column": 59
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 347,
            "pos": {
                "line": 639,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 3 - 57 * x ^ 2 + 360 * x) \u2192 deriv f 6 = 0 \u2227 deriv (deriv f) 6 < 0",
            "endPos": {
                "line": 639,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h]",
            "proofState": 348,
            "pos": {
                "line": 640,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 - 57 * x ^ 2 + 360 * x\n\u22a2 deriv f 6 = 0 \u2227 deriv (deriv f) 6 < 0",
            "endPos": {
                "line": 640,
                "column": 19
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 349,
            "pos": {
                "line": 641,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 - 57 * x ^ 2 + 360 * x\n\u22a2 deriv (fun x => 3 * x ^ 3 - 57 * x ^ 2 + 360 * x) 6 = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 3 - 57 * x ^ 2 + 360 * x) 6 < 0",
            "endPos": {
                "line": 641,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 350,
            "pos": {
                "line": 642,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 - 57 * x ^ 2 + 360 * x\n\u22a2 deriv (fun x => 3 * x ^ 3 - 57 * x ^ 2 + 360 * x) 6 = 0",
            "endPos": {
                "line": 642,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 351,
            "pos": {
                "line": 642,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 - 57 * x ^ 2 + 360 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 3 - 57 * x ^ 2 + 360 * x) 6 < 0",
            "endPos": {
                "line": 642,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_cube 6, deriv_sq 6]",
            "proofState": 352,
            "pos": {
                "line": 643,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 - 57 * x ^ 2 + 360 * x\n\u22a2 deriv (fun x => 3 * x ^ 3 - 57 * x ^ 2 + 360 * x) 6 = 0",
            "endPos": {
                "line": 643,
                "column": 41
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_cube 6, deriv_sq 6]",
            "proofState": 353,
            "pos": {
                "line": 643,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 - 57 * x ^ 2 + 360 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 3 - 57 * x ^ 2 + 360 * x) 6 < 0",
            "endPos": {
                "line": 643,
                "column": 41
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 354,
            "pos": {
                "line": 649,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 2 + 16 * x) \u2192 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) > 0",
            "endPos": {
                "line": 649,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [h]",
            "proofState": 355,
            "pos": {
                "line": 650,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 16 * x\n\u22a2 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) > 0",
            "endPos": {
                "line": 650,
                "column": 15
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 356,
            "pos": {
                "line": 651,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 16 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 + 16 * x) (-4) = 0 \u2227 deriv (deriv fun x => 2 * x ^ 2 + 16 * x) (-4) > 0",
            "endPos": {
                "line": 651,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_add, deriv_mul, deriv_const, deriv_pow, deriv_id, mul_one, one_mul, zero_add]",
            "proofState": 357,
            "pos": {
                "line": 652,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 16 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 + 16 * x) (-4) = 0\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 16 * x\n\u22a2 deriv (deriv fun x => 2 * x ^ 2 + 16 * x) (-4) > 0",
            "endPos": {
                "line": 652,
                "column": 91
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 358,
            "pos": {
                "line": 658,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 2 - 12 * x) \u2192 deriv f 2 = 0 \u2227 deriv (deriv f) 2 > 0",
            "endPos": {
                "line": 658,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_sub, deriv_const, deriv_mul, deriv_id'', deriv_pow, Nat.cast_one, one_mul, Nat.cast_zero,\n  zero_mul, sub_zero, zero_sub, mul_one, mul_neg, mul_zero, neg_zero]",
            "proofState": 359,
            "pos": {
                "line": 659,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 - 12 * x\n\u22a2 deriv f 2 = 0 \u2227 deriv (deriv f) 2 > 0",
            "endPos": {
                "line": 660,
                "column": 86
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 360,
            "pos": {
                "line": 661,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 - 12 * x\n\u22a2 deriv (fun x => 3 * x ^ 2 - 12 * x) 2 = 0 \u2227 deriv (deriv fun x => 3 * x ^ 2 - 12 * x) 2 > 0",
            "endPos": {
                "line": 661,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 361,
            "pos": {
                "line": 662,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 - 12 * x\n\u22a2 deriv (fun x => 3 * x ^ 2 - 12 * x) 2 = 0",
            "endPos": {
                "line": 662,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 362,
            "pos": {
                "line": 662,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 - 12 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 2 - 12 * x) 2 > 0",
            "endPos": {
                "line": 662,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_two_mul_deriv_sub_deriv_mul_deriv (fun x => x ^ 2) (fun x => 3) (fun x => x) 2]",
            "proofState": 363,
            "pos": {
                "line": 663,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 - 12 * x\n\u22a2 deriv (fun x => 3 * x ^ 2 - 12 * x) 2 = 0",
            "endPos": {
                "line": 663,
                "column": 101
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_two_mul_deriv_sub_deriv_mul_deriv (fun x => x ^ 2) (fun x => 3) (fun x => x) 2]",
            "proofState": 364,
            "pos": {
                "line": 663,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 - 12 * x\n\u22a2 0 < deriv (deriv fun x => 3 * x ^ 2 - 12 * x) 2",
            "endPos": {
                "line": 663,
                "column": 101
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 365,
            "pos": {
                "line": 666,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 3 + 39 * x ^ 2 + 126 * x) \u2192 deriv f (-3) = 0 \u2227 deriv (deriv f) (-3) > 0",
            "endPos": {
                "line": 666,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all",
            "proofState": 366,
            "pos": {
                "line": 667,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 39 * x ^ 2 + 126 * x\n\u22a2 deriv f (-3) = 0 \u2227 deriv (deriv f) (-3) > 0",
            "endPos": {
                "line": 667,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 367,
            "pos": {
                "line": 668,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 39 * x ^ 2 + 126 * x\n\u22a2 deriv (fun x => 4 * x ^ 3 + 39 * x ^ 2 + 126 * x) (-3) = 0 \u2227\n    0 < deriv (deriv fun x => 4 * x ^ 3 + 39 * x ^ 2 + 126 * x) (-3)",
            "endPos": {
                "line": 668,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 368,
            "pos": {
                "line": 669,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 39 * x ^ 2 + 126 * x\n\u22a2 deriv (fun x => 4 * x ^ 3 + 39 * x ^ 2 + 126 * x) (-3) = 0 \u2227\n    0 < deriv (deriv fun x => 4 * x ^ 3 + 39 * x ^ 2 + 126 * x) (-3)",
            "endPos": {
                "line": 669,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 369,
            "pos": {
                "line": 670,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 39 * x ^ 2 + 126 * x\n\u22a2 deriv (fun x => 4 * x ^ 3 + 39 * x ^ 2 + 126 * x) (-3) = 0",
            "endPos": {
                "line": 670,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 370,
            "pos": {
                "line": 670,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 39 * x ^ 2 + 126 * x\n\u22a2 0 < deriv (deriv fun x => 4 * x ^ 3 + 39 * x ^ 2 + 126 * x) (-3)",
            "endPos": {
                "line": 670,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [hasDerivAt_pow 3 (-3)]",
            "proofState": 371,
            "pos": {
                "line": 671,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 39 * x ^ 2 + 126 * x\n\u22a2 deriv (fun x => 4 * x ^ 3 + 39 * x ^ 2 + 126 * x) (-3) = 0",
            "endPos": {
                "line": 671,
                "column": 38
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [hasDerivAt_pow 3 (-3)]",
            "proofState": 372,
            "pos": {
                "line": 671,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 39 * x ^ 2 + 126 * x\n\u22a2 0 < deriv (deriv fun x => 4 * x ^ 3 + 39 * x ^ 2 + 126 * x) (-3)",
            "endPos": {
                "line": 671,
                "column": 38
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 373,
            "pos": {
                "line": 674,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 3 + 72 * x ^ 2 + 432 * x) \u2192 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) = 0",
            "endPos": {
                "line": 674,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h]",
            "proofState": 374,
            "pos": {
                "line": 675,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 72 * x ^ 2 + 432 * x\n\u22a2 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) = 0",
            "endPos": {
                "line": 675,
                "column": 19
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 375,
            "pos": {
                "line": 676,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 72 * x ^ 2 + 432 * x\n\u22a2 deriv (fun x => 4 * x ^ 3 + 72 * x ^ 2 + 432 * x) (-6) = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 3 + 72 * x ^ 2 + 432 * x) (-6) = 0",
            "endPos": {
                "line": 676,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 376,
            "pos": {
                "line": 677,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 72 * x ^ 2 + 432 * x\n\u22a2 deriv (fun x => 4 * x ^ 3 + 72 * x ^ 2 + 432 * x) (-6) = 0",
            "endPos": {
                "line": 677,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 377,
            "pos": {
                "line": 677,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 72 * x ^ 2 + 432 * x\n\u22a2 deriv (deriv fun x => 4 * x ^ 3 + 72 * x ^ 2 + 432 * x) (-6) = 0",
            "endPos": {
                "line": 677,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [hasDerivAt_pow 3 (-6)]",
            "proofState": 378,
            "pos": {
                "line": 678,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 72 * x ^ 2 + 432 * x\n\u22a2 deriv (fun x => 4 * x ^ 3 + 72 * x ^ 2 + 432 * x) (-6) = 0",
            "endPos": {
                "line": 678,
                "column": 38
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [hasDerivAt_pow 3 (-6)]",
            "proofState": 379,
            "pos": {
                "line": 678,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 72 * x ^ 2 + 432 * x\n\u22a2 deriv (deriv fun x => 4 * x ^ 3 + 72 * x ^ 2 + 432 * x) (-6) = 0",
            "endPos": {
                "line": 678,
                "column": 38
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 380,
            "pos": {
                "line": 681,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 2 + 24 * x) \u2192 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) > 0",
            "endPos": {
                "line": 681,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_const', deriv_add', deriv_mul, deriv_pow, Nat.cast_one, Nat.cast_zero, Nat.cast_succ, Nat.zero_eq,\n  Nat.zero_add, Nat.one_eq_succ_zero]",
            "proofState": 381,
            "pos": {
                "line": 682,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 24 * x\n\u22a2 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) > 0",
            "endPos": {
                "line": 683,
                "column": 52
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 382,
            "pos": {
                "line": 684,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 24 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 + 24 * x) (-6) = 0 \u2227 deriv (deriv fun x => 2 * x ^ 2 + 24 * x) (-6) > 0",
            "endPos": {
                "line": 684,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 383,
            "pos": {
                "line": 685,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 24 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 + 24 * x) (-6) = 0 \u2227 0 < deriv (deriv fun x => 2 * x ^ 2 + 24 * x) (-6)",
            "endPos": {
                "line": 685,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 384,
            "pos": {
                "line": 688,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 6 + 4 * x ^ 3 - 48 * x ^ 2 - 84 * x) \u2192 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) = 0",
            "endPos": {
                "line": 688,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [h]",
            "proofState": 385,
            "pos": {
                "line": 689,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 + 4 * x ^ 3 - 48 * x ^ 2 - 84 * x\n\u22a2 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) = 0",
            "endPos": {
                "line": 689,
                "column": 15
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 386,
            "pos": {
                "line": 690,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 + 4 * x ^ 3 - 48 * x ^ 2 - 84 * x\n\u22a2 deriv (fun x => 4 * x ^ 6 + 4 * x ^ 3 - 48 * x ^ 2 - 84 * x) (-1) = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 6 + 4 * x ^ 3 - 48 * x ^ 2 - 84 * x) (-1) = 0",
            "endPos": {
                "line": 690,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 387,
            "pos": {
                "line": 690,
                "column": 18
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 + 4 * x ^ 3 - 48 * x ^ 2 - 84 * x\n\u22a2 deriv (fun x => 4 * x ^ 6 + 4 * x ^ 3 - 48 * x ^ 2 - 84 * x) (-1) = 0",
            "endPos": {
                "line": 690,
                "column": 26
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 388,
            "pos": {
                "line": 690,
                "column": 18
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 + 4 * x ^ 3 - 48 * x ^ 2 - 84 * x\n\u22a2 deriv (deriv fun x => 4 * x ^ 6 + 4 * x ^ 3 - 48 * x ^ 2 - 84 * x) (-1) = 0",
            "endPos": {
                "line": 690,
                "column": 26
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_add, deriv_mul, deriv_const, deriv_pow, deriv_id, deriv_pow, deriv_id, deriv_pow, deriv_id, deriv_pow,\n  deriv_id, deriv_pow, deriv_id, deriv_pow, deriv_id, deriv_pow, deriv_id, deriv_pow, deriv_id, deriv_pow, deriv_id,\n  deriv_pow, deriv_id, deriv_pow, deriv_id, deriv_pow]",
            "proofState": 389,
            "pos": {
                "line": 691,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 + 4 * x ^ 3 - 48 * x ^ 2 - 84 * x\n\u22a2 deriv (fun x => 4 * x ^ 6 + 4 * x ^ 3 - 48 * x ^ 2 - 84 * x) (-1) = 0",
            "endPos": {
                "line": 693,
                "column": 98
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_add, deriv_mul, deriv_const, deriv_pow, deriv_id, deriv_pow, deriv_id, deriv_pow, deriv_id, deriv_pow,\n  deriv_id, deriv_pow, deriv_id, deriv_pow, deriv_id, deriv_pow, deriv_id, deriv_pow, deriv_id, deriv_pow, deriv_id,\n  deriv_pow, deriv_id, deriv_pow, deriv_id, deriv_pow]",
            "proofState": 390,
            "pos": {
                "line": 691,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 + 4 * x ^ 3 - 48 * x ^ 2 - 84 * x\n\u22a2 deriv (deriv fun x => 4 * x ^ 6 + 4 * x ^ 3 - 48 * x ^ 2 - 84 * x) (-1) = 0",
            "endPos": {
                "line": 693,
                "column": 98
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 391,
            "pos": {
                "line": 697,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 4 - 749 * x ^ 2 + 4990 * x) \u2192 deriv f 5 = 0 \u2227 deriv (deriv f) 5 > 0",
            "endPos": {
                "line": 697,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "Eq.mp",
                "id",
                "CommMagma.toMul",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Real.instAdd",
                "Real.instMonoid",
                "funext",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "mul_comm",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_const', deriv_pow, deriv_sub, deriv_mul, deriv_id'', deriv_const, zero_sub, zero_mul, sub_zero,\n  zero_add, mul_one, mul_zero, mul_assoc, mul_comm]",
            "proofState": 392,
            "pos": {
                "line": 698,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 4 - 749 * x ^ 2 + 4990 * x\n\u22a2 deriv f 5 = 0 \u2227 deriv (deriv f) 5 > 0",
            "endPos": {
                "line": 699,
                "column": 73
            }
        },
        {
            "usedConstants": [
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NegZeroClass.toNeg",
                "NormedCommRing.toSeminormedCommRing",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "deriv_const'",
                "Ring.toNonAssocRing",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "congrArg",
                "Mathlib.Meta.NormNum.IsNatPowT.run",
                "DifferentiableAt",
                "deriv",
                "deriv_sub",
                "Real.instSub",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "NormedField.toField",
                "Mathlib.Meta.NormNum.isNat_natSub",
                "Monoid.toNatPow",
                "Mathlib.Meta.NormNum.IsInt.neg_to_eq",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "id",
                "Distrib.toAdd",
                "Mathlib.Meta.NormNum.IsNatPowT.bit1",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "Int.ofNat",
                "Real.instAddGroup",
                "Mathlib.Meta.NormNum.IsNatPowT.bit0",
                "Real.instRing",
                "CommMagma.toMul",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Int",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Mathlib.Meta.NormNum.IsNatPowT.trans",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "NormedAddGroup.toAddGroup",
                "Mathlib.Meta.NormNum.isInt_sub",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_natCast",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "Nat.cast",
                "Field.toSemifield",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "Real.instAdd",
                "SubNegMonoid.toSub",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Add.0._proof_25",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "AddGroup.toSubNegMonoid",
                "HPow.hPow",
                "Real.normedCommRing",
                "neg_add_cancel",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "congrFun",
                "Ring.toAddCommGroup",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "NormedAddCommGroup.toNormedAddGroup",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "AddZeroClass.toZero",
                "NormedRing.toSeminormedRing",
                "LT.lt",
                "True",
                "eq_self",
                "Mathlib.Meta.NormNum.IsNat.to_eq",
                "Nat.pow",
                "eq_true",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "Mathlib.Meta.NormNum.isNat_mul",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "NontriviallyNormedField.toNormedField",
                "ENormedAddCommMonoid.toAddCommMonoid",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "AddCommSemigroup.toAddCommMagma",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "Nat.cast_zero",
                "AddMonoidWithOne.toAddMonoid",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "SubNegMonoid.toAddMonoid",
                "mul_one",
                "AddCommGroup.toDivisionAddCommMonoid",
                "Mathlib.Meta.NormNum.natPow_one",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "add_zero",
                "deriv_pow''",
                "OfNat.ofNat",
                "AddCommMonoid.toAddCommSemigroup",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Ring.toSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Nat.cast_one",
                "Mathlib.Meta.NormNum.isNat_pow",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "one_mul",
                "deriv_add",
                "MonoidWithZero.toMonoid",
                "true_and",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "MulZeroClass.toZero",
                "AddCommMagma.toAdd",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "True.intro",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast",
                "NormedAddCommGroup.toENormedAddCommMonoid"
            ],
            "tactic": "norm_num",
            "proofState": 393,
            "pos": {
                "line": 700,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 * 5 - x ^ 2 * 749 + x * 4990\n\u22a2 deriv (fun x => x ^ 4 * 5 - x ^ 2 * 749 + x * 4990) 5 = 0 \u2227\n    deriv (deriv fun x => x ^ 4 * 5 - x ^ 2 * 749 + x * 4990) 5 > 0",
            "endPos": {
                "line": 700,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [show (2 : \u211d) = 2 * 1 by norm_num]",
            "proofState": 394,
            "pos": {
                "line": 701,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 * 5 - x ^ 2 * 749 + x * 4990\n\u22a2 0 < deriv (deriv fun x => x ^ 4 * 5 - x ^ 2 * 749 + x * 4990) 5",
            "endPos": {
                "line": 701,
                "column": 49
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Mathlib.Meta.NormNum.isNat_eq_true",
                "AddGroupWithOne.toAddMonoidWithOne",
                "Real.semiring",
                "AddMonoidWithOne.toNatCast",
                "Real.instRing",
                "instOfNatNat",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "Real.instOne",
                "instNatAtLeastTwo",
                "Nat",
                "Real.instMul",
                "Mathlib.Meta.NormNum.isNat_mul",
                "One.toOfNat1",
                "Eq.refl",
                "OfNat.ofNat",
                "Nat.cast_one",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 395,
            "pos": {
                "line": 701,
                "column": 40
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 * 5 - x ^ 2 * 749 + x * 4990\n\u22a2 2 = 2 * 1",
            "endPos": {
                "line": 701,
                "column": 48
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 396,
            "pos": {
                "line": 704,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 3 + 176 * x + 46 * x ^ 2) \u2192 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) < 0",
            "endPos": {
                "line": 704,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all [deriv_pow, deriv_add, deriv_mul, deriv_const]",
            "proofState": 397,
            "pos": {
                "line": 705,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 176 * x + 46 * x ^ 2\n\u22a2 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) < 0",
            "endPos": {
                "line": 705,
                "column": 57
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 398,
            "pos": {
                "line": 706,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 176 * x + 46 * x ^ 2\n\u22a2 deriv (fun x => 4 * x ^ 3 + 176 * x + 46 * x ^ 2) (-4) = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 3 + 176 * x + 46 * x ^ 2) (-4) < 0",
            "endPos": {
                "line": 706,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 399,
            "pos": {
                "line": 707,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 176 * x + 46 * x ^ 2\n\u22a2 deriv (fun x => 4 * x ^ 3 + 176 * x + 46 * x ^ 2) (-4) = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 3 + 176 * x + 46 * x ^ 2) (-4) < 0",
            "endPos": {
                "line": 707,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 400,
            "pos": {
                "line": 708,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 176 * x + 46 * x ^ 2\n\u22a2 deriv (fun x => 4 * x ^ 3 + 176 * x + 46 * x ^ 2) (-4) = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 3 + 176 * x + 46 * x ^ 2) (-4) < 0",
            "endPos": {
                "line": 708,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 401,
            "pos": {
                "line": 711,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 2 + 4 * x) \u2192 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) > 0",
            "endPos": {
                "line": 711,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "Eq.mp",
                "id",
                "CommMagma.toMul",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "funext",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "Real.instNeg",
                "mul_comm",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_add, deriv_mul, deriv_pow, deriv_const, deriv_id, zero_add, zero_mul, zero_sub, sub_zero,\n  sub_neg_eq_add, add_zero, add_left_neg, mul_one, mul_zero, mul_neg, neg_add_rev, neg_mul_eq_neg_mul, neg_neg,\n  mul_comm, mul_left_comm, mul_assoc, mul_add, add_mul]",
            "proofState": 402,
            "pos": {
                "line": 712,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 4 * x\n\u22a2 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) > 0",
            "endPos": {
                "line": 715,
                "column": 12
            }
        },
        {
            "usedConstants": [
                "Mathlib.Meta.NormNum.isInt_pow",
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NegZeroClass.toNeg",
                "NormedCommRing.toSeminormedCommRing",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Real",
                "Mathlib.Meta.NormNum.instAddMonoidWithOne",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "deriv_const'",
                "Mathlib.Meta.NormNum.intPow_negOfNat_bit1",
                "Mathlib.Meta.NormNum.natPow_zero",
                "Ring.toNonAssocRing",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "congrArg",
                "DifferentiableAt",
                "deriv",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "Mathlib.Meta.NormNum.one_natPow",
                "Real.instLT",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "NormedField.toField",
                "Mathlib.Meta.NormNum.isNat_natSub",
                "Monoid.toNatPow",
                "Mathlib.Meta.NormNum.IsInt.neg_to_eq",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "Int.ofNat",
                "Real.instAddGroup",
                "Real.instRing",
                "CommMagma.toMul",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Int",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "Mathlib.Meta.NormNum.isInt_mul",
                "Mathlib.Meta.NormNum.isInt_neg",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_natCast",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "Nat.cast",
                "Field.toSemifield",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "Real.instAdd",
                "NonUnitalNonAssocRing.toHasDistribNeg",
                "Real.instOne",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "AddGroup.toSubNegMonoid",
                "HPow.hPow",
                "Real.normedCommRing",
                "neg_add_cancel",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "congrFun",
                "Mathlib.Meta.NormNum.IsInt.to_isNat",
                "Ring.toAddCommGroup",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "AddZeroClass.toZero",
                "NormedRing.toSeminormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
                "LT.lt",
                "True",
                "Real.instNeg",
                "eq_self",
                "Mathlib.Meta.NormNum.IsNat.to_eq",
                "Mathlib.Meta.NormNum.intPow_negOfNat_bit0",
                "eq_true",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "Mathlib.Meta.NormNum.isNat_mul",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "NontriviallyNormedField.toNormedField",
                "neg_mul",
                "ENormedAddCommMonoid.toAddCommMonoid",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "AddCommSemigroup.toAddCommMagma",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "Nat.cast_zero",
                "AddMonoidWithOne.toAddMonoid",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "HasDistribNeg.toInvolutiveNeg",
                "SubNegMonoid.toAddMonoid",
                "mul_one",
                "AddCommGroup.toDivisionAddCommMonoid",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "InvolutiveNeg.toNeg",
                "add_zero",
                "deriv_pow''",
                "OfNat.ofNat",
                "AddCommMonoid.toAddCommSemigroup",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Ring.toSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Nat.cast_one",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "one_mul",
                "deriv_add",
                "MonoidWithZero.toMonoid",
                "true_and",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "MulZeroClass.toZero",
                "AddCommMagma.toAdd",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "True.intro",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast",
                "NormedAddCommGroup.toENormedAddCommMonoid"
            ],
            "tactic": "norm_num",
            "proofState": 403,
            "pos": {
                "line": 716,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 * 2 + x * 4\n\u22a2 deriv (fun x => x ^ 2 * 2 + x * 4) (-1) = 0 \u2227 deriv (deriv fun x => x ^ 2 * 2 + x * 4) (-1) > 0",
            "endPos": {
                "line": 716,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_two_mul_deriv_pow_two f (-1)]",
            "proofState": 404,
            "pos": {
                "line": 717,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 * 2 + x * 4\n\u22a2 0 < deriv (deriv fun x => x ^ 2 * 2 + x * 4) (-1)",
            "endPos": {
                "line": 717,
                "column": 51
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 405,
            "pos": {
                "line": 720,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 2 + 12 * x) \u2192 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) > 0",
            "endPos": {
                "line": 720,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [hf]",
            "proofState": 406,
            "pos": {
                "line": 721,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 3 * x ^ 2 + 12 * x\n\u22a2 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) > 0",
            "endPos": {
                "line": 721,
                "column": 16
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 407,
            "pos": {
                "line": 722,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 3 * x ^ 2 + 12 * x\n\u22a2 deriv (fun x => 3 * x ^ 2 + 12 * x) (-2) = 0 \u2227 deriv (deriv fun x => 3 * x ^ 2 + 12 * x) (-2) > 0",
            "endPos": {
                "line": 722,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_add, deriv_mul, deriv_pow, deriv_const, deriv_id]",
            "proofState": 408,
            "pos": {
                "line": 723,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nhf : f = fun x => 3 * x ^ 2 + 12 * x\n\u22a2 deriv (fun x => 3 * x ^ 2 + 12 * x) (-2) = 0",
            "endPos": {
                "line": 723,
                "column": 67
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp [deriv_add, deriv_mul, deriv_pow, deriv_const, deriv_id]",
            "proofState": 409,
            "pos": {
                "line": 723,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nhf : f = fun x => 3 * x ^ 2 + 12 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 2 + 12 * x) (-2) > 0",
            "endPos": {
                "line": 723,
                "column": 67
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 410,
            "pos": {
                "line": 728,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 2 + 16 * x) \u2192 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) > 0",
            "endPos": {
                "line": 728,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "<failed to pretty print>",
            "proofState": 411,
            "pos": {
                "line": 729,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 + 16 * x\n\u22a2 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) > 0",
            "endPos": {
                "line": 729,
                "column": 18
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 412,
            "pos": {
                "line": 731,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 5 - 12 * x ^ 2 + 19 * x) \u2192 deriv f 1 = 0 \u2227 deriv (deriv f) 1 < 0",
            "endPos": {
                "line": 731,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all",
            "proofState": 413,
            "pos": {
                "line": 732,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 - 12 * x ^ 2 + 19 * x\n\u22a2 deriv f 1 = 0 \u2227 deriv (deriv f) 1 < 0",
            "endPos": {
                "line": 732,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 414,
            "pos": {
                "line": 733,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 - 12 * x ^ 2 + 19 * x\n\u22a2 deriv (fun x => x ^ 5 - 12 * x ^ 2 + 19 * x) 1 = 0 \u2227 deriv (deriv fun x => x ^ 5 - 12 * x ^ 2 + 19 * x) 1 < 0",
            "endPos": {
                "line": 733,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num [deriv_const, deriv_pow, deriv_sub, deriv_mul, deriv_id, pow_one]",
            "proofState": 415,
            "pos": {
                "line": 734,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 - 12 * x ^ 2 + 19 * x\n\u22a2 deriv (fun x => x ^ 5 - 12 * x ^ 2 + 19 * x) 1 = 0\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 - 12 * x ^ 2 + 19 * x\n\u22a2 deriv (deriv fun x => x ^ 5 - 12 * x ^ 2 + 19 * x) 1 < 0",
            "endPos": {
                "line": 734,
                "column": 76
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num [deriv_const, deriv_pow, deriv_sub, deriv_mul, deriv_id, pow_one]",
            "proofState": 416,
            "pos": {
                "line": 735,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 - 12 * x ^ 2 + 19 * x\n\u22a2 deriv (fun x => x ^ 5 - 12 * x ^ 2 + 19 * x) 1 = 0",
            "endPos": {
                "line": 735,
                "column": 76
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 417,
            "pos": {
                "line": 736,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 - 12 * x ^ 2 + 19 * x\n\u22a2 deriv (fun x => x ^ 5 - 12 * x ^ 2 + 19 * x) 1 = 0",
            "endPos": {
                "line": 736,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 418,
            "pos": {
                "line": 740,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 6 + x ^ 5 + x ^ 4 - 5 * x ^ 3 - 54 * x ^ 2 - 76 * x) \u2192\n    deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) > 0",
            "endPos": {
                "line": 740,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all",
            "proofState": 419,
            "pos": {
                "line": 741,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 + x ^ 5 + x ^ 4 - 5 * x ^ 3 - 54 * x ^ 2 - 76 * x\n\u22a2 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) > 0",
            "endPos": {
                "line": 741,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 420,
            "pos": {
                "line": 742,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 + x ^ 5 + x ^ 4 - 5 * x ^ 3 - 54 * x ^ 2 - 76 * x\n\u22a2 deriv (fun x => 3 * x ^ 6 + x ^ 5 + x ^ 4 - 5 * x ^ 3 - 54 * x ^ 2 - 76 * x) (-1) = 0 \u2227\n    0 < deriv (deriv fun x => 3 * x ^ 6 + x ^ 5 + x ^ 4 - 5 * x ^ 3 - 54 * x ^ 2 - 76 * x) (-1)",
            "endPos": {
                "line": 742,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_cubic_at_minus_one, deriv_deriv_cubic_at_minus_one]",
            "proofState": 421,
            "pos": {
                "line": 743,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 + x ^ 5 + x ^ 4 - 5 * x ^ 3 - 54 * x ^ 2 - 76 * x\n\u22a2 deriv (fun x => 3 * x ^ 6 + x ^ 5 + x ^ 4 - 5 * x ^ 3 - 54 * x ^ 2 - 76 * x) (-1) = 0 \u2227\n    0 < deriv (deriv fun x => 3 * x ^ 6 + x ^ 5 + x ^ 4 - 5 * x ^ 3 - 54 * x ^ 2 - 76 * x) (-1)",
            "endPos": {
                "line": 743,
                "column": 73
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 422,
            "pos": {
                "line": 746,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 4 - 150 * x ^ 2 + 1000 * x) \u2192 deriv f 5 = 0 \u2227 deriv (deriv f) 5 = 0",
            "endPos": {
                "line": 746,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all",
            "proofState": 423,
            "pos": {
                "line": 747,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 - 150 * x ^ 2 + 1000 * x\n\u22a2 deriv f 5 = 0 \u2227 deriv (deriv f) 5 = 0",
            "endPos": {
                "line": 747,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 424,
            "pos": {
                "line": 748,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 - 150 * x ^ 2 + 1000 * x\n\u22a2 deriv (fun x => x ^ 4 - 150 * x ^ 2 + 1000 * x) 5 = 0 \u2227 deriv (deriv fun x => x ^ 4 - 150 * x ^ 2 + 1000 * x) 5 = 0",
            "endPos": {
                "line": 748,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num [deriv_pow, deriv_sub, deriv_const, deriv_mul, deriv_id]",
            "proofState": 425,
            "pos": {
                "line": 748,
                "column": 18
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 - 150 * x ^ 2 + 1000 * x\n\u22a2 deriv (fun x => x ^ 4 - 150 * x ^ 2 + 1000 * x) 5 = 0",
            "endPos": {
                "line": 748,
                "column": 83
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num [deriv_pow, deriv_sub, deriv_const, deriv_mul, deriv_id]",
            "proofState": 426,
            "pos": {
                "line": 748,
                "column": 18
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 - 150 * x ^ 2 + 1000 * x\n\u22a2 deriv (deriv fun x => x ^ 4 - 150 * x ^ 2 + 1000 * x) 5 = 0",
            "endPos": {
                "line": 748,
                "column": 83
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 427,
            "pos": {
                "line": 749,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 - 150 * x ^ 2 + 1000 * x\n\u22a2 deriv (fun x => x ^ 4 - 150 * x ^ 2 + 1000 * x) 5 = 0",
            "endPos": {
                "line": 749,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 428,
            "pos": {
                "line": 749,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 - 150 * x ^ 2 + 1000 * x\n\u22a2 deriv (deriv fun x => x ^ 4 - 150 * x ^ 2 + 1000 * x) 5 = 0",
            "endPos": {
                "line": 749,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 429,
            "pos": {
                "line": 752,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 5 + 42 * x ^ 2 + 64 * x) \u2192 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) > 0",
            "endPos": {
                "line": 752,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all",
            "proofState": 430,
            "pos": {
                "line": 753,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 5 + 42 * x ^ 2 + 64 * x\n\u22a2 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) > 0",
            "endPos": {
                "line": 753,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 431,
            "pos": {
                "line": 754,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 5 + 42 * x ^ 2 + 64 * x\n\u22a2 deriv (fun x => 4 * x ^ 5 + 42 * x ^ 2 + 64 * x) (-1) = 0 \u2227\n    0 < deriv (deriv fun x => 4 * x ^ 5 + 42 * x ^ 2 + 64 * x) (-1)",
            "endPos": {
                "line": 754,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 432,
            "pos": {
                "line": 755,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 5 + 42 * x ^ 2 + 64 * x\n\u22a2 deriv (fun x => 4 * x ^ 5 + 42 * x ^ 2 + 64 * x) (-1) = 0",
            "endPos": {
                "line": 755,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 433,
            "pos": {
                "line": 755,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 5 + 42 * x ^ 2 + 64 * x\n\u22a2 0 < deriv (deriv fun x => 4 * x ^ 5 + 42 * x ^ 2 + 64 * x) (-1)",
            "endPos": {
                "line": 755,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_cubic (-1 : \u211d)]",
            "proofState": 434,
            "pos": {
                "line": 756,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 5 + 42 * x ^ 2 + 64 * x\n\u22a2 deriv (fun x => 4 * x ^ 5 + 42 * x ^ 2 + 64 * x) (-1) = 0",
            "endPos": {
                "line": 756,
                "column": 37
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_cubic (-1 : \u211d)]",
            "proofState": 435,
            "pos": {
                "line": 756,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 5 + 42 * x ^ 2 + 64 * x\n\u22a2 0 < deriv (deriv fun x => 4 * x ^ 5 + 42 * x ^ 2 + 64 * x) (-1)",
            "endPos": {
                "line": 756,
                "column": 37
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 436,
            "pos": {
                "line": 759,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 3 + 21 * x ^ 2 + 36 * x) \u2192 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) < 0",
            "endPos": {
                "line": 759,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [h]",
            "proofState": 437,
            "pos": {
                "line": 760,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 21 * x ^ 2 + 36 * x\n\u22a2 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) < 0",
            "endPos": {
                "line": 760,
                "column": 8
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 438,
            "pos": {
                "line": 761,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 21 * x ^ 2 + 36 * x\n\u22a2 deriv (fun x => 4 * x ^ 3 + 21 * x ^ 2 + 36 * x) (-2) = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 3 + 21 * x ^ 2 + 36 * x) (-2) < 0",
            "endPos": {
                "line": 761,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_add, deriv_mul, deriv_pow, deriv_const, deriv_id]",
            "proofState": 439,
            "pos": {
                "line": 762,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 21 * x ^ 2 + 36 * x\n\u22a2 deriv (fun x => 4 * x ^ 3 + 21 * x ^ 2 + 36 * x) (-2) = 0\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 21 * x ^ 2 + 36 * x\n\u22a2 deriv (deriv fun x => 4 * x ^ 3 + 21 * x ^ 2 + 36 * x) (-2) < 0",
            "endPos": {
                "line": 762,
                "column": 63
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 440,
            "pos": {
                "line": 768,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 2 - 10 * x) \u2192 deriv f 5 = 0 \u2227 deriv (deriv f) 5 > 0",
            "endPos": {
                "line": 768,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_sub, deriv_pow, deriv_const, deriv_mul, deriv_id'', deriv_pow, deriv_const, deriv_id'',\n  deriv_sub, deriv_mul, deriv_id'', deriv_pow, deriv_const, deriv_id'', deriv_sub, deriv_mul, deriv_id'']",
            "proofState": 441,
            "pos": {
                "line": 769,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 - 10 * x\n\u22a2 deriv f 5 = 0 \u2227 deriv (deriv f) 5 > 0",
            "endPos": {
                "line": 771,
                "column": 49
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 442,
            "pos": {
                "line": 772,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 - 10 * x\n\u22a2 deriv (fun x => x ^ 2 - 10 * x) 5 = 0 \u2227 deriv (deriv fun x => x ^ 2 - 10 * x) 5 > 0",
            "endPos": {
                "line": 772,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 443,
            "pos": {
                "line": 773,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 - 10 * x\n\u22a2 deriv (fun x => x ^ 2 - 10 * x) 5 = 0 \u2227 0 < deriv (deriv fun x => x ^ 2 - 10 * x) 5",
            "endPos": {
                "line": 773,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 444,
            "pos": {
                "line": 776,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 3 - 46 * x ^ 2 + 235 * x) \u2192 deriv f 5 = 0 \u2227 deriv (deriv f) 5 < 0",
            "endPos": {
                "line": 776,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [hf]",
            "proofState": 445,
            "pos": {
                "line": 777,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 3 * x ^ 3 - 46 * x ^ 2 + 235 * x\n\u22a2 deriv f 5 = 0 \u2227 deriv (deriv f) 5 < 0",
            "endPos": {
                "line": 777,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 446,
            "pos": {
                "line": 778,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 3 * x ^ 3 - 46 * x ^ 2 + 235 * x\n\u22a2 deriv (fun x => 3 * x ^ 3 - 46 * x ^ 2 + 235 * x) 5 = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 3 - 46 * x ^ 2 + 235 * x) 5 < 0",
            "endPos": {
                "line": 778,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "rw [deriv_cubic]",
            "proofState": 447,
            "pos": {
                "line": 779,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nhf : f = fun x => 3 * x ^ 3 - 46 * x ^ 2 + 235 * x\n\u22a2 deriv (fun x => 3 * x ^ 3 - 46 * x ^ 2 + 235 * x) 5 = 0\ncase right\nf : \u211d \u2192 \u211d\nhf : f = fun x => 3 * x ^ 3 - 46 * x ^ 2 + 235 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 3 - 46 * x ^ 2 + 235 * x) 5 < 0",
            "endPos": {
                "line": 779,
                "column": 18
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 448,
            "pos": {
                "line": 787,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 4 - 2 * x ^ 3 - 69 * x ^ 2 + 392 * x) \u2192 deriv f 4 = 0 \u2227 deriv (deriv f) 4 > 0",
            "endPos": {
                "line": 787,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [h]",
            "proofState": 449,
            "pos": {
                "line": 788,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 2 * x ^ 3 - 69 * x ^ 2 + 392 * x\n\u22a2 deriv f 4 = 0 \u2227 deriv (deriv f) 4 > 0",
            "endPos": {
                "line": 788,
                "column": 8
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num [deriv_pow, deriv_sub, deriv_mul, deriv_add, deriv_id, deriv_const]",
            "proofState": 450,
            "pos": {
                "line": 789,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 2 * x ^ 3 - 69 * x ^ 2 + 392 * x\n\u22a2 deriv (fun x => x ^ 4 - 2 * x ^ 3 - 69 * x ^ 2 + 392 * x) 4 = 0 \u2227\n    deriv (deriv fun x => x ^ 4 - 2 * x ^ 3 - 69 * x ^ 2 + 392 * x) 4 > 0",
            "endPos": {
                "line": 789,
                "column": 78
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 451,
            "pos": {
                "line": 790,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 2 * x ^ 3 - 69 * x ^ 2 + 392 * x\n\u22a2 deriv (fun x => x ^ 4 - 2 * x ^ 3 - 69 * x ^ 2 + 392 * x) 4 = 0 \u2227\n    0 < deriv (deriv fun x => x ^ 4 - 2 * x ^ 3 - 69 * x ^ 2 + 392 * x) 4",
            "endPos": {
                "line": 790,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 452,
            "pos": {
                "line": 791,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 2 * x ^ 3 - 69 * x ^ 2 + 392 * x\n\u22a2 deriv (fun x => x ^ 4 - 2 * x ^ 3 - 69 * x ^ 2 + 392 * x) 4 = 0 \u2227\n    0 < deriv (deriv fun x => x ^ 4 - 2 * x ^ 3 - 69 * x ^ 2 + 392 * x) 4",
            "endPos": {
                "line": 791,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 453,
            "pos": {
                "line": 794,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 3 - 4 * x ^ 2 + 5 * x) \u2192 deriv f 1 = 0 \u2227 deriv (deriv f) 1 < 0",
            "endPos": {
                "line": 794,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_pow, deriv_sub, deriv_const, deriv_mul, deriv_id'', deriv_pow, deriv_sub, deriv_const,\n  deriv_mul, deriv_id'']",
            "proofState": 454,
            "pos": {
                "line": 795,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 3 - 4 * x ^ 2 + 5 * x\n\u22a2 deriv f 1 = 0 \u2227 deriv (deriv f) 1 < 0",
            "endPos": {
                "line": 796,
                "column": 50
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 455,
            "pos": {
                "line": 797,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 3 - 4 * x ^ 2 + 5 * x\n\u22a2 deriv (fun x => x ^ 3 - 4 * x ^ 2 + 5 * x) 1 = 0 \u2227 deriv (deriv fun x => x ^ 3 - 4 * x ^ 2 + 5 * x) 1 < 0",
            "endPos": {
                "line": 797,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 456,
            "pos": {
                "line": 798,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 3 - 4 * x ^ 2 + 5 * x\n\u22a2 deriv (fun x => x ^ 3 - 4 * x ^ 2 + 5 * x) 1 = 0 \u2227 deriv (deriv fun x => x ^ 3 - 4 * x ^ 2 + 5 * x) 1 < 0",
            "endPos": {
                "line": 798,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 457,
            "pos": {
                "line": 801,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 3 + 32 * x + 10 * x ^ 2) \u2192 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) < 0",
            "endPos": {
                "line": 801,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [hf]",
            "proofState": 458,
            "pos": {
                "line": 802,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 + 32 * x + 10 * x ^ 2\n\u22a2 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) < 0",
            "endPos": {
                "line": 802,
                "column": 16
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 459,
            "pos": {
                "line": 803,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 + 32 * x + 10 * x ^ 2\n\u22a2 deriv (fun x => x ^ 3 + 32 * x + 10 * x ^ 2) (-4) = 0 \u2227 deriv (deriv fun x => x ^ 3 + 32 * x + 10 * x ^ 2) (-4) < 0",
            "endPos": {
                "line": 803,
                "column": 13
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "Real.normedAddCommGroup",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "Real.instNeg",
                "Zero.toOfNat0",
                "NormedAddCommGroup.toAddCommGroup",
                "NontriviallyNormedField.toNormedField",
                "ENormedAddCommMonoid.toAddCommMonoid",
                "AddCommSemigroup.toAddCommMagma",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "OfNat.ofNat",
                "AddCommMonoid.toAddCommSemigroup",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "deriv_add",
                "RCLike.toInnerProductSpaceReal",
                "AddCommMagma.toAdd",
                "instHMul",
                "Real.instNatCast",
                "NormedAddCommGroup.toENormedAddCommMonoid"
            ],
            "tactic": "rw [deriv_add]",
            "proofState": 460,
            "pos": {
                "line": 804,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 + 32 * x + 10 * x ^ 2\n\u22a2 deriv (fun x => x ^ 3 + 32 * x + 10 * x ^ 2) (-4) = 0\ncase right\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 + 32 * x + 10 * x ^ 2\n\u22a2 deriv (deriv fun x => x ^ 3 + 32 * x + 10 * x ^ 2) (-4) < 0",
            "endPos": {
                "line": 804,
                "column": 16
            }
        },
        {
            "usedConstants": [],
            "tactic": "rw [deriv_pow]",
            "proofState": 461,
            "pos": {
                "line": 805,
                "column": 4
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 + 32 * x + 10 * x ^ 2\n\u22a2 deriv (fun x => x ^ 3 + 32 * x) (-4) + deriv (fun x => 10 * x ^ 2) (-4) = 0",
            "endPos": {
                "line": 805,
                "column": 18
            }
        },
        {
            "usedConstants": [],
            "tactic": "rw [deriv_add]",
            "proofState": 462,
            "pos": {
                "line": 817,
                "column": 4
            },
            "goals": "case left.hf\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 + 32 * x + 10 * x ^ 2\n\u22a2 DifferentiableAt \u211d (fun x => x ^ 3 + 32 * x) (-4)",
            "endPos": {
                "line": 817,
                "column": 18
            }
        },
        {
            "usedConstants": [
                "NormedCommRing.toNormedRing",
                "InnerProductSpace.toNormedSpace",
                "NegZeroClass.toNeg",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Real",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "Ring.toNonAssocRing",
                "Real.denselyNormedField",
                "Real.instRCLike",
                "congrArg",
                "DifferentiableAt",
                "NormedSpace.toModule",
                "AddGroupWithOne.toAddMonoidWithOne",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "Mathlib.Meta.NormNum.IsInt.neg_to_eq",
                "NormedRing.toNonUnitalNormedRing",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "Int.ofNat",
                "Real.instRing",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "instOfNatNat",
                "Int",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "Mathlib.Meta.NormNum.isInt_neg",
                "SubNegZeroMonoid.toNegZeroClass",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "Real.instMonoid",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "NormedAlgebra.toNormedSpace",
                "Ring.toAddCommGroup",
                "Nat",
                "NormedRing.toSeminormedRing",
                "True",
                "Real.instNeg",
                "eq_true",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "NonUnitalNonAssocSemiring.toDistrib",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "NontriviallyNormedField.toNormedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "AddCommGroup.toDivisionAddCommMonoid",
                "OfNat.ofNat",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "UniformSpace.toTopologicalSpace",
                "Semiring.toNonAssocSemiring",
                "Ring.toSemiring",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "True.intro",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 463,
            "pos": {
                "line": 836,
                "column": 2
            },
            "goals": "case left.hg\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 + 32 * x + 10 * x ^ 2\n\u22a2 DifferentiableAt \u211d (fun x => 10 * x ^ 2) (-4)",
            "endPos": {
                "line": 836,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 464,
            "pos": {
                "line": 840,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 4 - 48 * x ^ 2 - 128 * x) \u2192 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) = 0",
            "endPos": {
                "line": 840,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_const', deriv_pow'', deriv_sub, deriv_mul, deriv_add, deriv_neg, deriv_id'', pow_one, mul_one,\n  mul_zero, sub_zero, zero_add, zero_sub, neg_neg, neg_zero, zero_mul, add_zero, mul_assoc]",
            "proofState": 465,
            "pos": {
                "line": 841,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 4 - 48 * x ^ 2 - 128 * x\n\u22a2 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) = 0",
            "endPos": {
                "line": 843,
                "column": 34
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 466,
            "pos": {
                "line": 844,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 4 - 48 * x ^ 2 - 128 * x\n\u22a2 deriv (fun x => 2 * x ^ 4 - 48 * x ^ 2 - 128 * x) (-2) = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 4 - 48 * x ^ 2 - 128 * x) (-2) = 0",
            "endPos": {
                "line": 844,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 467,
            "pos": {
                "line": 845,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 4 - 48 * x ^ 2 - 128 * x\n\u22a2 deriv (fun x => 2 * x ^ 4 - 48 * x ^ 2 - 128 * x) (-2) = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 4 - 48 * x ^ 2 - 128 * x) (-2) = 0",
            "endPos": {
                "line": 845,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 468,
            "pos": {
                "line": 849,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 3 + 60 * x ^ 2 + 300 * x) \u2192 deriv f (-5) = 0 \u2227 deriv (deriv f) (-5) = 0",
            "endPos": {
                "line": 849,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all",
            "proofState": 469,
            "pos": {
                "line": 850,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 60 * x ^ 2 + 300 * x\n\u22a2 deriv f (-5) = 0 \u2227 deriv (deriv f) (-5) = 0",
            "endPos": {
                "line": 850,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 470,
            "pos": {
                "line": 851,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 60 * x ^ 2 + 300 * x\n\u22a2 deriv (fun x => 4 * x ^ 3 + 60 * x ^ 2 + 300 * x) (-5) = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 3 + 60 * x ^ 2 + 300 * x) (-5) = 0",
            "endPos": {
                "line": 851,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 471,
            "pos": {
                "line": 851,
                "column": 18
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 60 * x ^ 2 + 300 * x\n\u22a2 deriv (fun x => 4 * x ^ 3 + 60 * x ^ 2 + 300 * x) (-5) = 0",
            "endPos": {
                "line": 851,
                "column": 26
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 472,
            "pos": {
                "line": 851,
                "column": 18
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 60 * x ^ 2 + 300 * x\n\u22a2 deriv (deriv fun x => 4 * x ^ 3 + 60 * x ^ 2 + 300 * x) (-5) = 0",
            "endPos": {
                "line": 851,
                "column": 26
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [hasDerivAt_pow 3 (-5)]",
            "proofState": 473,
            "pos": {
                "line": 852,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 60 * x ^ 2 + 300 * x\n\u22a2 deriv (fun x => 4 * x ^ 3 + 60 * x ^ 2 + 300 * x) (-5) = 0",
            "endPos": {
                "line": 852,
                "column": 38
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [hasDerivAt_pow 3 (-5)]",
            "proofState": 474,
            "pos": {
                "line": 852,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 60 * x ^ 2 + 300 * x\n\u22a2 deriv (deriv fun x => 4 * x ^ 3 + 60 * x ^ 2 + 300 * x) (-5) = 0",
            "endPos": {
                "line": 852,
                "column": 38
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 475,
            "pos": {
                "line": 855,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 + 2 * x ^ 3 - 122 * x ^ 2 + 185 * x) \u2192\n    deriv f 1 = 0 \u2227 deriv (deriv f) 1 > 0",
            "endPos": {
                "line": 855,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_add, deriv_mul, deriv_pow, deriv_const, deriv_id'', deriv_sub, deriv_neg, zero_add, zero_sub,\n  zero_mul, sub_zero, mul_one, mul_zero, add_zero, sub_neg_eq_add, deriv_comp, deriv_exp, deriv_log, deriv_pow,\n  deriv_add, deriv_mul, deriv_const, deriv_id'', deriv_sub, deriv_neg, zero_add, zero_sub, zero_mul, sub_zero, mul_one,\n  mul_zero, add_zero, sub_neg_eq_add, deriv_comp, deriv_exp, deriv_log, deriv_pow, deriv_add, deriv_mul, deriv_const,\n  deriv_id'', deriv_sub, deriv_neg, zero_add, zero_sub, zero_mul, sub_zero, mul_one, mul_zero, add_zero, sub_neg_eq_add,\n  deriv_comp, deriv_exp, deriv_log, deriv_pow, deriv_add, deriv_mul, deriv_const, deriv_id'', deriv_sub, deriv_neg,\n  zero_add, zero_sub, zero_mul, sub_zero, mul_one, mul_zero, add_zero, sub_neg_eq_add]",
            "proofState": 476,
            "pos": {
                "line": 856,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 + 2 * x ^ 3 - 122 * x ^ 2 + 185 * x\n\u22a2 deriv f 1 = 0 \u2227 deriv (deriv f) 1 > 0",
            "endPos": {
                "line": 864,
                "column": 39
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 477,
            "pos": {
                "line": 865,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 + 2 * x ^ 3 - 122 * x ^ 2 + 185 * x\n\u22a2 deriv (fun x => 5 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 + 2 * x ^ 3 - 122 * x ^ 2 + 185 * x) 1 = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 + 2 * x ^ 3 - 122 * x ^ 2 + 185 * x) 1 > 0",
            "endPos": {
                "line": 865,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 478,
            "pos": {
                "line": 866,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 + 2 * x ^ 3 - 122 * x ^ 2 + 185 * x\n\u22a2 deriv (fun x => 5 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 + 2 * x ^ 3 - 122 * x ^ 2 + 185 * x) 1 = 0 \u2227\n    0 < deriv (deriv fun x => 5 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 + 2 * x ^ 3 - 122 * x ^ 2 + 185 * x) 1",
            "endPos": {
                "line": 866,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 479,
            "pos": {
                "line": 869,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 3 - 76 * x ^ 2 + 385 * x) \u2192 deriv f 5 = 0 \u2227 deriv (deriv f) 5 < 0",
            "endPos": {
                "line": 869,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [h]",
            "proofState": 480,
            "pos": {
                "line": 870,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 3 - 76 * x ^ 2 + 385 * x\n\u22a2 deriv f 5 = 0 \u2227 deriv (deriv f) 5 < 0",
            "endPos": {
                "line": 870,
                "column": 15
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 481,
            "pos": {
                "line": 871,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 3 - 76 * x ^ 2 + 385 * x\n\u22a2 deriv (fun x => 5 * x ^ 3 - 76 * x ^ 2 + 385 * x) 5 = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 3 - 76 * x ^ 2 + 385 * x) 5 < 0",
            "endPos": {
                "line": 871,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_sub, deriv_const, deriv_pow, deriv_mul, deriv_id]",
            "proofState": 482,
            "pos": {
                "line": 872,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 3 - 76 * x ^ 2 + 385 * x\n\u22a2 deriv (fun x => 5 * x ^ 3 - 76 * x ^ 2 + 385 * x) 5 = 0\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 3 - 76 * x ^ 2 + 385 * x\n\u22a2 deriv (deriv fun x => 5 * x ^ 3 - 76 * x ^ 2 + 385 * x) 5 < 0",
            "endPos": {
                "line": 872,
                "column": 63
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 483,
            "pos": {
                "line": 878,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 6 + 4 * x ^ 5 + 5 * x ^ 4 - x ^ 3 - 105 * x - 69 * x ^ 2) \u2192\n    deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) < 0",
            "endPos": {
                "line": 878,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_const, deriv_add, deriv_sub, deriv_mul, deriv_pow, deriv_id'', Nat.cast_bit1, Nat.cast_bit0,\n  Nat.cast_one, Nat.cast_zero, Nat.cast_mul, Nat.cast_ofNat]",
            "proofState": 484,
            "pos": {
                "line": 879,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 + 4 * x ^ 5 + 5 * x ^ 4 - x ^ 3 - 105 * x - 69 * x ^ 2\n\u22a2 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) < 0",
            "endPos": {
                "line": 880,
                "column": 92
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 485,
            "pos": {
                "line": 881,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 + 4 * x ^ 5 + 5 * x ^ 4 - x ^ 3 - 105 * x - 69 * x ^ 2\n\u22a2 deriv (fun x => 5 * x ^ 6 + 4 * x ^ 5 + 5 * x ^ 4 - x ^ 3 - 105 * x - 69 * x ^ 2) (-1) = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 6 + 4 * x ^ 5 + 5 * x ^ 4 - x ^ 3 - 105 * x - 69 * x ^ 2) (-1) < 0",
            "endPos": {
                "line": 881,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp_all",
            "proofState": 486,
            "pos": {
                "line": 882,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 + 4 * x ^ 5 + 5 * x ^ 4 - x ^ 3 - 105 * x - 69 * x ^ 2\n\u22a2 deriv (fun x => 5 * x ^ 6 + 4 * x ^ 5 + 5 * x ^ 4 - x ^ 3 - 105 * x - 69 * x ^ 2) (-1) = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 6 + 4 * x ^ 5 + 5 * x ^ 4 - x ^ 3 - 105 * x - 69 * x ^ 2) (-1) < 0",
            "endPos": {
                "line": 882,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 487,
            "pos": {
                "line": 887,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 - 4 * x ^ 3 + 289872 * x - 29520 * x ^ 2) \u2192\n    deriv f 6 = 0 \u2227 deriv (deriv f) 6 = 0",
            "endPos": {
                "line": 887,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "Eq.mp",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "_private.0._proof_1",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [Function.funext_iff, deriv_sub, deriv_const', deriv_add, deriv_mul, deriv_pow, deriv_C, deriv_X,\n  zero_mul, zero_add, zero_sub, sub_zero, mul_one, mul_zero, sub_self, add_zero]",
            "proofState": 488,
            "pos": {
                "line": 888,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 - 4 * x ^ 3 + 289872 * x - 29520 * x ^ 2\n\u22a2 deriv f 6 = 0 \u2227 deriv (deriv f) 6 = 0",
            "endPos": {
                "line": 890,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 489,
            "pos": {
                "line": 891,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : \u2200 (x : \u211d), f x = 2 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 - 4 * x ^ 3 + 289872 * x - 29520 * x ^ 2\n\u22a2 deriv f 6 = 0 \u2227 deriv (deriv f) 6 = 0",
            "endPos": {
                "line": 891,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 490,
            "pos": {
                "line": 892,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : \u2200 (x : \u211d), f x = 2 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 - 4 * x ^ 3 + 289872 * x - 29520 * x ^ 2\n\u22a2 deriv f 6 = 0 \u2227 deriv (deriv f) 6 = 0",
            "endPos": {
                "line": 892,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 491,
            "pos": {
                "line": 895,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 2 - 4 * x) \u2192 deriv f 1 = 0 \u2227 deriv (deriv f) 1 > 0",
            "endPos": {
                "line": 895,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all",
            "proofState": 492,
            "pos": {
                "line": 896,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 4 * x\n\u22a2 deriv f 1 = 0 \u2227 deriv (deriv f) 1 > 0",
            "endPos": {
                "line": 896,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 493,
            "pos": {
                "line": 897,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 4 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 4 * x) 1 = 0 \u2227 0 < deriv (deriv fun x => 2 * x ^ 2 - 4 * x) 1",
            "endPos": {
                "line": 897,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 494,
            "pos": {
                "line": 898,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 4 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 4 * x) 1 = 0\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 4 * x\n\u22a2 0 < deriv (deriv fun x => 2 * x ^ 2 - 4 * x) 1",
            "endPos": {
                "line": 898,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 495,
            "pos": {
                "line": 899,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 4 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 4 * x) 1 = 0",
            "endPos": {
                "line": 899,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_sq_pos (fun x : \u211d => 2 * x ^ 2 - 4 * x) 1]",
            "proofState": 496,
            "pos": {
                "line": 900,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 4 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 4 * x) 1 = 0",
            "endPos": {
                "line": 900,
                "column": 62
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 497,
            "pos": {
                "line": 906,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 5 + 2 * x ^ 3 + 45 * x ^ 2 + 64 * x) \u2192 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) < 0",
            "endPos": {
                "line": 906,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "Eq.mp",
                "id",
                "CommMagma.toMul",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "funext",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "mul_comm",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_const, zero_add, zero_mul, zero_sub, sub_zero, mul_one, mul_zero, mul_neg, mul_assoc, mul_comm,\n  mul_left_comm]",
            "proofState": 498,
            "pos": {
                "line": 907,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 5 + 2 * x ^ 3 + 45 * x ^ 2 + 64 * x\n\u22a2 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) < 0",
            "endPos": {
                "line": 908,
                "column": 48
            }
        },
        {
            "usedConstants": [
                "Mathlib.Meta.NormNum.isInt_pow",
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NegZeroClass.toNeg",
                "NormedCommRing.toSeminormedCommRing",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Mathlib.Meta.NormNum.isNat_add",
                "Real",
                "Mathlib.Meta.NormNum.instAddMonoidWithOne",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "pow_two",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "Mathlib.Meta.NormNum.intPow_negOfNat_bit1",
                "Ring.toNonAssocRing",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Monoid.toMulOneClass",
                "Real.instRCLike",
                "MulOneClass.toMul",
                "congrArg",
                "DifferentiableAt",
                "deriv",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "Mathlib.Meta.NormNum.one_natPow",
                "Real.instLT",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "NormedField.toField",
                "Mathlib.Meta.NormNum.isNat_natSub",
                "Monoid.toNatPow",
                "Mathlib.Meta.NormNum.IsInt.neg_to_eq",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "pow_three",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "Int.ofNat",
                "Real.instAddGroup",
                "Real.instRing",
                "CommMagma.toMul",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Int",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "Mathlib.Meta.NormNum.isInt_mul",
                "Mathlib.Meta.NormNum.isInt_neg",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_natCast",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "Nat.cast",
                "Field.toSemifield",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "Real.instAdd",
                "NonUnitalNonAssocRing.toHasDistribNeg",
                "Real.instOne",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Add.0._proof_1",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "funext",
                "instHAdd",
                "And",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "AddGroup.toSubNegMonoid",
                "HPow.hPow",
                "Real.normedCommRing",
                "neg_add_cancel",
                "deriv_const",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "congrFun",
                "Mathlib.Meta.NormNum.IsInt.to_isNat",
                "Ring.toAddCommGroup",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "AddZeroClass.toZero",
                "NormedRing.toSeminormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
                "LT.lt",
                "True",
                "Real.instNeg",
                "eq_self",
                "Mathlib.Meta.NormNum.IsNat.to_eq",
                "Mathlib.Meta.NormNum.intPow_negOfNat_bit0",
                "eq_true",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "Mathlib.Meta.NormNum.isNat_mul",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "Mathlib.Meta.NormNum.isInt_add",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "NontriviallyNormedField.toNormedField",
                "neg_mul",
                "ENormedAddCommMonoid.toAddCommMonoid",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "AddCommSemigroup.toAddCommMagma",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "HasDistribNeg.toInvolutiveNeg",
                "SubNegMonoid.toAddMonoid",
                "mul_one",
                "AddCommGroup.toDivisionAddCommMonoid",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "InvolutiveNeg.toNeg",
                "add_zero",
                "deriv_pow''",
                "OfNat.ofNat",
                "AddCommMonoid.toAddCommSemigroup",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Ring.toSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Nat.cast_one",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "one_mul",
                "deriv_add",
                "MonoidWithZero.toMonoid",
                "true_and",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "mul_neg",
                "MulZeroClass.toZero",
                "AddCommMagma.toAdd",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "True.intro",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast",
                "NormedAddCommGroup.toENormedAddCommMonoid"
            ],
            "tactic": "norm_num [deriv_add, deriv_mul, deriv_pow, deriv_const, deriv_id, deriv_neg, pow_one, pow_two, pow_three]",
            "proofState": 499,
            "pos": {
                "line": 909,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 * 4 + x ^ 3 * 2 + x ^ 2 * 45 + x * 64\n\u22a2 deriv (fun x => x ^ 5 * 4 + x ^ 3 * 2 + x ^ 2 * 45 + x * 64) (-1) = 0 \u2227\n    deriv (deriv fun x => x ^ 5 * 4 + x ^ 3 * 2 + x ^ 2 * 45 + x * 64) (-1) < 0",
            "endPos": {
                "line": 910,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "constructor",
            "proofState": 500,
            "pos": {
                "line": 911,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 * 4 + x ^ 3 * 2 + x ^ 2 * 45 + x * 64\n\u22a2 deriv (deriv fun x => x ^ 5 * 4 + x * (x * x) * 2 + x * x * 45 + x * 64) (-1) < 0",
            "endPos": {
                "line": 911,
                "column": 13
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 501,
            "pos": {
                "line": 914,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 5 - 4 * x ^ 4 - 2 * x ^ 3 + 9470 * x ^ 2 + 84480 * x) \u2192\n    deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) > 0",
            "endPos": {
                "line": 914,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "Eq.mp",
                "id",
                "CommMagma.toMul",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Real.instAdd",
                "Real.instMonoid",
                "funext",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "Real.instNeg",
                "mul_comm",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, one_div, mul_neg, mul_one, mul_add, mul_sub, sub_neg_eq_add, mul_assoc, mul_comm]",
            "proofState": 502,
            "pos": {
                "line": 915,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 5 - 4 * x ^ 4 - 2 * x ^ 3 + 9470 * x ^ 2 + 84480 * x\n\u22a2 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) > 0",
            "endPos": {
                "line": 916,
                "column": 24
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 503,
            "pos": {
                "line": 917,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 * 4 - x ^ 4 * 4 - x ^ 3 * 2 + x ^ 2 * 9470 + x * 84480\n\u22a2 deriv (fun x => x ^ 5 * 4 - x ^ 4 * 4 - x ^ 3 * 2 + x ^ 2 * 9470 + x * 84480) (-6) = 0 \u2227\n    deriv (deriv fun x => x ^ 5 * 4 - x ^ 4 * 4 - x ^ 3 * 2 + x ^ 2 * 9470 + x * 84480) (-6) > 0",
            "endPos": {
                "line": 917,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num [deriv]",
            "proofState": 504,
            "pos": {
                "line": 918,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 * 4 - x ^ 4 * 4 - x ^ 3 * 2 + x ^ 2 * 9470 + x * 84480\n\u22a2 deriv (fun x => x ^ 5 * 4 - x ^ 4 * 4 - x ^ 3 * 2 + x ^ 2 * 9470 + x * 84480) (-6) = 0\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 * 4 - x ^ 4 * 4 - x ^ 3 * 2 + x ^ 2 * 9470 + x * 84480\n\u22a2 deriv (deriv fun x => x ^ 5 * 4 - x ^ 4 * 4 - x ^ 3 * 2 + x ^ 2 * 9470 + x * 84480) (-6) > 0",
            "endPos": {
                "line": 918,
                "column": 18
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 505,
            "pos": {
                "line": 923,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 6 + 5 * x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 + 290 * x ^ 2 + 822 * x) \u2192\n    deriv f (-3) = 0 \u2227 deriv (deriv f) (-3) > 0",
            "endPos": {
                "line": 923,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_pow, deriv_add, deriv_mul, deriv_const, deriv_pow, deriv_add, deriv_mul, deriv_const, deriv_pow,\n  deriv_add, deriv_mul, deriv_const, deriv_pow, deriv_add, deriv_mul, deriv_const, deriv_pow, deriv_add, deriv_mul,\n  deriv_const]",
            "proofState": 506,
            "pos": {
                "line": 924,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 6 + 5 * x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 + 290 * x ^ 2 + 822 * x\n\u22a2 deriv f (-3) = 0 \u2227 deriv (deriv f) (-3) > 0",
            "endPos": {
                "line": 926,
                "column": 84
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 507,
            "pos": {
                "line": 927,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 6 + 5 * x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 + 290 * x ^ 2 + 822 * x\n\u22a2 deriv (fun x => x ^ 6 + 5 * x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 + 290 * x ^ 2 + 822 * x) (-3) = 0 \u2227\n    deriv (deriv fun x => x ^ 6 + 5 * x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 + 290 * x ^ 2 + 822 * x) (-3) > 0",
            "endPos": {
                "line": 927,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 508,
            "pos": {
                "line": 928,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 6 + 5 * x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 + 290 * x ^ 2 + 822 * x\n\u22a2 deriv (fun x => x ^ 6 + 5 * x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 + 290 * x ^ 2 + 822 * x) (-3) = 0 \u2227\n    0 < deriv (deriv fun x => x ^ 6 + 5 * x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 + 290 * x ^ 2 + 822 * x) (-3)",
            "endPos": {
                "line": 928,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 509,
            "pos": {
                "line": 931,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 3 - 89 * x ^ 2 + 528 * x) \u2192 deriv f 6 = 0 \u2227 deriv (deriv f) 6 > 0",
            "endPos": {
                "line": 931,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [hf]",
            "proofState": 510,
            "pos": {
                "line": 932,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 3 - 89 * x ^ 2 + 528 * x\n\u22a2 deriv f 6 = 0 \u2227 deriv (deriv f) 6 > 0",
            "endPos": {
                "line": 932,
                "column": 16
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 511,
            "pos": {
                "line": 933,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 3 - 89 * x ^ 2 + 528 * x\n\u22a2 deriv (fun x => 5 * x ^ 3 - 89 * x ^ 2 + 528 * x) 6 = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 3 - 89 * x ^ 2 + 528 * x) 6 > 0",
            "endPos": {
                "line": 933,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num [deriv_sub, deriv_const, deriv_mul, deriv_pow]",
            "proofState": 512,
            "pos": {
                "line": 934,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 3 - 89 * x ^ 2 + 528 * x\n\u22a2 deriv (fun x => 5 * x ^ 3 - 89 * x ^ 2 + 528 * x) 6 = 0",
            "endPos": {
                "line": 934,
                "column": 61
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num [deriv_sub, deriv_const, deriv_mul, deriv_pow]",
            "proofState": 513,
            "pos": {
                "line": 934,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 3 - 89 * x ^ 2 + 528 * x\n\u22a2 deriv (deriv fun x => 5 * x ^ 3 - 89 * x ^ 2 + 528 * x) 6 > 0",
            "endPos": {
                "line": 934,
                "column": 61
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 514,
            "pos": {
                "line": 935,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 3 - 89 * x ^ 2 + 528 * x\n\u22a2 deriv (fun x => 5 * x ^ 3 - 89 * x ^ 2 + 528 * x) 6 = 0",
            "endPos": {
                "line": 935,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 515,
            "pos": {
                "line": 935,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 3 - 89 * x ^ 2 + 528 * x\n\u22a2 0 < deriv (deriv fun x => 5 * x ^ 3 - 89 * x ^ 2 + 528 * x) 6",
            "endPos": {
                "line": 935,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 516,
            "pos": {
                "line": 940,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 5 - 5 * x ^ 4 + 2 * x ^ 3 - 28 * x ^ 2 + 45 * x) \u2192 deriv f 1 = 0 \u2227 deriv (deriv f) 1 < 0",
            "endPos": {
                "line": 940,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [hf]",
            "proofState": 517,
            "pos": {
                "line": 941,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 5 - 5 * x ^ 4 + 2 * x ^ 3 - 28 * x ^ 2 + 45 * x\n\u22a2 deriv f 1 = 0 \u2227 deriv (deriv f) 1 < 0",
            "endPos": {
                "line": 941,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 518,
            "pos": {
                "line": 942,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 5 - 5 * x ^ 4 + 2 * x ^ 3 - 28 * x ^ 2 + 45 * x\n\u22a2 deriv (fun x => 5 * x ^ 5 - 5 * x ^ 4 + 2 * x ^ 3 - 28 * x ^ 2 + 45 * x) 1 = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 5 - 5 * x ^ 4 + 2 * x ^ 3 - 28 * x ^ 2 + 45 * x) 1 < 0",
            "endPos": {
                "line": 942,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_const, deriv_sub, deriv_add, deriv_mul, deriv_pow, mul_one, sub_self, zero_add]",
            "proofState": 519,
            "pos": {
                "line": 943,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 5 - 5 * x ^ 4 + 2 * x ^ 3 - 28 * x ^ 2 + 45 * x\n\u22a2 deriv (fun x => 5 * x ^ 5 - 5 * x ^ 4 + 2 * x ^ 3 - 28 * x ^ 2 + 45 * x) 1 = 0\ncase right\nf : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 5 - 5 * x ^ 4 + 2 * x ^ 3 - 28 * x ^ 2 + 45 * x\n\u22a2 deriv (deriv fun x => 5 * x ^ 5 - 5 * x ^ 4 + 2 * x ^ 3 - 28 * x ^ 2 + 45 * x) 1 < 0",
            "endPos": {
                "line": 943,
                "column": 93
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 520,
            "pos": {
                "line": 949,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 3 - 18 * x ^ 2 + 54 * x) \u2192 deriv f 3 = 0 \u2227 deriv (deriv f) 3 = 0",
            "endPos": {
                "line": 949,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [h]",
            "proofState": 521,
            "pos": {
                "line": 950,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 3 - 18 * x ^ 2 + 54 * x\n\u22a2 deriv f 3 = 0 \u2227 deriv (deriv f) 3 = 0",
            "endPos": {
                "line": 950,
                "column": 8
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "pow_two",
                "Real.denselyNormedField",
                "Real.instZero",
                "Monoid.toMulOneClass",
                "Real.instRCLike",
                "MulOneClass.toMul",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "pow_three",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "funext",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [deriv_sub, deriv_const, deriv_pow, deriv_mul, deriv_id'', zero_sub, zero_add, zero_mul, sub_zero, pow_one,\n  pow_two, pow_three]",
            "proofState": 522,
            "pos": {
                "line": 951,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 3 - 18 * x ^ 2 + 54 * x\n\u22a2 deriv (fun x => 2 * x ^ 3 - 18 * x ^ 2 + 54 * x) 3 = 0 \u2227 deriv (deriv fun x => 2 * x ^ 3 - 18 * x ^ 2 + 54 * x) 3 = 0",
            "endPos": {
                "line": 952,
                "column": 52
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 523,
            "pos": {
                "line": 953,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 3 - 18 * x ^ 2 + 54 * x\n\u22a2 deriv (fun x => 2 * (x * (x * x)) - 18 * (x * x) + 54 * x) 3 = 0 \u2227\n    deriv (deriv fun x => 2 * (x * (x * x)) - 18 * (x * x) + 54 * x) 3 = 0",
            "endPos": {
                "line": 953,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 524,
            "pos": {
                "line": 953,
                "column": 18
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 3 - 18 * x ^ 2 + 54 * x\n\u22a2 deriv (fun x => 2 * (x * (x * x)) - 18 * (x * x) + 54 * x) 3 = 0",
            "endPos": {
                "line": 953,
                "column": 26
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 525,
            "pos": {
                "line": 953,
                "column": 18
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 3 - 18 * x ^ 2 + 54 * x\n\u22a2 deriv (deriv fun x => 2 * (x * (x * x)) - 18 * (x * x) + 54 * x) 3 = 0",
            "endPos": {
                "line": 953,
                "column": 26
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 526,
            "pos": {
                "line": 954,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 3 - 18 * x ^ 2 + 54 * x\n\u22a2 deriv (fun x => 2 * (x * (x * x)) - 18 * (x * x) + 54 * x) 3 = 0",
            "endPos": {
                "line": 954,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 527,
            "pos": {
                "line": 954,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 3 - 18 * x ^ 2 + 54 * x\n\u22a2 deriv (deriv fun x => 2 * (x * (x * x)) - 18 * (x * x) + 54 * x) 3 = 0",
            "endPos": {
                "line": 954,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 528,
            "pos": {
                "line": 957,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 3 - 38 * x ^ 2 + 160 * x) \u2192 deriv f 4 = 0 \u2227 deriv (deriv f) 4 < 0",
            "endPos": {
                "line": 957,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all",
            "proofState": 529,
            "pos": {
                "line": 958,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 - 38 * x ^ 2 + 160 * x\n\u22a2 deriv f 4 = 0 \u2227 deriv (deriv f) 4 < 0",
            "endPos": {
                "line": 958,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 530,
            "pos": {
                "line": 959,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 - 38 * x ^ 2 + 160 * x\n\u22a2 deriv (fun x => 3 * x ^ 3 - 38 * x ^ 2 + 160 * x) 4 = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 3 - 38 * x ^ 2 + 160 * x) 4 < 0",
            "endPos": {
                "line": 959,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num [deriv_pow, deriv_mul, deriv_const, deriv_id, deriv_sub, deriv_add, deriv_pow, deriv_mul, deriv_const,\n  deriv_id, deriv_sub, deriv_add]",
            "proofState": 531,
            "pos": {
                "line": 960,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 - 38 * x ^ 2 + 160 * x\n\u22a2 deriv (fun x => 3 * x ^ 3 - 38 * x ^ 2 + 160 * x) 4 = 0\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 - 38 * x ^ 2 + 160 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 3 - 38 * x ^ 2 + 160 * x) 4 < 0",
            "endPos": {
                "line": 960,
                "column": 145
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num [deriv_pow, deriv_mul, deriv_const, deriv_id, deriv_sub, deriv_add, deriv_pow, deriv_mul, deriv_const,\n  deriv_id, deriv_sub, deriv_add]",
            "proofState": 532,
            "pos": {
                "line": 961,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 - 38 * x ^ 2 + 160 * x\n\u22a2 deriv (fun x => 3 * x ^ 3 - 38 * x ^ 2 + 160 * x) 4 = 0",
            "endPos": {
                "line": 961,
                "column": 145
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 533,
            "pos": {
                "line": 962,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 - 38 * x ^ 2 + 160 * x\n\u22a2 deriv (fun x => 3 * x ^ 3 - 38 * x ^ 2 + 160 * x) 4 = 0",
            "endPos": {
                "line": 962,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 534,
            "pos": {
                "line": 965,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 6 - 3 * x ^ 5 - 50624 * x ^ 2 - 403115 * x) \u2192 deriv f (-5) = 0 \u2227 deriv (deriv f) (-5) > 0",
            "endPos": {
                "line": 965,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h]",
            "proofState": 535,
            "pos": {
                "line": 966,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - 3 * x ^ 5 - 50624 * x ^ 2 - 403115 * x\n\u22a2 deriv f (-5) = 0 \u2227 deriv (deriv f) (-5) > 0",
            "endPos": {
                "line": 966,
                "column": 19
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 536,
            "pos": {
                "line": 967,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - 3 * x ^ 5 - 50624 * x ^ 2 - 403115 * x\n\u22a2 deriv (fun x => 5 * x ^ 6 - 3 * x ^ 5 - 50624 * x ^ 2 - 403115 * x) (-5) = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 6 - 3 * x ^ 5 - 50624 * x ^ 2 - 403115 * x) (-5) > 0",
            "endPos": {
                "line": 967,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 537,
            "pos": {
                "line": 968,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - 3 * x ^ 5 - 50624 * x ^ 2 - 403115 * x\n\u22a2 deriv (fun x => 5 * x ^ 6 - 3 * x ^ 5 - 50624 * x ^ 2 - 403115 * x) (-5) = 0",
            "endPos": {
                "line": 968,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 538,
            "pos": {
                "line": 968,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - 3 * x ^ 5 - 50624 * x ^ 2 - 403115 * x\n\u22a2 deriv (deriv fun x => 5 * x ^ 6 - 3 * x ^ 5 - 50624 * x ^ 2 - 403115 * x) (-5) > 0",
            "endPos": {
                "line": 968,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "nlinarith",
            "proofState": 539,
            "pos": {
                "line": 969,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - 3 * x ^ 5 - 50624 * x ^ 2 - 403115 * x\n\u22a2 deriv (fun x => 5 * x ^ 6 - 3 * x ^ 5 - 50624 * x ^ 2 - 403115 * x) (-5) = 0",
            "endPos": {
                "line": 969,
                "column": 15
            }
        },
        {
            "usedConstants": [],
            "tactic": "nlinarith",
            "proofState": 540,
            "pos": {
                "line": 969,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - 3 * x ^ 5 - 50624 * x ^ 2 - 403115 * x\n\u22a2 0 < deriv (deriv fun x => 5 * x ^ 6 - 3 * x ^ 5 - 50624 * x ^ 2 - 403115 * x) (-5)",
            "endPos": {
                "line": 969,
                "column": 15
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 541,
            "pos": {
                "line": 996,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 6 + 5 * x ^ 5 + x ^ 4 - 107 * x ^ 2 - 412 * x) \u2192 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) < 0",
            "endPos": {
                "line": 996,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [h]",
            "proofState": 542,
            "pos": {
                "line": 997,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 + 5 * x ^ 5 + x ^ 4 - 107 * x ^ 2 - 412 * x\n\u22a2 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) < 0",
            "endPos": {
                "line": 997,
                "column": 8
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num [deriv_add, deriv_mul, deriv_const, deriv_pow, Nat.cast_zero, Nat.cast_one, Nat.cast_bit0, Nat.cast_bit1,\n  Nat.cast_ofNat]",
            "proofState": 543,
            "pos": {
                "line": 998,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 + 5 * x ^ 5 + x ^ 4 - 107 * x ^ 2 - 412 * x\n\u22a2 deriv (fun x => 2 * x ^ 6 + 5 * x ^ 5 + x ^ 4 - 107 * x ^ 2 - 412 * x) (-2) = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 6 + 5 * x ^ 5 + x ^ 4 - 107 * x ^ 2 - 412 * x) (-2) < 0",
            "endPos": {
                "line": 998,
                "column": 132
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp_all",
            "proofState": 544,
            "pos": {
                "line": 999,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 + 5 * x ^ 5 + x ^ 4 - 107 * x ^ 2 - 412 * x\n\u22a2 deriv (fun x => 2 * x ^ 6 + 5 * x ^ 5 + x ^ 4 - 107 * x ^ 2 - 412 * x) (-2) = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 6 + 5 * x ^ 5 + x ^ 4 - 107 * x ^ 2 - 412 * x) (-2) < 0",
            "endPos": {
                "line": 999,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 545,
            "pos": {
                "line": 1003,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 4 - 55 * x ^ 2 + 222 * x) \u2192 deriv f 3 = 0 \u2227 deriv (deriv f) 3 < 0",
            "endPos": {
                "line": 1003,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_add, deriv_pow, deriv_const, deriv_mul, deriv_id'', deriv_pow, deriv_sub, deriv_const,\n  deriv_mul, deriv_id'']",
            "proofState": 546,
            "pos": {
                "line": 1004,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 55 * x ^ 2 + 222 * x\n\u22a2 deriv f 3 = 0 \u2227 deriv (deriv f) 3 < 0",
            "endPos": {
                "line": 1005,
                "column": 50
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 547,
            "pos": {
                "line": 1006,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 55 * x ^ 2 + 222 * x\n\u22a2 deriv (fun x => x ^ 4 - 55 * x ^ 2 + 222 * x) 3 = 0 \u2227 deriv (deriv fun x => x ^ 4 - 55 * x ^ 2 + 222 * x) 3 < 0",
            "endPos": {
                "line": 1006,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp_all",
            "proofState": 548,
            "pos": {
                "line": 1007,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 55 * x ^ 2 + 222 * x\n\u22a2 deriv (fun x => x ^ 4 - 55 * x ^ 2 + 222 * x) 3 = 0 \u2227 deriv (deriv fun x => x ^ 4 - 55 * x ^ 2 + 222 * x) 3 < 0",
            "endPos": {
                "line": 1007,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 549,
            "pos": {
                "line": 1011,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 6 - 4 * x ^ 5 + 6804 * x - 1350 * x ^ 2) \u2192 deriv f 3 = 0 \u2227 deriv (deriv f) 3 = 0",
            "endPos": {
                "line": 1011,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_const', deriv_add, deriv_sub, deriv_pow, deriv_mul, deriv_id'', deriv_pow, deriv_mul,\n  deriv_id'', deriv_pow, deriv_mul, deriv_id'']",
            "proofState": 550,
            "pos": {
                "line": 1012,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 - 4 * x ^ 5 + 6804 * x - 1350 * x ^ 2\n\u22a2 deriv f 3 = 0 \u2227 deriv (deriv f) 3 = 0",
            "endPos": {
                "line": 1013,
                "column": 71
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 551,
            "pos": {
                "line": 1014,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 - 4 * x ^ 5 + 6804 * x - 1350 * x ^ 2\n\u22a2 deriv (fun x => 2 * x ^ 6 - 4 * x ^ 5 + 6804 * x - 1350 * x ^ 2) 3 = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 6 - 4 * x ^ 5 + 6804 * x - 1350 * x ^ 2) 3 = 0",
            "endPos": {
                "line": 1014,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 552,
            "pos": {
                "line": 1014,
                "column": 18
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 - 4 * x ^ 5 + 6804 * x - 1350 * x ^ 2\n\u22a2 deriv (fun x => 2 * x ^ 6 - 4 * x ^ 5 + 6804 * x - 1350 * x ^ 2) 3 = 0",
            "endPos": {
                "line": 1014,
                "column": 26
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 553,
            "pos": {
                "line": 1014,
                "column": 18
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 - 4 * x ^ 5 + 6804 * x - 1350 * x ^ 2\n\u22a2 deriv (deriv fun x => 2 * x ^ 6 - 4 * x ^ 5 + 6804 * x - 1350 * x ^ 2) 3 = 0",
            "endPos": {
                "line": 1014,
                "column": 26
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp_all only [h, deriv_const', deriv_add, deriv_sub, deriv_pow, deriv_mul, deriv_id'', deriv_pow, deriv_mul,\n  deriv_id'']",
            "proofState": 554,
            "pos": {
                "line": 1015,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 - 4 * x ^ 5 + 6804 * x - 1350 * x ^ 2\n\u22a2 deriv (fun x => 2 * x ^ 6 - 4 * x ^ 5 + 6804 * x - 1350 * x ^ 2) 3 = 0",
            "endPos": {
                "line": 1016,
                "column": 37
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp_all only [h, deriv_const', deriv_add, deriv_sub, deriv_pow, deriv_mul, deriv_id'', deriv_pow, deriv_mul,\n  deriv_id'']",
            "proofState": 555,
            "pos": {
                "line": 1015,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 - 4 * x ^ 5 + 6804 * x - 1350 * x ^ 2\n\u22a2 deriv (deriv fun x => 2 * x ^ 6 - 4 * x ^ 5 + 6804 * x - 1350 * x ^ 2) 3 = 0",
            "endPos": {
                "line": 1016,
                "column": 37
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 556,
            "pos": {
                "line": 1020,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 2 - 6 * x) \u2192 deriv f 3 = 0 \u2227 deriv (deriv f) 3 > 0",
            "endPos": {
                "line": 1020,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_sub, deriv_pow, deriv_const, deriv_mul, deriv_id'', deriv_pow, deriv_sub, deriv_const, deriv_mul,\n  deriv_id'', deriv_pow, deriv_sub, deriv_const, deriv_mul, deriv_id'', deriv_pow, deriv_sub, deriv_const, deriv_mul,\n  deriv_id'', deriv_pow]",
            "proofState": 557,
            "pos": {
                "line": 1021,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 - 6 * x\n\u22a2 deriv f 3 = 0 \u2227 deriv (deriv f) 3 > 0",
            "endPos": {
                "line": 1023,
                "column": 84
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 558,
            "pos": {
                "line": 1024,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 - 6 * x\n\u22a2 deriv (fun x => x ^ 2 - 6 * x) 3 = 0 \u2227 deriv (deriv fun x => x ^ 2 - 6 * x) 3 > 0",
            "endPos": {
                "line": 1024,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 559,
            "pos": {
                "line": 1025,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 - 6 * x\n\u22a2 deriv (fun x => x ^ 2 - 6 * x) 3 = 0 \u2227 0 < deriv (deriv fun x => x ^ 2 - 6 * x) 3",
            "endPos": {
                "line": 1025,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 560,
            "pos": {
                "line": 1026,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 - 6 * x\n\u22a2 deriv (fun x => x ^ 2 - 6 * x) 3 = 0 \u2227 0 < deriv (deriv fun x => x ^ 2 - 6 * x) 3",
            "endPos": {
                "line": 1026,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 561,
            "pos": {
                "line": 1027,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 - 6 * x\n\u22a2 deriv (fun x => x ^ 2 - 6 * x) 3 = 0 \u2227 0 < deriv (deriv fun x => x ^ 2 - 6 * x) 3",
            "endPos": {
                "line": 1027,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 562,
            "pos": {
                "line": 1030,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 2 - 6 * x) \u2192 deriv f 3 = 0 \u2227 deriv (deriv f) 3 > 0",
            "endPos": {
                "line": 1030,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all",
            "proofState": 563,
            "pos": {
                "line": 1031,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 - 6 * x\n\u22a2 deriv f 3 = 0 \u2227 deriv (deriv f) 3 > 0",
            "endPos": {
                "line": 1031,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 564,
            "pos": {
                "line": 1032,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 - 6 * x\n\u22a2 deriv (fun x => x ^ 2 - 6 * x) 3 = 0 \u2227 0 < deriv (deriv fun x => x ^ 2 - 6 * x) 3",
            "endPos": {
                "line": 1032,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "rw [deriv_pow]",
            "proofState": 565,
            "pos": {
                "line": 1033,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 - 6 * x\n\u22a2 deriv (fun x => x ^ 2 - 6 * x) 3 = 0\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 - 6 * x\n\u22a2 0 < deriv (deriv fun x => x ^ 2 - 6 * x) 3",
            "endPos": {
                "line": 1033,
                "column": 16
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 566,
            "pos": {
                "line": 1043,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 2 - 24 * x) \u2192 deriv f 6 = 0 \u2227 deriv (deriv f) 6 > 0",
            "endPos": {
                "line": 1043,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h]",
            "proofState": 567,
            "pos": {
                "line": 1044,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv f 6 = 0 \u2227 deriv (deriv f) 6 > 0",
            "endPos": {
                "line": 1044,
                "column": 19
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 568,
            "pos": {
                "line": 1045,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 24 * x) 6 = 0 \u2227 deriv (deriv fun x => 2 * x ^ 2 - 24 * x) 6 > 0",
            "endPos": {
                "line": 1045,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 569,
            "pos": {
                "line": 1046,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 24 * x) 6 = 0",
            "endPos": {
                "line": 1046,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 570,
            "pos": {
                "line": 1046,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv (deriv fun x => 2 * x ^ 2 - 24 * x) 6 > 0",
            "endPos": {
                "line": 1046,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NegZeroClass.toNeg",
                "NormedCommRing.toSeminormedCommRing",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "Mathlib.Tactic.Ring.single_pow",
                "Real",
                "Mathlib.Tactic.RingNF.mul_neg",
                "HMul.hMul",
                "Nat.rawCast",
                "Ring.toNonAssocRing",
                "Mathlib.Tactic.Ring.mul_zero",
                "Mathlib.Tactic.Ring.mul_pf_left",
                "Real.denselyNormedField",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "AddGroupWithOne.toAddGroup",
                "Mathlib.Tactic.Ring.add_pf_add_gt",
                "congrArg",
                "CommSemiring.toSemiring",
                "Mathlib.Tactic.Ring.mul_pow",
                "deriv",
                "Mathlib.Tactic.Ring.neg_zero",
                "Mathlib.Tactic.Ring.mul_pf_right",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "Int.rawCast",
                "Mathlib.Tactic.Ring.one_mul",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Mathlib.Tactic.Ring.zero_mul",
                "Mathlib.Meta.NormNum.IsNat.of_raw",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "Mathlib.Tactic.Ring.instCommSemiringNat",
                "Monoid.toNatPow",
                "Mathlib.Tactic.Ring.neg_mul",
                "Mathlib.Tactic.Ring.sub_pf",
                "Mathlib.Tactic.Ring.neg_add",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Int.ofNat",
                "Real.instRing",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "instOfNatNat",
                "Int",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Mathlib.Tactic.Ring.sub_congr",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "Mathlib.Meta.NormNum.isInt_mul",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "Mathlib.Tactic.Ring.one_pow",
                "Nat.instAddMonoidWithOne",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "Mathlib.Tactic.Ring.mul_congr",
                "SubNegMonoid.toSub",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "funext",
                "Mathlib.Tactic.Ring.add_mul",
                "instHAdd",
                "Mathlib.Tactic.Ring.add_pf_add_zero",
                "instHSub",
                "instNatAtLeastTwo",
                "AddGroup.toSubNegMonoid",
                "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "HAdd.hAdd",
                "pow_one",
                "NonAssocSemiring.toNonUnitalNonAssocSemiring",
                "Ring.toAddCommGroup",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Mathlib.Tactic.Ring.pow_add",
                "Nat",
                "Real.instMul",
                "Mathlib.Tactic.Ring.mul_one",
                "congr",
                "AddZeroClass.toZero",
                "Nat.instCommSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "Eq.refl",
                "Mathlib.Meta.NormNum.IsInt.of_raw",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "Mathlib.Tactic.Ring.cast_pos",
                "Mathlib.Tactic.RingNF.nat_rawCast_1",
                "Mathlib.Tactic.Ring.atom_pf",
                "AddCommGroup.toDivisionAddCommMonoid",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "add_zero",
                "OfNat.ofNat",
                "Mathlib.Tactic.RingNF.int_rawCast_neg",
                "AddZeroClass.toAdd",
                "UniformSpace.toTopologicalSpace",
                "Semiring.toNonAssocSemiring",
                "Eq",
                "Mathlib.Tactic.Ring.neg_one_mul",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "MonoidWithZero.toMonoid",
                "Mathlib.Tactic.Ring.mul_add",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "MulZeroClass.toZero",
                "Real.instCommSemiring",
                "Mathlib.Tactic.Ring.pow_congr",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "Mathlib.Tactic.Ring.pow_zero",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "ring_nf",
            "proofState": 571,
            "pos": {
                "line": 1047,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 24 * x) 6 = 0",
            "endPos": {
                "line": 1047,
                "column": 13
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NegZeroClass.toNeg",
                "NormedCommRing.toSeminormedCommRing",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "Mathlib.Tactic.Ring.single_pow",
                "Real",
                "Mathlib.Tactic.RingNF.mul_neg",
                "HMul.hMul",
                "Nat.rawCast",
                "Ring.toNonAssocRing",
                "Mathlib.Tactic.Ring.mul_zero",
                "Mathlib.Tactic.Ring.mul_pf_left",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "AddGroupWithOne.toAddGroup",
                "Mathlib.Tactic.Ring.add_pf_add_gt",
                "congrArg",
                "CommSemiring.toSemiring",
                "Mathlib.Tactic.Ring.mul_pow",
                "deriv",
                "Mathlib.Tactic.Ring.neg_zero",
                "Real.instSub",
                "Mathlib.Tactic.Ring.mul_pf_right",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "Int.rawCast",
                "Mathlib.Tactic.Ring.one_mul",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Mathlib.Tactic.Ring.zero_mul",
                "Mathlib.Meta.NormNum.IsNat.of_raw",
                "Real.instLT",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "Mathlib.Tactic.Ring.instCommSemiringNat",
                "Monoid.toNatPow",
                "Mathlib.Tactic.Ring.neg_mul",
                "Mathlib.Tactic.Ring.sub_pf",
                "Mathlib.Tactic.Ring.neg_add",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Int.ofNat",
                "Real.instRing",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "instOfNatNat",
                "Int",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Mathlib.Tactic.Ring.sub_congr",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "Mathlib.Meta.NormNum.isInt_mul",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "Mathlib.Tactic.Ring.one_pow",
                "Nat.instAddMonoidWithOne",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "Mathlib.Tactic.Ring.mul_congr",
                "SubNegMonoid.toSub",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "funext",
                "Mathlib.Tactic.Ring.add_mul",
                "instHAdd",
                "Mathlib.Tactic.Ring.add_pf_add_zero",
                "instHSub",
                "instNatAtLeastTwo",
                "AddGroup.toSubNegMonoid",
                "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "HAdd.hAdd",
                "pow_one",
                "NonAssocSemiring.toNonUnitalNonAssocSemiring",
                "Ring.toAddCommGroup",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Mathlib.Tactic.Ring.pow_add",
                "Nat",
                "Real.instMul",
                "Mathlib.Tactic.Ring.mul_one",
                "congr",
                "AddZeroClass.toZero",
                "LT.lt",
                "Nat.instCommSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "Eq.refl",
                "Mathlib.Meta.NormNum.IsInt.of_raw",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "Mathlib.Tactic.Ring.cast_pos",
                "Mathlib.Tactic.RingNF.nat_rawCast_1",
                "Mathlib.Tactic.Ring.atom_pf",
                "AddCommGroup.toDivisionAddCommMonoid",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "add_zero",
                "OfNat.ofNat",
                "Mathlib.Tactic.RingNF.int_rawCast_neg",
                "AddZeroClass.toAdd",
                "UniformSpace.toTopologicalSpace",
                "Semiring.toNonAssocSemiring",
                "Eq",
                "Mathlib.Tactic.Ring.neg_one_mul",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "MonoidWithZero.toMonoid",
                "Mathlib.Tactic.Ring.mul_add",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "MulZeroClass.toZero",
                "Real.instCommSemiring",
                "Mathlib.Tactic.Ring.pow_congr",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "Mathlib.Tactic.Ring.pow_zero",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "ring_nf",
            "proofState": 572,
            "pos": {
                "line": 1047,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 0 < deriv (deriv fun x => 2 * x ^ 2 - 24 * x) 6",
            "endPos": {
                "line": 1047,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_sq_eq_iff_has_deriv_at.mp (hasDerivAt_pow 2 6)]",
            "proofState": 573,
            "pos": {
                "line": 1048,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv (fun x => -(x * 24) + x ^ 2 * 2) 6 = 0",
            "endPos": {
                "line": 1048,
                "column": 69
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_sq_eq_iff_has_deriv_at.mp (hasDerivAt_pow 2 6)]",
            "proofState": 574,
            "pos": {
                "line": 1048,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 0 < deriv (deriv fun x => -(x * 24) + x ^ 2 * 2) 6",
            "endPos": {
                "line": 1048,
                "column": 69
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 575,
            "pos": {
                "line": 1051,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 4 - 5 * x ^ 3 - 738 * x ^ 2 - 5724 * x) \u2192 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) = 0",
            "endPos": {
                "line": 1051,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_sub, deriv_const, deriv_mul, deriv_pow, Nat.cast_bit0, Nat.cast_one, deriv_add, deriv_id'',\n  deriv_neg, mul_one, mul_zero, sub_zero, zero_sub, zero_mul, one_mul, sub_neg_eq_add, zero_add, add_zero]",
            "proofState": 576,
            "pos": {
                "line": 1052,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 5 * x ^ 3 - 738 * x ^ 2 - 5724 * x\n\u22a2 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) = 0",
            "endPos": {
                "line": 1054,
                "column": 48
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 577,
            "pos": {
                "line": 1055,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 5 * x ^ 3 - 738 * x ^ 2 - 5724 * x\n\u22a2 deriv (fun x => 3 * x ^ 4 - 5 * x ^ 3 - 738 * x ^ 2 - 5724 * x) (-6) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 4 - 5 * x ^ 3 - 738 * x ^ 2 - 5724 * x) (-6) = 0",
            "endPos": {
                "line": 1055,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "apply And.intro",
            "proofState": 578,
            "pos": {
                "line": 1056,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 5 * x ^ 3 - 738 * x ^ 2 - 5724 * x\n\u22a2 deriv (fun x => 3 * x ^ 4 - 5 * x ^ 3 - 738 * x ^ 2 - 5724 * x) (-6) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 4 - 5 * x ^ 3 - 738 * x ^ 2 - 5724 * x) (-6) = 0",
            "endPos": {
                "line": 1056,
                "column": 17
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 579,
            "pos": {
                "line": 1056,
                "column": 22
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 5 * x ^ 3 - 738 * x ^ 2 - 5724 * x\n\u22a2 deriv (fun x => 3 * x ^ 4 - 5 * x ^ 3 - 738 * x ^ 2 - 5724 * x) (-6) = 0",
            "endPos": {
                "line": 1056,
                "column": 30
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 580,
            "pos": {
                "line": 1056,
                "column": 22
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 5 * x ^ 3 - 738 * x ^ 2 - 5724 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 4 - 5 * x ^ 3 - 738 * x ^ 2 - 5724 * x) (-6) = 0",
            "endPos": {
                "line": 1056,
                "column": 30
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 581,
            "pos": {
                "line": 1059,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 6 - 2 * x ^ 5 + x ^ 4 - 35150 * x ^ 2 + 282250 * x) \u2192 deriv f 5 = 0 \u2227 deriv (deriv f) 5 = 0",
            "endPos": {
                "line": 1059,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, zero_add, zero_sub, sub_zero, sub_neg_eq_add, sub_self, mul_zero, mul_one, mul_neg, mul_assoc]",
            "proofState": 582,
            "pos": {
                "line": 1060,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 - 2 * x ^ 5 + x ^ 4 - 35150 * x ^ 2 + 282250 * x\n\u22a2 deriv f 5 = 0 \u2227 deriv (deriv f) 5 = 0",
            "endPos": {
                "line": 1061,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 583,
            "pos": {
                "line": 1062,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 - 2 * x ^ 5 + x ^ 4 - 35150 * x ^ 2 + 282250 * x\n\u22a2 deriv (fun x => 4 * x ^ 6 - 2 * x ^ 5 + x ^ 4 - 35150 * x ^ 2 + 282250 * x) 5 = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 6 - 2 * x ^ 5 + x ^ 4 - 35150 * x ^ 2 + 282250 * x) 5 = 0",
            "endPos": {
                "line": 1062,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 584,
            "pos": {
                "line": 1063,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 - 2 * x ^ 5 + x ^ 4 - 35150 * x ^ 2 + 282250 * x\n\u22a2 deriv (fun x => 4 * x ^ 6 - 2 * x ^ 5 + x ^ 4 - 35150 * x ^ 2 + 282250 * x) 5 = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 6 - 2 * x ^ 5 + x ^ 4 - 35150 * x ^ 2 + 282250 * x) 5 = 0",
            "endPos": {
                "line": 1063,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 585,
            "pos": {
                "line": 1064,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 - 2 * x ^ 5 + x ^ 4 - 35150 * x ^ 2 + 282250 * x\n\u22a2 deriv (fun x => 4 * x ^ 6 - 2 * x ^ 5 + x ^ 4 - 35150 * x ^ 2 + 282250 * x) 5 = 0",
            "endPos": {
                "line": 1064,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 586,
            "pos": {
                "line": 1064,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 - 2 * x ^ 5 + x ^ 4 - 35150 * x ^ 2 + 282250 * x\n\u22a2 deriv (deriv fun x => 4 * x ^ 6 - 2 * x ^ 5 + x ^ 4 - 35150 * x ^ 2 + 282250 * x) 5 = 0",
            "endPos": {
                "line": 1064,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 587,
            "pos": {
                "line": 1065,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 - 2 * x ^ 5 + x ^ 4 - 35150 * x ^ 2 + 282250 * x\n\u22a2 deriv (fun x => 4 * x ^ 6 - 2 * x ^ 5 + x ^ 4 - 35150 * x ^ 2 + 282250 * x) 5 = 0",
            "endPos": {
                "line": 1065,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 588,
            "pos": {
                "line": 1065,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 - 2 * x ^ 5 + x ^ 4 - 35150 * x ^ 2 + 282250 * x\n\u22a2 deriv (deriv fun x => 4 * x ^ 6 - 2 * x ^ 5 + x ^ 4 - 35150 * x ^ 2 + 282250 * x) 5 = 0",
            "endPos": {
                "line": 1065,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 589,
            "pos": {
                "line": 1068,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 4 - 480 * x ^ 2 - 2560 * x) \u2192 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) = 0",
            "endPos": {
                "line": 1068,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [h]",
            "proofState": 590,
            "pos": {
                "line": 1069,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 480 * x ^ 2 - 2560 * x\n\u22a2 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) = 0",
            "endPos": {
                "line": 1069,
                "column": 15
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 591,
            "pos": {
                "line": 1070,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 480 * x ^ 2 - 2560 * x\n\u22a2 deriv (fun x => 5 * x ^ 4 - 480 * x ^ 2 - 2560 * x) (-4) = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 4 - 480 * x ^ 2 - 2560 * x) (-4) = 0",
            "endPos": {
                "line": 1070,
                "column": 13
            }
        },
        {
            "usedConstants": [
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Semigroup.toMul",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "HMul.hMul",
                "pow_two",
                "Real.denselyNormedField",
                "Real.instZero",
                "Monoid.toMulOneClass",
                "Real.instRCLike",
                "MulOneClass.toMul",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "mul_assoc",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "CommMagma.toMul",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Real.instMonoid",
                "funext",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "Real.instNeg",
                "mul_comm",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "Real.instSemigroup",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp [deriv_sub, deriv_const, deriv_mul, deriv_pow, pow_one, pow_two, pow_three, mul_assoc, mul_comm, mul_left_comm,\n  add_assoc, add_left_comm, add_comm]",
            "proofState": 592,
            "pos": {
                "line": 1071,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 480 * x ^ 2 - 2560 * x\n\u22a2 deriv (fun x => 5 * x ^ 4 - 480 * x ^ 2 - 2560 * x) (-4) = 0",
            "endPos": {
                "line": 1072,
                "column": 75
            }
        },
        {
            "usedConstants": [
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Semigroup.toMul",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "HMul.hMul",
                "pow_two",
                "Real.denselyNormedField",
                "Real.instZero",
                "Monoid.toMulOneClass",
                "Real.instRCLike",
                "MulOneClass.toMul",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "mul_assoc",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "CommMagma.toMul",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Real.instMonoid",
                "funext",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "Real.instNeg",
                "mul_comm",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "Real.instSemigroup",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp [deriv_sub, deriv_const, deriv_mul, deriv_pow, pow_one, pow_two, pow_three, mul_assoc, mul_comm, mul_left_comm,\n  add_assoc, add_left_comm, add_comm]",
            "proofState": 593,
            "pos": {
                "line": 1071,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 480 * x ^ 2 - 2560 * x\n\u22a2 deriv (deriv fun x => 5 * x ^ 4 - 480 * x ^ 2 - 2560 * x) (-4) = 0",
            "endPos": {
                "line": 1072,
                "column": 75
            }
        },
        {
            "usedConstants": [
                "Mathlib.Meta.NormNum.isInt_pow",
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "InnerProductSpace.toNormedSpace",
                "NegZeroClass.toNeg",
                "NormedCommRing.toSeminormedCommRing",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Semigroup.toMul",
                "Real",
                "Mathlib.Meta.NormNum.instAddMonoidWithOne",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "deriv_const'",
                "Mathlib.Meta.NormNum.intPow_negOfNat_bit1",
                "Ring.toNonAssocRing",
                "sub_self",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "congrArg",
                "Mathlib.Meta.NormNum.IsNatPowT.run",
                "DifferentiableAt",
                "deriv",
                "deriv_sub",
                "Real.instSub",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "NormedField.toField",
                "Mathlib.Meta.NormNum.isNat_natSub",
                "Monoid.toNatPow",
                "Mathlib.Meta.NormNum.IsInt.neg_to_eq",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "Int.ofNat",
                "Real.instAddGroup",
                "Mathlib.Meta.NormNum.IsNatPowT.bit0",
                "Real.instRing",
                "CommMagma.toMul",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Int",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "SubtractionMonoid.toSubNegMonoid",
                "Mathlib.Meta.NormNum.isInt_mul",
                "Mathlib.Meta.NormNum.isInt_neg",
                "NormedAddGroup.toAddGroup",
                "SubNegZeroMonoid.toNegZeroClass",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_natCast",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "Nat.cast",
                "Field.toSemifield",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "NonUnitalNonAssocRing.toHasDistribNeg",
                "SubNegMonoid.toSub",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Add.0._proof_25",
                "instHAdd",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "AddGroup.toSubNegMonoid",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "congrFun",
                "Mathlib.Meta.NormNum.IsInt.to_isNat",
                "Ring.toAddCommGroup",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "NormedAddCommGroup.toNormedAddGroup",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "AddZeroClass.toZero",
                "NormedRing.toSeminormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
                "True",
                "Real.instNeg",
                "eq_self",
                "Mathlib.Meta.NormNum.IsNat.to_eq",
                "Mathlib.Meta.NormNum.intPow_negOfNat_bit0",
                "eq_true",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "Mathlib.Meta.NormNum.isNat_mul",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "Mathlib.Meta.NormNum.isInt_add",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "NontriviallyNormedField.toNormedField",
                "neg_mul",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "Nat.cast_zero",
                "AddMonoidWithOne.toAddMonoid",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "HasDistribNeg.toInvolutiveNeg",
                "SubNegMonoid.toAddMonoid",
                "mul_one",
                "AddCommGroup.toDivisionAddCommMonoid",
                "Mathlib.Meta.NormNum.natPow_one",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "InvolutiveNeg.toNeg",
                "add_zero",
                "deriv_pow''",
                "OfNat.ofNat",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "Real.instSemigroup",
                "AddZeroClass.toAdd",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Ring.toSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Nat.cast_one",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "one_mul",
                "sub_neg_eq_add",
                "MonoidWithZero.toMonoid",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "mul_neg",
                "MulZeroClass.toZero",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "True.intro",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 594,
            "pos": {
                "line": 1073,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 480 * x ^ 2 - 2560 * x\n\u22a2 deriv (fun x => x ^ 4 * 5 - x * (x * 480) - x * 2560) (-4) = 0",
            "endPos": {
                "line": 1073,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 595,
            "pos": {
                "line": 1073,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 480 * x ^ 2 - 2560 * x\n\u22a2 deriv (deriv fun x => x ^ 4 * 5 - x * (x * 480) - x * 2560) (-4) = 0",
            "endPos": {
                "line": 1073,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 596,
            "pos": {
                "line": 1074,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 480 * x ^ 2 - 2560 * x\n\u22a2 deriv (deriv fun x => x ^ 4 * 5 - x * (x * 480) - x * 2560) (-4) = 0",
            "endPos": {
                "line": 1074,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 597,
            "pos": {
                "line": 1077,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 6 - 2 * x ^ 5 - x ^ 4) \u2192 deriv f 0 = 0 \u2227 deriv (deriv f) 0 = 0",
            "endPos": {
                "line": 1077,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp [h, deriv_pow, deriv_mul, deriv_sub, deriv_const, deriv_pow, deriv_mul, deriv_sub, deriv_const]",
            "proofState": 598,
            "pos": {
                "line": 1078,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 - 2 * x ^ 5 - x ^ 4\n\u22a2 deriv f 0 = 0 \u2227 deriv (deriv f) 0 = 0",
            "endPos": {
                "line": 1078,
                "column": 102
            }
        },
        {
            "usedConstants": [
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "deriv_const'",
                "Ring.toNonAssocRing",
                "sub_self",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "congrArg",
                "DifferentiableAt",
                "deriv",
                "deriv_sub",
                "Real.instSub",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "NormedField.toField",
                "Mathlib.Meta.NormNum.isNat_natSub",
                "Monoid.toNatPow",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "Real.instAddGroup",
                "Real.instRing",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "NormedAddGroup.toAddGroup",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_natCast",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "Nat.cast",
                "Field.toSemifield",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "Mathlib.Meta.NormNum.zero_natPow",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "SubNegMonoid.toSub",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Add.0._proof_25",
                "instHAdd",
                "And",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "AddGroup.toSubNegMonoid",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "congrFun",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "NormedAddCommGroup.toNormedAddGroup",
                "Real.instMul",
                "congr",
                "AddZeroClass.toZero",
                "NormedRing.toSeminormedRing",
                "True",
                "eq_self",
                "Mathlib.Meta.NormNum.IsNat.to_eq",
                "eq_true",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "Mathlib.Meta.NormNum.isNat_mul",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "NontriviallyNormedField.toNormedField",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "Nat.cast_zero",
                "AddMonoidWithOne.toAddMonoid",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "SubNegMonoid.toAddMonoid",
                "mul_one",
                "AddCommGroup.toDivisionAddCommMonoid",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "add_zero",
                "deriv_pow''",
                "OfNat.ofNat",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Nat.cast_one",
                "Mathlib.Meta.NormNum.isNat_pow",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "MonoidWithZero.toMonoid",
                "true_and",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "MulZeroClass.toZero",
                "True.intro",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 599,
            "pos": {
                "line": 1079,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 - 2 * x ^ 5 - x ^ 4\n\u22a2 deriv (fun x => 4 * x ^ 6 - 2 * x ^ 5 - x ^ 4) 0 = 0 \u2227 deriv (deriv fun x => 4 * x ^ 6 - 2 * x ^ 5 - x ^ 4) 0 = 0",
            "endPos": {
                "line": 1079,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 600,
            "pos": {
                "line": 1080,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 - 2 * x ^ 5 - x ^ 4\n\u22a2 deriv (deriv fun x => 4 * x ^ 6 - 2 * x ^ 5 - x ^ 4) 0 = 0",
            "endPos": {
                "line": 1080,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 601,
            "pos": {
                "line": 1083,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 2 - 12 * x) \u2192 deriv f 6 = 0 \u2227 deriv (deriv f) 6 > 0",
            "endPos": {
                "line": 1083,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all [deriv_pow, deriv_sub, deriv_const, deriv_mul, deriv_id, deriv_comp]",
            "proofState": 602,
            "pos": {
                "line": 1084,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 - 12 * x\n\u22a2 deriv f 6 = 0 \u2227 deriv (deriv f) 6 > 0",
            "endPos": {
                "line": 1084,
                "column": 79
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 603,
            "pos": {
                "line": 1085,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 - 12 * x\n\u22a2 deriv (fun x => x ^ 2 - 12 * x) 6 = 0 \u2227 0 < deriv (deriv fun x => x ^ 2 - 12 * x) 6",
            "endPos": {
                "line": 1085,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 604,
            "pos": {
                "line": 1086,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 - 12 * x\n\u22a2 deriv (fun x => x ^ 2 - 12 * x) 6 = 0 \u2227 0 < deriv (deriv fun x => x ^ 2 - 12 * x) 6",
            "endPos": {
                "line": 1086,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 605,
            "pos": {
                "line": 1087,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 - 12 * x\n\u22a2 deriv (fun x => x ^ 2 - 12 * x) 6 = 0 \u2227 0 < deriv (deriv fun x => x ^ 2 - 12 * x) 6",
            "endPos": {
                "line": 1087,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 606,
            "pos": {
                "line": 1090,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 - 3 * x ^ 3 - 9828 * x ^ 2 - 63376 * x) \u2192\n    deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) = 0",
            "endPos": {
                "line": 1090,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [h]",
            "proofState": 607,
            "pos": {
                "line": 1091,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 - 3 * x ^ 3 - 9828 * x ^ 2 - 63376 * x\n\u22a2 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) = 0",
            "endPos": {
                "line": 1091,
                "column": 15
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 608,
            "pos": {
                "line": 1092,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 - 3 * x ^ 3 - 9828 * x ^ 2 - 63376 * x\n\u22a2 deriv (fun x => 3 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 - 3 * x ^ 3 - 9828 * x ^ 2 - 63376 * x) (-4) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 - 3 * x ^ 3 - 9828 * x ^ 2 - 63376 * x) (-4) = 0",
            "endPos": {
                "line": 1092,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 609,
            "pos": {
                "line": 1093,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 - 3 * x ^ 3 - 9828 * x ^ 2 - 63376 * x\n\u22a2 deriv (fun x => 3 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 - 3 * x ^ 3 - 9828 * x ^ 2 - 63376 * x) (-4) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 - 3 * x ^ 3 - 9828 * x ^ 2 - 63376 * x) (-4) = 0",
            "endPos": {
                "line": 1093,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_c_mul_x_pow 6 (-4), deriv_c_mul_x_pow 5 (-4), deriv_c_mul_x_pow 4 (-4), deriv_c_mul_x_pow 3 (-4),\n  deriv_c_mul_x_pow 2 (-4), deriv_c_mul_x_pow 1 (-4), deriv_c_mul_x_pow 0 (-4)]",
            "proofState": 610,
            "pos": {
                "line": 1094,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 - 3 * x ^ 3 - 9828 * x ^ 2 - 63376 * x\n\u22a2 deriv (fun x => 3 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 - 3 * x ^ 3 - 9828 * x ^ 2 - 63376 * x) (-4) = 0",
            "endPos": {
                "line": 1096,
                "column": 29
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_c_mul_x_pow 6 (-4), deriv_c_mul_x_pow 5 (-4), deriv_c_mul_x_pow 4 (-4), deriv_c_mul_x_pow 3 (-4),\n  deriv_c_mul_x_pow 2 (-4), deriv_c_mul_x_pow 1 (-4), deriv_c_mul_x_pow 0 (-4)]",
            "proofState": 611,
            "pos": {
                "line": 1094,
                "column": 2
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 - 3 * x ^ 3 - 9828 * x ^ 2 - 63376 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 - 3 * x ^ 3 - 9828 * x ^ 2 - 63376 * x) (-4) = 0",
            "endPos": {
                "line": 1096,
                "column": 29
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 612,
            "pos": {
                "line": 1099,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 5 + 5 * x ^ 4 - 4 * x ^ 3 - 253 * x ^ 2 + 740 * x) \u2192 deriv f 2 = 0 \u2227 deriv (deriv f) 2 > 0",
            "endPos": {
                "line": 1099,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_add, deriv_mul, deriv_const, deriv_pow, deriv_id'', deriv_sub, deriv_neg, deriv_comp, deriv_pow,\n  deriv_id'', deriv_const, deriv_mul, deriv_pow, deriv_id'', deriv_const, deriv_mul, deriv_pow, deriv_id'', deriv_const,\n  deriv_mul, deriv_pow, deriv_id'', deriv_const, deriv_mul, deriv_pow, deriv_id'']",
            "proofState": 613,
            "pos": {
                "line": 1100,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 + 5 * x ^ 4 - 4 * x ^ 3 - 253 * x ^ 2 + 740 * x\n\u22a2 deriv f 2 = 0 \u2227 deriv (deriv f) 2 > 0",
            "endPos": {
                "line": 1103,
                "column": 73
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 614,
            "pos": {
                "line": 1104,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 + 5 * x ^ 4 - 4 * x ^ 3 - 253 * x ^ 2 + 740 * x\n\u22a2 deriv (fun x => 2 * x ^ 5 + 5 * x ^ 4 - 4 * x ^ 3 - 253 * x ^ 2 + 740 * x) 2 = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 5 + 5 * x ^ 4 - 4 * x ^ 3 - 253 * x ^ 2 + 740 * x) 2 > 0",
            "endPos": {
                "line": 1104,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 615,
            "pos": {
                "line": 1105,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 + 5 * x ^ 4 - 4 * x ^ 3 - 253 * x ^ 2 + 740 * x\n\u22a2 deriv (fun x => 2 * x ^ 5 + 5 * x ^ 4 - 4 * x ^ 3 - 253 * x ^ 2 + 740 * x) 2 = 0 \u2227\n    0 < deriv (deriv fun x => 2 * x ^ 5 + 5 * x ^ 4 - 4 * x ^ 3 - 253 * x ^ 2 + 740 * x) 2",
            "endPos": {
                "line": 1105,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 616,
            "pos": {
                "line": 1108,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 6 + 5 * x ^ 4 + 5 * x ^ 3 - 5175 * x ^ 2 + 24543 * x) \u2192 deriv f 3 = 0 \u2227 deriv (deriv f) 3 = 0",
            "endPos": {
                "line": 1108,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [h]",
            "proofState": 617,
            "pos": {
                "line": 1109,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 + 5 * x ^ 4 + 5 * x ^ 3 - 5175 * x ^ 2 + 24543 * x\n\u22a2 deriv f 3 = 0 \u2227 deriv (deriv f) 3 = 0",
            "endPos": {
                "line": 1109,
                "column": 15
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 618,
            "pos": {
                "line": 1110,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 + 5 * x ^ 4 + 5 * x ^ 3 - 5175 * x ^ 2 + 24543 * x\n\u22a2 deriv (fun x => 4 * x ^ 6 + 5 * x ^ 4 + 5 * x ^ 3 - 5175 * x ^ 2 + 24543 * x) 3 = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 6 + 5 * x ^ 4 + 5 * x ^ 3 - 5175 * x ^ 2 + 24543 * x) 3 = 0",
            "endPos": {
                "line": 1110,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 619,
            "pos": {
                "line": 1111,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 + 5 * x ^ 4 + 5 * x ^ 3 - 5175 * x ^ 2 + 24543 * x\n\u22a2 deriv (fun x => 4 * x ^ 6 + 5 * x ^ 4 + 5 * x ^ 3 - 5175 * x ^ 2 + 24543 * x) 3 = 0",
            "endPos": {
                "line": 1111,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 620,
            "pos": {
                "line": 1111,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 + 5 * x ^ 4 + 5 * x ^ 3 - 5175 * x ^ 2 + 24543 * x\n\u22a2 deriv (deriv fun x => 4 * x ^ 6 + 5 * x ^ 4 + 5 * x ^ 3 - 5175 * x ^ 2 + 24543 * x) 3 = 0",
            "endPos": {
                "line": 1111,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_f_three f]",
            "proofState": 621,
            "pos": {
                "line": 1112,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 + 5 * x ^ 4 + 5 * x ^ 3 - 5175 * x ^ 2 + 24543 * x\n\u22a2 deriv (fun x => 4 * x ^ 6 + 5 * x ^ 4 + 5 * x ^ 3 - 5175 * x ^ 2 + 24543 * x) 3 = 0",
            "endPos": {
                "line": 1112,
                "column": 32
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_f_three f]",
            "proofState": 622,
            "pos": {
                "line": 1112,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 + 5 * x ^ 4 + 5 * x ^ 3 - 5175 * x ^ 2 + 24543 * x\n\u22a2 deriv (deriv fun x => 4 * x ^ 6 + 5 * x ^ 4 + 5 * x ^ 3 - 5175 * x ^ 2 + 24543 * x) 3 = 0",
            "endPos": {
                "line": 1112,
                "column": 32
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 623,
            "pos": {
                "line": 1118,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 4 + 5 * x ^ 3 - 72 * x ^ 2 - 595 * x) \u2192 deriv f (-5) = 0 \u2227 deriv (deriv f) (-5) > 0",
            "endPos": {
                "line": 1118,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h]",
            "proofState": 624,
            "pos": {
                "line": 1119,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 + 5 * x ^ 3 - 72 * x ^ 2 - 595 * x\n\u22a2 deriv f (-5) = 0 \u2227 deriv (deriv f) (-5) > 0",
            "endPos": {
                "line": 1119,
                "column": 19
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 625,
            "pos": {
                "line": 1120,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 + 5 * x ^ 3 - 72 * x ^ 2 - 595 * x\n\u22a2 deriv (fun x => x ^ 4 + 5 * x ^ 3 - 72 * x ^ 2 - 595 * x) (-5) = 0 \u2227\n    deriv (deriv fun x => x ^ 4 + 5 * x ^ 3 - 72 * x ^ 2 - 595 * x) (-5) > 0",
            "endPos": {
                "line": 1120,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 626,
            "pos": {
                "line": 1121,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 + 5 * x ^ 3 - 72 * x ^ 2 - 595 * x\n\u22a2 deriv (fun x => x ^ 4 + 5 * x ^ 3 - 72 * x ^ 2 - 595 * x) (-5) = 0",
            "endPos": {
                "line": 1121,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 627,
            "pos": {
                "line": 1121,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 + 5 * x ^ 3 - 72 * x ^ 2 - 595 * x\n\u22a2 deriv (deriv fun x => x ^ 4 + 5 * x ^ 3 - 72 * x ^ 2 - 595 * x) (-5) > 0",
            "endPos": {
                "line": 1121,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "nlinarith [deriv_pow 4 (-5)]",
            "proofState": 628,
            "pos": {
                "line": 1122,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 + 5 * x ^ 3 - 72 * x ^ 2 - 595 * x\n\u22a2 deriv (fun x => x ^ 4 + 5 * x ^ 3 - 72 * x ^ 2 - 595 * x) (-5) = 0",
            "endPos": {
                "line": 1122,
                "column": 34
            }
        },
        {
            "usedConstants": [],
            "tactic": "nlinarith [deriv_pow 4 (-5)]",
            "proofState": 629,
            "pos": {
                "line": 1122,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 + 5 * x ^ 3 - 72 * x ^ 2 - 595 * x\n\u22a2 0 < deriv (deriv fun x => x ^ 4 + 5 * x ^ 3 - 72 * x ^ 2 - 595 * x) (-5)",
            "endPos": {
                "line": 1122,
                "column": 34
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 630,
            "pos": {
                "line": 1125,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 4 - 2 * x ^ 3 - 719 * x ^ 2 + 4840 * x) \u2192 deriv f 5 = 0 \u2227 deriv (deriv f) 5 > 0",
            "endPos": {
                "line": 1125,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_const', deriv_pow, deriv_sub, deriv_mul, deriv_add, deriv_X, deriv_one, deriv_comp, deriv_pow,\n  deriv_sub, deriv_mul, deriv_add, deriv_X, deriv_one, deriv_const', deriv_comp, deriv_pow, deriv_sub, deriv_mul,\n  deriv_add, deriv_X, deriv_one]",
            "proofState": 631,
            "pos": {
                "line": 1126,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 2 * x ^ 3 - 719 * x ^ 2 + 4840 * x\n\u22a2 deriv f 5 = 0 \u2227 deriv (deriv f) 5 > 0",
            "endPos": {
                "line": 1128,
                "column": 79
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 632,
            "pos": {
                "line": 1129,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 2 * x ^ 3 - 719 * x ^ 2 + 4840 * x\n\u22a2 deriv (fun x => 5 * x ^ 4 - 2 * x ^ 3 - 719 * x ^ 2 + 4840 * x) 5 = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 4 - 2 * x ^ 3 - 719 * x ^ 2 + 4840 * x) 5 > 0",
            "endPos": {
                "line": 1129,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 633,
            "pos": {
                "line": 1130,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 2 * x ^ 3 - 719 * x ^ 2 + 4840 * x\n\u22a2 deriv (fun x => 5 * x ^ 4 - 2 * x ^ 3 - 719 * x ^ 2 + 4840 * x) 5 = 0 \u2227\n    0 < deriv (deriv fun x => 5 * x ^ 4 - 2 * x ^ 3 - 719 * x ^ 2 + 4840 * x) 5",
            "endPos": {
                "line": 1130,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 634,
            "pos": {
                "line": 1133,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 2 + 2 * x) \u2192 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) > 0",
            "endPos": {
                "line": 1133,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "pow_two",
                "Real.denselyNormedField",
                "Real.instZero",
                "Monoid.toMulOneClass",
                "Real.instRCLike",
                "MulOneClass.toMul",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "Eq.mp",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "funext",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_add, deriv_pow, deriv_mul, deriv_const, deriv_pow, deriv_id'', deriv_const', deriv_id, pow_one,\n  mul_one, mul_zero, zero_add, zero_sub, sub_neg_eq_add, add_zero, add_sub_cancel, add_comm, add_left_neg, add_assoc,\n  zero_add, pow_two, mul_neg, neg_mul, neg_neg, mul_one]",
            "proofState": 635,
            "pos": {
                "line": 1134,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 + 2 * x\n\u22a2 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) > 0",
            "endPos": {
                "line": 1136,
                "column": 93
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Monoid.toMulOneClass",
                "Real.instRCLike",
                "MulOneClass.toMul",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "sorryAx",
                "id",
                "instOfNatNat",
                "Lean.Name.num",
                "Real.instAddCommGroup",
                "Lean.Name.str",
                "Real.instAdd",
                "Lean.Name.anonymous",
                "Real.instOne",
                "Real.instMonoid",
                "Bool.true",
                "GT.gt",
                "instHAdd",
                "instNatAtLeastTwo",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "And.intro",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Lean.Name",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "exact \u27e8by norm_num, by norm_num\u27e9",
            "proofState": 636,
            "pos": {
                "line": 1137,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x * x + 2 * x\n\u22a2 deriv (fun x => x * x + 2 * x) (-1) = 0 \u2227 deriv (deriv fun x => x * x + 2 * x) (-1) > 0",
            "endPos": {
                "line": 1137,
                "column": 34
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 637,
            "pos": {
                "line": 1137,
                "column": 12
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x * x + 2 * x\n\u22a2 deriv (fun x => x * x + 2 * x) (-1) = 0",
            "endPos": {
                "line": 1137,
                "column": 20
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Monoid.toMulOneClass",
                "Real.instRCLike",
                "MulOneClass.toMul",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "instNatAtLeastTwo",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 638,
            "pos": {
                "line": 1137,
                "column": 25
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x * x + 2 * x\n\u22a2 deriv (deriv fun x => x * x + 2 * x) (-1) > 0",
            "endPos": {
                "line": 1137,
                "column": 33
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 639,
            "pos": {
                "line": 1140,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 4 + 3 * x ^ 3 - 250 * x ^ 2 - 1376 * x) \u2192 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) > 0",
            "endPos": {
                "line": 1140,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [h]",
            "proofState": 640,
            "pos": {
                "line": 1141,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 + 3 * x ^ 3 - 250 * x ^ 2 - 1376 * x\n\u22a2 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) > 0",
            "endPos": {
                "line": 1141,
                "column": 8
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 641,
            "pos": {
                "line": 1142,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 + 3 * x ^ 3 - 250 * x ^ 2 - 1376 * x\n\u22a2 deriv (fun x => 3 * x ^ 4 + 3 * x ^ 3 - 250 * x ^ 2 - 1376 * x) (-4) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 4 + 3 * x ^ 3 - 250 * x ^ 2 - 1376 * x) (-4) > 0",
            "endPos": {
                "line": 1142,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 642,
            "pos": {
                "line": 1143,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 + 3 * x ^ 3 - 250 * x ^ 2 - 1376 * x\n\u22a2 deriv (fun x => 3 * x ^ 4 + 3 * x ^ 3 - 250 * x ^ 2 - 1376 * x) (-4) = 0 \u2227\n    0 < deriv (deriv fun x => 3 * x ^ 4 + 3 * x ^ 3 - 250 * x ^ 2 - 1376 * x) (-4)",
            "endPos": {
                "line": 1143,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num [deriv_add, deriv_mul, deriv_pow, deriv_const]",
            "proofState": 643,
            "pos": {
                "line": 1144,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 + 3 * x ^ 3 - 250 * x ^ 2 - 1376 * x\n\u22a2 deriv (fun x => 3 * x ^ 4 + 3 * x ^ 3 - 250 * x ^ 2 - 1376 * x) (-4) = 0",
            "endPos": {
                "line": 1144,
                "column": 57
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num [deriv_add, deriv_mul, deriv_pow, deriv_const]",
            "proofState": 644,
            "pos": {
                "line": 1144,
                "column": 2
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 + 3 * x ^ 3 - 250 * x ^ 2 - 1376 * x\n\u22a2 0 < deriv (deriv fun x => 3 * x ^ 4 + 3 * x ^ 3 - 250 * x ^ 2 - 1376 * x) (-4)",
            "endPos": {
                "line": 1144,
                "column": 57
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [differentiableAt_id, differentiableAt_const 3, differentiableAt_pow 4, differentiableAt_pow 3]",
            "proofState": 645,
            "pos": {
                "line": 1145,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 + 3 * x ^ 3 - 250 * x ^ 2 - 1376 * x\n\u22a2 deriv (fun x => 3 * x ^ 4 + 3 * x ^ 3 - 250 * x ^ 2 - 1376 * x) (-4) = 0",
            "endPos": {
                "line": 1145,
                "column": 106
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [differentiableAt_id, differentiableAt_const 3, differentiableAt_pow 4, differentiableAt_pow 3]",
            "proofState": 646,
            "pos": {
                "line": 1145,
                "column": 2
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 + 3 * x ^ 3 - 250 * x ^ 2 - 1376 * x\n\u22a2 0 < deriv (deriv fun x => 3 * x ^ 4 + 3 * x ^ 3 - 250 * x ^ 2 - 1376 * x) (-4)",
            "endPos": {
                "line": 1145,
                "column": 106
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 647,
            "pos": {
                "line": 1152,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 4 - 5 * x ^ 3 - 349 * x ^ 2 - 1784 * x) \u2192 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) < 0",
            "endPos": {
                "line": 1152,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [h]",
            "proofState": 648,
            "pos": {
                "line": 1153,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 5 * x ^ 3 - 349 * x ^ 2 - 1784 * x\n\u22a2 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) < 0",
            "endPos": {
                "line": 1153,
                "column": 8
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num [deriv_sub, deriv_add, deriv_const, deriv_mul, deriv_pow]",
            "proofState": 649,
            "pos": {
                "line": 1154,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 5 * x ^ 3 - 349 * x ^ 2 - 1784 * x\n\u22a2 deriv (fun x => 3 * x ^ 4 - 5 * x ^ 3 - 349 * x ^ 2 - 1784 * x) (-4) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 4 - 5 * x ^ 3 - 349 * x ^ 2 - 1784 * x) (-4) < 0",
            "endPos": {
                "line": 1154,
                "column": 68
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 650,
            "pos": {
                "line": 1156,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 5 * x ^ 3 - 349 * x ^ 2 - 1784 * x\n\u22a2 deriv (fun x => 3 * x ^ 4 - 5 * x ^ 3 - 349 * x ^ 2 - 1784 * x) (-4) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 4 - 5 * x ^ 3 - 349 * x ^ 2 - 1784 * x) (-4) < 0",
            "endPos": {
                "line": 1156,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "sorryAx",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Lean.Name.num",
                "Real.instAddCommGroup",
                "Lean.Name.str",
                "Lean.Name.anonymous",
                "Real.instMonoid",
                "Bool.true",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "And.intro",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Lean.Name",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "exact \u27e8by linarith, by linarith\u27e9",
            "proofState": 651,
            "pos": {
                "line": 1158,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 5 * x ^ 3 - 349 * x ^ 2 - 1784 * x\n\u22a2 deriv (fun x => 3 * x ^ 4 - 5 * x ^ 3 - 349 * x ^ 2 - 1784 * x) (-4) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 4 - 5 * x ^ 3 - 349 * x ^ 2 - 1784 * x) (-4) < 0",
            "endPos": {
                "line": 1159,
                "column": 30
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 652,
            "pos": {
                "line": 1159,
                "column": 8
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 5 * x ^ 3 - 349 * x ^ 2 - 1784 * x\n\u22a2 deriv (fun x => 3 * x ^ 4 - 5 * x ^ 3 - 349 * x ^ 2 - 1784 * x) (-4) = 0",
            "endPos": {
                "line": 1159,
                "column": 16
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 653,
            "pos": {
                "line": 1159,
                "column": 21
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 5 * x ^ 3 - 349 * x ^ 2 - 1784 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 4 - 5 * x ^ 3 - 349 * x ^ 2 - 1784 * x) (-4) < 0",
            "endPos": {
                "line": 1159,
                "column": 29
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 654,
            "pos": {
                "line": 1162,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 + 2 * x ^ 3 - 85716 * x ^ 2 - 818856 * x) \u2192\n    deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) = 0",
            "endPos": {
                "line": 1162,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h]",
            "proofState": 655,
            "pos": {
                "line": 1163,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 + 2 * x ^ 3 - 85716 * x ^ 2 - 818856 * x\n\u22a2 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) = 0",
            "endPos": {
                "line": 1163,
                "column": 19
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 656,
            "pos": {
                "line": 1164,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 + 2 * x ^ 3 - 85716 * x ^ 2 - 818856 * x\n\u22a2 deriv (fun x => 4 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 + 2 * x ^ 3 - 85716 * x ^ 2 - 818856 * x) (-6) = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 + 2 * x ^ 3 - 85716 * x ^ 2 - 818856 * x) (-6) = 0",
            "endPos": {
                "line": 1164,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 657,
            "pos": {
                "line": 1165,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 + 2 * x ^ 3 - 85716 * x ^ 2 - 818856 * x\n\u22a2 deriv (fun x => 4 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 + 2 * x ^ 3 - 85716 * x ^ 2 - 818856 * x) (-6) = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 + 2 * x ^ 3 - 85716 * x ^ 2 - 818856 * x) (-6) = 0",
            "endPos": {
                "line": 1165,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "apply And.intro",
            "proofState": 658,
            "pos": {
                "line": 1165,
                "column": 18
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 + 2 * x ^ 3 - 85716 * x ^ 2 - 818856 * x\n\u22a2 deriv (fun x => 4 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 + 2 * x ^ 3 - 85716 * x ^ 2 - 818856 * x) (-6) = 0",
            "endPos": {
                "line": 1165,
                "column": 33
            }
        },
        {
            "usedConstants": [],
            "tactic": "apply And.intro",
            "proofState": 659,
            "pos": {
                "line": 1165,
                "column": 18
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 + 2 * x ^ 3 - 85716 * x ^ 2 - 818856 * x\n\u22a2 deriv (deriv fun x => 4 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 + 2 * x ^ 3 - 85716 * x ^ 2 - 818856 * x) (-6) = 0",
            "endPos": {
                "line": 1165,
                "column": 33
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 660,
            "pos": {
                "line": 1168,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 2 - 4 * x) \u2192 deriv f 1 = 0 \u2227 deriv (deriv f) 1 > 0",
            "endPos": {
                "line": 1168,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_sub, deriv_const, deriv_mul, deriv_pow, deriv_id'', deriv_pow', deriv_id, deriv_const', deriv_sub',\n  deriv_mul', deriv_pow_'', deriv_id'', deriv_const', deriv_sub', deriv_mul', deriv_pow_', deriv_id, deriv_const,\n  deriv_mul, deriv_pow, deriv_id'', deriv_pow', deriv_id, deriv_const', deriv_sub', deriv_mul', deriv_pow_'',\n  deriv_id'', deriv_const']",
            "proofState": 661,
            "pos": {
                "line": 1169,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 - 4 * x\n\u22a2 deriv f 1 = 0 \u2227 deriv (deriv f) 1 > 0",
            "endPos": {
                "line": 1172,
                "column": 91
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 662,
            "pos": {
                "line": 1173,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 - 4 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 4 * x) 1 = 0 \u2227 deriv (deriv fun x => 2 * x ^ 2 - 4 * x) 1 > 0",
            "endPos": {
                "line": 1173,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 663,
            "pos": {
                "line": 1174,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 - 4 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 4 * x) 1 = 0",
            "endPos": {
                "line": 1174,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instOne",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 664,
            "pos": {
                "line": 1174,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 - 4 * x\n\u22a2 deriv (deriv fun x => 2 * x ^ 2 - 4 * x) 1 > 0",
            "endPos": {
                "line": 1174,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 665,
            "pos": {
                "line": 1175,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 - 4 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 4 * x) 1 = 0",
            "endPos": {
                "line": 1175,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 666,
            "pos": {
                "line": 1175,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 - 4 * x\n\u22a2 0 < deriv (deriv fun x => 2 * x ^ 2 - 4 * x) 1",
            "endPos": {
                "line": 1175,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 667,
            "pos": {
                "line": 1178,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 5 + 3 * x ^ 4 - 3 * x ^ 3 + 12896 * x - 2170 * x ^ 2) \u2192 deriv f 4 = 0 \u2227 deriv (deriv f) 4 > 0",
            "endPos": {
                "line": 1178,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [h]",
            "proofState": 668,
            "pos": {
                "line": 1179,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 5 + 3 * x ^ 4 - 3 * x ^ 3 + 12896 * x - 2170 * x ^ 2\n\u22a2 deriv f 4 = 0 \u2227 deriv (deriv f) 4 > 0",
            "endPos": {
                "line": 1179,
                "column": 8
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 669,
            "pos": {
                "line": 1180,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 5 + 3 * x ^ 4 - 3 * x ^ 3 + 12896 * x - 2170 * x ^ 2\n\u22a2 deriv (fun x => 3 * x ^ 5 + 3 * x ^ 4 - 3 * x ^ 3 + 12896 * x - 2170 * x ^ 2) 4 = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 5 + 3 * x ^ 4 - 3 * x ^ 3 + 12896 * x - 2170 * x ^ 2) 4 > 0",
            "endPos": {
                "line": 1180,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv]",
            "proofState": 670,
            "pos": {
                "line": 1181,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 5 + 3 * x ^ 4 - 3 * x ^ 3 + 12896 * x - 2170 * x ^ 2\n\u22a2 deriv (fun x => 3 * x ^ 5 + 3 * x ^ 4 - 3 * x ^ 3 + 12896 * x - 2170 * x ^ 2) 4 = 0",
            "endPos": {
                "line": 1181,
                "column": 18
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv]",
            "proofState": 671,
            "pos": {
                "line": 1181,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 5 + 3 * x ^ 4 - 3 * x ^ 3 + 12896 * x - 2170 * x ^ 2\n\u22a2 deriv (deriv fun x => 3 * x ^ 5 + 3 * x ^ 4 - 3 * x ^ 3 + 12896 * x - 2170 * x ^ 2) 4 > 0",
            "endPos": {
                "line": 1181,
                "column": 18
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 672,
            "pos": {
                "line": 1186,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 4 - x ^ 3 - 3 * x ^ 2) \u2192 deriv f 0 = 0 \u2227 deriv (deriv f) 0 < 0",
            "endPos": {
                "line": 1186,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all [deriv_pow]",
            "proofState": 673,
            "pos": {
                "line": 1187,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - x ^ 3 - 3 * x ^ 2\n\u22a2 deriv f 0 = 0 \u2227 deriv (deriv f) 0 < 0",
            "endPos": {
                "line": 1187,
                "column": 22
            }
        },
        {
            "usedConstants": [
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "deriv_const'",
                "Ring.toNonAssocRing",
                "sub_self",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "congrArg",
                "DifferentiableAt",
                "deriv",
                "deriv_sub",
                "Real.instSub",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "NormedField.toField",
                "Mathlib.Meta.NormNum.isNat_natSub",
                "Monoid.toNatPow",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "Real.instAddGroup",
                "Real.instRing",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "NormedAddGroup.toAddGroup",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_natCast",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "Nat.cast",
                "Field.toSemifield",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "Mathlib.Meta.NormNum.zero_natPow",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "SubNegMonoid.toSub",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Add.0._proof_25",
                "instHAdd",
                "And",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "AddGroup.toSubNegMonoid",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "congrFun",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "NormedAddCommGroup.toNormedAddGroup",
                "Real.instMul",
                "congr",
                "AddZeroClass.toZero",
                "NormedRing.toSeminormedRing",
                "LT.lt",
                "True",
                "eq_self",
                "Mathlib.Meta.NormNum.IsNat.to_eq",
                "eq_true",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "Mathlib.Meta.NormNum.isNat_mul",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "NontriviallyNormedField.toNormedField",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "Nat.cast_zero",
                "AddMonoidWithOne.toAddMonoid",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "SubNegMonoid.toAddMonoid",
                "mul_one",
                "AddCommGroup.toDivisionAddCommMonoid",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "add_zero",
                "deriv_pow''",
                "OfNat.ofNat",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Nat.cast_one",
                "Mathlib.Meta.NormNum.isNat_pow",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "MonoidWithZero.toMonoid",
                "true_and",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "MulZeroClass.toZero",
                "True.intro",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 674,
            "pos": {
                "line": 1188,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - x ^ 3 - 3 * x ^ 2\n\u22a2 deriv (fun x => x ^ 4 - x ^ 3 - 3 * x ^ 2) 0 = 0 \u2227 deriv (deriv fun x => x ^ 4 - x ^ 3 - 3 * x ^ 2) 0 < 0",
            "endPos": {
                "line": 1188,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 675,
            "pos": {
                "line": 1189,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - x ^ 3 - 3 * x ^ 2\n\u22a2 deriv (deriv fun x => x ^ 4 - x ^ 3 - 3 * x ^ 2) 0 < 0",
            "endPos": {
                "line": 1189,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 676,
            "pos": {
                "line": 1192,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 6 + x ^ 5 - 4 * x ^ 4 + x ^ 3 - 26260 * x ^ 2 - 211550 * x) \u2192\n    deriv f (-5) = 0 \u2227 deriv (deriv f) (-5) = 0",
            "endPos": {
                "line": 1192,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [h, deriv_add, deriv_sub, deriv_const, deriv_pow, deriv_mul, deriv_pow, deriv_id'', deriv_pow, deriv_id'',\n  deriv_const, deriv_id'', deriv_const, deriv_id'']",
            "proofState": 677,
            "pos": {
                "line": 1193,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 + x ^ 5 - 4 * x ^ 4 + x ^ 3 - 26260 * x ^ 2 - 211550 * x\n\u22a2 deriv f (-5) = 0 \u2227 deriv (deriv f) (-5) = 0",
            "endPos": {
                "line": 1194,
                "column": 65
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 678,
            "pos": {
                "line": 1195,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 + x ^ 5 - 4 * x ^ 4 + x ^ 3 - 26260 * x ^ 2 - 211550 * x\n\u22a2 deriv (fun x => 3 * x ^ 6 + x ^ 5 - 4 * x ^ 4 + x ^ 3 - 26260 * x ^ 2 - 211550 * x) (-5) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 6 + x ^ 5 - 4 * x ^ 4 + x ^ 3 - 26260 * x ^ 2 - 211550 * x) (-5) = 0",
            "endPos": {
                "line": 1195,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 679,
            "pos": {
                "line": 1196,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 + x ^ 5 - 4 * x ^ 4 + x ^ 3 - 26260 * x ^ 2 - 211550 * x\n\u22a2 deriv (fun x => 3 * x ^ 6 + x ^ 5 - 4 * x ^ 4 + x ^ 3 - 26260 * x ^ 2 - 211550 * x) (-5) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 6 + x ^ 5 - 4 * x ^ 4 + x ^ 3 - 26260 * x ^ 2 - 211550 * x) (-5) = 0",
            "endPos": {
                "line": 1196,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 680,
            "pos": {
                "line": 1197,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 + x ^ 5 - 4 * x ^ 4 + x ^ 3 - 26260 * x ^ 2 - 211550 * x\n\u22a2 deriv (fun x => 3 * x ^ 6 + x ^ 5 - 4 * x ^ 4 + x ^ 3 - 26260 * x ^ 2 - 211550 * x) (-5) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 6 + x ^ 5 - 4 * x ^ 4 + x ^ 3 - 26260 * x ^ 2 - 211550 * x) (-5) = 0",
            "endPos": {
                "line": 1197,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 681,
            "pos": {
                "line": 1200,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 6 + 49128 * x - 7677 * x ^ 2) \u2192 deriv f 4 = 0 \u2227 deriv (deriv f) 4 > 0",
            "endPos": {
                "line": 1200,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "Eq.mp",
                "id",
                "CommMagma.toMul",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Real.instAdd",
                "Real.instMonoid",
                "funext",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "mul_comm",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_add, deriv_sub, deriv_const, deriv_mul, deriv_pow, Nat.cast_ofNat, Nat.cast_zero, zero_mul,\n  add_zero, sub_zero, mul_one, mul_zero, zero_add, sub_neg_eq_add, add_assoc, add_left_neg, add_zero, zero_sub, neg_mul,\n  neg_neg, mul_comm, mul_left_comm, mul_assoc]",
            "proofState": 682,
            "pos": {
                "line": 1201,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 + 49128 * x - 7677 * x ^ 2\n\u22a2 deriv f 4 = 0 \u2227 deriv (deriv f) 4 > 0",
            "endPos": {
                "line": 1203,
                "column": 77
            }
        },
        {
            "usedConstants": [
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Mathlib.Meta.NormNum.isNat_add",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "deriv_const'",
                "Ring.toNonAssocRing",
                "sub_self",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "congrArg",
                "Mathlib.Meta.NormNum.IsNatPowT.run",
                "DifferentiableAt",
                "deriv",
                "deriv_sub",
                "Real.instSub",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "NormedField.toField",
                "Mathlib.Meta.NormNum.isNat_natSub",
                "Monoid.toNatPow",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "id",
                "Distrib.toAdd",
                "Mathlib.Meta.NormNum.IsNatPowT.bit1",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "Real.instAddGroup",
                "Mathlib.Meta.NormNum.IsNatPowT.bit0",
                "Real.instRing",
                "CommMagma.toMul",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Mathlib.Meta.NormNum.IsNatPowT.trans",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "NormedAddGroup.toAddGroup",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_natCast",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "Nat.cast",
                "Field.toSemifield",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "Real.instAdd",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Add.0._proof_1",
                "SubNegMonoid.toSub",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "AddGroup.toSubNegMonoid",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "congrFun",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "NormedAddCommGroup.toNormedAddGroup",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "AddZeroClass.toZero",
                "NormedRing.toSeminormedRing",
                "LT.lt",
                "True",
                "eq_self",
                "Mathlib.Meta.NormNum.IsNat.to_eq",
                "Nat.pow",
                "eq_true",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "Mathlib.Meta.NormNum.isNat_mul",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "NontriviallyNormedField.toNormedField",
                "ENormedAddCommMonoid.toAddCommMonoid",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "AddCommSemigroup.toAddCommMagma",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "Nat.cast_zero",
                "AddMonoidWithOne.toAddMonoid",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "SubNegMonoid.toAddMonoid",
                "mul_one",
                "AddCommGroup.toDivisionAddCommMonoid",
                "Mathlib.Meta.NormNum.natPow_one",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "add_zero",
                "deriv_pow''",
                "OfNat.ofNat",
                "AddCommMonoid.toAddCommSemigroup",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Nat.cast_one",
                "Mathlib.Meta.NormNum.isNat_pow",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "one_mul",
                "deriv_add",
                "MonoidWithZero.toMonoid",
                "true_and",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "MulZeroClass.toZero",
                "AddCommMagma.toAdd",
                "True.intro",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast",
                "NormedAddCommGroup.toENormedAddCommMonoid"
            ],
            "tactic": "norm_num",
            "proofState": 683,
            "pos": {
                "line": 1204,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 6 * 2 + x * 49128 - x ^ 2 * 7677\n\u22a2 deriv (fun x => x ^ 6 * 2 + x * 49128 - x ^ 2 * 7677) 4 = 0 \u2227\n    deriv (deriv fun x => x ^ 6 * 2 + x * 49128 - x ^ 2 * 7677) 4 > 0",
            "endPos": {
                "line": 1204,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "constructor",
            "proofState": 684,
            "pos": {
                "line": 1205,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 6 * 2 + x * 49128 - x ^ 2 * 7677\n\u22a2 0 < deriv (deriv fun x => x ^ 6 * 2 + x * 49128 - x ^ 2 * 7677) 4",
            "endPos": {
                "line": 1205,
                "column": 13
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 685,
            "pos": {
                "line": 1207,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 5 + 2 * x ^ 4 - x ^ 3 + 423 * x ^ 2 + 1971 * x) \u2192 deriv f (-3) = 0 \u2227 deriv (deriv f) (-3) = 0",
            "endPos": {
                "line": 1207,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [h]",
            "proofState": 686,
            "pos": {
                "line": 1208,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 + 2 * x ^ 4 - x ^ 3 + 423 * x ^ 2 + 1971 * x\n\u22a2 deriv f (-3) = 0 \u2227 deriv (deriv f) (-3) = 0",
            "endPos": {
                "line": 1208,
                "column": 8
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 687,
            "pos": {
                "line": 1209,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 + 2 * x ^ 4 - x ^ 3 + 423 * x ^ 2 + 1971 * x\n\u22a2 deriv (fun x => 2 * x ^ 5 + 2 * x ^ 4 - x ^ 3 + 423 * x ^ 2 + 1971 * x) (-3) = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 5 + 2 * x ^ 4 - x ^ 3 + 423 * x ^ 2 + 1971 * x) (-3) = 0",
            "endPos": {
                "line": 1209,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "CommMagma.toMul",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Real.instAdd",
                "Real.instMonoid",
                "funext",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "Real.instNeg",
                "mul_comm",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [mul_neg, mul_one, neg_mul, neg_neg, mul_zero, zero_add, mul_neg_one, neg_add_rev, neg_zero, neg_neg,\n  add_zero, zero_sub, sub_zero, one_mul, mul_one, mul_assoc, mul_comm, mul_left_comm]",
            "proofState": 688,
            "pos": {
                "line": 1210,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 + 2 * x ^ 4 - x ^ 3 + 423 * x ^ 2 + 1971 * x\n\u22a2 deriv (fun x => 2 * x ^ 5 + 2 * x ^ 4 - x ^ 3 + 423 * x ^ 2 + 1971 * x) (-3) = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 5 + 2 * x ^ 4 - x ^ 3 + 423 * x ^ 2 + 1971 * x) (-3) = 0",
            "endPos": {
                "line": 1212,
                "column": 48
            }
        },
        {
            "usedConstants": [
                "Mathlib.Meta.NormNum.isInt_pow",
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NegZeroClass.toNeg",
                "NormedCommRing.toSeminormedCommRing",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Real",
                "Mathlib.Meta.NormNum.instAddMonoidWithOne",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "deriv_const'",
                "Mathlib.Meta.NormNum.intPow_negOfNat_bit1",
                "Mathlib.Meta.NormNum.natPow_zero",
                "Ring.toNonAssocRing",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "congrArg",
                "Mathlib.Meta.NormNum.IsNatPowT.run",
                "DifferentiableAt",
                "deriv",
                "deriv_sub",
                "Real.instSub",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "NormedField.toField",
                "Mathlib.Meta.NormNum.isNat_natSub",
                "Monoid.toNatPow",
                "Mathlib.Meta.NormNum.IsInt.neg_to_eq",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "Int.ofNat",
                "Real.instAddGroup",
                "Mathlib.Meta.NormNum.IsNatPowT.bit0",
                "Real.instRing",
                "CommMagma.toMul",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Int",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "Mathlib.Meta.NormNum.isInt_mul",
                "Mathlib.Meta.NormNum.isInt_neg",
                "NormedAddGroup.toAddGroup",
                "Mathlib.Meta.NormNum.isInt_sub",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_natCast",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "Nat.cast",
                "Field.toSemifield",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "Real.instAdd",
                "NonUnitalNonAssocRing.toHasDistribNeg",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Add.0._proof_1",
                "SubNegMonoid.toSub",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Add.0._proof_25",
                "instHAdd",
                "And",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "AddGroup.toSubNegMonoid",
                "HPow.hPow",
                "Real.normedCommRing",
                "neg_add_cancel",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "congrFun",
                "Mathlib.Meta.NormNum.IsInt.to_isNat",
                "Ring.toAddCommGroup",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "NormedAddCommGroup.toNormedAddGroup",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "AddZeroClass.toZero",
                "NormedRing.toSeminormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
                "True",
                "Real.instNeg",
                "eq_self",
                "Mathlib.Meta.NormNum.IsNat.to_eq",
                "Mathlib.Meta.NormNum.intPow_negOfNat_bit0",
                "eq_true",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "Mathlib.Meta.NormNum.isNat_mul",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "Mathlib.Meta.NormNum.isInt_add",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "NontriviallyNormedField.toNormedField",
                "neg_mul",
                "ENormedAddCommMonoid.toAddCommMonoid",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "AddCommSemigroup.toAddCommMagma",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "Nat.cast_zero",
                "AddMonoidWithOne.toAddMonoid",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "HasDistribNeg.toInvolutiveNeg",
                "SubNegMonoid.toAddMonoid",
                "mul_one",
                "AddCommGroup.toDivisionAddCommMonoid",
                "Mathlib.Meta.NormNum.natPow_one",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "InvolutiveNeg.toNeg",
                "add_zero",
                "deriv_pow''",
                "OfNat.ofNat",
                "AddCommMonoid.toAddCommSemigroup",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Ring.toSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Nat.cast_one",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "one_mul",
                "deriv_add",
                "MonoidWithZero.toMonoid",
                "true_and",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "MulZeroClass.toZero",
                "AddCommMagma.toAdd",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "True.intro",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast",
                "NormedAddCommGroup.toENormedAddCommMonoid"
            ],
            "tactic": "norm_num",
            "proofState": 689,
            "pos": {
                "line": 1213,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 + 2 * x ^ 4 - x ^ 3 + 423 * x ^ 2 + 1971 * x\n\u22a2 deriv (fun x => x ^ 5 * 2 + x ^ 4 * 2 - x ^ 3 + x ^ 2 * 423 + x * 1971) (-3) = 0 \u2227\n    deriv (deriv fun x => x ^ 5 * 2 + x ^ 4 * 2 - x ^ 3 + x ^ 2 * 423 + x * 1971) (-3) = 0",
            "endPos": {
                "line": 1213,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "apply And.intro",
            "proofState": 690,
            "pos": {
                "line": 1214,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 + 2 * x ^ 4 - x ^ 3 + 423 * x ^ 2 + 1971 * x\n\u22a2 deriv (deriv fun x => x ^ 5 * 2 + x ^ 4 * 2 - x ^ 3 + x ^ 2 * 423 + x * 1971) (-3) = 0",
            "endPos": {
                "line": 1214,
                "column": 21
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 691,
            "pos": {
                "line": 1217,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 2 - 6 * x) \u2192 deriv f 1 = 0 \u2227 deriv (deriv f) 1 > 0",
            "endPos": {
                "line": 1217,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_sub, deriv_const, deriv_pow, deriv_mul, deriv_id'', deriv_pow, deriv_sub, deriv_const,\n  deriv_mul, deriv_id'', deriv_pow, deriv_sub, deriv_const, deriv_mul, deriv_id'']",
            "proofState": 692,
            "pos": {
                "line": 1218,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 - 6 * x\n\u22a2 deriv f 1 = 0 \u2227 deriv (deriv f) 1 > 0",
            "endPos": {
                "line": 1219,
                "column": 108
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 693,
            "pos": {
                "line": 1220,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 - 6 * x\n\u22a2 deriv (fun x => 3 * x ^ 2 - 6 * x) 1 = 0 \u2227 deriv (deriv fun x => 3 * x ^ 2 - 6 * x) 1 > 0",
            "endPos": {
                "line": 1220,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 694,
            "pos": {
                "line": 1221,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 - 6 * x\n\u22a2 deriv (fun x => 3 * x ^ 2 - 6 * x) 1 = 0",
            "endPos": {
                "line": 1221,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instOne",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 695,
            "pos": {
                "line": 1221,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 - 6 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 2 - 6 * x) 1 > 0",
            "endPos": {
                "line": 1221,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 696,
            "pos": {
                "line": 1222,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 - 6 * x\n\u22a2 deriv (fun x => 3 * x ^ 2 - 6 * x) 1 = 0",
            "endPos": {
                "line": 1222,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 697,
            "pos": {
                "line": 1222,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 - 6 * x\n\u22a2 0 < deriv (deriv fun x => 3 * x ^ 2 - 6 * x) 1",
            "endPos": {
                "line": 1222,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 698,
            "pos": {
                "line": 1225,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 3 + 12 * x ^ 2 + 48 * x) \u2192 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) = 0",
            "endPos": {
                "line": 1225,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_add, deriv_pow, deriv_const, deriv_mul, deriv_id'', deriv_pow, deriv_const, deriv_mul, deriv_id'',\n  deriv_pow, deriv_const, deriv_mul, deriv_id'']",
            "proofState": 699,
            "pos": {
                "line": 1226,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 + 12 * x ^ 2 + 48 * x\n\u22a2 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) = 0",
            "endPos": {
                "line": 1227,
                "column": 86
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 700,
            "pos": {
                "line": 1228,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 + 12 * x ^ 2 + 48 * x\n\u22a2 deriv (fun x => x ^ 3 + 12 * x ^ 2 + 48 * x) (-4) = 0 \u2227 deriv (deriv fun x => x ^ 3 + 12 * x ^ 2 + 48 * x) (-4) = 0",
            "endPos": {
                "line": 1228,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 701,
            "pos": {
                "line": 1229,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 + 12 * x ^ 2 + 48 * x\n\u22a2 deriv (fun x => x ^ 3 + 12 * x ^ 2 + 48 * x) (-4) = 0 \u2227 deriv (deriv fun x => x ^ 3 + 12 * x ^ 2 + 48 * x) (-4) = 0",
            "endPos": {
                "line": 1229,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 702,
            "pos": {
                "line": 1232,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 2 - 18 * x) \u2192 deriv f 3 = 0 \u2227 deriv (deriv f) 3 > 0",
            "endPos": {
                "line": 1232,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "Eq.mp",
                "id",
                "CommMagma.toMul",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Real.instMonoid",
                "funext",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "mul_comm",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_const, deriv_sub, deriv_pow, deriv_mul, deriv_id'', deriv_const', deriv_pow'', deriv_mul',\n  deriv_id, zero_sub, zero_mul, sub_zero, sub_neg_eq_add, add_zero, mul_one, mul_zero, zero_add, sub_add_cancel,\n  mul_neg, neg_mul, neg_neg, mul_comm]",
            "proofState": 703,
            "pos": {
                "line": 1233,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 3 * x ^ 2 - 18 * x\n\u22a2 deriv f 3 = 0 \u2227 deriv (deriv f) 3 > 0",
            "endPos": {
                "line": 1235,
                "column": 85
            }
        },
        {
            "usedConstants": [
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "deriv_const'",
                "Ring.toNonAssocRing",
                "sub_self",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "congrArg",
                "Mathlib.Meta.NormNum.IsNatPowT.run",
                "DifferentiableAt",
                "deriv",
                "deriv_sub",
                "Real.instSub",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "NormedField.toField",
                "Mathlib.Meta.NormNum.isNat_natSub",
                "Monoid.toNatPow",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "Real.instAddGroup",
                "Mathlib.Meta.NormNum.IsNatPowT.bit0",
                "Real.instRing",
                "CommMagma.toMul",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "NormedAddGroup.toAddGroup",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_natCast",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "Nat.cast",
                "Field.toSemifield",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "SubNegMonoid.toSub",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "AddGroup.toSubNegMonoid",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "congrFun",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "NormedAddCommGroup.toNormedAddGroup",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "AddZeroClass.toZero",
                "NormedRing.toSeminormedRing",
                "LT.lt",
                "True",
                "eq_self",
                "Mathlib.Meta.NormNum.IsNat.to_eq",
                "eq_true",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "Mathlib.Meta.NormNum.isNat_mul",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "NontriviallyNormedField.toNormedField",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "Nat.cast_zero",
                "AddMonoidWithOne.toAddMonoid",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "SubNegMonoid.toAddMonoid",
                "mul_one",
                "AddCommGroup.toDivisionAddCommMonoid",
                "Mathlib.Meta.NormNum.natPow_one",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "add_zero",
                "deriv_pow''",
                "OfNat.ofNat",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Nat.cast_one",
                "Mathlib.Meta.NormNum.isNat_pow",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "one_mul",
                "MonoidWithZero.toMonoid",
                "true_and",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "MulZeroClass.toZero",
                "True.intro",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 704,
            "pos": {
                "line": 1236,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 * 3 - x * 18\n\u22a2 deriv (fun x => x ^ 2 * 3 - x * 18) 3 = 0 \u2227 deriv (deriv fun x => x ^ 2 * 3 - x * 18) 3 > 0",
            "endPos": {
                "line": 1236,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 705,
            "pos": {
                "line": 1239,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 4 - 42 * x - 31 * x ^ 2) \u2192 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) < 0",
            "endPos": {
                "line": 1239,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instOne",
                "Real.instMonoid",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_const, deriv_pow, deriv_sub, deriv_mul, deriv_id'', deriv_pow, deriv_sub, deriv_mul, deriv_id'',\n  deriv_pow, deriv_sub, deriv_mul, deriv_id'', deriv_pow, deriv_sub, deriv_mul, deriv_id'']",
            "proofState": 706,
            "pos": {
                "line": 1240,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 42 * x - 31 * x ^ 2\n\u22a2 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) < 0",
            "endPos": {
                "line": 1242,
                "column": 15
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 707,
            "pos": {
                "line": 1243,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 42 * x - 31 * x ^ 2\n\u22a2 deriv (fun x => 5 * x ^ 4 - 42 * x - 31 * x ^ 2) (-1) = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 4 - 42 * x - 31 * x ^ 2) (-1) < 0",
            "endPos": {
                "line": 1243,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NegZeroClass.toNeg",
                "NormedCommRing.toSeminormedCommRing",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "Mathlib.Tactic.Ring.single_pow",
                "Mathlib.Tactic.RingNF.add_assoc_rev",
                "Real",
                "Mathlib.Tactic.RingNF.mul_neg",
                "HMul.hMul",
                "Nat.rawCast",
                "Ring.toNonAssocRing",
                "Mathlib.Tactic.Ring.mul_zero",
                "Mathlib.Tactic.Ring.mul_pf_left",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "AddGroupWithOne.toAddGroup",
                "Mathlib.Tactic.Ring.add_pf_add_gt",
                "congrArg",
                "CommSemiring.toSemiring",
                "Mathlib.Tactic.Ring.mul_pow",
                "deriv",
                "Mathlib.Tactic.Ring.neg_zero",
                "Real.instSub",
                "Mathlib.Tactic.Ring.mul_pf_right",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "Int.rawCast",
                "Mathlib.Tactic.Ring.one_mul",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Mathlib.Tactic.Ring.zero_mul",
                "Mathlib.Meta.NormNum.IsNat.of_raw",
                "Real.instLT",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "Mathlib.Tactic.Ring.instCommSemiringNat",
                "sorryAx",
                "Monoid.toNatPow",
                "Mathlib.Tactic.Ring.neg_mul",
                "Mathlib.Tactic.Ring.sub_pf",
                "Mathlib.Tactic.Ring.neg_add",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Int.ofNat",
                "Real.instRing",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "instOfNatNat",
                "Int",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Mathlib.Tactic.Ring.sub_congr",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "Lean.Name.num",
                "Mathlib.Meta.NormNum.isInt_mul",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "Mathlib.Tactic.Ring.one_pow",
                "Nat.instAddMonoidWithOne",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "Mathlib.Tactic.Ring.mul_congr",
                "Lean.Name.str",
                "Lean.Name.anonymous",
                "Real.instOne",
                "SubNegMonoid.toSub",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "Bool.true",
                "funext",
                "Mathlib.Tactic.Ring.add_mul",
                "instHAdd",
                "Mathlib.Tactic.Ring.add_pf_add_zero",
                "instHSub",
                "Mathlib.Tactic.RingNF.add_neg",
                "instNatAtLeastTwo",
                "AddGroup.toSubNegMonoid",
                "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "HAdd.hAdd",
                "pow_one",
                "NonAssocSemiring.toNonUnitalNonAssocSemiring",
                "Ring.toAddCommGroup",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Mathlib.Tactic.Ring.pow_add",
                "Nat",
                "Real.instMul",
                "Mathlib.Tactic.Ring.mul_one",
                "And.intro",
                "congr",
                "AddZeroClass.toZero",
                "LT.lt",
                "Nat.instCommSemiring",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Mathlib.Tactic.Ring.add_pf_add_lt",
                "One.toOfNat1",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Lean.Name",
                "Zero.toOfNat0",
                "Eq.refl",
                "Mathlib.Meta.NormNum.IsInt.of_raw",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "Mathlib.Tactic.Ring.cast_pos",
                "Mathlib.Tactic.RingNF.nat_rawCast_1",
                "Mathlib.Tactic.Ring.atom_pf",
                "AddCommGroup.toDivisionAddCommMonoid",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "add_zero",
                "OfNat.ofNat",
                "Mathlib.Tactic.RingNF.int_rawCast_neg",
                "AddZeroClass.toAdd",
                "UniformSpace.toTopologicalSpace",
                "Semiring.toNonAssocSemiring",
                "Eq",
                "Mathlib.Tactic.Ring.neg_one_mul",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "MonoidWithZero.toMonoid",
                "Mathlib.Tactic.Ring.mul_add",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "MulZeroClass.toZero",
                "Real.instCommSemiring",
                "Mathlib.Tactic.Ring.pow_congr",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "Mathlib.Tactic.Ring.pow_zero",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "exact \u27e8by ring_nf, by linarith [pow_two_nonneg (-1)]\u27e9",
            "proofState": 708,
            "pos": {
                "line": 1245,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 42 * x - 31 * x ^ 2\n\u22a2 deriv (fun x => 5 * x ^ 4 - 42 * x - 31 * x ^ 2) (-1) = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 4 - 42 * x - 31 * x ^ 2) (-1) < 0",
            "endPos": {
                "line": 1246,
                "column": 51
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NegZeroClass.toNeg",
                "NormedCommRing.toSeminormedCommRing",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "Mathlib.Tactic.Ring.single_pow",
                "Mathlib.Tactic.RingNF.add_assoc_rev",
                "Real",
                "Mathlib.Tactic.RingNF.mul_neg",
                "HMul.hMul",
                "Nat.rawCast",
                "Ring.toNonAssocRing",
                "Mathlib.Tactic.Ring.mul_zero",
                "Mathlib.Tactic.Ring.mul_pf_left",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "AddGroupWithOne.toAddGroup",
                "Mathlib.Tactic.Ring.add_pf_add_gt",
                "congrArg",
                "CommSemiring.toSemiring",
                "Mathlib.Tactic.Ring.mul_pow",
                "deriv",
                "Mathlib.Tactic.Ring.neg_zero",
                "Real.instSub",
                "Mathlib.Tactic.Ring.mul_pf_right",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "Int.rawCast",
                "Mathlib.Tactic.Ring.one_mul",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Mathlib.Tactic.Ring.zero_mul",
                "Mathlib.Meta.NormNum.IsNat.of_raw",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "Mathlib.Tactic.Ring.instCommSemiringNat",
                "Monoid.toNatPow",
                "Mathlib.Tactic.Ring.neg_mul",
                "Mathlib.Tactic.Ring.sub_pf",
                "Mathlib.Tactic.Ring.neg_add",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Int.ofNat",
                "Real.instRing",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "instOfNatNat",
                "Int",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Mathlib.Tactic.Ring.sub_congr",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "Mathlib.Meta.NormNum.isInt_mul",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "Mathlib.Tactic.Ring.one_pow",
                "Nat.instAddMonoidWithOne",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "Mathlib.Tactic.Ring.mul_congr",
                "Real.instOne",
                "SubNegMonoid.toSub",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "funext",
                "Mathlib.Tactic.Ring.add_mul",
                "instHAdd",
                "Mathlib.Tactic.Ring.add_pf_add_zero",
                "instHSub",
                "Mathlib.Tactic.RingNF.add_neg",
                "instNatAtLeastTwo",
                "AddGroup.toSubNegMonoid",
                "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "HAdd.hAdd",
                "pow_one",
                "NonAssocSemiring.toNonUnitalNonAssocSemiring",
                "Ring.toAddCommGroup",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Mathlib.Tactic.Ring.pow_add",
                "Nat",
                "Real.instMul",
                "Mathlib.Tactic.Ring.mul_one",
                "congr",
                "AddZeroClass.toZero",
                "Nat.instCommSemiring",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Mathlib.Tactic.Ring.add_pf_add_lt",
                "One.toOfNat1",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "Eq.refl",
                "Mathlib.Meta.NormNum.IsInt.of_raw",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "Mathlib.Tactic.Ring.cast_pos",
                "Mathlib.Tactic.RingNF.nat_rawCast_1",
                "Mathlib.Tactic.Ring.atom_pf",
                "AddCommGroup.toDivisionAddCommMonoid",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "add_zero",
                "OfNat.ofNat",
                "Mathlib.Tactic.RingNF.int_rawCast_neg",
                "AddZeroClass.toAdd",
                "UniformSpace.toTopologicalSpace",
                "Semiring.toNonAssocSemiring",
                "Eq",
                "Mathlib.Tactic.Ring.neg_one_mul",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "MonoidWithZero.toMonoid",
                "Mathlib.Tactic.Ring.mul_add",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "MulZeroClass.toZero",
                "Real.instCommSemiring",
                "Mathlib.Tactic.Ring.pow_congr",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "Mathlib.Tactic.Ring.pow_zero",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "ring_nf",
            "proofState": 709,
            "pos": {
                "line": 1246,
                "column": 8
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 42 * x - 31 * x ^ 2\n\u22a2 deriv (fun x => 5 * x ^ 4 - 42 * x - 31 * x ^ 2) (-1) = 0",
            "endPos": {
                "line": 1246,
                "column": 15
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [pow_two_nonneg (-1)]",
            "proofState": 710,
            "pos": {
                "line": 1246,
                "column": 20
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 42 * x - 31 * x ^ 2\n\u22a2 deriv (deriv fun x => 5 * x ^ 4 - 42 * x - 31 * x ^ 2) (-1) < 0",
            "endPos": {
                "line": 1246,
                "column": 50
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 711,
            "pos": {
                "line": 1249,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 5 + x ^ 4 - 2 * x ^ 3 - 2343 * x ^ 2 + 20988 * x) \u2192 deriv f 6 = 0 \u2227 deriv (deriv f) 6 < 0",
            "endPos": {
                "line": 1249,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [h]",
            "proofState": 712,
            "pos": {
                "line": 1250,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 + x ^ 4 - 2 * x ^ 3 - 2343 * x ^ 2 + 20988 * x\n\u22a2 deriv f 6 = 0 \u2227 deriv (deriv f) 6 < 0",
            "endPos": {
                "line": 1250,
                "column": 8
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 713,
            "pos": {
                "line": 1251,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 + x ^ 4 - 2 * x ^ 3 - 2343 * x ^ 2 + 20988 * x\n\u22a2 deriv (fun x => x ^ 5 + x ^ 4 - 2 * x ^ 3 - 2343 * x ^ 2 + 20988 * x) 6 = 0 \u2227\n    deriv (deriv fun x => x ^ 5 + x ^ 4 - 2 * x ^ 3 - 2343 * x ^ 2 + 20988 * x) 6 < 0",
            "endPos": {
                "line": 1251,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 714,
            "pos": {
                "line": 1252,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 + x ^ 4 - 2 * x ^ 3 - 2343 * x ^ 2 + 20988 * x\n\u22a2 deriv (fun x => x ^ 5 + x ^ 4 - 2 * x ^ 3 - 2343 * x ^ 2 + 20988 * x) 6 = 0 \u2227\n    deriv (deriv fun x => x ^ 5 + x ^ 4 - 2 * x ^ 3 - 2343 * x ^ 2 + 20988 * x) 6 < 0",
            "endPos": {
                "line": 1252,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_add, deriv_sub, deriv_pow, deriv_const, deriv_mul, deriv_id]",
            "proofState": 715,
            "pos": {
                "line": 1253,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 + x ^ 4 - 2 * x ^ 3 - 2343 * x ^ 2 + 20988 * x\n\u22a2 deriv (fun x => x ^ 5 + x ^ 4 - 2 * x ^ 3 - 2343 * x ^ 2 + 20988 * x) 6 = 0",
            "endPos": {
                "line": 1253,
                "column": 78
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_add, deriv_sub, deriv_pow, deriv_const, deriv_mul, deriv_id]",
            "proofState": 716,
            "pos": {
                "line": 1253,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 + x ^ 4 - 2 * x ^ 3 - 2343 * x ^ 2 + 20988 * x\n\u22a2 deriv (deriv fun x => x ^ 5 + x ^ 4 - 2 * x ^ 3 - 2343 * x ^ 2 + 20988 * x) 6 < 0",
            "endPos": {
                "line": 1253,
                "column": 78
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 717,
            "pos": {
                "line": 1258,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 6 - 46873 * x ^ 2 + 374980 * x) \u2192 deriv f 5 = 0 \u2227 deriv (deriv f) 5 > 0",
            "endPos": {
                "line": 1258,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [h]",
            "proofState": 718,
            "pos": {
                "line": 1259,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - 46873 * x ^ 2 + 374980 * x\n\u22a2 deriv f 5 = 0 \u2227 deriv (deriv f) 5 > 0",
            "endPos": {
                "line": 1259,
                "column": 15
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num [deriv_add, deriv_mul, deriv_const, deriv_sub, deriv_id, deriv_pow]",
            "proofState": 719,
            "pos": {
                "line": 1260,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - 46873 * x ^ 2 + 374980 * x\n\u22a2 deriv (fun x => 5 * x ^ 6 - 46873 * x ^ 2 + 374980 * x) 5 = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 6 - 46873 * x ^ 2 + 374980 * x) 5 > 0",
            "endPos": {
                "line": 1260,
                "column": 78
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 720,
            "pos": {
                "line": 1261,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - 46873 * x ^ 2 + 374980 * x\n\u22a2 deriv (fun x => 5 * x ^ 6 - 46873 * x ^ 2 + 374980 * x) 5 = 0 \u2227\n    0 < deriv (deriv fun x => 5 * x ^ 6 - 46873 * x ^ 2 + 374980 * x) 5",
            "endPos": {
                "line": 1261,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 721,
            "pos": {
                "line": 1262,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - 46873 * x ^ 2 + 374980 * x\n\u22a2 deriv (fun x => 5 * x ^ 6 - 46873 * x ^ 2 + 374980 * x) 5 = 0 \u2227\n    0 < deriv (deriv fun x => 5 * x ^ 6 - 46873 * x ^ 2 + 374980 * x) 5",
            "endPos": {
                "line": 1262,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 722,
            "pos": {
                "line": 1265,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 5 - 2 * x ^ 3 - 68 * x ^ 2 + 216 * x) \u2192 deriv f 2 = 0 \u2227 deriv (deriv f) 2 = 0",
            "endPos": {
                "line": 1265,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [h]",
            "proofState": 723,
            "pos": {
                "line": 1266,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 - 2 * x ^ 3 - 68 * x ^ 2 + 216 * x\n\u22a2 deriv f 2 = 0 \u2227 deriv (deriv f) 2 = 0",
            "endPos": {
                "line": 1266,
                "column": 8
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp",
            "proofState": 724,
            "pos": {
                "line": 1267,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 - 2 * x ^ 3 - 68 * x ^ 2 + 216 * x\n\u22a2 deriv (fun x => x ^ 5 - 2 * x ^ 3 - 68 * x ^ 2 + 216 * x) 2 = 0 \u2227\n    deriv (deriv fun x => x ^ 5 - 2 * x ^ 3 - 68 * x ^ 2 + 216 * x) 2 = 0",
            "endPos": {
                "line": 1267,
                "column": 6
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 725,
            "pos": {
                "line": 1273,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 4 - 6924 * x - 865 * x ^ 2) \u2192 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) < 0",
            "endPos": {
                "line": 1273,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "Eq.mp",
                "id",
                "CommMagma.toMul",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Real.instMonoid",
                "funext",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "mul_comm",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_const', deriv_pow, deriv_mul, deriv_sub, deriv_add, deriv_id'', deriv_neg, mul_one, mul_zero,\n  sub_zero, zero_add, add_zero, mul_comm, mul_left_comm, mul_assoc, mul_right_comm, mul_assoc, mul_right_comm,\n  mul_assoc, mul_right_comm, mul_assoc, mul_right_comm]",
            "proofState": 726,
            "pos": {
                "line": 1274,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 - 6924 * x - 865 * x ^ 2\n\u22a2 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) < 0",
            "endPos": {
                "line": 1277,
                "column": 30
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 727,
            "pos": {
                "line": 1278,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 * 4 - x * 6924 - x ^ 2 * 865\n\u22a2 deriv (fun x => x ^ 4 * 4 - x * 6924 - x ^ 2 * 865) (-6) = 0 \u2227\n    deriv (deriv fun x => x ^ 4 * 4 - x * 6924 - x ^ 2 * 865) (-6) < 0",
            "endPos": {
                "line": 1278,
                "column": 13
            }
        },
        {
            "usedConstants": [
                "Mathlib.Meta.NormNum.isInt_pow",
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "InnerProductSpace.toNormedSpace",
                "NegZeroClass.toNeg",
                "NormedCommRing.toSeminormedCommRing",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Real",
                "Mathlib.Meta.NormNum.instAddMonoidWithOne",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "deriv_const'",
                "Mathlib.Meta.NormNum.intPow_negOfNat_bit1",
                "Mathlib.Meta.NormNum.natPow_zero",
                "Ring.toNonAssocRing",
                "sub_self",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "congrArg",
                "Mathlib.Meta.NormNum.IsNatPowT.run",
                "DifferentiableAt",
                "deriv",
                "deriv_sub",
                "Real.instSub",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "NormedField.toField",
                "Mathlib.Meta.NormNum.isNat_natSub",
                "Monoid.toNatPow",
                "Mathlib.Meta.NormNum.IsInt.neg_to_eq",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "Int.ofNat",
                "Real.instAddGroup",
                "Mathlib.Meta.NormNum.IsNatPowT.bit0",
                "Real.instRing",
                "CommMagma.toMul",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Int",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "Mathlib.Meta.NormNum.isInt_mul",
                "Mathlib.Meta.NormNum.isInt_neg",
                "NormedAddGroup.toAddGroup",
                "Mathlib.Meta.NormNum.isInt_sub",
                "SubNegZeroMonoid.toNegZeroClass",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_natCast",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "Nat.cast",
                "Field.toSemifield",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "NonUnitalNonAssocRing.toHasDistribNeg",
                "SubNegMonoid.toSub",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Add.0._proof_25",
                "instHAdd",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "AddGroup.toSubNegMonoid",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "congrFun",
                "Mathlib.Meta.NormNum.IsInt.to_isNat",
                "Ring.toAddCommGroup",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "NormedAddCommGroup.toNormedAddGroup",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "AddZeroClass.toZero",
                "NormedRing.toSeminormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
                "True",
                "Real.instNeg",
                "eq_self",
                "Mathlib.Meta.NormNum.IsNat.to_eq",
                "Mathlib.Meta.NormNum.intPow_negOfNat_bit0",
                "eq_true",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "Mathlib.Meta.NormNum.isNat_mul",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "NontriviallyNormedField.toNormedField",
                "neg_mul",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "Nat.cast_zero",
                "AddMonoidWithOne.toAddMonoid",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "HasDistribNeg.toInvolutiveNeg",
                "SubNegMonoid.toAddMonoid",
                "mul_one",
                "AddCommGroup.toDivisionAddCommMonoid",
                "Mathlib.Meta.NormNum.natPow_one",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "InvolutiveNeg.toNeg",
                "add_zero",
                "deriv_pow''",
                "OfNat.ofNat",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Ring.toSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Nat.cast_one",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "one_mul",
                "MonoidWithZero.toMonoid",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "MulZeroClass.toZero",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "True.intro",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 728,
            "pos": {
                "line": 1278,
                "column": 18
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 * 4 - x * 6924 - x ^ 2 * 865\n\u22a2 deriv (fun x => x ^ 4 * 4 - x * 6924 - x ^ 2 * 865) (-6) = 0",
            "endPos": {
                "line": 1278,
                "column": 26
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 729,
            "pos": {
                "line": 1278,
                "column": 18
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 * 4 - x * 6924 - x ^ 2 * 865\n\u22a2 deriv (deriv fun x => x ^ 4 * 4 - x * 6924 - x ^ 2 * 865) (-6) < 0",
            "endPos": {
                "line": 1278,
                "column": 26
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 730,
            "pos": {
                "line": 1279,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 * 4 - x * 6924 - x ^ 2 * 865\n\u22a2 deriv (deriv fun x => x ^ 4 * 4 - x * 6924 - x ^ 2 * 865) (-6) < 0",
            "endPos": {
                "line": 1279,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 731,
            "pos": {
                "line": 1282,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 4 + 34 * x - 27 * x ^ 2) \u2192 deriv f 1 = 0 \u2227 deriv (deriv f) 1 > 0",
            "endPos": {
                "line": 1282,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_add, deriv_mul, deriv_pow, deriv_const, deriv_sub, deriv_id'', deriv_comp, deriv_pow,\n  deriv_const, deriv_mul, deriv_id'', deriv_comp, deriv_pow, deriv_const, deriv_mul, deriv_id'', deriv_comp, deriv_pow,\n  deriv_const, deriv_mul, deriv_id'', deriv_comp]",
            "proofState": 732,
            "pos": {
                "line": 1283,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 + 34 * x - 27 * x ^ 2\n\u22a2 deriv f 1 = 0 \u2227 deriv (deriv f) 1 > 0",
            "endPos": {
                "line": 1285,
                "column": 97
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 733,
            "pos": {
                "line": 1286,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 + 34 * x - 27 * x ^ 2\n\u22a2 deriv (fun x => 5 * x ^ 4 + 34 * x - 27 * x ^ 2) 1 = 0 \u2227 deriv (deriv fun x => 5 * x ^ 4 + 34 * x - 27 * x ^ 2) 1 > 0",
            "endPos": {
                "line": 1286,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 734,
            "pos": {
                "line": 1289,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 6 - 2 * x ^ 5 + x ^ 4 - 5 * x ^ 3 - 1855 * x ^ 2 - 8619 * x) \u2192\n    deriv f (-3) = 0 \u2227 deriv (deriv f) (-3) < 0",
            "endPos": {
                "line": 1289,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_pow, deriv_add, deriv_sub, deriv_const, deriv_mul, deriv_id'', deriv_pow, deriv_add, deriv_sub,\n  deriv_const, deriv_mul, deriv_id'', deriv_pow, deriv_add, deriv_sub, deriv_const, deriv_mul, deriv_id'', deriv_pow,\n  deriv_add, deriv_sub, deriv_const, deriv_mul, deriv_id'']",
            "proofState": 735,
            "pos": {
                "line": 1290,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 6 - 2 * x ^ 5 + x ^ 4 - 5 * x ^ 3 - 1855 * x ^ 2 - 8619 * x\n\u22a2 deriv f (-3) = 0 \u2227 deriv (deriv f) (-3) < 0",
            "endPos": {
                "line": 1293,
                "column": 72
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 736,
            "pos": {
                "line": 1294,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 6 - 2 * x ^ 5 + x ^ 4 - 5 * x ^ 3 - 1855 * x ^ 2 - 8619 * x\n\u22a2 deriv (fun x => x ^ 6 - 2 * x ^ 5 + x ^ 4 - 5 * x ^ 3 - 1855 * x ^ 2 - 8619 * x) (-3) = 0 \u2227\n    deriv (deriv fun x => x ^ 6 - 2 * x ^ 5 + x ^ 4 - 5 * x ^ 3 - 1855 * x ^ 2 - 8619 * x) (-3) < 0",
            "endPos": {
                "line": 1294,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 737,
            "pos": {
                "line": 1297,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 6 + 4 * x ^ 5 - 23752 * x ^ 2 + 187520 * x) \u2192 deriv f 5 = 0 \u2227 deriv (deriv f) 5 < 0",
            "endPos": {
                "line": 1297,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp [h, deriv_add, deriv_mul, deriv_const, deriv_pow] at *",
            "proofState": 738,
            "pos": {
                "line": 1298,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 + 4 * x ^ 5 - 23752 * x ^ 2 + 187520 * x\n\u22a2 deriv f 5 = 0 \u2227 deriv (deriv f) 5 < 0",
            "endPos": {
                "line": 1298,
                "column": 61
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 739,
            "pos": {
                "line": 1299,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : True\n\u22a2 deriv (fun x => 2 * x ^ 6 + 4 * x ^ 5 - 23752 * x ^ 2 + 187520 * x) 5 = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 6 + 4 * x ^ 5 - 23752 * x ^ 2 + 187520 * x) 5 < 0",
            "endPos": {
                "line": 1299,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "try\n  linarith <;>\n    linarith [pow_two_nonneg (5 - 1), pow_two_nonneg (5 - 2), pow_two_nonneg (5 - 3), pow_two_nonneg (5 - 4),\n      pow_two_nonneg (5 - 5), pow_two_nonneg (5 - 6)]",
            "proofState": 740,
            "pos": {
                "line": 1300,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : True\n\u22a2 deriv (fun x => 2 * x ^ 6 + 4 * x ^ 5 - 23752 * x ^ 2 + 187520 * x) 5 = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 6 + 4 * x ^ 5 - 23752 * x ^ 2 + 187520 * x) 5 < 0",
            "endPos": {
                "line": 1301,
                "column": 159
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 741,
            "pos": {
                "line": 1300,
                "column": 10
            },
            "goals": "f : \u211d \u2192 \u211d\nh : True\n\u22a2 deriv (fun x => 2 * x ^ 6 + 4 * x ^ 5 - 23752 * x ^ 2 + 187520 * x) 5 = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 6 + 4 * x ^ 5 - 23752 * x ^ 2 + 187520 * x) 5 < 0",
            "endPos": {
                "line": 1300,
                "column": 18
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 742,
            "pos": {
                "line": 1304,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 2 - 24 * x) \u2192 deriv f 4 = 0 \u2227 deriv (deriv f) 4 > 0",
            "endPos": {
                "line": 1304,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [h, deriv_sub, deriv_const, deriv_mul, deriv_id'', deriv_pow, pow_one, mul_one]",
            "proofState": 743,
            "pos": {
                "line": 1305,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 - 24 * x\n\u22a2 deriv f 4 = 0 \u2227 deriv (deriv f) 4 > 0",
            "endPos": {
                "line": 1305,
                "column": 91
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 744,
            "pos": {
                "line": 1306,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 - 24 * x\n\u22a2 deriv (fun x => 3 * x ^ 2 - 24 * x) 4 = 0 \u2227 deriv (deriv fun x => 3 * x ^ 2 - 24 * x) 4 > 0",
            "endPos": {
                "line": 1306,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 745,
            "pos": {
                "line": 1307,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 - 24 * x\n\u22a2 deriv (fun x => 3 * x ^ 2 - 24 * x) 4 = 0 \u2227 0 < deriv (deriv fun x => 3 * x ^ 2 - 24 * x) 4",
            "endPos": {
                "line": 1307,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 746,
            "pos": {
                "line": 1310,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 6 + 4 * x ^ 5 - 28080 * x ^ 2 + 264384 * x) \u2192 deriv f 6 = 0 \u2227 deriv (deriv f) 6 = 0",
            "endPos": {
                "line": 1310,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_add, deriv_pow, deriv_const, deriv_mul, deriv_sub, deriv_id'', deriv_pow, deriv_const, deriv_mul,\n  deriv_sub, deriv_id'', one_mul, zero_mul, zero_add, zero_sub, sub_zero, zero_pow, zero_mul, mul_one, one_pow,\n  sub_neg_eq_add, mul_zero, sub_zero, zero_sub, add_zero]",
            "proofState": 747,
            "pos": {
                "line": 1311,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 6 + 4 * x ^ 5 - 28080 * x ^ 2 + 264384 * x\n\u22a2 deriv f 6 = 0 \u2227 deriv (deriv f) 6 = 0",
            "endPos": {
                "line": 1314,
                "column": 23
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 748,
            "pos": {
                "line": 1315,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 6 + 4 * x ^ 5 - 28080 * x ^ 2 + 264384 * x\n\u22a2 deriv (fun x => x ^ 6 + 4 * x ^ 5 - 28080 * x ^ 2 + 264384 * x) 6 = 0 \u2227\n    deriv (deriv fun x => x ^ 6 + 4 * x ^ 5 - 28080 * x ^ 2 + 264384 * x) 6 = 0",
            "endPos": {
                "line": 1315,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 749,
            "pos": {
                "line": 1316,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 6 + 4 * x ^ 5 - 28080 * x ^ 2 + 264384 * x\n\u22a2 deriv (fun x => x ^ 6 + 4 * x ^ 5 - 28080 * x ^ 2 + 264384 * x) 6 = 0 \u2227\n    deriv (deriv fun x => x ^ 6 + 4 * x ^ 5 - 28080 * x ^ 2 + 264384 * x) 6 = 0",
            "endPos": {
                "line": 1316,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 750,
            "pos": {
                "line": 1319,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x) \u2192 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) = 0",
            "endPos": {
                "line": 1319,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h]",
            "proofState": 751,
            "pos": {
                "line": 1320,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x\n\u22a2 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) = 0",
            "endPos": {
                "line": 1320,
                "column": 19
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 752,
            "pos": {
                "line": 1321,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x\n\u22a2 deriv (fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x) (-6) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x) (-6) = 0",
            "endPos": {
                "line": 1321,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "apply And.intro",
            "proofState": 753,
            "pos": {
                "line": 1322,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x\n\u22a2 deriv (fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x) (-6) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x) (-6) = 0",
            "endPos": {
                "line": 1322,
                "column": 17
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 754,
            "pos": {
                "line": 1323,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x\n\u22a2 deriv (fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x) (-6) = 0",
            "endPos": {
                "line": 1323,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 755,
            "pos": {
                "line": 1323,
                "column": 2
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x) (-6) = 0",
            "endPos": {
                "line": 1323,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "HasDerivAt.deriv"
            ],
            "tactic": "apply HasDerivAt.deriv",
            "proofState": 756,
            "pos": {
                "line": 1325,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x\n\u22a2 deriv (fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x) (-6) = 0",
            "endPos": {
                "line": 1325,
                "column": 24
            }
        },
        {
            "usedConstants": [
                "HasDerivAt.deriv"
            ],
            "tactic": "apply HasDerivAt.deriv",
            "proofState": 757,
            "pos": {
                "line": 1325,
                "column": 2
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x) (-6) = 0",
            "endPos": {
                "line": 1325,
                "column": 24
            }
        },
        {
            "usedConstants": [],
            "tactic": "apply HasDerivAt.const_mul",
            "proofState": 758,
            "pos": {
                "line": 1326,
                "column": 2
            },
            "goals": "case left.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x\n\u22a2 HasDerivAt (fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x) 0 (-6)",
            "endPos": {
                "line": 1326,
                "column": 28
            }
        },
        {
            "usedConstants": [],
            "tactic": "apply HasDerivAt.const_mul",
            "proofState": 759,
            "pos": {
                "line": 1326,
                "column": 2
            },
            "goals": "case right.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x\n\u22a2 HasDerivAt (deriv fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x) 0 (-6)",
            "endPos": {
                "line": 1326,
                "column": 28
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 760,
            "pos": {
                "line": 1331,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 4 - 3 * x ^ 3 - 351 * x ^ 2 + 1928 * x) \u2192 deriv f 4 = 0 \u2227 deriv (deriv f) 4 < 0",
            "endPos": {
                "line": 1331,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [h]",
            "proofState": 761,
            "pos": {
                "line": 1332,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 - 3 * x ^ 3 - 351 * x ^ 2 + 1928 * x\n\u22a2 deriv f 4 = 0 \u2227 deriv (deriv f) 4 < 0",
            "endPos": {
                "line": 1332,
                "column": 8
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 762,
            "pos": {
                "line": 1333,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 - 3 * x ^ 3 - 351 * x ^ 2 + 1928 * x\n\u22a2 deriv (fun x => 4 * x ^ 4 - 3 * x ^ 3 - 351 * x ^ 2 + 1928 * x) 4 = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 4 - 3 * x ^ 3 - 351 * x ^ 2 + 1928 * x) 4 < 0",
            "endPos": {
                "line": 1333,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 763,
            "pos": {
                "line": 1334,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 - 3 * x ^ 3 - 351 * x ^ 2 + 1928 * x\n\u22a2 deriv (fun x => 4 * x ^ 4 - 3 * x ^ 3 - 351 * x ^ 2 + 1928 * x) 4 = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 4 - 3 * x ^ 3 - 351 * x ^ 2 + 1928 * x) 4 < 0",
            "endPos": {
                "line": 1334,
                "column": 13
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "pow_two",
                "Real.denselyNormedField",
                "Real.instZero",
                "Monoid.toMulOneClass",
                "Real.instRCLike",
                "MulOneClass.toMul",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "pow_three",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "funext",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp [deriv_const, deriv_add, deriv_sub, deriv_mul, deriv_pow, pow_one, pow_two, pow_three, mul_assoc]",
            "proofState": 764,
            "pos": {
                "line": 1335,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 - 3 * x ^ 3 - 351 * x ^ 2 + 1928 * x\n\u22a2 deriv (fun x => 4 * x ^ 4 - 3 * x ^ 3 - 351 * x ^ 2 + 1928 * x) 4 = 0",
            "endPos": {
                "line": 1336,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "pow_two",
                "Real.denselyNormedField",
                "Real.instZero",
                "Monoid.toMulOneClass",
                "Real.instRCLike",
                "MulOneClass.toMul",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "pow_three",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "funext",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp [deriv_const, deriv_add, deriv_sub, deriv_mul, deriv_pow, pow_one, pow_two, pow_three, mul_assoc]",
            "proofState": 765,
            "pos": {
                "line": 1335,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 - 3 * x ^ 3 - 351 * x ^ 2 + 1928 * x\n\u22a2 deriv (deriv fun x => 4 * x ^ 4 - 3 * x ^ 3 - 351 * x ^ 2 + 1928 * x) 4 < 0",
            "endPos": {
                "line": 1336,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 766,
            "pos": {
                "line": 1337,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 - 3 * x ^ 3 - 351 * x ^ 2 + 1928 * x\n\u22a2 deriv (fun x => 4 * x ^ 4 - 3 * (x * (x * x)) - 351 * (x * x) + 1928 * x) 4 = 0",
            "endPos": {
                "line": 1337,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 767,
            "pos": {
                "line": 1337,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 - 3 * x ^ 3 - 351 * x ^ 2 + 1928 * x\n\u22a2 deriv (deriv fun x => 4 * x ^ 4 - 3 * (x * (x * x)) - 351 * (x * x) + 1928 * x) 4 < 0",
            "endPos": {
                "line": 1337,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 768,
            "pos": {
                "line": 1338,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 - 3 * x ^ 3 - 351 * x ^ 2 + 1928 * x\n\u22a2 deriv (fun x => 4 * x ^ 4 - 3 * (x * (x * x)) - 351 * (x * x) + 1928 * x) 4 = 0",
            "endPos": {
                "line": 1338,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 769,
            "pos": {
                "line": 1338,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 - 3 * x ^ 3 - 351 * x ^ 2 + 1928 * x\n\u22a2 deriv (deriv fun x => 4 * x ^ 4 - 3 * (x * (x * x)) - 351 * (x * x) + 1928 * x) 4 < 0",
            "endPos": {
                "line": 1338,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 770,
            "pos": {
                "line": 1341,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 4 - 3 * x ^ 3 - 242 * x ^ 2 + 993 * x) \u2192 deriv f 3 = 0 \u2227 deriv (deriv f) 3 > 0",
            "endPos": {
                "line": 1341,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [hf]",
            "proofState": 771,
            "pos": {
                "line": 1342,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 4 - 3 * x ^ 3 - 242 * x ^ 2 + 993 * x\n\u22a2 deriv f 3 = 0 \u2227 deriv (deriv f) 3 > 0",
            "endPos": {
                "line": 1342,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp [deriv_sub, deriv_add, deriv_const, deriv_mul, deriv_pow]",
            "proofState": 772,
            "pos": {
                "line": 1343,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 4 - 3 * x ^ 3 - 242 * x ^ 2 + 993 * x\n\u22a2 deriv (fun x => 5 * x ^ 4 - 3 * x ^ 3 - 242 * x ^ 2 + 993 * x) 3 = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 4 - 3 * x ^ 3 - 242 * x ^ 2 + 993 * x) 3 > 0",
            "endPos": {
                "line": 1343,
                "column": 64
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 773,
            "pos": {
                "line": 1344,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 4 - 3 * x ^ 3 - 242 * x ^ 2 + 993 * x\n\u22a2 deriv (fun x => 5 * x ^ 4 - 3 * x ^ 3 - 242 * x ^ 2 + 993 * x) 3 = 0 \u2227\n    0 < deriv (deriv fun x => 5 * x ^ 4 - 3 * x ^ 3 - 242 * x ^ 2 + 993 * x) 3",
            "endPos": {
                "line": 1344,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 774,
            "pos": {
                "line": 1345,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 4 - 3 * x ^ 3 - 242 * x ^ 2 + 993 * x\n\u22a2 deriv (fun x => 5 * x ^ 4 - 3 * x ^ 3 - 242 * x ^ 2 + 993 * x) 3 = 0 \u2227\n    0 < deriv (deriv fun x => 5 * x ^ 4 - 3 * x ^ 3 - 242 * x ^ 2 + 993 * x) 3",
            "endPos": {
                "line": 1345,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 775,
            "pos": {
                "line": 1345,
                "column": 19
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 4 - 3 * x ^ 3 - 242 * x ^ 2 + 993 * x\n\u22a2 deriv (fun x => 5 * x ^ 4 - 3 * x ^ 3 - 242 * x ^ 2 + 993 * x) 3 = 0 \u2227\n    0 < deriv (deriv fun x => 5 * x ^ 4 - 3 * x ^ 3 - 242 * x ^ 2 + 993 * x) 3",
            "endPos": {
                "line": 1345,
                "column": 27
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 776,
            "pos": {
                "line": 1348,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 5 * x ^ 6 - x ^ 5 + 2 * x ^ 4 + 4 * x ^ 3 - 18797 * x ^ 2 + 120232 * x) \u2192\n    deriv f 4 = 0 \u2227 deriv (deriv f) 4 > 0",
            "endPos": {
                "line": 1348,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "pow_two",
                "Real.denselyNormedField",
                "Real.instZero",
                "Monoid.toMulOneClass",
                "Real.instRCLike",
                "MulOneClass.toMul",
                "congrArg",
                "deriv",
                "add_assoc",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "funext",
                "GT.gt",
                "instHAdd",
                "AddSemigroup.toAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "instHMul",
                "Real.instAddSemigroup",
                "Real.instNatCast"
            ],
            "tactic": "simp only [h, deriv_add, deriv_sub, deriv_const, deriv_mul, deriv_pow, pow_one, pow_two, mul_one, mul_zero, sub_zero,\n  zero_add, zero_sub, add_zero, sub_neg_eq_add, add_assoc]",
            "proofState": 777,
            "pos": {
                "line": 1349,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - x ^ 5 + 2 * x ^ 4 + 4 * x ^ 3 - 18797 * x ^ 2 + 120232 * x\n\u22a2 deriv f 4 = 0 \u2227 deriv (deriv f) 4 > 0",
            "endPos": {
                "line": 1350,
                "column": 89
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Monoid.toMulOneClass",
                "Real.instRCLike",
                "MulOneClass.toMul",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "AddSemigroup.toAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instAddSemigroup",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 778,
            "pos": {
                "line": 1351,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - x ^ 5 + 2 * x ^ 4 + 4 * x ^ 3 - 18797 * x ^ 2 + 120232 * x\n\u22a2 deriv (fun x => 5 * x ^ 6 - x ^ 5 + (2 * x ^ 4 + 4 * x ^ 3) - 18797 * (x * x) + 120232 * x) 4 = 0 \u2227\n    deriv (deriv fun x => 5 * x ^ 6 - x ^ 5 + (2 * x ^ 4 + 4 * x ^ 3) - 18797 * (x * x) + 120232 * x) 4 > 0",
            "endPos": {
                "line": 1351,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 779,
            "pos": {
                "line": 1352,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - x ^ 5 + 2 * x ^ 4 + 4 * x ^ 3 - 18797 * x ^ 2 + 120232 * x\n\u22a2 deriv (fun x => 5 * x ^ 6 - x ^ 5 + (2 * x ^ 4 + 4 * x ^ 3) - 18797 * (x * x) + 120232 * x) 4 = 0 \u2227\n    0 < deriv (deriv fun x => 5 * x ^ 6 - x ^ 5 + (2 * x ^ 4 + 4 * x ^ 3) - 18797 * (x * x) + 120232 * x) 4",
            "endPos": {
                "line": 1352,
                "column": 14
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 780,
            "pos": {
                "line": 1353,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - x ^ 5 + 2 * x ^ 4 + 4 * x ^ 3 - 18797 * x ^ 2 + 120232 * x\n\u22a2 deriv (fun x => 5 * x ^ 6 - x ^ 5 + (2 * x ^ 4 + 4 * x ^ 3) - 18797 * (x * x) + 120232 * x) 4 = 0 \u2227\n    0 < deriv (deriv fun x => 5 * x ^ 6 - x ^ 5 + (2 * x ^ 4 + 4 * x ^ 3) - 18797 * (x * x) + 120232 * x) 4",
            "endPos": {
                "line": 1353,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 781,
            "pos": {
                "line": 1356,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 5 - 2 * x ^ 4 + x ^ 3 + 373 * x ^ 2 + 1096 * x) \u2192 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) < 0",
            "endPos": {
                "line": 1356,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [hf, deriv_const, deriv_add, deriv_sub, deriv_mul, deriv_pow, deriv_X, deriv_one, zero_add, zero_sub,\n  zero_mul, sub_zero, mul_one, mul_zero, zero_neg, neg_neg, neg_mul, neg_sub, neg_zero]",
            "proofState": 782,
            "pos": {
                "line": 1357,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 4 * x ^ 5 - 2 * x ^ 4 + x ^ 3 + 373 * x ^ 2 + 1096 * x\n\u22a2 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) < 0",
            "endPos": {
                "line": 1359,
                "column": 22
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 783,
            "pos": {
                "line": 1360,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 4 * x ^ 5 - 2 * x ^ 4 + x ^ 3 + 373 * x ^ 2 + 1096 * x\n\u22a2 deriv (fun x => 4 * x ^ 5 - 2 * x ^ 4 + x ^ 3 + 373 * x ^ 2 + 1096 * x) (-2) = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 5 - 2 * x ^ 4 + x ^ 3 + 373 * x ^ 2 + 1096 * x) (-2) < 0",
            "endPos": {
                "line": 1360,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 784,
            "pos": {
                "line": 1361,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 4 * x ^ 5 - 2 * x ^ 4 + x ^ 3 + 373 * x ^ 2 + 1096 * x\n\u22a2 deriv (fun x => 4 * x ^ 5 - 2 * x ^ 4 + x ^ 3 + 373 * x ^ 2 + 1096 * x) (-2) = 0 \u2227\n    deriv (deriv fun x => 4 * x ^ 5 - 2 * x ^ 4 + x ^ 3 + 373 * x ^ 2 + 1096 * x) (-2) < 0",
            "endPos": {
                "line": 1361,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 785,
            "pos": {
                "line": 1364,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 6 + 2 * x ^ 4 - 5 * x ^ 3 - 2504 * x - 801 * x ^ 2) \u2192\n    deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) < 0",
            "endPos": {
                "line": 1364,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [rpow_two, mul_neg, mul_one, mul_zero, add_zero, zero_add, zero_mul, sub_zero, sub_neg_eq_add, neg_mul,\n  neg_zero, mul_neg_one, neg_neg, mul_two]",
            "proofState": 786,
            "pos": {
                "line": 1365,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 + 2 * x ^ 4 - 5 * x ^ 3 - 2504 * x - 801 * x ^ 2\n\u22a2 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) < 0",
            "endPos": {
                "line": 1366,
                "column": 79
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 787,
            "pos": {
                "line": 1367,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 + 2 * x ^ 4 - 5 * x ^ 3 - 2504 * x - 801 * x ^ 2\n\u22a2 deriv (fun x => 3 * x ^ 6 + 2 * x ^ 4 - 5 * x ^ 3 - 2504 * x - 801 * x ^ 2) (-2) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 6 + 2 * x ^ 4 - 5 * x ^ 3 - 2504 * x - 801 * x ^ 2) (-2) < 0",
            "endPos": {
                "line": 1367,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 788,
            "pos": {
                "line": 1368,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 + 2 * x ^ 4 - 5 * x ^ 3 - 2504 * x - 801 * x ^ 2\n\u22a2 deriv (fun x => 3 * x ^ 6 + 2 * x ^ 4 - 5 * x ^ 3 - 2504 * x - 801 * x ^ 2) (-2) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 6 + 2 * x ^ 4 - 5 * x ^ 3 - 2504 * x - 801 * x ^ 2) (-2) < 0",
            "endPos": {
                "line": 1368,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 789,
            "pos": {
                "line": 1368,
                "column": 18
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 + 2 * x ^ 4 - 5 * x ^ 3 - 2504 * x - 801 * x ^ 2\n\u22a2 deriv (fun x => 3 * x ^ 6 + 2 * x ^ 4 - 5 * x ^ 3 - 2504 * x - 801 * x ^ 2) (-2) = 0",
            "endPos": {
                "line": 1368,
                "column": 26
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 790,
            "pos": {
                "line": 1368,
                "column": 18
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 + 2 * x ^ 4 - 5 * x ^ 3 - 2504 * x - 801 * x ^ 2\n\u22a2 deriv (deriv fun x => 3 * x ^ 6 + 2 * x ^ 4 - 5 * x ^ 3 - 2504 * x - 801 * x ^ 2) (-2) < 0",
            "endPos": {
                "line": 1368,
                "column": 26
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 791,
            "pos": {
                "line": 1371,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 3 - 9 * x ^ 2 + 27 * x) \u2192 deriv f 3 = 0 \u2227 deriv (deriv f) 3 = 0",
            "endPos": {
                "line": 1371,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_pow, deriv_sub, deriv_const, deriv_mul, deriv_id'', deriv_add, deriv_pow, deriv_sub, deriv_const,\n  deriv_mul, deriv_id'', deriv_add, deriv_pow, deriv_sub, deriv_const, deriv_mul, deriv_id'', deriv_add, deriv_pow,\n  deriv_sub, deriv_const, deriv_mul, deriv_id'', deriv_add]",
            "proofState": 792,
            "pos": {
                "line": 1372,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 - 9 * x ^ 2 + 27 * x\n\u22a2 deriv f 3 = 0 \u2227 deriv (deriv f) 3 = 0",
            "endPos": {
                "line": 1375,
                "column": 26
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 793,
            "pos": {
                "line": 1376,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 - 9 * x ^ 2 + 27 * x\n\u22a2 deriv (fun x => x ^ 3 - 9 * x ^ 2 + 27 * x) 3 = 0 \u2227 deriv (deriv fun x => x ^ 3 - 9 * x ^ 2 + 27 * x) 3 = 0",
            "endPos": {
                "line": 1376,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 794,
            "pos": {
                "line": 1377,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 - 9 * x ^ 2 + 27 * x\n\u22a2 deriv (fun x => x ^ 3 - 9 * x ^ 2 + 27 * x) 3 = 0 \u2227 deriv (deriv fun x => x ^ 3 - 9 * x ^ 2 + 27 * x) 3 = 0",
            "endPos": {
                "line": 1377,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 795,
            "pos": {
                "line": 1380,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 4 - 7 * x ^ 2 + 10 * x) \u2192 deriv f 1 = 0 \u2227 deriv (deriv f) 1 < 0",
            "endPos": {
                "line": 1380,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [hf]",
            "proofState": 796,
            "pos": {
                "line": 1381,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 - 7 * x ^ 2 + 10 * x\n\u22a2 deriv f 1 = 0 \u2227 deriv (deriv f) 1 < 0",
            "endPos": {
                "line": 1381,
                "column": 9
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_pow, deriv_sub, deriv_const, deriv_id, deriv_mul, deriv_pow, deriv_sub, deriv_const, deriv_id]",
            "proofState": 797,
            "pos": {
                "line": 1382,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 - 7 * x ^ 2 + 10 * x\n\u22a2 deriv (fun x => x ^ 4 - 7 * x ^ 2 + 10 * x) 1 = 0 \u2227 deriv (deriv fun x => x ^ 4 - 7 * x ^ 2 + 10 * x) 1 < 0",
            "endPos": {
                "line": 1383,
                "column": 13
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 798,
            "pos": {
                "line": 1387,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 2 - 24 * x) \u2192 deriv f 6 = 0 \u2227 deriv (deriv f) 6 > 0",
            "endPos": {
                "line": 1387,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [hf, deriv_const', deriv_mul, deriv_pow, deriv_sub, deriv_id'', deriv_pow, deriv_const, deriv_id, sub_zero,\n  mul_one, mul_zero, zero_mul, sub_self, zero_sub, neg_zero, zero_add, one_mul, mul_neg, neg_mul, neg_neg]",
            "proofState": 799,
            "pos": {
                "line": 1388,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv f 6 = 0 \u2227 deriv (deriv f) 6 > 0",
            "endPos": {
                "line": 1390,
                "column": 39
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 800,
            "pos": {
                "line": 1391,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 24 * x) 6 = 0 \u2227 deriv (deriv fun x => 2 * x ^ 2 - 24 * x) 6 > 0",
            "endPos": {
                "line": 1391,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 801,
            "pos": {
                "line": 1393,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 24 * x) 6 = 0 \u2227 0 < deriv (deriv fun x => 2 * x ^ 2 - 24 * x) 6",
            "endPos": {
                "line": 1393,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_two_mul_deriv_sub_deriv_two_mul (fun x => x ^ 2) 6]",
            "proofState": 802,
            "pos": {
                "line": 1395,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 24 * x) 6 = 0 \u2227 0 < deriv (deriv fun x => 2 * x ^ 2 - 24 * x) 6",
            "endPos": {
                "line": 1395,
                "column": 69
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 803,
            "pos": {
                "line": 1398,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x) \u2192 deriv f (-5) = 0 \u2227 deriv (deriv f) (-5) < 0",
            "endPos": {
                "line": 1398,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all [h, deriv_pow, deriv_add, deriv_mul, deriv_const]",
            "proofState": 804,
            "pos": {
                "line": 1399,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x\n\u22a2 deriv f (-5) = 0 \u2227 deriv (deriv f) (-5) < 0",
            "endPos": {
                "line": 1399,
                "column": 60
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 805,
            "pos": {
                "line": 1400,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x\n\u22a2 deriv (fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x) (-5) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x) (-5) < 0",
            "endPos": {
                "line": 1400,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 806,
            "pos": {
                "line": 1400,
                "column": 18
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x\n\u22a2 deriv (fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x) (-5) = 0",
            "endPos": {
                "line": 1400,
                "column": 26
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 807,
            "pos": {
                "line": 1400,
                "column": 18
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x) (-5) < 0",
            "endPos": {
                "line": 1400,
                "column": 26
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 808,
            "pos": {
                "line": 1403,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 2 + 4 * x) \u2192 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) > 0",
            "endPos": {
                "line": 1403,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [hf]",
            "proofState": 809,
            "pos": {
                "line": 1404,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 4 * x\n\u22a2 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) > 0",
            "endPos": {
                "line": 1404,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 810,
            "pos": {
                "line": 1405,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 4 * x\n\u22a2 deriv (fun x => x ^ 2 + 4 * x) (-2) = 0 \u2227 deriv (deriv fun x => x ^ 2 + 4 * x) (-2) > 0",
            "endPos": {
                "line": 1405,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 811,
            "pos": {
                "line": 1406,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 4 * x\n\u22a2 deriv (fun x => x ^ 2 + 4 * x) (-2) = 0 \u2227 0 < deriv (deriv fun x => x ^ 2 + 4 * x) (-2)",
            "endPos": {
                "line": 1406,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv]",
            "proofState": 812,
            "pos": {
                "line": 1407,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 4 * x\n\u22a2 deriv (fun x => x ^ 2 + 4 * x) (-2) = 0",
            "endPos": {
                "line": 1407,
                "column": 18
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv]",
            "proofState": 813,
            "pos": {
                "line": 1407,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 4 * x\n\u22a2 0 < deriv (deriv fun x => x ^ 2 + 4 * x) (-2)",
            "endPos": {
                "line": 1407,
                "column": 18
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 814,
            "pos": {
                "line": 1413,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 6 - 24576 * x - 3840 * x ^ 2) \u2192 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) = 0",
            "endPos": {
                "line": 1413,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [h]",
            "proofState": 815,
            "pos": {
                "line": 1414,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 6 - 24576 * x - 3840 * x ^ 2\n\u22a2 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) = 0",
            "endPos": {
                "line": 1414,
                "column": 8
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 816,
            "pos": {
                "line": 1415,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 6 - 24576 * x - 3840 * x ^ 2\n\u22a2 deriv (fun x => x ^ 6 - 24576 * x - 3840 * x ^ 2) (-4) = 0 \u2227\n    deriv (deriv fun x => x ^ 6 - 24576 * x - 3840 * x ^ 2) (-4) = 0",
            "endPos": {
                "line": 1415,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_sub, deriv_pow, deriv_const, deriv_mul]",
            "proofState": 817,
            "pos": {
                "line": 1416,
                "column": 6
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 6 - 24576 * x - 3840 * x ^ 2\n\u22a2 deriv (fun x => x ^ 6 - 24576 * x - 3840 * x ^ 2) (-4) = 0",
            "endPos": {
                "line": 1416,
                "column": 57
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_sub, deriv_pow, deriv_const, deriv_mul]",
            "proofState": 818,
            "pos": {
                "line": 1416,
                "column": 6
            },
            "goals": "case right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 6 - 24576 * x - 3840 * x ^ 2\n\u22a2 deriv (deriv fun x => x ^ 6 - 24576 * x - 3840 * x ^ 2) (-4) = 0",
            "endPos": {
                "line": 1416,
                "column": 57
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 819,
            "pos": {
                "line": 1421,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 4 + x ^ 3 - 97 * x ^ 2 - 393 * x) \u2192 deriv f (-3) = 0 \u2227 deriv (deriv f) (-3) > 0",
            "endPos": {
                "line": 1421,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [hf]",
            "proofState": 820,
            "pos": {
                "line": 1422,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 4 + x ^ 3 - 97 * x ^ 2 - 393 * x\n\u22a2 deriv f (-3) = 0 \u2227 deriv (deriv f) (-3) > 0",
            "endPos": {
                "line": 1422,
                "column": 9
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv]",
            "proofState": 821,
            "pos": {
                "line": 1423,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 4 + x ^ 3 - 97 * x ^ 2 - 393 * x\n\u22a2 deriv (fun x => 2 * x ^ 4 + x ^ 3 - 97 * x ^ 2 - 393 * x) (-3) = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 4 + x ^ 3 - 97 * x ^ 2 - 393 * x) (-3) > 0",
            "endPos": {
                "line": 1423,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 822,
            "pos": {
                "line": 1428,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 3 + 19 * x ^ 2 + 120 * x) \u2192 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) > 0",
            "endPos": {
                "line": 1428,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "Eq.mp",
                "id",
                "CommMagma.toMul",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Real.instAdd",
                "Real.instMonoid",
                "funext",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "Real.instNeg",
                "mul_comm",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_add, deriv_pow, deriv_mul, deriv_pow, deriv_add, deriv_id'', deriv_const, zero_add, zero_mul,\n  add_zero, mul_one, mul_zero, mul_assoc, mul_comm, mul_left_comm]",
            "proofState": 823,
            "pos": {
                "line": 1429,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 + 19 * x ^ 2 + 120 * x\n\u22a2 deriv f (-6) = 0 \u2227 deriv (deriv f) (-6) > 0",
            "endPos": {
                "line": 1430,
                "column": 88
            }
        },
        {
            "usedConstants": [
                "Mathlib.Meta.NormNum.isInt_pow",
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NegZeroClass.toNeg",
                "NormedCommRing.toSeminormedCommRing",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Real",
                "Mathlib.Meta.NormNum.instAddMonoidWithOne",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "deriv_const'",
                "Mathlib.Meta.NormNum.intPow_negOfNat_bit1",
                "Mathlib.Meta.NormNum.natPow_zero",
                "Ring.toNonAssocRing",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "congrArg",
                "DifferentiableAt",
                "deriv",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "NormedField.toField",
                "Mathlib.Meta.NormNum.isNat_natSub",
                "Monoid.toNatPow",
                "Mathlib.Meta.NormNum.IsInt.neg_to_eq",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "Int.ofNat",
                "Real.instAddGroup",
                "Real.instRing",
                "CommMagma.toMul",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Int",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "Mathlib.Meta.NormNum.isInt_mul",
                "Mathlib.Meta.NormNum.isInt_neg",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_natCast",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "Nat.cast",
                "Field.toSemifield",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "Real.instAdd",
                "NonUnitalNonAssocRing.toHasDistribNeg",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Add.0._proof_1",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "AddGroup.toSubNegMonoid",
                "HPow.hPow",
                "Real.normedCommRing",
                "neg_add_cancel",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "congrFun",
                "Mathlib.Meta.NormNum.IsInt.to_isNat",
                "Ring.toAddCommGroup",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "AddZeroClass.toZero",
                "NormedRing.toSeminormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
                "LT.lt",
                "True",
                "Real.instNeg",
                "eq_self",
                "Mathlib.Meta.NormNum.IsNat.to_eq",
                "Mathlib.Meta.NormNum.intPow_negOfNat_bit0",
                "eq_true",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "Mathlib.Meta.NormNum.isNat_mul",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "Mathlib.Meta.NormNum.isInt_add",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "NontriviallyNormedField.toNormedField",
                "neg_mul",
                "ENormedAddCommMonoid.toAddCommMonoid",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "AddCommSemigroup.toAddCommMagma",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "Nat.cast_zero",
                "AddMonoidWithOne.toAddMonoid",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "HasDistribNeg.toInvolutiveNeg",
                "SubNegMonoid.toAddMonoid",
                "mul_one",
                "AddCommGroup.toDivisionAddCommMonoid",
                "Mathlib.Meta.NormNum.natPow_one",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "InvolutiveNeg.toNeg",
                "add_zero",
                "deriv_pow''",
                "OfNat.ofNat",
                "AddCommMonoid.toAddCommSemigroup",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Ring.toSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Nat.cast_one",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "one_mul",
                "deriv_add",
                "MonoidWithZero.toMonoid",
                "true_and",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "MulZeroClass.toZero",
                "AddCommMagma.toAdd",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "True.intro",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instNatCast",
                "NormedAddCommGroup.toENormedAddCommMonoid"
            ],
            "tactic": "norm_num",
            "proofState": 824,
            "pos": {
                "line": 1431,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 + x ^ 2 * 19 + x * 120\n\u22a2 deriv (fun x => x ^ 3 + x ^ 2 * 19 + x * 120) (-6) = 0 \u2227 deriv (deriv fun x => x ^ 3 + x ^ 2 * 19 + x * 120) (-6) > 0",
            "endPos": {
                "line": 1431,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_sq_nonneg (fun x => x ^ 3 + 19 * x ^ 2 + 120 * x) (-6)]",
            "proofState": 825,
            "pos": {
                "line": 1433,
                "column": 4
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 + x ^ 2 * 19 + x * 120\n\u22a2 0 < deriv (deriv fun x => x ^ 3 + x ^ 2 * 19 + x * 120) (-6)",
            "endPos": {
                "line": 1433,
                "column": 75
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 826,
            "pos": {
                "line": 1436,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 2 + 4 * x) \u2192 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) > 0",
            "endPos": {
                "line": 1436,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [hf]",
            "proofState": 827,
            "pos": {
                "line": 1437,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 4 * x\n\u22a2 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) > 0",
            "endPos": {
                "line": 1437,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "pow_two",
                "_private.Init.Core.0._proof_39",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "Ring.toNonAssocRing",
                "MulZeroClass.toMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Monoid.toMulOneClass",
                "Real.instRCLike",
                "MulOneClass.toMul",
                "congrArg",
                "DifferentiableAt",
                "deriv",
                "MulZeroClass.zero_mul",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "AddGroupWithOne.toAddMonoidWithOne",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "Monoid.toNatPow",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "Real.normedAddCommGroup",
                "CommMagma.toMul",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "MulZeroOneClass.toMulOneClass",
                "Real.instAdd",
                "NonUnitalNonAssocRing.toHasDistribNeg",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "funext",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "HPow.hPow",
                "Real.normedCommRing",
                "deriv_const",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "NormedRing.toSeminormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
                "LT.lt",
                "Real.instNeg",
                "MulOneClass.toOne",
                "mul_comm",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "NormedAddCommGroup.toAddCommGroup",
                "NontriviallyNormedField.toNormedField",
                "ENormedAddCommMonoid.toAddCommMonoid",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "AddCommSemigroup.toAddCommMagma",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "HasDistribNeg.toInvolutiveNeg",
                "AddCommGroup.toDivisionAddCommMonoid",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "InvolutiveNeg.toNeg",
                "add_zero",
                "OfNat.ofNat",
                "AddCommMonoid.toAddCommSemigroup",
                "neg_zero",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "one_mul",
                "deriv_add",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "mul_neg",
                "MulZeroClass.toZero",
                "AddCommMagma.toAdd",
                "instHMul",
                "Real.instNatCast",
                "NormedAddCommGroup.toENormedAddCommMonoid"
            ],
            "tactic": "simp [deriv_add, deriv_mul, deriv_pow, deriv_id'', deriv_const, zero_add, zero_mul, add_zero, mul_one, pow_two,\n  mul_comm]",
            "proofState": 828,
            "pos": {
                "line": 1438,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 4 * x\n\u22a2 deriv (fun x => x ^ 2 + 4 * x) (-2) = 0 \u2227 deriv (deriv fun x => x ^ 2 + 4 * x) (-2) > 0",
            "endPos": {
                "line": 1439,
                "column": 31
            }
        },
        {
            "usedConstants": [
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "Mathlib.Meta.NormNum.instAddMonoidWithOne",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "HMul.hMul",
                "Mathlib.Meta.NormNum.isNat_eq_true",
                "Ring.toNonAssocRing",
                "Real.denselyNormedField",
                "Real.instZero",
                "Monoid.toMulOneClass",
                "Real.instRCLike",
                "MulOneClass.toMul",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "AddGroupWithOne.toAddMonoidWithOne",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "Int.ofNat",
                "Real.instRing",
                "CommMagma.toMul",
                "instOfNatNat",
                "Int",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "Mathlib.Meta.NormNum.isInt_neg",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "Real.instAdd",
                "NonUnitalNonAssocRing.toHasDistribNeg",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "Real.normedCommRing",
                "Distrib.toMul",
                "HAdd.hAdd",
                "Mathlib.Meta.NormNum.IsInt.to_isNat",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
                "LT.lt",
                "True",
                "Real.instNeg",
                "eq_true",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "Mathlib.Meta.NormNum.isInt_add",
                "Eq.refl",
                "ENormedAddCommMonoid.toAddCommMonoid",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "AddCommSemigroup.toAddCommMagma",
                "DenselyNormedField.toNontriviallyNormedField",
                "Nat.cast_zero",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "HasDistribNeg.toInvolutiveNeg",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "InvolutiveNeg.toNeg",
                "OfNat.ofNat",
                "AddCommMonoid.toAddCommSemigroup",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "true_and",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "AddCommMagma.toAdd",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "instHMul",
                "Real.instNatCast",
                "NormedAddCommGroup.toENormedAddCommMonoid"
            ],
            "tactic": "norm_num",
            "proofState": 829,
            "pos": {
                "line": 1440,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 4 * x\n\u22a2 -2 + -2 + 4 = 0 \u2227 0 < deriv (deriv fun x => x * x + x * 4) (-2)",
            "endPos": {
                "line": 1440,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 830,
            "pos": {
                "line": 1443,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 6 + 3 * x ^ 4 - 3 * x ^ 3 - 39471 * x ^ 2 + 378072 * x) \u2192 deriv f 6 = 0 \u2227 deriv (deriv f) 6 > 0",
            "endPos": {
                "line": 1443,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_add, deriv_const, deriv_mul, deriv_pow, zero_add, zero_mul, one_mul, add_zero]",
            "proofState": 831,
            "pos": {
                "line": 1444,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 6 + 3 * x ^ 4 - 3 * x ^ 3 - 39471 * x ^ 2 + 378072 * x\n\u22a2 deriv f 6 = 0 \u2227 deriv (deriv f) 6 > 0",
            "endPos": {
                "line": 1445,
                "column": 13
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 832,
            "pos": {
                "line": 1446,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 6 + 3 * x ^ 4 - 3 * x ^ 3 - 39471 * x ^ 2 + 378072 * x\n\u22a2 deriv (fun x => 2 * x ^ 6 + 3 * x ^ 4 - 3 * x ^ 3 - 39471 * x ^ 2 + 378072 * x) 6 = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 6 + 3 * x ^ 4 - 3 * x ^ 3 - 39471 * x ^ 2 + 378072 * x) 6 > 0",
            "endPos": {
                "line": 1446,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 833,
            "pos": {
                "line": 1447,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 6 + 3 * x ^ 4 - 3 * x ^ 3 - 39471 * x ^ 2 + 378072 * x\n\u22a2 deriv (fun x => 2 * x ^ 6 + 3 * x ^ 4 - 3 * x ^ 3 - 39471 * x ^ 2 + 378072 * x) 6 = 0 \u2227\n    0 < deriv (deriv fun x => 2 * x ^ 6 + 3 * x ^ 4 - 3 * x ^ 3 - 39471 * x ^ 2 + 378072 * x) 6",
            "endPos": {
                "line": 1447,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 834,
            "pos": {
                "line": 1450,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 2 + 10 * x) \u2192 deriv f (-5) = 0 \u2227 deriv (deriv f) (-5) > 0",
            "endPos": {
                "line": 1450,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [deriv_add, deriv_const, deriv_pow, deriv_id'', pow_one, zero_add, zero_mul, add_zero, mul_one, one_mul,\n  zero_sub, sub_zero, sub_neg_eq_add]",
            "proofState": 835,
            "pos": {
                "line": 1451,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 10 * x\n\u22a2 deriv f (-5) = 0 \u2227 deriv (deriv f) (-5) > 0",
            "endPos": {
                "line": 1452,
                "column": 67
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 836,
            "pos": {
                "line": 1453,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 10 * x\n\u22a2 deriv (fun x => x ^ 2 + 10 * x) (-5) = 0 \u2227 deriv (deriv fun x => x ^ 2 + 10 * x) (-5) > 0",
            "endPos": {
                "line": 1453,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_sq_pos_of_neg (by norm_num : (-5 : \u211d) < 0)]",
            "proofState": 837,
            "pos": {
                "line": 1454,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 10 * x\n\u22a2 deriv (fun x => x ^ 2 + 10 * x) (-5) = 0 \u2227 0 < deriv (deriv fun x => x ^ 2 + 10 * x) (-5)",
            "endPos": {
                "line": 1454,
                "column": 61
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 838,
            "pos": {
                "line": 1457,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x) \u2192 deriv f (-5) = 0 \u2227 deriv (deriv f) (-5) < 0",
            "endPos": {
                "line": 1457,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_add, deriv_const, deriv_pow, deriv_mul, Nat.cast_bit1, Nat.cast_one, Nat.cast_bit0,\n  Nat.cast_ofNat]",
            "proofState": 839,
            "pos": {
                "line": 1458,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x\n\u22a2 deriv f (-5) = 0 \u2227 deriv (deriv f) (-5) < 0",
            "endPos": {
                "line": 1459,
                "column": 34
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 840,
            "pos": {
                "line": 1460,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x\n\u22a2 deriv (fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x) (-5) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x) (-5) < 0",
            "endPos": {
                "line": 1460,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 841,
            "pos": {
                "line": 1461,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x\n\u22a2 deriv (fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x) (-5) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x) (-5) < 0",
            "endPos": {
                "line": 1461,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 842,
            "pos": {
                "line": 1464,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 4 + 5 * x ^ 3 + 3 * x ^ 2 - 16 * x) \u2192 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) < 0",
            "endPos": {
                "line": 1464,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [h]",
            "proofState": 843,
            "pos": {
                "line": 1465,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 + 5 * x ^ 3 + 3 * x ^ 2 - 16 * x\n\u22a2 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) < 0",
            "endPos": {
                "line": 1465,
                "column": 8
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 844,
            "pos": {
                "line": 1466,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 + 5 * x ^ 3 + 3 * x ^ 2 - 16 * x\n\u22a2 deriv (fun x => x ^ 4 + 5 * x ^ 3 + 3 * x ^ 2 - 16 * x) (-2) = 0 \u2227\n    deriv (deriv fun x => x ^ 4 + 5 * x ^ 3 + 3 * x ^ 2 - 16 * x) (-2) < 0",
            "endPos": {
                "line": 1466,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "simp [deriv_add, deriv_sub, deriv_pow, deriv_mul, deriv_const]",
            "proofState": 845,
            "pos": {
                "line": 1467,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 + 5 * x ^ 3 + 3 * x ^ 2 - 16 * x\n\u22a2 deriv (fun x => x ^ 4 + 5 * x ^ 3 + 3 * x ^ 2 - 16 * x) (-2) = 0 \u2227\n    deriv (deriv fun x => x ^ 4 + 5 * x ^ 3 + 3 * x ^ 2 - 16 * x) (-2) < 0",
            "endPos": {
                "line": 1467,
                "column": 68
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 846,
            "pos": {
                "line": 1472,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => x ^ 4 + 3 * x ^ 3 - 20 * x - 4 * x ^ 2) \u2192 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) > 0",
            "endPos": {
                "line": 1472,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "GT.gt",
                "instHAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h, deriv_pow, deriv_add, deriv_mul, deriv_id'', deriv_const', deriv_comp, deriv_sub, deriv_neg,\n  deriv_pow, deriv_id'', deriv_const', deriv_comp, deriv_sub, deriv_neg, deriv_pow, deriv_id'', deriv_const',\n  deriv_comp, deriv_sub, deriv_neg, deriv_pow, deriv_id'', deriv_const', deriv_comp, deriv_sub, deriv_neg]",
            "proofState": 847,
            "pos": {
                "line": 1473,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 + 3 * x ^ 3 - 20 * x - 4 * x ^ 2\n\u22a2 deriv f (-2) = 0 \u2227 deriv (deriv f) (-2) > 0",
            "endPos": {
                "line": 1476,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 848,
            "pos": {
                "line": 1477,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 + 3 * x ^ 3 - 20 * x - 4 * x ^ 2\n\u22a2 deriv (fun x => x ^ 4 + 3 * x ^ 3 - 20 * x - 4 * x ^ 2) (-2) = 0 \u2227\n    deriv (deriv fun x => x ^ 4 + 3 * x ^ 3 - 20 * x - 4 * x ^ 2) (-2) > 0",
            "endPos": {
                "line": 1477,
                "column": 13
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 849,
            "pos": {
                "line": 1478,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 + 3 * x ^ 3 - 20 * x - 4 * x ^ 2\n\u22a2 deriv (fun x => x ^ 4 + 3 * x ^ 3 - 20 * x - 4 * x ^ 2) (-2) = 0\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 + 3 * x ^ 3 - 20 * x - 4 * x ^ 2\n\u22a2 deriv (deriv fun x => x ^ 4 + 3 * x ^ 3 - 20 * x - 4 * x ^ 2) (-2) > 0",
            "endPos": {
                "line": 1478,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 850,
            "pos": {
                "line": 1479,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 + 3 * x ^ 3 - 20 * x - 4 * x ^ 2\n\u22a2 deriv (fun x => x ^ 4 + 3 * x ^ 3 - 20 * x - 4 * x ^ 2) (-2) = 0\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 + 3 * x ^ 3 - 20 * x - 4 * x ^ 2\n\u22a2 deriv (deriv fun x => x ^ 4 + 3 * x ^ 3 - 20 * x - 4 * x ^ 2) (-2) > 0",
            "endPos": {
                "line": 1479,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 851,
            "pos": {
                "line": 1482,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 4 - 287 * x ^ 2 - 1528 * x) \u2192 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) > 0",
            "endPos": {
                "line": 1482,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp_all only [h]",
            "proofState": 852,
            "pos": {
                "line": 1483,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 287 * x ^ 2 - 1528 * x\n\u22a2 deriv f (-4) = 0 \u2227 deriv (deriv f) (-4) > 0",
            "endPos": {
                "line": 1483,
                "column": 19
            }
        },
        {
            "usedConstants": [
                "And.intro"
            ],
            "tactic": "constructor",
            "proofState": 853,
            "pos": {
                "line": 1484,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 287 * x ^ 2 - 1528 * x\n\u22a2 deriv (fun x => 3 * x ^ 4 - 287 * x ^ 2 - 1528 * x) (-4) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 4 - 287 * x ^ 2 - 1528 * x) (-4) > 0",
            "endPos": {
                "line": 1484,
                "column": 13
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "deriv_sub",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "Real.normedAddCommGroup",
                "instOfNatNat",
                "NormedAddGroup.toAddGroup",
                "SubNegMonoid.toSub",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "AddGroup.toSubNegMonoid",
                "HPow.hPow",
                "Nat",
                "NormedAddCommGroup.toNormedAddGroup",
                "Real.instMul",
                "Real.instNeg",
                "Zero.toOfNat0",
                "NormedAddCommGroup.toAddCommGroup",
                "NontriviallyNormedField.toNormedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "OfNat.ofNat",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "rw [deriv_sub]",
            "proofState": 854,
            "pos": {
                "line": 1485,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 287 * x ^ 2 - 1528 * x\n\u22a2 deriv (fun x => 3 * x ^ 4 - 287 * x ^ 2 - 1528 * x) (-4) = 0\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 287 * x ^ 2 - 1528 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 4 - 287 * x ^ 2 - 1528 * x) (-4) > 0",
            "endPos": {
                "line": 1485,
                "column": 16
            }
        },
        {
            "usedConstants": [],
            "tactic": "rw [deriv_pow]",
            "proofState": 855,
            "pos": {
                "line": 1486,
                "column": 2
            },
            "goals": "case left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 287 * x ^ 2 - 1528 * x\n\u22a2 deriv (fun x => 3 * x ^ 4 - 287 * x ^ 2) (-4) - deriv (HMul.hMul 1528) (-4) = 0\ncase left.hf\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 287 * x ^ 2 - 1528 * x\n\u22a2 DifferentiableAt \u211d (fun x => 3 * x ^ 4 - 287 * x ^ 2) (-4)\ncase left.hg\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 287 * x ^ 2 - 1528 * x\n\u22a2 DifferentiableAt \u211d (HMul.hMul 1528) (-4)\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 287 * x ^ 2 - 1528 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 4 - 287 * x ^ 2 - 1528 * x) (-4) > 0",
            "endPos": {
                "line": 1486,
                "column": 16
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instMonoid",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro hf",
            "proofState": 856,
            "pos": {
                "line": 1499,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 2 * x ^ 2 - 24 * x) \u2192 deriv f 6 = 0 \u2227 deriv (deriv f) 6 > 0",
            "endPos": {
                "line": 1499,
                "column": 10
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp only [hf, deriv_sub, deriv_const, deriv_mul, deriv_pow, deriv_id'', deriv_pow, deriv_id'', deriv_const, deriv_mul,\n  deriv_pow, deriv_id'', deriv_pow, deriv_id'', deriv_const, deriv_mul, deriv_pow, deriv_id'', deriv_pow, deriv_id'',\n  deriv_const, deriv_mul, deriv_pow, deriv_id'', deriv_pow, deriv_id'']",
            "proofState": 857,
            "pos": {
                "line": 1500,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv f 6 = 0 \u2227 deriv (deriv f) 6 > 0",
            "endPos": {
                "line": 1503,
                "column": 26
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "_private.Init.Core.0._proof_39",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instMonoid",
                "GT.gt",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "LT.lt",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "norm_num",
            "proofState": 858,
            "pos": {
                "line": 1504,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 24 * x) 6 = 0 \u2227 deriv (deriv fun x => 2 * x ^ 2 - 24 * x) 6 > 0",
            "endPos": {
                "line": 1504,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 859,
            "pos": {
                "line": 1505,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 24 * x) 6 = 0 \u2227 0 < deriv (deriv fun x => 2 * x ^ 2 - 24 * x) 6",
            "endPos": {
                "line": 1505,
                "column": 14
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Real.instSub",
                "HSub.hSub",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 860,
            "pos": {
                "line": 1508,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 4 * x ^ 5 - x ^ 4 - 4 * x ^ 3 + 31 * x ^ 2 + 50 * x) \u2192 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) < 0",
            "endPos": {
                "line": 1508,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "add_assoc",
                "Real.instSub",
                "NormedSpace.toModule",
                "HSub.hSub",
                "PseudoMetricSpace.toUniformSpace",
                "Real.instLT",
                "Monoid.toNatPow",
                "id",
                "CommMagma.toMul",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Real.instAdd",
                "Real.instOne",
                "Real.instMonoid",
                "funext",
                "instHAdd",
                "AddSemigroup.toAdd",
                "And",
                "instHSub",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "LT.lt",
                "Real.instNeg",
                "mul_comm",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "One.toOfNat1",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "instHMul",
                "Real.instAddSemigroup",
                "Real.instNatCast"
            ],
            "tactic": "simp only [h, deriv_const, mul_one, mul_zero, mul_neg, mul_add, mul_sub, add_sub_assoc, add_assoc, add_left_neg,\n  sub_zero, zero_add, neg_mul, neg_neg, neg_zero, zero_sub, sub_zero, sub_neg_eq_add, add_zero, zero_mul, mul_comm,\n  mul_right_comm]",
            "proofState": 861,
            "pos": {
                "line": 1509,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 5 - x ^ 4 - 4 * x ^ 3 + 31 * x ^ 2 + 50 * x\n\u22a2 deriv f (-1) = 0 \u2227 deriv (deriv f) (-1) < 0",
            "endPos": {
                "line": 1511,
                "column": 75
            }
        },
        {
            "usedConstants": [
                "Mathlib.Meta.NormNum.isInt_pow",
                "NormedCommRing.toNormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
                "Eq.mpr",
                "add_neg_cancel",
                "InnerProductSpace.toNormedSpace",
                "NegZeroClass.toNeg",
                "NormedCommRing.toSeminormedCommRing",
                "NonAssocSemiring.toAddCommMonoidWithOne",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_3",
                "Mathlib.Meta.NormNum.isNat_add",
                "Real",
                "Mathlib.Meta.NormNum.instAddMonoidWithOne",
                "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
                "NormedRing.toRing",
                "RCLike.toNormedAlgebra",
                "HMul.hMul",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_11",
                "deriv_const'",
                "Mathlib.Meta.NormNum.intPow_negOfNat_bit1",
                "Mathlib.Meta.NormNum.natPow_zero",
                "Ring.toNonAssocRing",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instAddMonoid",
                "Real.instRCLike",
                "congrArg",
                "DifferentiableAt",
                "deriv",
                "deriv_sub",
                "Real.instSub",
                "NormedSpace.toModule",
                "AddMonoid.toAddZeroClass",
                "AddGroupWithOne.toAddMonoidWithOne",
                "HSub.hSub",
                "deriv_id''",
                "PseudoMetricSpace.toUniformSpace",
                "Mathlib.Meta.NormNum.one_natPow",
                "Real.instLT",
                "NonUnitalNonAssocSemiring.toMulZeroClass",
                "NormedField.toField",
                "Mathlib.Meta.NormNum.isNat_natSub",
                "Monoid.toNatPow",
                "Mathlib.Meta.NormNum.IsInt.neg_to_eq",
                "NormedRing.toNonUnitalNormedRing",
                "Real.semiring",
                "id",
                "Distrib.toAdd",
                "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
                "AddMonoidWithOne.toNatCast",
                "Real.normedAddCommGroup",
                "instSubNat",
                "Int.ofNat",
                "Real.instAddGroup",
                "Real.instRing",
                "CommMagma.toMul",
                "SubtractionMonoid.toSubNegZeroMonoid",
                "NonAssocSemiring.toMulZeroOneClass",
                "instOfNatNat",
                "Int",
                "AddCommMonoidWithOne.toAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_ofNat",
                "SubtractionMonoid.toSubNegMonoid",
                "Mathlib.Meta.NormNum.isInt_mul",
                "Mathlib.Meta.NormNum.isInt_neg",
                "NormedAddGroup.toAddGroup",
                "Mathlib.Meta.NormNum.isInt_sub",
                "SubNegZeroMonoid.toNegZeroClass",
                "Real.instAddCommGroup",
                "NormedCommRing.toNonUnitalNormedCommRing",
                "Nat.instAddMonoidWithOne",
                "Mathlib.Meta.NormNum.isNat_natCast",
                "SubtractionCommMonoid.toSubtractionMonoid",
                "Nat.cast",
                "Field.toSemifield",
                "NonAssocRing.toNonUnitalNonAssocRing",
                "MulZeroClass.mul_zero",
                "MulZeroOneClass.toMulOneClass",
                "NonUnitalNonAssocRing.toHasDistribNeg",
                "Real.instOne",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Add.0._proof_1",
                "SubNegMonoid.toSub",
                "NonUnitalNormedRing.toNormedAddCommGroup",
                "AddMonoidWithOne.toOne",
                "Real.instMonoid",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Add.0._proof_25",
                "instHAdd",
                "AddSemigroup.toAdd",
                "And",
                "instHSub",
                "Semifield.toDivisionSemiring",
                "instNatAtLeastTwo",
                "SeminormedAddCommGroup.toPseudoMetricSpace",
                "AddGroup.toSubNegMonoid",
                "HPow.hPow",
                "Real.normedCommRing",
                "Distrib.toMul",
                "HAdd.hAdd",
                "NormedAlgebra.toNormedSpace",
                "congrFun",
                "Mathlib.Meta.NormNum.IsInt.to_isNat",
                "Ring.toAddCommGroup",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "NormedAddCommGroup.toNormedAddGroup",
                "NonUnitalNonAssocCommSemiring.toCommMagma",
                "congr",
                "AddZeroClass.toZero",
                "NormedRing.toSeminormedRing",
                "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
                "LT.lt",
                "True",
                "Real.instNeg",
                "eq_self",
                "Mathlib.Meta.NormNum.IsNat.to_eq",
                "Mathlib.Meta.NormNum.intPow_negOfNat_bit0",
                "eq_true",
                "NonUnitalNormedCommRing.toNonUnitalNormedRing",
                "SeminormedCommRing.toSeminormedRing",
                "DivisionSemiring.toSemiring",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "of_eq_true",
                "Mathlib.Meta.NormNum.isNat_mul",
                "One.toOfNat1",
                "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
                "NonUnitalNonAssocSemiring.toDistrib",
                "Zero.toOfNat0",
                "Mathlib.Meta.NormNum.isInt_add",
                "NormedAddCommGroup.toAddCommGroup",
                "Eq.refl",
                "NontriviallyNormedField.toNormedField",
                "neg_mul",
                "ENormedAddCommMonoid.toAddCommMonoid",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "AddCommSemigroup.toAddCommMagma",
                "DenselyNormedField.toNontriviallyNormedField",
                "NormedField.toNormedSpace",
                "instHPow",
                "SeminormedRing.toPseudoMetricSpace",
                "Nat.cast_zero",
                "AddMonoidWithOne.toAddMonoid",
                "NonUnitalNormedCommRing.toNonUnitalCommRing",
                "NormedField.toNormedCommRing",
                "HasDistribNeg.toInvolutiveNeg",
                "SubNegMonoid.toAddMonoid",
                "mul_one",
                "AddCommGroup.toDivisionAddCommMonoid",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "InvolutiveNeg.toNeg",
                "add_zero",
                "deriv_pow''",
                "OfNat.ofNat",
                "AddCommMonoid.toAddCommSemigroup",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Mul.0._proof_5",
                "deriv_mul",
                "NormedAddCommGroup.toSeminormedAddCommGroup",
                "NonUnitalNormedRing.toNonUnitalSeminormedRing",
                "AddZeroClass.toAdd",
                "UniformSpace.toTopologicalSpace",
                "NegZeroClass.toZero",
                "Semiring.toNonAssocSemiring",
                "Ring.toSemiring",
                "Eq",
                "_private.Mathlib.Analysis.Calculus.FDeriv.Basic.0._proof_14",
                "Nat.cast_one",
                "Ring.toAddGroupWithOne",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "one_mul",
                "deriv_add",
                "sub_neg_eq_add",
                "MonoidWithZero.toMonoid",
                "true_and",
                "RCLike.toInnerProductSpaceReal",
                "Eq.trans",
                "Int.negOfNat",
                "MulZeroClass.toZero",
                "AddCommMagma.toAdd",
                "Mathlib.Meta.NormNum.IsNat.to_isInt",
                "True.intro",
                "Semiring.toMonoidWithZero",
                "instHMul",
                "Real.instAddSemigroup",
                "Real.instNatCast",
                "NormedAddCommGroup.toENormedAddCommMonoid"
            ],
            "tactic": "norm_num",
            "proofState": 862,
            "pos": {
                "line": 1512,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 5 - x ^ 4 - 4 * x ^ 3 + 31 * x ^ 2 + 50 * x\n\u22a2 deriv (fun x => x ^ 5 * 4 - x ^ 4 - x ^ 3 * 4 + (x ^ 2 * 31 + x * 50)) (-1) = 0 \u2227\n    deriv (deriv fun x => x ^ 5 * 4 - x ^ 4 - x ^ 3 * 4 + (x ^ 2 * 31 + x * 50)) (-1) < 0",
            "endPos": {
                "line": 1512,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 863,
            "pos": {
                "line": 1514,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 5 - x ^ 4 - 4 * x ^ 3 + 31 * x ^ 2 + 50 * x\n\u22a2 deriv (deriv fun x => x ^ 5 * 4 - x ^ 4 - x ^ 3 * 4 + (x ^ 2 * 31 + x * 50)) (-1) < 0",
            "endPos": {
                "line": 1514,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith [deriv_mul_comp_deriv_of_comp_deriv_ne_zero (fun x : \u211d => 4 * x ^ 3 - x ^ 2 - 4 * x) (fun x : \u211d => 31 + 50 * x)\n    (-1 : \u211d)]",
            "proofState": 864,
            "pos": {
                "line": 1516,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 5 - x ^ 4 - 4 * x ^ 3 + 31 * x ^ 2 + 50 * x\n\u22a2 deriv (deriv fun x => x ^ 5 * 4 - x ^ 4 - x ^ 3 * 4 + (x ^ 2 * 31 + x * 50)) (-1) < 0",
            "endPos": {
                "line": 1517,
                "column": 75
            }
        },
        {
            "usedConstants": [
                "Real",
                "HMul.hMul",
                "Monoid.toNatPow",
                "instOfNatNat",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "HAdd.hAdd",
                "Nat",
                "Real.instMul",
                "instHPow",
                "OfNat.ofNat",
                "Eq",
                "instOfNatAtLeastTwo",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "intro h",
            "proofState": 865,
            "pos": {
                "line": 1520,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\n\u22a2 (f = fun x => 3 * x ^ 3 + 45 * x ^ 2 + 225 * x) \u2192 deriv f (-5) = 0 \u2227 deriv (deriv f) (-5) = 0",
            "endPos": {
                "line": 1520,
                "column": 9
            }
        },
        {
            "usedConstants": [
                "Eq.mpr",
                "InnerProductSpace.toNormedSpace",
                "NormedCommRing.toSeminormedCommRing",
                "Real",
                "HMul.hMul",
                "Real.denselyNormedField",
                "Real.instZero",
                "Real.instRCLike",
                "congrArg",
                "deriv",
                "NormedSpace.toModule",
                "PseudoMetricSpace.toUniformSpace",
                "Monoid.toNatPow",
                "id",
                "instOfNatNat",
                "Real.instAddCommGroup",
                "Real.instAdd",
                "Real.instMonoid",
                "instHAdd",
                "And",
                "instNatAtLeastTwo",
                "HPow.hPow",
                "Real.normedCommRing",
                "HAdd.hAdd",
                "NonUnitalSeminormedCommRing.toNonUnitalSeminormedRing",
                "Nat",
                "Real.instMul",
                "congr",
                "Real.instNeg",
                "NonUnitalSeminormedRing.toSeminormedAddCommGroup",
                "Zero.toOfNat0",
                "Real.pseudoMetricSpace",
                "Real.normedField",
                "DenselyNormedField.toNontriviallyNormedField",
                "instHPow",
                "SeminormedCommRing.toNonUnitalSeminormedCommRing",
                "OfNat.ofNat",
                "UniformSpace.toTopologicalSpace",
                "Eq",
                "instOfNatAtLeastTwo",
                "Neg.neg",
                "RCLike.toInnerProductSpaceReal",
                "instHMul",
                "Real.instNatCast"
            ],
            "tactic": "simp [h, deriv_add, deriv_mul, deriv_pow, deriv_const]",
            "proofState": 866,
            "pos": {
                "line": 1521,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 + 45 * x ^ 2 + 225 * x\n\u22a2 deriv f (-5) = 0 \u2227 deriv (deriv f) (-5) = 0",
            "endPos": {
                "line": 1521,
                "column": 56
            }
        },
        {
            "usedConstants": [],
            "tactic": "norm_num",
            "proofState": 867,
            "pos": {
                "line": 1522,
                "column": 2
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 + 45 * x ^ 2 + 225 * x\n\u22a2 deriv (fun x => 3 * x ^ 3 + 45 * x ^ 2 + 225 * x) (-5) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 3 + 45 * x ^ 2 + 225 * x) (-5) = 0",
            "endPos": {
                "line": 1522,
                "column": 10
            }
        },
        {
            "usedConstants": [],
            "tactic": "linarith",
            "proofState": 868,
            "pos": {
                "line": 1523,
                "column": 6
            },
            "goals": "f : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 + 45 * x ^ 2 + 225 * x\n\u22a2 deriv (fun x => 3 * x ^ 3 + 45 * x ^ 2 + 225 * x) (-5) = 0 \u2227\n    deriv (deriv fun x => 3 * x ^ 3 + 45 * x ^ 2 + 225 * x) (-5) = 0",
            "endPos": {
                "line": 1523,
                "column": 14
            }
        }
    ],
    "messages": [
        {
            "severity": "error",
            "pos": {
                "line": 9,
                "column": 16
            },
            "endPos": {
                "line": 9,
                "column": 31
            },
            "data": "unknown identifier 'deriv_sq_nonneg'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 9,
                "column": 16
            },
            "endPos": {
                "line": 9,
                "column": 31
            },
            "data": "unknown identifier 'deriv_sq_nonneg'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 16,
                "column": 6
            },
            "endPos": {
                "line": 16,
                "column": 10
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 27,
                "column": 16
            },
            "endPos": {
                "line": 27,
                "column": 31
            },
            "data": "unknown identifier 'deriv_sq_nonneg'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 31,
                "column": 75
            },
            "endPos": {
                "line": 31,
                "column": 88
            },
            "data": "unknown constant 'Nat.cast_bit0'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 32,
                "column": 15
            },
            "endPos": {
                "line": 32,
                "column": 28
            },
            "data": "unknown constant 'Nat.cast_bit0'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 32,
                "column": 55
            },
            "endPos": {
                "line": 32,
                "column": 68
            },
            "data": "unknown constant 'Nat.cast_bit0'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 33,
                "column": 4
            },
            "endPos": {
                "line": 33,
                "column": 17
            },
            "data": "unknown constant 'Nat.cast_bit0'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 33,
                "column": 44
            },
            "endPos": {
                "line": 33,
                "column": 57
            },
            "data": "unknown constant 'Nat.cast_bit0'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 35,
                "column": 6
            },
            "endPos": {
                "line": 35,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 121 * x ^ 2 + 324 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 39,
                "column": 57
            },
            "endPos": {
                "line": 39,
                "column": 70
            },
            "data": "unknown constant 'Nat.cast_bit1'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 39,
                "column": 86
            },
            "endPos": {
                "line": 39,
                "column": 99
            },
            "data": "unknown constant 'Nat.cast_bit0'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 41,
                "column": 6
            },
            "endPos": {
                "line": 41,
                "column": 10
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 52,
                "column": 6
            },
            "endPos": {
                "line": 52,
                "column": 21
            },
            "data": "tactic 'apply' failed, failed to unify\n  ?a \u2227 ?b\nwith\n  deriv (fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x) (-3) = 0\ncase left\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x\n\u22a2 deriv (fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x) (-3) = 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 52,
                "column": 6
            },
            "endPos": {
                "line": 52,
                "column": 21
            },
            "data": "tactic 'apply' failed, failed to unify\n  ?a \u2227 ?b\nwith\n  deriv (deriv fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x) (-3) = 0\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x\n\u22a2 deriv (deriv fun x => 2 * x ^ 6 - 4 * x ^ 5 + 4 * x ^ 4 - 3726 * x ^ 2 - 17388 * x) (-3) = 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 59,
                "column": 27
            },
            "endPos": {
                "line": 59,
                "column": 40
            },
            "data": "unknown constant 'Nat.cast_bit0'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 61,
                "column": 6
            },
            "endPos": {
                "line": 61,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase h\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2\na\u271d : 0 \u2265 deriv (fun x => 2 * x) 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 67,
                "column": 2
            },
            "endPos": {
                "line": 67,
                "column": 74
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 77,
                "column": 6
            },
            "endPos": {
                "line": 77,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 4 + 2 * x ^ 3 - 214 * x ^ 2 + 1104 * x\na\u271d : deriv (fun x => 2 * x ^ 4 + 2 * x ^ 3 - 214 * x ^ 2 + 1104 * x) 4 < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 77,
                "column": 6
            },
            "endPos": {
                "line": 77,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase right.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 4 + 2 * x ^ 3 - 214 * x ^ 2 + 1104 * x\na\u271d : 0 \u2265 deriv (deriv fun x => 2 * x ^ 4 + 2 * x ^ 3 - 214 * x ^ 2 + 1104 * x) 4\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 86,
                "column": 160
            },
            "endPos": {
                "line": 90,
                "column": 10
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nhf : f = fun x => 4 * x ^ 6 + 3 * x ^ 5 - x ^ 4 + 4 * x ^ 3 + 109488 * x - 17230 * x ^ 2\n\u22a2 deriv (fun x => 4 * x ^ 6 + 3 * x ^ 5 - x ^ 4 + 4 * x ^ 3 + 109488 * x - 17230 * x ^ 2) 4 = 0 \u2227\n    0 < deriv (deriv fun x => 4 * x ^ 6 + 3 * x ^ 5 - x ^ 4 + 4 * x ^ 3 + 109488 * x - 17230 * x ^ 2) 4"
        },
        {
            "severity": "error",
            "pos": {
                "line": 94,
                "column": 63
            },
            "endPos": {
                "line": 94,
                "column": 76
            },
            "data": "unknown constant 'Nat.cast_bit0'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 95,
                "column": 15
            },
            "endPos": {
                "line": 95,
                "column": 28
            },
            "data": "unknown constant 'Nat.cast_bit0'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 96,
                "column": 4
            },
            "endPos": {
                "line": 96,
                "column": 17
            },
            "data": "unknown constant 'Nat.cast_bit0'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 96,
                "column": 44
            },
            "endPos": {
                "line": 96,
                "column": 57
            },
            "data": "unknown constant 'Nat.cast_bit0'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 97,
                "column": 28
            },
            "endPos": {
                "line": 97,
                "column": 41
            },
            "data": "unknown constant 'Nat.cast_bit0'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 97,
                "column": 68
            },
            "endPos": {
                "line": 97,
                "column": 81
            },
            "data": "unknown constant 'Nat.cast_bit0'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 92,
                "column": 110
            },
            "endPos": {
                "line": 100,
                "column": 10
            },
            "data": "unsolved goals\ncase left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 + 36 * x\n\u22a2 deriv (fun x => 3 * x ^ 2 + 36 * x) (-6) = 0\n\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 + 36 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 2 + 36 * x) (-6) > 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 104,
                "column": 78
            },
            "endPos": {
                "line": 104,
                "column": 85
            },
            "data": "unknown identifier 'deriv_C'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 105,
                "column": 38
            },
            "endPos": {
                "line": 105,
                "column": 45
            },
            "data": "unknown identifier 'deriv_C'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 109,
                "column": 6
            },
            "endPos": {
                "line": 109,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 + 2 * x ^ 5 + x ^ 4 - 4 * x ^ 3 - 93166 * x ^ 2 - 896376 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 117,
                "column": 16
            },
            "endPos": {
                "line": 117,
                "column": 29
            },
            "data": "function expected at\n  deriv_pow 5\nterm has type\n  deriv (fun x => x ^ 5) ?m.297943 = \u21915 * ?m.297943 ^ (5 - 1)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 119,
                "column": 121
            },
            "endPos": {
                "line": 123,
                "column": 10
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 3 - 15 * x ^ 2 + 15 * x\n\u22a2 deriv (deriv fun x => x * 15 - x ^ 2 * 15 + x ^ 3 * 5) 1 = 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 129,
                "column": 6
            },
            "endPos": {
                "line": 129,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 5 - 5 * x ^ 4 - 4 * x ^ 3 - 258 * x ^ 2 + 840 * x\na\u271d : deriv (fun x => 5 * x ^ 5 - 5 * x ^ 4 - 4 * x ^ 3 - 258 * x ^ 2 + 840 * x) 2 < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 129,
                "column": 6
            },
            "endPos": {
                "line": 129,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase right.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 5 - 5 * x ^ 4 - 4 * x ^ 3 - 258 * x ^ 2 + 840 * x\na\u271d : deriv (deriv fun x => 5 * x ^ 5 - 5 * x ^ 4 - 4 * x ^ 3 - 258 * x ^ 2 + 840 * x) 2 \u2265 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 137,
                "column": 26
            },
            "endPos": {
                "line": 137,
                "column": 46
            },
            "data": "application type mismatch\n  deriv_mul fun x => 2 * x ^ 5\nargument\n  fun x => 2 * x ^ 5\nhas type\n  (x : ?m.442973) \u2192 ?m.443004 x : Type (max ?u.442919 ?u.442938)\nbut is expected to have type\n  DifferentiableAt ?m.442908 ?m.442914 ?m.442910 : Prop"
        },
        {
            "severity": "error",
            "pos": {
                "line": 137,
                "column": 26
            },
            "endPos": {
                "line": 137,
                "column": 46
            },
            "data": "application type mismatch\n  deriv_mul fun x => 2 * x ^ 5\nargument\n  fun x => 2 * x ^ 5\nhas type\n  (x : ?m.443596) \u2192 ?m.443627 x : Type (max ?u.443542 ?u.443561)\nbut is expected to have type\n  DifferentiableAt ?m.443531 ?m.443537 ?m.443533 : Prop"
        },
        {
            "severity": "error",
            "pos": {
                "line": 144,
                "column": 108
            },
            "endPos": {
                "line": 148,
                "column": 10
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 - 24 * x) 6 = 0 \u2227 0 < deriv (deriv fun x => 2 * x ^ 2 - 24 * x) 6"
        },
        {
            "severity": "error",
            "pos": {
                "line": 152,
                "column": 66
            },
            "endPos": {
                "line": 152,
                "column": 79
            },
            "data": "unknown constant 'Nat.cast_bit0'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 153,
                "column": 55
            },
            "endPos": {
                "line": 153,
                "column": 64
            },
            "data": "unknown identifier 'bit0_zero'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 150,
                "column": 110
            },
            "endPos": {
                "line": 155,
                "column": 10
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 24 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 + 24 * x) (-6) = 0 \u2227 0 < deriv (deriv fun x => 2 * x ^ 2 + 24 * x) (-6)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 161,
                "column": 6
            },
            "endPos": {
                "line": 161,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 24 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 171,
                "column": 6
            },
            "endPos": {
                "line": 171,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 3 - 75 * x ^ 2 + 375 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 177,
                "column": 6
            },
            "endPos": {
                "line": 177,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 + 4 * x\na\u271d : deriv (fun x => x ^ 2 + 4 * x) (-2) < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 177,
                "column": 6
            },
            "endPos": {
                "line": 177,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase right.h\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 + 4 * x\na\u271d : 0 \u2265 deriv (deriv fun x => x ^ 2 + 4 * x) (-2)\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 179,
                "column": 105
            },
            "endPos": {
                "line": 185,
                "column": 26
            },
            "data": "unsolved goals\ncase left\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 2 * x\n\u22a2 deriv (fun x => x ^ 2 + 2 * x) (-1) = 0\n\ncase right\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 2 * x\n\u22a2 0 < deriv (deriv fun x => x ^ 2 + 2 * x) (-1)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 192,
                "column": 6
            },
            "endPos": {
                "line": 192,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 3 + 18 * x ^ 2 + 108 * x\na\u271d : deriv (fun x => x ^ 3 + 18 * x ^ 2 + 108 * x) (-6) < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 192,
                "column": 6
            },
            "endPos": {
                "line": 192,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase right.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 3 + 18 * x ^ 2 + 108 * x\na\u271d : deriv (deriv fun x => x ^ 3 + 18 * x ^ 2 + 108 * x) (-6) < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 203,
                "column": 2
            },
            "endPos": {
                "line": 203,
                "column": 53
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 212,
                "column": 6
            },
            "endPos": {
                "line": 212,
                "column": 15
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 24 * x\na\u271d : deriv (fun x => 2 * x ^ 2 - 24 * x) 6 < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 212,
                "column": 6
            },
            "endPos": {
                "line": 212,
                "column": 15
            },
            "data": "linarith failed to find a contradiction\ncase right.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 24 * x\na\u271d : 0 \u2265 deriv (deriv fun x => 2 * x ^ 2 - 24 * x) 6\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 224,
                "column": 6
            },
            "endPos": {
                "line": 224,
                "column": 67
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 224,
                "column": 6
            },
            "endPos": {
                "line": 224,
                "column": 67
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 231,
                "column": 2
            },
            "endPos": {
                "line": 231,
                "column": 14
            },
            "data": "tactic 'simp' failed, nested error:\nmaximum recursion depth has been reached\nuse `set_option maxRecDepth <num>` to increase limit\nuse `set_option diagnostics true` to get diagnostic information"
        },
        {
            "severity": "error",
            "pos": {
                "line": 240,
                "column": 16
            },
            "endPos": {
                "line": 240,
                "column": 35
            },
            "data": "unknown identifier 'deriv_sq_pos_of_pos'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 242,
                "column": 110
            },
            "endPos": {
                "line": 246,
                "column": 10
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 12 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 + 12 * x) (-3) = 0 \u2227 0 < deriv (deriv fun x => 2 * x ^ 2 + 12 * x) (-3)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 254,
                "column": 19
            },
            "endPos": {
                "line": 254,
                "column": 27
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 - x ^ 5 + 3 * x ^ 3 - 60426 * x ^ 2 - 578988 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 256,
                "column": 109
            },
            "endPos": {
                "line": 259,
                "column": 10
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 8 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 + 8 * x) (-2) = 0 \u2227 0 < deriv (deriv fun x => 2 * x ^ 2 + 8 * x) (-2)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 267,
                "column": 6
            },
            "endPos": {
                "line": 267,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 + 4 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 274,
                "column": 40
            },
            "endPos": {
                "line": 274,
                "column": 68
            },
            "data": "failed to synthesize\n  NormedAddCommGroup \u2115\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command."
        },
        {
            "severity": "error",
            "pos": {
                "line": 274,
                "column": 40
            },
            "endPos": {
                "line": 274,
                "column": 68
            },
            "data": "Argument passed to linarith has metavariables:\n  hasDerivAt_const (-4) 80"
        },
        {
            "severity": "error",
            "pos": {
                "line": 274,
                "column": 40
            },
            "endPos": {
                "line": 274,
                "column": 68
            },
            "data": "failed to synthesize\n  NormedAddCommGroup \u2115\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command."
        },
        {
            "severity": "error",
            "pos": {
                "line": 274,
                "column": 40
            },
            "endPos": {
                "line": 274,
                "column": 68
            },
            "data": "Argument passed to linarith has metavariables:\n  hasDerivAt_const (-4) 80"
        },
        {
            "severity": "error",
            "pos": {
                "line": 287,
                "column": 6
            },
            "endPos": {
                "line": 287,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 + 5 * x ^ 3 - 39 * x ^ 2 + 47 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 295,
                "column": 6
            },
            "endPos": {
                "line": 295,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 - x ^ 4 - 2347 * x ^ 2 + 17720 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 301,
                "column": 6
            },
            "endPos": {
                "line": 303,
                "column": 60
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 301,
                "column": 6
            },
            "endPos": {
                "line": 303,
                "column": 60
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 307,
                "column": 100
            },
            "endPos": {
                "line": 310,
                "column": 10
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2\n\u22a2 0 < deriv (HMul.hMul 2) 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 317,
                "column": 6
            },
            "endPos": {
                "line": 317,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 3 + 9 * x ^ 2 + 12 * x\na\u271d : deriv (fun x => 2 * x ^ 3 + 9 * x ^ 2 + 12 * x) (-2) < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 317,
                "column": 6
            },
            "endPos": {
                "line": 317,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase right.h\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 3 + 9 * x ^ 2 + 12 * x\na\u271d : deriv (deriv fun x => 2 * x ^ 3 + 9 * x ^ 2 + 12 * x) (-2) \u2265 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 324,
                "column": 6
            },
            "endPos": {
                "line": 324,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 20 * x\na\u271d : deriv (fun x => 2 * x ^ 2 - 20 * x) 5 < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 324,
                "column": 6
            },
            "endPos": {
                "line": 324,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase right.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 - 20 * x\na\u271d : 0 \u2265 deriv (deriv fun x => 2 * x ^ 2 - 20 * x) 5\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 336,
                "column": 16
            },
            "endPos": {
                "line": 336,
                "column": 45
            },
            "data": "unknown identifier 'deriv_pow_two_eq_mul_nat_succ'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 346,
                "column": 6
            },
            "endPos": {
                "line": 346,
                "column": 28
            },
            "data": "tactic 'apply' failed, failed to unify\n  deriv ?f ?x = ?f'\nwith\n  deriv (deriv fun x => x ^ 4 - 2 * x ^ 3 - 121 * x ^ 2 - 616 * x) (-4) < 0\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 2 * x ^ 3 - 121 * x ^ 2 - 616 * x\n\u22a2 deriv (deriv fun x => x ^ 4 - 2 * x ^ 3 - 121 * x ^ 2 - 616 * x) (-4) < 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 340,
                "column": 0
            },
            "endPos": {
                "line": 340,
                "column": 7
            },
            "data": "(kernel) declaration has metavariables '_example'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 375,
                "column": 6
            },
            "endPos": {
                "line": 375,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nhf : f = fun x => 4 * x ^ 5 + x ^ 4 + x ^ 3 + 8445 * x ^ 2 + 76176 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 377,
                "column": 130
            },
            "endPos": {
                "line": 388,
                "column": 14
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 5 + x ^ 3 + 279 * x ^ 2 + 1242 * x\n\u22a2 deriv (fun x => x ^ 5 + x ^ 3 + 279 * x ^ 2 + 1242 * x) (-3) = 0 \u2227\n    deriv (deriv fun x => x ^ 5 + x ^ 3 + 279 * x ^ 2 + 1242 * x) (-3) = 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 392,
                "column": 75
            },
            "endPos": {
                "line": 392,
                "column": 82
            },
            "data": "unknown identifier 'deriv_X'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 392,
                "column": 84
            },
            "endPos": {
                "line": 392,
                "column": 91
            },
            "data": "unknown identifier 'deriv_C'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 392,
                "column": 254
            },
            "endPos": {
                "line": 392,
                "column": 261
            },
            "data": "unknown identifier 'deriv_X'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 392,
                "column": 263
            },
            "endPos": {
                "line": 392,
                "column": 270
            },
            "data": "unknown identifier 'deriv_C'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 392,
                "column": 403
            },
            "endPos": {
                "line": 392,
                "column": 410
            },
            "data": "unknown identifier 'deriv_X'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 392,
                "column": 412
            },
            "endPos": {
                "line": 392,
                "column": 419
            },
            "data": "unknown identifier 'deriv_C'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 392,
                "column": 552
            },
            "endPos": {
                "line": 392,
                "column": 559
            },
            "data": "unknown identifier 'deriv_X'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 392,
                "column": 561
            },
            "endPos": {
                "line": 392,
                "column": 568
            },
            "data": "unknown identifier 'deriv_C'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 390,
                "column": 164
            },
            "endPos": {
                "line": 393,
                "column": 10
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 6 * 5 - x ^ 5 * 4 + x ^ 4 * 3 + x ^ 3 * 4 - x * (x * 42387) + x * 340820\n\u22a2 deriv (deriv fun x => x ^ 6 * 5 - x ^ 5 * 4 + x ^ 4 * 3 + x ^ 3 * 4 - x * (x * 42387) + x * 340820) 5 < 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 395,
                "column": 121
            },
            "endPos": {
                "line": 399,
                "column": 10
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 * 5 + x ^ 4 + x ^ 3 * 2\n\u22a2 deriv (deriv fun x => x ^ 5 * 5 + x ^ 4 + x ^ 3 * 2) 0 = 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 406,
                "column": 6
            },
            "endPos": {
                "line": 406,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 4 - 2 * x ^ 3 - 170 * x ^ 2 + 944 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 413,
                "column": 2
            },
            "endPos": {
                "line": 413,
                "column": 13
            },
            "data": "tactic 'constructor' failed, no applicable constructor found\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 5 * 5 - x ^ 4 * 2 - x ^ 3 - x ^ 2 * 2996 + x * 18128\n\u22a2 deriv (deriv fun x => x ^ 5 * 5 - x ^ 4 * 2 - x ^ 3 - x ^ 2 * 2996 + x * 18128) 4 = 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 422,
                "column": 6
            },
            "endPos": {
                "line": 422,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * (x * x) - 20 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 433,
                "column": 12
            },
            "endPos": {
                "line": 433,
                "column": 26
            },
            "data": "unknown identifier 'deriv_pow_succ'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 440,
                "column": 2
            },
            "endPos": {
                "line": 440,
                "column": 63
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 440,
                "column": 2
            },
            "endPos": {
                "line": 440,
                "column": 63
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 447,
                "column": 2
            },
            "endPos": {
                "line": 447,
                "column": 18
            },
            "data": "tactic 'simp' failed, nested error:\nmaximum recursion depth has been reached\nuse `set_option maxRecDepth <num>` to increase limit\nuse `set_option diagnostics true` to get diagnostic information"
        },
        {
            "severity": "error",
            "pos": {
                "line": 457,
                "column": 6
            },
            "endPos": {
                "line": 457,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 3 - 3 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 464,
                "column": 6
            },
            "endPos": {
                "line": 464,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 2 * x ^ 3 + 2 * x\na\u271d : deriv (fun x => x ^ 4 - 2 * x ^ 3 + 2 * x) 1 < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 464,
                "column": 6
            },
            "endPos": {
                "line": 464,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase right.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 2 * x ^ 3 + 2 * x\na\u271d : deriv (deriv fun x => x ^ 4 - 2 * x ^ 3 + 2 * x) 1 < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 469,
                "column": 131
            },
            "endPos": {
                "line": 474,
                "column": 10
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 + x ^ 3 - 27 * x ^ 2 - 37 * x\n\u22a2 deriv (deriv fun x => x ^ 4 * 5 + x ^ 3 - x ^ 2 * 27 - x * 37) (-1) = 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 480,
                "column": 2
            },
            "endPos": {
                "line": 480,
                "column": 18
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 488,
                "column": 2
            },
            "endPos": {
                "line": 491,
                "column": 80
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 499,
                "column": 6
            },
            "endPos": {
                "line": 499,
                "column": 14
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 508,
                "column": 16
            },
            "endPos": {
                "line": 508,
                "column": 41
            },
            "data": "unknown identifier 'deriv_sq_pos_of_deriv_pos'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 508,
                "column": 16
            },
            "endPos": {
                "line": 508,
                "column": 41
            },
            "data": "unknown identifier 'deriv_sq_pos_of_deriv_pos'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 515,
                "column": 6
            },
            "endPos": {
                "line": 515,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 - x ^ 3 - 397 * x ^ 2 - 2104 * x\na\u271d : deriv (fun x => 4 * x ^ 4 - x ^ 3 - 397 * x ^ 2 - 2104 * x) (-4) < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 515,
                "column": 6
            },
            "endPos": {
                "line": 515,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase right.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 - x ^ 3 - 397 * x ^ 2 - 2104 * x\na\u271d : deriv (deriv fun x => 4 * x ^ 4 - x ^ 3 - 397 * x ^ 2 - 2104 * x) (-4) \u2265 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 553,
                "column": 14
            },
            "endPos": {
                "line": 553,
                "column": 28
            },
            "data": "failed to synthesize\n  NormedAddCommGroup \u2115\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command."
        },
        {
            "severity": "error",
            "pos": {
                "line": 553,
                "column": 14
            },
            "endPos": {
                "line": 553,
                "column": 28
            },
            "data": "failed to synthesize\n  NormedAddCommGroup \u2115\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command."
        },
        {
            "severity": "error",
            "pos": {
                "line": 560,
                "column": 27
            },
            "endPos": {
                "line": 560,
                "column": 41
            },
            "data": "function expected at\n  deriv_pow' 5\nterm has type\n  (deriv fun x => x ^ 5) = fun x => \u21915 * x ^ (5 - 1)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 565,
                "column": 31
            },
            "endPos": {
                "line": 565,
                "column": 41
            },
            "data": "unknown identifier 'deriv_add''"
        },
        {
            "severity": "error",
            "pos": {
                "line": 565,
                "column": 43
            },
            "endPos": {
                "line": 565,
                "column": 53
            },
            "data": "unknown identifier 'deriv_sub''"
        },
        {
            "severity": "error",
            "pos": {
                "line": 565,
                "column": 55
            },
            "endPos": {
                "line": 565,
                "column": 65
            },
            "data": "unknown identifier 'deriv_mul''"
        },
        {
            "severity": "error",
            "pos": {
                "line": 568,
                "column": 6
            },
            "endPos": {
                "line": 568,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 6 - 1200 * x ^ 2 + 3840 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 573,
                "column": 8
            },
            "endPos": {
                "line": 573,
                "column": 42
            },
            "data": "invalid constructor \u27e8...\u27e9, expected type must be an inductive type \n  Real.lt\u271d 0 (deriv (fun x => 2 * x) 0)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 581,
                "column": 16
            },
            "endPos": {
                "line": 581,
                "column": 29
            },
            "data": "unknown identifier 'deriv_one_pow'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 581,
                "column": 16
            },
            "endPos": {
                "line": 581,
                "column": 29
            },
            "data": "unknown identifier 'deriv_one_pow'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 589,
                "column": 26
            },
            "endPos": {
                "line": 589,
                "column": 42
            },
            "data": "application type mismatch\n  deriv_mul fun x => x + 1\nargument\n  fun x => x + 1\nhas type\n  (x : ?m.1701176) \u2192 ?m.1701184 x : Type (max ?u.1701145 ?u.1701147)\nbut is expected to have type\n  DifferentiableAt ?m.1701134 ?m.1701140 ?m.1701136 : Prop"
        },
        {
            "severity": "error",
            "pos": {
                "line": 596,
                "column": 2
            },
            "endPos": {
                "line": 596,
                "column": 13
            },
            "data": "tactic 'constructor' failed, target is not an inductive datatype\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 - 5 * x ^ 5 - 5 * x ^ 4 - 3 * x ^ 3 + 2 * x ^ 2\n\u22a2 0 < deriv (deriv fun x => 3 * x ^ 6 - 5 * x ^ 5 - 5 * x ^ 4 - 3 * x ^ 3 + 2 * x ^ 2) 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 609,
                "column": 19
            },
            "endPos": {
                "line": 609,
                "column": 27
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 10 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 616,
                "column": 34
            },
            "endPos": {
                "line": 616,
                "column": 59
            },
            "data": "unknown identifier 'differentiable_fderiv.mpr'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 616,
                "column": 34
            },
            "endPos": {
                "line": 616,
                "column": 59
            },
            "data": "unknown identifier 'differentiable_fderiv.mpr'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 626,
                "column": 26
            },
            "endPos": {
                "line": 626,
                "column": 34
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 6 + x ^ 3 - 29115 * x - 6063 * x ^ 2\na\u271d : deriv (fun x => 5 * x ^ 6 + x ^ 3 - 29115 * x - 6063 * x ^ 2) (-3) < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 626,
                "column": 26
            },
            "endPos": {
                "line": 626,
                "column": 34
            },
            "data": "linarith failed to find a contradiction\ncase right.h\nf : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 6 + x ^ 3 - 29115 * x - 6063 * x ^ 2\na\u271d : 0 \u2265 deriv (deriv fun x => 5 * x ^ 6 + x ^ 3 - 29115 * x - 6063 * x ^ 2) (-3)\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 632,
                "column": 6
            },
            "endPos": {
                "line": 634,
                "column": 59
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 628,
                "column": 105
            },
            "endPos": {
                "line": 636,
                "column": 14
            },
            "data": "unsolved goals\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 + 8 * x\n\u22a2 0 < deriv (deriv fun x => x ^ 2 + 8 * x) (-4)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 643,
                "column": 16
            },
            "endPos": {
                "line": 643,
                "column": 26
            },
            "data": "unknown identifier 'deriv_cube'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 643,
                "column": 16
            },
            "endPos": {
                "line": 643,
                "column": 26
            },
            "data": "unknown identifier 'deriv_cube'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 652,
                "column": 2
            },
            "endPos": {
                "line": 652,
                "column": 91
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 663,
                "column": 16
            },
            "endPos": {
                "line": 663,
                "column": 55
            },
            "data": "unknown identifier 'deriv_two_mul_deriv_sub_deriv_mul_deriv'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 663,
                "column": 16
            },
            "endPos": {
                "line": 663,
                "column": 55
            },
            "data": "unknown identifier 'deriv_two_mul_deriv_sub_deriv_mul_deriv'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 671,
                "column": 16
            },
            "endPos": {
                "line": 671,
                "column": 37
            },
            "data": "failed to synthesize\n  NontriviallyNormedField \u2124\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command."
        },
        {
            "severity": "error",
            "pos": {
                "line": 671,
                "column": 16
            },
            "endPos": {
                "line": 671,
                "column": 37
            },
            "data": "Argument passed to linarith has metavariables:\n  hasDerivAt_pow 3 (-3)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 671,
                "column": 16
            },
            "endPos": {
                "line": 671,
                "column": 37
            },
            "data": "failed to synthesize\n  NontriviallyNormedField \u2124\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command."
        },
        {
            "severity": "error",
            "pos": {
                "line": 671,
                "column": 16
            },
            "endPos": {
                "line": 671,
                "column": 37
            },
            "data": "Argument passed to linarith has metavariables:\n  hasDerivAt_pow 3 (-3)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 678,
                "column": 16
            },
            "endPos": {
                "line": 678,
                "column": 37
            },
            "data": "failed to synthesize\n  NontriviallyNormedField \u2124\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command."
        },
        {
            "severity": "error",
            "pos": {
                "line": 678,
                "column": 16
            },
            "endPos": {
                "line": 678,
                "column": 37
            },
            "data": "Argument passed to linarith has metavariables:\n  hasDerivAt_pow 3 (-6)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 678,
                "column": 16
            },
            "endPos": {
                "line": 678,
                "column": 37
            },
            "data": "failed to synthesize\n  NontriviallyNormedField \u2124\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command."
        },
        {
            "severity": "error",
            "pos": {
                "line": 678,
                "column": 16
            },
            "endPos": {
                "line": 678,
                "column": 37
            },
            "data": "Argument passed to linarith has metavariables:\n  hasDerivAt_pow 3 (-6)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 682,
                "column": 31
            },
            "endPos": {
                "line": 682,
                "column": 41
            },
            "data": "unknown identifier 'deriv_add''"
        },
        {
            "severity": "error",
            "pos": {
                "line": 683,
                "column": 31
            },
            "endPos": {
                "line": 683,
                "column": 51
            },
            "data": "unknown constant 'Nat.one_eq_succ_zero'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 685,
                "column": 2
            },
            "endPos": {
                "line": 685,
                "column": 10
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 2 + 24 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 691,
                "column": 6
            },
            "endPos": {
                "line": 693,
                "column": 98
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 691,
                "column": 6
            },
            "endPos": {
                "line": 693,
                "column": 98
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 701,
                "column": 6
            },
            "endPos": {
                "line": 701,
                "column": 49
            },
            "data": "linarith failed to find a contradiction\ncase h\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 * 5 - x ^ 2 * 749 + x * 4990\na\u271d : 0 \u2265 deriv (deriv fun x => x ^ 4 * 5 - x ^ 2 * 749 + x * 4990) 5\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 708,
                "column": 6
            },
            "endPos": {
                "line": 708,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 3 + 176 * x + 46 * x ^ 2\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 713,
                "column": 50
            },
            "endPos": {
                "line": 713,
                "column": 62
            },
            "data": "unknown identifier 'add_left_neg'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 717,
                "column": 16
            },
            "endPos": {
                "line": 717,
                "column": 43
            },
            "data": "unknown identifier 'deriv_two_mul_deriv_pow_two'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 723,
                "column": 6
            },
            "endPos": {
                "line": 723,
                "column": 67
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 719,
                "column": 110
            },
            "endPos": {
                "line": 725,
                "column": 14
            },
            "data": "unsolved goals\ncase right\nf : \u211d \u2192 \u211d\nhf : f = fun x => 3 * x ^ 2 + 12 * x\n\u22a2 0 < deriv (deriv fun x => 3 * x ^ 2 + 12 * x) (-2)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 729,
                "column": 18
            },
            "endPos": {
                "line": 730,
                "column": 7
            },
            "data": "unexpected token 'example'; expected ']'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 729,
                "column": 17
            },
            "endPos": {
                "line": 729,
                "column": 18
            },
            "data": "unknown identifier 'h'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 727,
                "column": 110
            },
            "endPos": {
                "line": 729,
                "column": 18
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 + 16 * x\n\u22a2 deriv (fun x => 2 * x ^ 2 + 16 * x) (-4) = 0 \u2227 deriv (deriv fun x => 2 * x ^ 2 + 16 * x) (-4) > 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 736,
                "column": 6
            },
            "endPos": {
                "line": 736,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 - 12 * x ^ 2 + 19 * x\na\u271d : deriv (fun x => x ^ 5 - 12 * x ^ 2 + 19 * x) 1 < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 730,
                "column": 0
            },
            "endPos": {
                "line": 730,
                "column": 7
            },
            "data": "(kernel) declaration has metavariables '_example'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 743,
                "column": 16
            },
            "endPos": {
                "line": 743,
                "column": 40
            },
            "data": "unknown identifier 'deriv_cubic_at_minus_one'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 749,
                "column": 6
            },
            "endPos": {
                "line": 749,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 - 150 * x ^ 2 + 1000 * x\na\u271d : deriv (fun x => x ^ 4 - 150 * x ^ 2 + 1000 * x) 5 < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 749,
                "column": 6
            },
            "endPos": {
                "line": 749,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase right.h1.h\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 4 - 150 * x ^ 2 + 1000 * x\na\u271d : deriv (deriv fun x => x ^ 4 - 150 * x ^ 2 + 1000 * x) 5 < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 756,
                "column": 16
            },
            "endPos": {
                "line": 756,
                "column": 27
            },
            "data": "unknown identifier 'deriv_cubic'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 756,
                "column": 16
            },
            "endPos": {
                "line": 756,
                "column": 27
            },
            "data": "unknown identifier 'deriv_cubic'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 762,
                "column": 2
            },
            "endPos": {
                "line": 762,
                "column": 63
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 773,
                "column": 6
            },
            "endPos": {
                "line": 773,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 - 10 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 779,
                "column": 6
            },
            "endPos": {
                "line": 779,
                "column": 17
            },
            "data": "unknown identifier 'deriv_cubic'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 775,
                "column": 122
            },
            "endPos": {
                "line": 784,
                "column": 14
            },
            "data": "unsolved goals\ncase left\nf : \u211d \u2192 \u211d\nhf : f = fun x => 3 * x ^ 3 - 46 * x ^ 2 + 235 * x\n\u22a2 deriv (fun x => 3 * x ^ 3 - 46 * x ^ 2 + 235 * x) 5 = 0\n\ncase right\nf : \u211d \u2192 \u211d\nhf : f = fun x => 3 * x ^ 3 - 46 * x ^ 2 + 235 * x\n\u22a2 deriv (deriv fun x => 3 * x ^ 3 - 46 * x ^ 2 + 235 * x) 5 < 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 791,
                "column": 6
            },
            "endPos": {
                "line": 791,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - 2 * x ^ 3 - 69 * x ^ 2 + 392 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 798,
                "column": 6
            },
            "endPos": {
                "line": 798,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 3 - 4 * x ^ 2 + 5 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 805,
                "column": 8
            },
            "endPos": {
                "line": 805,
                "column": 17
            },
            "data": "tactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  deriv (fun x => x ^ ?n) ?m.2429949\ncase left\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 + 32 * x + 10 * x ^ 2\n\u22a2 deriv (fun x => x ^ 3 + 32 * x) (-4) + deriv (fun x => 10 * x ^ 2) (-4) = 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 817,
                "column": 8
            },
            "endPos": {
                "line": 817,
                "column": 17
            },
            "data": "tactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  deriv (fun y => ?m.2429975 y + ?m.2429976 y) ?m.2429977\ncase left.hf\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 + 32 * x + 10 * x ^ 2\n\u22a2 DifferentiableAt \u211d (fun x => x ^ 3 + 32 * x) (-4)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 800,
                "column": 119
            },
            "endPos": {
                "line": 837,
                "column": 18
            },
            "data": "unsolved goals\ncase right\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 + 32 * x + 10 * x ^ 2\n\u22a2 deriv (deriv fun x => x ^ 3 + 32 * x + 10 * x ^ 2) (-4) < 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 845,
                "column": 6
            },
            "endPos": {
                "line": 845,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 4 - 48 * x ^ 2 - 128 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 852,
                "column": 16
            },
            "endPos": {
                "line": 852,
                "column": 37
            },
            "data": "failed to synthesize\n  NontriviallyNormedField \u2124\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command."
        },
        {
            "severity": "error",
            "pos": {
                "line": 852,
                "column": 16
            },
            "endPos": {
                "line": 852,
                "column": 37
            },
            "data": "Argument passed to linarith has metavariables:\n  hasDerivAt_pow 3 (-5)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 852,
                "column": 16
            },
            "endPos": {
                "line": 852,
                "column": 37
            },
            "data": "failed to synthesize\n  NontriviallyNormedField \u2124\n\nAdditional diagnostic information may be available using the `set_option diagnostics true` command."
        },
        {
            "severity": "error",
            "pos": {
                "line": 852,
                "column": 16
            },
            "endPos": {
                "line": 852,
                "column": 37
            },
            "data": "Argument passed to linarith has metavariables:\n  hasDerivAt_pow 3 (-5)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 858,
                "column": 16
            },
            "endPos": {
                "line": 858,
                "column": 25
            },
            "data": "ambiguous, possible interpretations \n  _root_.deriv_exp : DifferentiableAt \u211d ?m.2503628 ?m.2503629 \u2192\n    deriv (fun x => rexp (?m.2503628 x)) ?m.2503629 = rexp (?m.2503628 ?m.2503629) * deriv ?m.2503628 ?m.2503629\n  \n  Real.deriv_exp : deriv rexp = rexp"
        },
        {
            "severity": "error",
            "pos": {
                "line": 860,
                "column": 32
            },
            "endPos": {
                "line": 860,
                "column": 41
            },
            "data": "ambiguous, possible interpretations \n  _root_.deriv_exp : DifferentiableAt \u211d ?m.2503982 ?m.2503983 \u2192\n    deriv (fun x => rexp (?m.2503982 x)) ?m.2503983 = rexp (?m.2503982 ?m.2503983) * deriv ?m.2503982 ?m.2503983\n  \n  Real.deriv_exp : deriv rexp = rexp"
        },
        {
            "severity": "error",
            "pos": {
                "line": 862,
                "column": 42
            },
            "endPos": {
                "line": 862,
                "column": 51
            },
            "data": "ambiguous, possible interpretations \n  _root_.deriv_exp : DifferentiableAt \u211d ?m.2504336 ?m.2504337 \u2192\n    deriv (fun x => rexp (?m.2504336 x)) ?m.2504337 = rexp (?m.2504336 ?m.2504337) * deriv ?m.2504336 ?m.2504337\n  \n  Real.deriv_exp : deriv rexp = rexp"
        },
        {
            "severity": "error",
            "pos": {
                "line": 866,
                "column": 6
            },
            "endPos": {
                "line": 866,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 + 3 * x ^ 5 + 2 * x ^ 4 + 2 * x ^ 3 - 122 * x ^ 2 + 185 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 872,
                "column": 2
            },
            "endPos": {
                "line": 872,
                "column": 63
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 880,
                "column": 4
            },
            "endPos": {
                "line": 880,
                "column": 17
            },
            "data": "unknown constant 'Nat.cast_bit1'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 880,
                "column": 19
            },
            "endPos": {
                "line": 880,
                "column": 32
            },
            "data": "unknown constant 'Nat.cast_bit0'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 882,
                "column": 6
            },
            "endPos": {
                "line": 882,
                "column": 14
            },
            "data": "simp_all made no progress"
        },
        {
            "severity": "warning",
            "pos": {
                "line": 888,
                "column": 17
            },
            "endPos": {
                "line": 888,
                "column": 36
            },
            "data": "`Function.funext_iff` has been deprecated: use `funext_iff` instead"
        },
        {
            "severity": "error",
            "pos": {
                "line": 889,
                "column": 4
            },
            "endPos": {
                "line": 889,
                "column": 11
            },
            "data": "unknown identifier 'deriv_C'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 889,
                "column": 13
            },
            "endPos": {
                "line": 889,
                "column": 20
            },
            "data": "unknown identifier 'deriv_X'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 892,
                "column": 6
            },
            "endPos": {
                "line": 892,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nhf : \u2200 (x : \u211d), f x = 2 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 - 4 * x ^ 3 + 289872 * x - 29520 * x ^ 2\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 900,
                "column": 16
            },
            "endPos": {
                "line": 900,
                "column": 28
            },
            "data": "unknown identifier 'deriv_sq_pos'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 894,
                "column": 0
            },
            "endPos": {
                "line": 894,
                "column": 7
            },
            "data": "(kernel) declaration has metavariables '_example'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 911,
                "column": 2
            },
            "endPos": {
                "line": 911,
                "column": 13
            },
            "data": "tactic 'constructor' failed, target is not an inductive datatype\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 5 * 4 + x ^ 3 * 2 + x ^ 2 * 45 + x * 64\n\u22a2 deriv (deriv fun x => x ^ 5 * 4 + x * (x * x) * 2 + x * x * 45 + x * 64) (-1) < 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 918,
                "column": 2
            },
            "endPos": {
                "line": 918,
                "column": 18
            },
            "data": "tactic 'simp' failed, nested error:\nmaximum recursion depth has been reached\nuse `set_option maxRecDepth <num>` to increase limit\nuse `set_option diagnostics true` to get diagnostic information"
        },
        {
            "severity": "error",
            "pos": {
                "line": 928,
                "column": 6
            },
            "endPos": {
                "line": 928,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 6 + 5 * x ^ 5 - 2 * x ^ 4 + 5 * x ^ 3 + 290 * x ^ 2 + 822 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 935,
                "column": 6
            },
            "endPos": {
                "line": 935,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 3 - 89 * x ^ 2 + 528 * x\na\u271d : deriv (fun x => 5 * x ^ 3 - 89 * x ^ 2 + 528 * x) 6 < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 935,
                "column": 6
            },
            "endPos": {
                "line": 935,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase right.h\nf : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 3 - 89 * x ^ 2 + 528 * x\na\u271d : 0 \u2265 deriv (deriv fun x => 5 * x ^ 3 - 89 * x ^ 2 + 528 * x) 6\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 943,
                "column": 2
            },
            "endPos": {
                "line": 943,
                "column": 93
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 954,
                "column": 6
            },
            "endPos": {
                "line": 954,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 3 - 18 * x ^ 2 + 54 * x\na\u271d : deriv (fun x => 2 * (x * (x * x)) - 18 * (x * x) + 54 * x) 3 < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 954,
                "column": 6
            },
            "endPos": {
                "line": 954,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase right.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 3 - 18 * x ^ 2 + 54 * x\na\u271d : deriv (deriv fun x => 2 * (x * (x * x)) - 18 * (x * x) + 54 * x) 3 < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 962,
                "column": 6
            },
            "endPos": {
                "line": 962,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 - 38 * x ^ 2 + 160 * x\na\u271d : deriv (fun x => 3 * x ^ 3 - 38 * x ^ 2 + 160 * x) 4 < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 956,
                "column": 0
            },
            "endPos": {
                "line": 956,
                "column": 7
            },
            "data": "(kernel) declaration has metavariables '_example'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 969,
                "column": 6
            },
            "endPos": {
                "line": 969,
                "column": 15
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - 3 * x ^ 5 - 50624 * x ^ 2 - 403115 * x\na\u271d : deriv (fun x => 5 * x ^ 6 - 3 * x ^ 5 - 50624 * x ^ 2 - 403115 * x) (-5) < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 969,
                "column": 6
            },
            "endPos": {
                "line": 969,
                "column": 15
            },
            "data": "linarith failed to find a contradiction\ncase right.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - 3 * x ^ 5 - 50624 * x ^ 2 - 403115 * x\na\u271d : 0 \u2265 deriv (deriv fun x => 5 * x ^ 6 - 3 * x ^ 5 - 50624 * x ^ 2 - 403115 * x) (-5)\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 998,
                "column": 87
            },
            "endPos": {
                "line": 998,
                "column": 100
            },
            "data": "unknown constant 'Nat.cast_bit0'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 998,
                "column": 102
            },
            "endPos": {
                "line": 998,
                "column": 115
            },
            "data": "unknown constant 'Nat.cast_bit1'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 999,
                "column": 6
            },
            "endPos": {
                "line": 999,
                "column": 14
            },
            "data": "simp_all made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1007,
                "column": 6
            },
            "endPos": {
                "line": 1007,
                "column": 14
            },
            "data": "simp_all made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1015,
                "column": 6
            },
            "endPos": {
                "line": 1016,
                "column": 37
            },
            "data": "simp_all made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1015,
                "column": 6
            },
            "endPos": {
                "line": 1016,
                "column": 37
            },
            "data": "simp_all made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1019,
                "column": 103
            },
            "endPos": {
                "line": 1027,
                "column": 14
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 - 6 * x\n\u22a2 deriv (fun x => x ^ 2 - 6 * x) 3 = 0 \u2227 0 < deriv (deriv fun x => x ^ 2 - 6 * x) 3"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1033,
                "column": 6
            },
            "endPos": {
                "line": 1033,
                "column": 15
            },
            "data": "tactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  deriv (fun x => x ^ ?n) ?m.3030880\ncase left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 - 6 * x\n\u22a2 deriv (fun x => x ^ 2 - 6 * x) 3 = 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1048,
                "column": 16
            },
            "endPos": {
                "line": 1048,
                "column": 47
            },
            "data": "unknown identifier 'deriv_sq_eq_iff_has_deriv_at.mp'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1048,
                "column": 16
            },
            "endPos": {
                "line": 1048,
                "column": 47
            },
            "data": "unknown identifier 'deriv_sq_eq_iff_has_deriv_at.mp'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1052,
                "column": 66
            },
            "endPos": {
                "line": 1052,
                "column": 79
            },
            "data": "unknown constant 'Nat.cast_bit0'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1056,
                "column": 22
            },
            "endPos": {
                "line": 1056,
                "column": 30
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 5 * x ^ 3 - 738 * x ^ 2 - 5724 * x\na\u271d : deriv (fun x => 3 * x ^ 4 - 5 * x ^ 3 - 738 * x ^ 2 - 5724 * x) (-6) < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1056,
                "column": 22
            },
            "endPos": {
                "line": 1056,
                "column": 30
            },
            "data": "linarith failed to find a contradiction\ncase right.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 5 * x ^ 3 - 738 * x ^ 2 - 5724 * x\na\u271d : deriv (deriv fun x => 3 * x ^ 4 - 5 * x ^ 3 - 738 * x ^ 2 - 5724 * x) (-6) < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1065,
                "column": 6
            },
            "endPos": {
                "line": 1065,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 - 2 * x ^ 5 + x ^ 4 - 35150 * x ^ 2 + 282250 * x\na\u271d : deriv (fun x => 4 * x ^ 6 - 2 * x ^ 5 + x ^ 4 - 35150 * x ^ 2 + 282250 * x) 5 < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1065,
                "column": 6
            },
            "endPos": {
                "line": 1065,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase right.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 - 2 * x ^ 5 + x ^ 4 - 35150 * x ^ 2 + 282250 * x\na\u271d : deriv (deriv fun x => 4 * x ^ 6 - 2 * x ^ 5 + x ^ 4 - 35150 * x ^ 2 + 282250 * x) 5 < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1074,
                "column": 6
            },
            "endPos": {
                "line": 1074,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase right.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 480 * x ^ 2 - 2560 * x\na\u271d : deriv (deriv fun x => x ^ 4 * 5 - x * (x * 480) - x * 2560) (-4) < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1080,
                "column": 6
            },
            "endPos": {
                "line": 1080,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 - 2 * x ^ 5 - x ^ 4\na\u271d : deriv (deriv fun x => 4 * x ^ 6 - 2 * x ^ 5 - x ^ 4) 0 < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1087,
                "column": 6
            },
            "endPos": {
                "line": 1087,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 2 - 12 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1094,
                "column": 12
            },
            "endPos": {
                "line": 1094,
                "column": 29
            },
            "data": "unknown identifier 'deriv_c_mul_x_pow'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1094,
                "column": 12
            },
            "endPos": {
                "line": 1094,
                "column": 29
            },
            "data": "unknown identifier 'deriv_c_mul_x_pow'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1105,
                "column": 6
            },
            "endPos": {
                "line": 1105,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 + 5 * x ^ 4 - 4 * x ^ 3 - 253 * x ^ 2 + 740 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1112,
                "column": 16
            },
            "endPos": {
                "line": 1112,
                "column": 29
            },
            "data": "unknown identifier 'deriv_f_three'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1112,
                "column": 16
            },
            "endPos": {
                "line": 1112,
                "column": 29
            },
            "data": "unknown identifier 'deriv_f_three'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1122,
                "column": 17
            },
            "endPos": {
                "line": 1122,
                "column": 33
            },
            "data": "function expected at\n  deriv_pow 4\nterm has type\n  deriv (fun x => x ^ 4) ?m.3267527 = \u21914 * ?m.3267527 ^ (4 - 1)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1122,
                "column": 17
            },
            "endPos": {
                "line": 1122,
                "column": 33
            },
            "data": "function expected at\n  deriv_pow 4\nterm has type\n  deriv (fun x => x ^ 4) ?m.3267582 = \u21914 * ?m.3267582 ^ (4 - 1)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1126,
                "column": 78
            },
            "endPos": {
                "line": 1126,
                "column": 85
            },
            "data": "unknown identifier 'deriv_X'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1127,
                "column": 60
            },
            "endPos": {
                "line": 1127,
                "column": 67
            },
            "data": "unknown identifier 'deriv_X'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1128,
                "column": 60
            },
            "endPos": {
                "line": 1128,
                "column": 67
            },
            "data": "unknown identifier 'deriv_X'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1130,
                "column": 6
            },
            "endPos": {
                "line": 1130,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 2 * x ^ 3 - 719 * x ^ 2 + 4840 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1136,
                "column": 14
            },
            "endPos": {
                "line": 1136,
                "column": 26
            },
            "data": "unknown identifier 'add_left_neg'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1137,
                "column": 9
            },
            "endPos": {
                "line": 1137,
                "column": 20
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nh : f = fun x => x * x + 2 * x\n\u22a2 deriv (fun x => x * x + 2 * x) (-1) = 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1137,
                "column": 22
            },
            "endPos": {
                "line": 1137,
                "column": 33
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nh : f = fun x => x * x + 2 * x\n\u22a2 0 < deriv (deriv fun x => x * x + 2 * x) (-1)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1145,
                "column": 12
            },
            "endPos": {
                "line": 1145,
                "column": 31
            },
            "data": "typeclass instance problem is stuck, it is often due to metavariables\n  NormedSpace ?m.3316295 ?m.3316297"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1159,
                "column": 8
            },
            "endPos": {
                "line": 1159,
                "column": 16
            },
            "data": "linarith failed to find a contradiction\ncase h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 5 * x ^ 3 - 349 * x ^ 2 - 1784 * x\na\u271d : deriv (fun x => 3 * x ^ 4 - 5 * x ^ 3 - 349 * x ^ 2 - 1784 * x) (-4) < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1159,
                "column": 21
            },
            "endPos": {
                "line": 1159,
                "column": 29
            },
            "data": "linarith failed to find a contradiction\ncase h\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 5 * x ^ 3 - 349 * x ^ 2 - 1784 * x\na\u271d : deriv (deriv fun x => 3 * x ^ 4 - 5 * x ^ 3 - 349 * x ^ 2 - 1784 * x) (-4) \u2265 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1165,
                "column": 18
            },
            "endPos": {
                "line": 1165,
                "column": 33
            },
            "data": "tactic 'apply' failed, failed to unify\n  ?a \u2227 ?b\nwith\n  deriv (fun x => 4 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 + 2 * x ^ 3 - 85716 * x ^ 2 - 818856 * x) (-6) = 0\ncase left\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 + 2 * x ^ 3 - 85716 * x ^ 2 - 818856 * x\n\u22a2 deriv (fun x => 4 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 + 2 * x ^ 3 - 85716 * x ^ 2 - 818856 * x) (-6) = 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1165,
                "column": 18
            },
            "endPos": {
                "line": 1165,
                "column": 33
            },
            "data": "tactic 'apply' failed, failed to unify\n  ?a \u2227 ?b\nwith\n  deriv (deriv fun x => 4 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 + 2 * x ^ 3 - 85716 * x ^ 2 - 818856 * x) (-6) = 0\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 + 2 * x ^ 3 - 85716 * x ^ 2 - 818856 * x\n\u22a2 deriv (deriv fun x => 4 * x ^ 6 - 4 * x ^ 5 - 3 * x ^ 4 + 2 * x ^ 3 - 85716 * x ^ 2 - 818856 * x) (-6) = 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1170,
                "column": 18
            },
            "endPos": {
                "line": 1170,
                "column": 28
            },
            "data": "unknown identifier 'deriv_sub''"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1170,
                "column": 30
            },
            "endPos": {
                "line": 1170,
                "column": 40
            },
            "data": "unknown identifier 'deriv_mul''"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1170,
                "column": 42
            },
            "endPos": {
                "line": 1170,
                "column": 54
            },
            "data": "unknown identifier 'deriv_pow_'''"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1170,
                "column": 82
            },
            "endPos": {
                "line": 1170,
                "column": 92
            },
            "data": "unknown identifier 'deriv_sub''"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1171,
                "column": 4
            },
            "endPos": {
                "line": 1171,
                "column": 14
            },
            "data": "unknown identifier 'deriv_mul''"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1171,
                "column": 16
            },
            "endPos": {
                "line": 1171,
                "column": 27
            },
            "data": "unknown identifier 'deriv_pow_''"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1172,
                "column": 28
            },
            "endPos": {
                "line": 1172,
                "column": 38
            },
            "data": "unknown identifier 'deriv_sub''"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1172,
                "column": 40
            },
            "endPos": {
                "line": 1172,
                "column": 50
            },
            "data": "unknown identifier 'deriv_mul''"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1172,
                "column": 52
            },
            "endPos": {
                "line": 1172,
                "column": 64
            },
            "data": "unknown identifier 'deriv_pow_'''"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1175,
                "column": 6
            },
            "endPos": {
                "line": 1175,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 - 4 * x\na\u271d : deriv (fun x => 2 * x ^ 2 - 4 * x) 1 < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1175,
                "column": 6
            },
            "endPos": {
                "line": 1175,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase right.h\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 - 4 * x\na\u271d : 0 \u2265 deriv (deriv fun x => 2 * x ^ 2 - 4 * x) 1\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1181,
                "column": 6
            },
            "endPos": {
                "line": 1181,
                "column": 18
            },
            "data": "tactic 'simp' failed, nested error:\nmaximum recursion depth has been reached\nuse `set_option maxRecDepth <num>` to increase limit\nuse `set_option diagnostics true` to get diagnostic information"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1181,
                "column": 6
            },
            "endPos": {
                "line": 1181,
                "column": 18
            },
            "data": "tactic 'simp' failed, nested error:\nmaximum recursion depth has been reached\nuse `set_option maxRecDepth <num>` to increase limit\nuse `set_option diagnostics true` to get diagnostic information"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1189,
                "column": 6
            },
            "endPos": {
                "line": 1189,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase h\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 - x ^ 3 - 3 * x ^ 2\na\u271d : deriv (deriv fun x => x ^ 4 - x ^ 3 - 3 * x ^ 2) 0 \u2265 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1197,
                "column": 6
            },
            "endPos": {
                "line": 1197,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 + x ^ 5 - 4 * x ^ 4 + x ^ 3 - 26260 * x ^ 2 - 211550 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1205,
                "column": 4612
            },
            "endPos": {
                "line": 1206,
                "column": 7
            },
            "data": "unexpected token 'example'; expected ']'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1202,
                "column": 80
            },
            "endPos": {
                "line": 1202,
                "column": 92
            },
            "data": "unknown identifier 'add_left_neg'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1214,
                "column": 6
            },
            "endPos": {
                "line": 1214,
                "column": 21
            },
            "data": "tactic 'apply' failed, failed to unify\n  ?a \u2227 ?b\nwith\n  deriv (deriv fun x => x ^ 5 * 2 + x ^ 4 * 2 - x ^ 3 + x ^ 2 * 423 + x * 1971) (-3) = 0\nf : \u211d \u2192 \u211d\nh : f = fun x => 2 * x ^ 5 + 2 * x ^ 4 - x ^ 3 + 423 * x ^ 2 + 1971 * x\n\u22a2 deriv (deriv fun x => x ^ 5 * 2 + x ^ 4 * 2 - x ^ 3 + x ^ 2 * 423 + x * 1971) (-3) = 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1222,
                "column": 6
            },
            "endPos": {
                "line": 1222,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 - 6 * x\na\u271d : deriv (fun x => 3 * x ^ 2 - 6 * x) 1 < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1222,
                "column": 6
            },
            "endPos": {
                "line": 1222,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase right.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 - 6 * x\na\u271d : 0 \u2265 deriv (deriv fun x => 3 * x ^ 2 - 6 * x) 1\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1229,
                "column": 6
            },
            "endPos": {
                "line": 1229,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 + 12 * x ^ 2 + 48 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1234,
                "column": 17
            },
            "endPos": {
                "line": 1234,
                "column": 27
            },
            "data": "unknown identifier 'deriv_mul''"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1231,
                "column": 108
            },
            "endPos": {
                "line": 1236,
                "column": 10
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 * 3 - x * 18\n\u22a2 0 < deriv (deriv fun x => x ^ 2 * 3 - x * 18) 3"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1246,
                "column": 5
            },
            "endPos": {
                "line": 1246,
                "column": 15
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 42 * x - 31 * x ^ 2\n\u22a2 deriv (fun x => -(x * 42) - x ^ 2 * 31 + x ^ 4 * 5) (-1) = 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1246,
                "column": 20
            },
            "endPos": {
                "line": 1246,
                "column": 50
            },
            "data": "linarith failed to find a contradiction\ncase h\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 - 42 * x - 31 * x ^ 2\na\u271d : deriv (deriv fun x => 5 * x ^ 4 - 42 * x - 31 * x ^ 2) (-1) \u2265 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1253,
                "column": 6
            },
            "endPos": {
                "line": 1253,
                "column": 78
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1253,
                "column": 6
            },
            "endPos": {
                "line": 1253,
                "column": 78
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1262,
                "column": 6
            },
            "endPos": {
                "line": 1262,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - 46873 * x ^ 2 + 374980 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1267,
                "column": 2
            },
            "endPos": {
                "line": 1267,
                "column": 6
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1279,
                "column": 6
            },
            "endPos": {
                "line": 1279,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase right.h\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 * 4 - x * 6924 - x ^ 2 * 865\na\u271d : deriv (deriv fun x => x ^ 4 * 4 - x * 6924 - x ^ 2 * 865) (-6) \u2265 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1281,
                "column": 121
            },
            "endPos": {
                "line": 1286,
                "column": 10
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 4 + 34 * x - 27 * x ^ 2\n\u22a2 deriv (fun x => 5 * x ^ 4 + 34 * x - 27 * x ^ 2) 1 = 0 \u2227 0 < deriv (deriv fun x => 5 * x ^ 4 + 34 * x - 27 * x ^ 2) 1"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1288,
                "column": 155
            },
            "endPos": {
                "line": 1294,
                "column": 10
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 6 - 2 * x ^ 5 + x ^ 4 - 5 * x ^ 3 - 1855 * x ^ 2 - 8619 * x\n\u22a2 deriv (fun x => x ^ 6 - 2 * x ^ 5 + x ^ 4 - 5 * x ^ 3 - 1855 * x ^ 2 - 8619 * x) (-3) = 0 \u2227\n    deriv (deriv fun x => x ^ 6 - 2 * x ^ 5 + x ^ 4 - 5 * x ^ 3 - 1855 * x ^ 2 - 8619 * x) (-3) < 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1296,
                "column": 140
            },
            "endPos": {
                "line": 1301,
                "column": 159
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nh : True\n\u22a2 deriv (fun x => 2 * x ^ 6 + 4 * x ^ 5 - 23752 * x ^ 2 + 187520 * x) 5 = 0 \u2227\n    deriv (deriv fun x => 2 * x ^ 6 + 4 * x ^ 5 - 23752 * x ^ 2 + 187520 * x) 5 < 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1307,
                "column": 6
            },
            "endPos": {
                "line": 1307,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 2 - 24 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1316,
                "column": 6
            },
            "endPos": {
                "line": 1316,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 6 + 4 * x ^ 5 - 28080 * x ^ 2 + 264384 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1326,
                "column": 2
            },
            "endPos": {
                "line": 1326,
                "column": 28
            },
            "data": "tactic 'apply' failed, failed to unify\n  HasDerivAt (fun y => ?c * ?d y) (?c * ?d') ?x\nwith\n  HasDerivAt (fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x) 0 (-6)\ncase left.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x\n\u22a2 HasDerivAt (fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x) 0 (-6)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1326,
                "column": 2
            },
            "endPos": {
                "line": 1326,
                "column": 28
            },
            "data": "tactic 'apply' failed, failed to unify\n  HasDerivAt (fun y => ?c * ?d y) (?c * ?d') ?x\nwith\n  HasDerivAt (deriv fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x) 0 (-6)\ncase right.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x\n\u22a2 HasDerivAt (deriv fun x => 3 * x ^ 4 + 4 * x ^ 3 - 576 * x ^ 2 - 4752 * x) 0 (-6)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1338,
                "column": 6
            },
            "endPos": {
                "line": 1338,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 - 3 * x ^ 3 - 351 * x ^ 2 + 1928 * x\na\u271d : deriv (fun x => 4 * x ^ 4 - 3 * (x * (x * x)) - 351 * (x * x) + 1928 * x) 4 < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1338,
                "column": 6
            },
            "endPos": {
                "line": 1338,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\ncase right.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 4 * x ^ 4 - 3 * x ^ 3 - 351 * x ^ 2 + 1928 * x\na\u271d : deriv (deriv fun x => 4 * x ^ 4 - 3 * (x * (x * x)) - 351 * (x * x) + 1928 * x) 4 \u2265 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1345,
                "column": 19
            },
            "endPos": {
                "line": 1345,
                "column": 27
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nhf : f = fun x => 5 * x ^ 4 - 3 * x ^ 3 - 242 * x ^ 2 + 993 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1353,
                "column": 6
            },
            "endPos": {
                "line": 1353,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 5 * x ^ 6 - x ^ 5 + 2 * x ^ 4 + 4 * x ^ 3 - 18797 * x ^ 2 + 120232 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1357,
                "column": 78
            },
            "endPos": {
                "line": 1357,
                "column": 85
            },
            "data": "unknown identifier 'deriv_X'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1358,
                "column": 63
            },
            "endPos": {
                "line": 1358,
                "column": 71
            },
            "data": "unknown identifier 'zero_neg'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1361,
                "column": 6
            },
            "endPos": {
                "line": 1361,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nhf : f = fun x => 4 * x ^ 5 - 2 * x ^ 4 + x ^ 3 + 373 * x ^ 2 + 1096 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1368,
                "column": 18
            },
            "endPos": {
                "line": 1368,
                "column": 26
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 + 2 * x ^ 4 - 5 * x ^ 3 - 2504 * x - 801 * x ^ 2\na\u271d : deriv (fun x => 3 * x ^ 6 + 2 * x ^ 4 - 5 * x ^ 3 - 2504 * x - 801 * x ^ 2) (-2) < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1368,
                "column": 18
            },
            "endPos": {
                "line": 1368,
                "column": 26
            },
            "data": "linarith failed to find a contradiction\ncase right.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 6 + 2 * x ^ 4 - 5 * x ^ 3 - 2504 * x - 801 * x ^ 2\na\u271d : deriv (deriv fun x => 3 * x ^ 6 + 2 * x ^ 4 - 5 * x ^ 3 - 2504 * x - 801 * x ^ 2) (-2) \u2265 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1377,
                "column": 6
            },
            "endPos": {
                "line": 1377,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 3 - 9 * x ^ 2 + 27 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1382,
                "column": 2
            },
            "endPos": {
                "line": 1383,
                "column": 13
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1395,
                "column": 12
            },
            "endPos": {
                "line": 1395,
                "column": 49
            },
            "data": "unknown identifier 'deriv_two_mul_deriv_sub_deriv_two_mul'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1400,
                "column": 18
            },
            "endPos": {
                "line": 1400,
                "column": 26
            },
            "data": "linarith failed to find a contradiction\ncase left.h1.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x\na\u271d : deriv (fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x) (-5) < 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1400,
                "column": 18
            },
            "endPos": {
                "line": 1400,
                "column": 26
            },
            "data": "linarith failed to find a contradiction\ncase right.h\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x\na\u271d : deriv (deriv fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x) (-5) \u2265 0\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1407,
                "column": 6
            },
            "endPos": {
                "line": 1407,
                "column": 18
            },
            "data": "tactic 'simp' failed, nested error:\nmaximum recursion depth has been reached\nuse `set_option maxRecDepth <num>` to increase limit\nuse `set_option diagnostics true` to get diagnostic information"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1407,
                "column": 6
            },
            "endPos": {
                "line": 1407,
                "column": 18
            },
            "data": "tactic 'simp' failed, nested error:\nmaximum recursion depth has been reached\nuse `set_option maxRecDepth <num>` to increase limit\nuse `set_option diagnostics true` to get diagnostic information"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1416,
                "column": 6
            },
            "endPos": {
                "line": 1416,
                "column": 57
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1416,
                "column": 6
            },
            "endPos": {
                "line": 1416,
                "column": 57
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1423,
                "column": 2
            },
            "endPos": {
                "line": 1423,
                "column": 14
            },
            "data": "tactic 'simp' failed, nested error:\nmaximum recursion depth has been reached\nuse `set_option maxRecDepth <num>` to increase limit\nuse `set_option diagnostics true` to get diagnostic information"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1433,
                "column": 14
            },
            "endPos": {
                "line": 1433,
                "column": 29
            },
            "data": "unknown identifier 'deriv_sq_nonneg'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1435,
                "column": 105
            },
            "endPos": {
                "line": 1440,
                "column": 10
            },
            "data": "unsolved goals\nf : \u211d \u2192 \u211d\nhf : f = fun x => x ^ 2 + 4 * x\n\u22a2 0 < deriv (deriv fun x => x * x + x * 4) (-2)"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1447,
                "column": 6
            },
            "endPos": {
                "line": 1447,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 6 + 3 * x ^ 4 - 3 * x ^ 3 - 39471 * x ^ 2 + 378072 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1454,
                "column": 12
            },
            "endPos": {
                "line": 1454,
                "column": 31
            },
            "data": "unknown identifier 'deriv_sq_pos_of_neg'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1458,
                "column": 66
            },
            "endPos": {
                "line": 1458,
                "column": 79
            },
            "data": "unknown constant 'Nat.cast_bit1'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1459,
                "column": 4
            },
            "endPos": {
                "line": 1459,
                "column": 17
            },
            "data": "unknown constant 'Nat.cast_bit0'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1461,
                "column": 6
            },
            "endPos": {
                "line": 1461,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 + 44 * x ^ 2 + 215 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1467,
                "column": 6
            },
            "endPos": {
                "line": 1467,
                "column": 68
            },
            "data": "simp made no progress"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1471,
                "column": 130
            },
            "endPos": {
                "line": 1479,
                "column": 10
            },
            "data": "unsolved goals\ncase left\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 + 3 * x ^ 3 - 20 * x - 4 * x ^ 2\n\u22a2 deriv (fun x => x ^ 4 + 3 * x ^ 3 - 20 * x - 4 * x ^ 2) (-2) = 0\n\ncase right\nf : \u211d \u2192 \u211d\nh : f = fun x => x ^ 4 + 3 * x ^ 3 - 20 * x - 4 * x ^ 2\n\u22a2 deriv (deriv fun x => x ^ 4 + 3 * x ^ 3 - 20 * x - 4 * x ^ 2) (-2) > 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1486,
                "column": 6
            },
            "endPos": {
                "line": 1486,
                "column": 15
            },
            "data": "tactic 'rewrite' failed, did not find instance of the pattern in the target expression\n  deriv (fun x => x ^ ?n) ?m.4821986\ncase left\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 4 - 287 * x ^ 2 - 1528 * x\n\u22a2 deriv (fun x => 3 * x ^ 4 - 287 * x ^ 2) (-4) - deriv (HMul.hMul 1528) (-4) = 0"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1505,
                "column": 6
            },
            "endPos": {
                "line": 1505,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nhf : f = fun x => 2 * x ^ 2 - 24 * x\n\u22a2 False failed"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1510,
                "column": 15
            },
            "endPos": {
                "line": 1510,
                "column": 27
            },
            "data": "unknown identifier 'add_left_neg'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1516,
                "column": 12
            },
            "endPos": {
                "line": 1516,
                "column": 54
            },
            "data": "unknown identifier 'deriv_mul_comp_deriv_of_comp_deriv_ne_zero'"
        },
        {
            "severity": "error",
            "pos": {
                "line": 1523,
                "column": 6
            },
            "endPos": {
                "line": 1523,
                "column": 14
            },
            "data": "linarith failed to find a contradiction\nf : \u211d \u2192 \u211d\nh : f = fun x => 3 * x ^ 3 + 45 * x ^ 2 + 225 * x\n\u22a2 False failed"
        }
    ],
    "env": 0
}