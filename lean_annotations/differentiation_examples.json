[
    {
        "proof": "example (x: \u211d)  (h_log_ne_zero_16: x \u2260 0): deriv (\u03bb x \u21a6 Real.sin ((Real.exp x) * (x ^ 2 + (3:\u211d)) + Real.cos (Real.log x))) x = Real.cos (Real.exp x * (x ^ 2 + (3:\u211d)) + Real.cos (Real.log x)) * ((Real.exp x * (x ^ 2 + (3:\u211d))) + (Real.exp x * ((2:\u211d) * x)) + (-1:\u211d) * Real.sin (Real.log x) * ((1:\u211d) / x)) := by\n\nnth_rewrite 1 [\u2190 Function.comp_def]\nnth_rewrite 1 [deriv_comp]\nnth_rewrite 1 [Real.deriv_sin]\nnth_rewrite 1 [deriv_add]\nnth_rewrite 1 [deriv_mul]\nnth_rewrite 1 [Real.deriv_exp]\nnth_rewrite 1 [deriv_add]\nnth_rewrite 1 [deriv_pow'']\nnth_rewrite 1 [deriv_id'']\nnth_rewrite 1 [deriv_const]\nnth_rewrite 2 [\u2190 Function.comp_def]\nnth_rewrite 1 [deriv_comp]\nnth_rewrite 1 [Real.deriv_cos]\nnth_rewrite 1 [Real.deriv_log]\nring\nexact Real.differentiableAt_cos\nexact Real.differentiableAt_log (h_log_ne_zero_16)\nexact differentiableAt_id\nexact differentiableAt_pow _\nexact differentiableAt_const _\nexact Real.differentiableAt_exp\nexact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)\nexact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))\nexact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16))\nexact Real.differentiableAt_sin\nexact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_16)))\n",
        "annotation": "We want to prove that the derivative with respect to x of sin((e^x) * (x^2 + 3) + cos(log(x))) = cos(e^x * (x^2 + 3) + cos(log(x))) * ((e^x * (x^2 + 3)) + (e^x * 2 * x) + (-1) * sin (log(x)) / x) given that x is not equal to 0.\n1. First we must differentiate the function, which will include using (more than once) differentiation rules.\n2. Second, we must simplify the algebra to show the two sides of the equation are equal. Often this is trivial / obvious.\n3. Finally, we recall that each differentiation rule we applied in step (1) requires that we prove differentiability of the constituent functions, so we prove that here.\nNow we are done!\n"
    },
    {
        "proof": "example (x: \u211d)  (h_div_ne_zero_20: Real.log ((5:\u211d)) \u2260 0) (h_log_ne_zero_21: x \u2260 0) (h_log_ne_zero_23: (5:\u211d) \u2260 0): deriv (\u03bb x \u21a6 Real.exp ((Real.exp x) * (x ^ 2 + (3:\u211d)) + (x ^ 3) * (Real.log x / Real.log (5:\u211d)))) x = Real.exp (Real.exp x * (x ^ 2 + (3:\u211d)) + (x ^ 3) * (Real.log x / Real.log (5:\u211d))) * ((Real.exp x * (x ^ 2 + (3:\u211d))) + (Real.exp x * ((2:\u211d) * x)) + (((3:\u211d) * x ^ 2) * (Real.log x / Real.log (5:\u211d))) + ((x ^ 3) * ((((1:\u211d) / x) * Real.log (5:\u211d)) / Real.log (5:\u211d) ^ 2))) := by\n\nnth_rewrite 1 [\u2190 Function.comp_def]\nnth_rewrite 1 [deriv_comp]\nnth_rewrite 1 [Real.deriv_exp]\nnth_rewrite 1 [deriv_add]\nnth_rewrite 1 [deriv_mul]\nnth_rewrite 1 [Real.deriv_exp]\nnth_rewrite 1 [deriv_add]\nnth_rewrite 1 [deriv_pow'']\nnth_rewrite 1 [deriv_id'']\nnth_rewrite 1 [deriv_const]\nnth_rewrite 1 [deriv_mul]\nnth_rewrite 1 [deriv_pow'']\nnth_rewrite 1 [deriv_id'']\nnth_rewrite 1 [deriv_div]\nnth_rewrite 1 [Real.deriv_log]\nnth_rewrite 3 [\u2190 Function.comp_def]\nnth_rewrite 1 [deriv_comp]\nnth_rewrite 1 [Real.deriv_log]\nnth_rewrite 1 [deriv_const]\nfield_simp [h_div_ne_zero_20, h_log_ne_zero_21, h_log_ne_zero_23]\nring\nexact Real.differentiableAt_log (h_log_ne_zero_23)\nexact differentiableAt_const _\nexact Real.differentiableAt_log (h_log_ne_zero_21)\nexact DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)\nexact h_div_ne_zero_20\nexact differentiableAt_id\nexact differentiableAt_pow _\nexact DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)\nexact differentiableAt_id\nexact differentiableAt_pow _\nexact differentiableAt_const _\nexact Real.differentiableAt_exp\nexact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _)\nexact DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))\nexact DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20))\nexact Real.differentiableAt_exp\nexact DifferentiableAt.add (DifferentiableAt.mul (Real.differentiableAt_exp) (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_const _))) (DifferentiableAt.mul (differentiableAt_pow _) (DifferentiableAt.div (Real.differentiableAt_log (h_log_ne_zero_21)) (DifferentiableAt.log (differentiableAt_const _) (h_log_ne_zero_23)) (h_div_ne_zero_20)))\n",
        "annotation": "We want to prove that the derivative with respect to x of e^((e^x) * (x^2 + 3) + (x ^ 3) * log_5(x)) = e^(e^x * (x^2 + 3) + (x ^ 3) * log_5(x)) * ((e^x * (x^2 + 3)) + (e^x * 2 * x) + ((3 * x ^ 2) * log_5(x)) + ((x ^ 3) * ((log(5) / x) / log(5)) ^ 2))) given that x is not equal to 0.\n1. First we must differentiate the function, which will include using (more than once) differentiation rules.\n2. Second, we must simplify the algebra to show the two sides of the equation are equal. Often this is trivial / obvious.\n3. Finally, we recall that each differentiation rule we applied in step (1) requires that we prove differentiability of the constituent functions, so we prove that here.\nNow we are done!\n"
    },
    {
        "proof": "example (x: \u211d)  (h_log_ne_zero_5: x \u2260 0) (h_log_ne_zero_19: ((5:\u211d) * x + (2:\u211d)) \u2260 0): deriv (\u03bb x \u21a6 Real.cos (Real.log x) - (Real.sin ((2:\u211d) * x - (1:\u211d))) ^ 2 + (Real.log ((5:\u211d) * x + (2:\u211d))) ^ 3) x = (-1:\u211d) * Real.sin (Real.log x) * ((1:\u211d) / x) - ((2:\u211d) * Real.sin ((2:\u211d) * x - (1:\u211d)) * (Real.cos ((2:\u211d) * x - (1:\u211d)) * (2:\u211d))) + (3:\u211d) * Real.log ((5:\u211d) * x + (2:\u211d)) ^ 2 * ((5:\u211d) / ((5:\u211d) * x + (2:\u211d))) := by\n\nnth_rewrite 1 [deriv_add]\nnth_rewrite 1 [deriv_sub]\nnth_rewrite 1 [\u2190 Function.comp_def]\nnth_rewrite 1 [deriv_comp]\nnth_rewrite 1 [Real.deriv_cos]\nnth_rewrite 1 [Real.deriv_log]\nnth_rewrite 1 [deriv_pow'']\nnth_rewrite 1 [\u2190 Function.comp_def]\nnth_rewrite 1 [deriv_comp]\nnth_rewrite 1 [Real.deriv_sin]\nnth_rewrite 1 [deriv_sub]\nnth_rewrite 1 [deriv_mul]\nnth_rewrite 1 [deriv_const]\nnth_rewrite 1 [deriv_id'']\nnth_rewrite 1 [deriv_const]\nnth_rewrite 1 [deriv_pow'']\nnth_rewrite 2 [\u2190 Function.comp_def]\nnth_rewrite 1 [deriv_comp]\nnth_rewrite 1 [Real.deriv_log]\nnth_rewrite 1 [deriv_add]\nnth_rewrite 1 [deriv_mul]\nnth_rewrite 1 [deriv_const]\nnth_rewrite 1 [deriv_id'']\nnth_rewrite 1 [deriv_const]\nfield_simp [h_log_ne_zero_5, h_log_ne_zero_19]\nring\nexact differentiableAt_const _\nexact differentiableAt_id\nexact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\nexact differentiableAt_const _\nexact Real.differentiableAt_log (h_log_ne_zero_19)\nexact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)\nexact DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_19)\nexact differentiableAt_const _\nexact differentiableAt_id\nexact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\nexact differentiableAt_const _\nexact Real.differentiableAt_sin\nexact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)\nexact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))\nexact Real.differentiableAt_cos\nexact Real.differentiableAt_log (h_log_ne_zero_5)\nexact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))\nexact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _\nexact DifferentiableAt.sub (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_5))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)\nexact DifferentiableAt.pow (DifferentiableAt.log (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)) (h_log_ne_zero_19)) _\n",
        "annotation": "We want to prove that the derivative with respect to x of cos(log(x)) - (sin(2*x - 1)) ^ 2 + (log(5*x + 2)) ^3 = (-1) * sin(log(x)) / x - (2 * sin(2*x - 1) * (cos(2*x - 1) * 2)) + 3 * log(5*x + 2) ^ 2 * (5 / (5*x + 2)) given that x does not equal and 5*x + 2 does not equal 0 \n1. First we must differentiate the function, which will include using (more than once) differentiation rules.\n2. Second, we must simplify the algebra to show the two sides of the equation are equal. Often this is trivial / obvious.\n3. Finally, we recall that each differentiation rule we applied in step (1) requires that we prove differentiability of the constituent functions, so we prove that here.\nNow we are done!\n"
    },
    {
        "proof": "example (x: \u211d)  (h_tan_ne_zero_1: Real.cos (Real.cos ((Real.log (x))) * (Real.sin (((2:\u211d) * x - (1:\u211d)))) ^ 2) \u2260 0) (h_log_ne_zero_6: x \u2260 0): deriv (\u03bb x \u21a6 Real.tan (Real.cos (Real.log x) * (Real.sin ((2:\u211d) * x - (1:\u211d))) ^ 2)) x = ((((-1:\u211d) * Real.sin (Real.log x) * ((1:\u211d) / x)) * (Real.sin ((2:\u211d) * x - (1:\u211d)) ^ 2)) + (Real.cos (Real.log x) * ((2:\u211d) * Real.sin ((2:\u211d) * x - (1:\u211d)) * (Real.cos ((2:\u211d) * x - (1:\u211d)) * (2:\u211d))))) / Real.cos (Real.cos (Real.log x) * Real.sin ((2:\u211d) * x - (1:\u211d)) ^ 2) ^ 2 := by\n\nnth_rewrite 1 [\u2190 Function.comp_def]\nnth_rewrite 1 [deriv_comp]\nnth_rewrite 1 [Real.deriv_tan]\nnth_rewrite 1 [deriv_mul]\nnth_rewrite 1 [\u2190 Function.comp_def]\nnth_rewrite 1 [deriv_comp]\nnth_rewrite 1 [Real.deriv_cos]\nnth_rewrite 1 [Real.deriv_log]\nnth_rewrite 1 [deriv_pow'']\nnth_rewrite 1 [\u2190 Function.comp_def]\nnth_rewrite 1 [deriv_comp]\nnth_rewrite 1 [Real.deriv_sin]\nnth_rewrite 1 [deriv_sub]\nnth_rewrite 1 [deriv_mul]\nnth_rewrite 1 [deriv_const]\nnth_rewrite 1 [deriv_id'']\nnth_rewrite 1 [deriv_const]\nring\nexact differentiableAt_const _\nexact differentiableAt_id\nexact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\nexact differentiableAt_const _\nexact Real.differentiableAt_sin\nexact DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _)\nexact DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))\nexact Real.differentiableAt_cos\nexact Real.differentiableAt_log (h_log_ne_zero_6)\nexact DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))\nexact DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _\nexact Real.differentiableAt_tan.mpr (h_tan_ne_zero_1)\nexact DifferentiableAt.mul (DifferentiableAt.cos (Real.differentiableAt_log (h_log_ne_zero_6))) (DifferentiableAt.pow (DifferentiableAt.sin (DifferentiableAt.sub (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)) (differentiableAt_const _))) _)\n",
        "annotation": "\nWe want to prove that the derivative with respect to x of tan(cos(log(x)) * (sin(2*x - 1))^2) = ((((-1) * sin(log(x)) / x) * (sin (2*x - 1) ^ 2)) + (cos(log(x)) * 2 * sin(2*x - 1) * cos(2*x - 1) * 2)) / cos(cos(log(x)) * sin(2*x - 1)^2)^2 given that cos(cos(log(x)) * sin(2*x-1)) ^ 2 is not 0 and x is not 0\n1. First we must differentiate the function, which will include using (more than once) differentiation rules.\n2. Second, we must simplify the algebra to show the two sides of the equation are equal. Often this is trivial / obvious.\n3. Finally, we recall that each differentiation rule we applied in step (1) requires that we prove differentiability of the constituent functions, so we prove that here.\nNow we are done!\n"
    }
]