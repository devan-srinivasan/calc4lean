[
    {
        "proof": "example (x y c: \u211d) : (fderiv \u211d (fun p \u21a6 p.1 ^ 2 + 4 * p.1 - p.2 - c) ((1:\u211d), (7:\u211d)) (x-1, y-7) = 0) \u2192 (6*x + 1 - y = 0) := by\n  intro h\n  rw [fderiv_sub] at h\n\n  have h_split \n  (hp1: DifferentiableAt \u211d (fun p => p.1 ^ 2 + 4 * p.1) ((1:\u211d), (7:\u211d)))\n  (hp2: DifferentiableAt \u211d (fun p => p.2) ((1:\u211d), (7:\u211d))): \n    fderiv \u211d (fun p : \u211d \u00d7 \u211d => \n      p.1 ^ 2 + 4 * p.1 - p.2) ((1:\u211d), (7:\u211d))\n      = \n      fderiv \u211d (fun p => p.1 ^ 2 + 4 * p.1) ((1:\u211d), (7:\u211d)) -\n      fderiv \u211d (fun p => p.2) ((1:\u211d), (7:\u211d)) := by\n    rw [\u2190fderiv_sub]\n    \n    exact hp1\n    exact hp2\n\n  rw [h_split] at h\n  rw [ContinuousLinearMap.sub_apply] at h\n  rw [ContinuousLinearMap.sub_apply] at h\n\n  have h1 : (fderiv \u211d (fun p => p.1 ^ 2 + 4 * p.1) ((1:\u211d), (7:\u211d))) (x - 1, y - 7) = (x-1) * (6)  := by\n    have hp1comp : (fun p : \u211d \u00d7 \u211d => p.1 ^ 2 + 4 * p.1) = (fun x => x ^ 2 + 4 * x) \u2218 (fun p => p.1) := rfl\n    rw [hp1comp]\n    rw [fderiv_comp]\n    rw [fderiv_fst]\n    rw [\u2190deriv_fderiv]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    \n    rw [ContinuousLinearMap.comp_apply]\n    rw [ContinuousLinearMap.smulRight_apply]\n    rw [ContinuousLinearMap.coe_fst']\n    field_simp\n    norm_num\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (differentiableAt_pow _) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    \n    exact differentiableAt_fst\n\n  have h2 : (fderiv \u211d (fun p => p.2) ((1:\u211d), (7:\u211d))) (x - 1, y - 7) = (y-7) * (1)  := by\n    have hp2comp : (fun p : \u211d \u00d7 \u211d => p.2) = (fun x => x) \u2218 (fun p => p.2) := rfl\n    rw [hp2comp]\n    rw [fderiv_comp]\n    rw [fderiv_snd]\n    rw [\u2190deriv_fderiv]\n    nth_rewrite 1 [deriv_id'']\n    \n    rw [ContinuousLinearMap.comp_apply]\n    rw [ContinuousLinearMap.smulRight_apply]\n    rw [ContinuousLinearMap.coe_snd']\n    field_simp\n    \n    exact differentiableAt_id\n    \n    exact differentiableAt_snd\n\n  have h3 : fderiv \u211d (fun p : \u211d \u00d7 \u211d => (c:\u211d)) ((1:\u211d), (7:\u211d)) (x - 1, y - 7) = 0 := by\n    rw [fderiv_const]\n    field_simp\n\n  rw [h1] at h\n  rw [h2] at h\n  rw [h3] at h\n  ring_nf at h\n  linarith\n\n  exact DifferentiableAt.add (differentiableAt_fst.pow _) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_fst))\n  exact differentiableAt_snd\n  \n  exact DifferentiableAt.sub (DifferentiableAt.add (differentiableAt_fst.pow _) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_fst))) (differentiableAt_snd)\n\n  exact differentiableAt_const _",
        "annotation": "We want to prove that the equation of the tangent to the parabola x^2+4*x-y-c=0 at the point (1,7) is 6*x+1-y=0. The idea is, to calculate gradient (denoted by \u2207) of the function f(x,y)=x^2+4*x-y-c at the point (1,7), then taking the dot product of it with the shifted positional vector of (x-1, y-7). Setting that equation equal to 0 gives us the equation of the tangent, which we have to show is equivalent with 6*x+1-y=0.\n1) Introduce the hypothesis, which is the dot product of the gradient w.r.t to the shifted positional vector equated to 0.\n2) Apply derivative rule of subtraction to split \u2207(x^2+4*x-y-c) = \u2207(x^2+4*x-y) - \u2207(c)\n3) Define a hypothesis that splits the shows \u2207(x^2+4*x-y) = \u2207(x^2+4*x) - \u2207(y). Assume the function is differentiable at (x^2+4*x) and (y)\n4) Using the hypothesis and rules of linear map, split the gradient \u2207(x^2+4*x-y-c) = \u2207(x^2+4*x) - \u2207(y) - \u2207(c)\n5) Show that \u2207(x^2+4*x) at (1,7) dot product (x-1, y-7) = (x-1) * (6)\n  5.1) Using composition rules and derivative rules show that gradient w.r.t one variable is equal to simple derivative.\n  5.2) Calculate the derivative w.r.t x\n  5.3) Using rules of linear map and algebraic simplification, prove the equality\n  5.4) Prove the differentiability of x^2+4*x\n6) Show that \u2207(y) at (1,7) dot product (x-1, y-7) = 1\n  6.1) Using composition rules and derivative rules show that gradient w.r.t one variable is equal to simple derivative.\n  6.2) Calculate the derivative w.r.t y\n  6.3) Using rules of linear map and algebraic simplification, prove the equality\n  6.4) Prove the differentiability of y\n7) Show that \u2207(c) at (1,7) dot product (x-1, y-7) = 0\n8) Using the previous hypothesis simplify \u2207(x^2+4*x-y-c)\n9) Prove differentiability of \u2207(x^2+4*x), \u2207(y), \u2207(x^2+4*x-y) and \u2207(c)"
    },
    {
        "proof": "example (x y c: \u211d) : (fderiv \u211d (fun p \u21a6 3 * p.1 ^ 4 + p.1 + p.2 ^ 2 + 4 * p.2 - c) ((-4:\u211d), (5:\u211d)) (x-(-4), y-5) = 0) \u2192 ((x-(-4)) * (-767) + (y-5) * (14) = 0) := by\n  intro h\n  rw [fderiv_sub] at h\n\n  have h_split \n  (hp1: DifferentiableAt \u211d (fun p => 3 * p.1 ^ 4 + p.1) ((-4:\u211d), (5:\u211d)))\n  (hp2: DifferentiableAt \u211d (fun p => p.2 ^ 2 + 4 * p.2) ((-4:\u211d), (5:\u211d))): \n    fderiv \u211d (fun p : \u211d \u00d7 \u211d => \n      3 * p.1 ^ 4 + p.1 + p.2 ^ 2 + 4 * p.2) ((-4:\u211d), (5:\u211d))\n      = \n      fderiv \u211d (fun p => 3 * p.1 ^ 4 + p.1) ((-4:\u211d), (5:\u211d)) +\n      fderiv \u211d (fun p => p.2 ^ 2 + 4 * p.2) ((-4:\u211d), (5:\u211d)) := by\n    rw [\u2190fderiv_add]\n    congr 1\n    ext p\n    ring\n    \n    exact hp1\n    exact hp2\n\n  rw [h_split] at h\n  rw [ContinuousLinearMap.sub_apply] at h\n  rw [ContinuousLinearMap.add_apply] at h\n\n  have h1 : (fderiv \u211d (fun p => 3 * p.1 ^ 4 + p.1) ((-4:\u211d), (5:\u211d))) (x - (-4), y - 5) = (x-(-4)) * (-767)  := by\n    have hp1comp : (fun p : \u211d \u00d7 \u211d => 3 * p.1 ^ 4 + p.1) = (fun x => 3 * x ^ 4 + x) \u2218 (fun p => p.1) := rfl\n    rw [hp1comp]\n    rw [fderiv_comp]\n    rw [fderiv_fst]\n    rw [\u2190deriv_fderiv]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_id'']\n    \n    rw [ContinuousLinearMap.comp_apply]\n    rw [ContinuousLinearMap.smulRight_apply]\n    rw [ContinuousLinearMap.coe_fst']\n    field_simp\n    norm_num\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact differentiableAt_id\n    exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)) (differentiableAt_id)\n    \n    exact differentiableAt_fst\n\n  have h2 : (fderiv \u211d (fun p => p.2 ^ 2 + 4 * p.2) ((-4:\u211d), (5:\u211d))) (x - (-4), y - 5) = (y-5) * (14)  := by\n    have hp2comp : (fun p : \u211d \u00d7 \u211d => p.2 ^ 2 + 4 * p.2) = (fun x => x ^ 2 + 4 * x) \u2218 (fun p => p.2) := rfl\n    rw [hp2comp]\n    rw [fderiv_comp]\n    rw [fderiv_snd]\n    rw [\u2190deriv_fderiv]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    \n    rw [ContinuousLinearMap.comp_apply]\n    rw [ContinuousLinearMap.smulRight_apply]\n    rw [ContinuousLinearMap.coe_snd']\n    field_simp\n    norm_num\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (differentiableAt_pow _) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    \n    exact differentiableAt_snd\n\n  have h3 : fderiv \u211d (fun p : \u211d \u00d7 \u211d => (c:\u211d)) ((-4:\u211d), (5:\u211d)) (x - (-4), y - 5) = 0 := by\n    rw [fderiv_const]\n    field_simp\n\n  rw [h1] at h\n  rw [h2] at h\n  rw [h3] at h\n  ring_nf at h\n  linarith\n\n  exact DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_fst.pow _)) (differentiableAt_fst)\n  exact DifferentiableAt.add (differentiableAt_snd.pow _) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_snd))\n  \n  exact DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.add (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_fst.pow _)) (differentiableAt_fst)) (differentiableAt_snd.pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_snd))\n\n  exact differentiableAt_const _",
        "annotation": "We want to prove that the equation of the tangent to the curve 3 * x^4 + x + y^2 + 4 * y - c = 0 at the point (-4,5) is (x-(-4)) * (-767) + (y-5) * (14) = 0. The idea is, to calculate gradient (denoted by \u2207) of the function f(x,y)=3 * x^4 + x + y^2 + 4 * y - c at the point (-4,5), then taking the dot product of it with the shifted positional vector of (x-(-4), y-5). Setting that equation equal to 0 gives us the equation of the tangent, which we have to show is equivalent with (x-(-4)) * (-767) + (y-5) * (14) = 0.\n1) Introduce the hypothesis, which is the dot product of the gradient w.r.t to the shifted positional vector equated to 0.\n2) Apply derivative rule of subtraction to split \u2207(3 * x^4 + x + y^2 + 4 * y - c) = \u2207(3 * x^4 + x + y^2 + 4 * y) - \u2207(c)\n3) Define a hypothesis that splits the shows \u2207(3 * x^4 + x + y^2 + 4 * y) = \u2207(3 * x^4 + x) + \u2207(y^2 + 4 * y). Assume the function is differentiable at (3 * x^4 + x) and (y^2 + 4 * y)\n4) Using the hypothesis and rules of linear map, split the gradient \u2207(3 * x^4 + x + y^2 + 4 * y - c) = \u2207(3 * x^4 + x) + \u2207(y^2 + 4 * y) - \u2207(c)\n5) Show that \u2207(3 * x^4 + x) at (-4,5) dot product (x-(-4), y-5) = (x-(-4)) * (-767)\n  5.1) Using composition rules and derivative rules show that gradient w.r.t one variable is equal to simple derivative.\n  5.2) Calculate the derivative w.r.t x\n  5.3) Using rules of linear map and algebraic simplification, prove the equality\n  5.4) Prove the differentiability of 3 * x^4 + x\n6) Show that \u2207(y^2 + 4 * y) at (-4,5) dot product (x-(-4), y-5) = (y-5) * (14)\n  6.1) Using composition rules and derivative rules show that gradient w.r.t one variable is equal to simple derivative.\n  6.2) Calculate the derivative w.r.t y\n  6.3) Using rules of linear map and algebraic simplification, prove the equality\n  6.4) Prove the differentiability of y^2 + 4 * y\n7) Show that \u2207(c) at (-4,5) dot product (x-(-4), y-5) = 0\n8) Using the previous hypothesis simplify \u2207(3 * x^4 + x + y^2 + 4 * y - c)\n9) Prove differentiability of \u2207(3 * x^4 + x), \u2207(y^2 + 4 * y), \u2207(3 * x^4 + x + y^2 + 4 * y) and \u2207(c)"
    },
    {
        "proof": "example (x y c: \u211d) : (fderiv \u211d (fun p \u21a6 p.1 ^ 3 + 2 * p.1 ^ 2 - 3 * p.1 - p.2 ^ 3 - p.2 ^ 2 - 3 * p.2 - c) ((-1:\u211d), (6:\u211d)) (x-(-1), y-6) = 0) \u2192 ((x-(-1)) * (-4) - (y-6) * (123) = 0) := by\n  intro h\n  rw [fderiv_sub] at h\n\n  have h_split \n  (hp1: DifferentiableAt \u211d (fun p => p.1 ^ 3 + 2 * p.1 ^ 2 - 3 * p.1) ((-1:\u211d), (6:\u211d)))\n  (hp2: DifferentiableAt \u211d (fun p => p.2 ^ 3 + p.2 ^ 2 + 3 * p.2) ((-1:\u211d), (6:\u211d))): \n    fderiv \u211d (fun p : \u211d \u00d7 \u211d => \n      p.1 ^ 3 + 2 * p.1 ^ 2 - 3 * p.1 - p.2 ^ 3 - p.2 ^ 2 - 3 * p.2) ((-1:\u211d), (6:\u211d))\n      = \n      fderiv \u211d (fun p => p.1 ^ 3 + 2 * p.1 ^ 2 - 3 * p.1) ((-1:\u211d), (6:\u211d)) -\n      fderiv \u211d (fun p => p.2 ^ 3 + p.2 ^ 2 + 3 * p.2) ((-1:\u211d), (6:\u211d)) := by\n    rw [\u2190fderiv_sub]\n    congr 1\n    ext p\n    ring\n    \n    exact hp1\n    exact hp2\n\n  rw [h_split] at h\n  rw [ContinuousLinearMap.sub_apply] at h\n  rw [ContinuousLinearMap.sub_apply] at h\n\n  have h1 : (fderiv \u211d (fun p => p.1 ^ 3 + 2 * p.1 ^ 2 - 3 * p.1) ((-1:\u211d), (6:\u211d))) (x - (-1), y - 6) = (x-(-1)) * (-4)  := by\n    have hp1comp : (fun p : \u211d \u00d7 \u211d => p.1 ^ 3 + 2 * p.1 ^ 2 - 3 * p.1) = (fun x => x ^ 3 + 2 * x ^ 2 - 3 * x) \u2218 (fun p => p.1) := rfl\n    rw [hp1comp]\n    rw [fderiv_comp]\n    rw [fderiv_fst]\n    rw [\u2190deriv_fderiv]\n    nth_rewrite 1 [deriv_sub]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    \n    rw [ContinuousLinearMap.comp_apply]\n    rw [ContinuousLinearMap.smulRight_apply]\n    rw [ContinuousLinearMap.coe_fst']\n    field_simp\n    norm_num\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_const _\n    exact differentiableAt_pow _\n    exact differentiableAt_id\n    exact differentiableAt_pow _\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _)\n    exact DifferentiableAt.add (differentiableAt_pow _) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.sub (DifferentiableAt.add (differentiableAt_pow _) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    \n    exact differentiableAt_fst\n\n  have h2 : (fderiv \u211d (fun p => p.2 ^ 3 + p.2 ^ 2 + 3 * p.2) ((-1:\u211d), (6:\u211d))) (x - (-1), y - 6) = (y-6) * (123)  := by\n    have hp2comp : (fun p : \u211d \u00d7 \u211d => p.2 ^ 3 + p.2 ^ 2 + 3 * p.2) = (fun x => x ^ 3 + x ^ 2 + 3 * x) \u2218 (fun p => p.2) := rfl\n    rw [hp2comp]\n    rw [fderiv_comp]\n    rw [fderiv_snd]\n    rw [\u2190deriv_fderiv]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_add]\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_pow'']\n    nth_rewrite 1 [deriv_id'']\n    nth_rewrite 1 [deriv_mul]\n    nth_rewrite 1 [deriv_const]\n    nth_rewrite 1 [deriv_id'']\n    \n    rw [ContinuousLinearMap.comp_apply]\n    rw [ContinuousLinearMap.smulRight_apply]\n    rw [ContinuousLinearMap.coe_snd']\n    field_simp\n    norm_num\n    exact differentiableAt_const _\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_id\n    exact differentiableAt_pow _\n    exact differentiableAt_pow _\n    exact DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_pow _)\n    exact DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id)\n    exact DifferentiableAt.add (DifferentiableAt.add (differentiableAt_pow _) (differentiableAt_pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_id))\n    \n    exact differentiableAt_snd\n\n  have h3 : fderiv \u211d (fun p : \u211d \u00d7 \u211d => (c:\u211d)) ((-1:\u211d), (6:\u211d)) (x - (-1), y - 6) = 0 := by\n    rw [fderiv_const]\n    field_simp\n\n  rw [h1] at h\n  rw [h2] at h\n  rw [h3] at h\n  ring_nf at h\n  linarith\n\n  exact DifferentiableAt.sub (DifferentiableAt.add (differentiableAt_fst.pow _) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_fst.pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_fst))\n  exact DifferentiableAt.add (DifferentiableAt.add (differentiableAt_snd.pow _) (differentiableAt_snd.pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_snd))\n  \n  exact DifferentiableAt.sub (DifferentiableAt.sub (DifferentiableAt.sub (DifferentiableAt.sub (DifferentiableAt.add (differentiableAt_fst.pow _) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_fst.pow _))) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_fst))) (differentiableAt_snd.pow _)) (differentiableAt_snd.pow _)) (DifferentiableAt.mul (differentiableAt_const _) (differentiableAt_snd))\n\n  exact differentiableAt_const _",
        "annotation": "We want to prove that the equation of the tangent to the curve x ^ 3 + 2 * x ^ 2 - 3 * x - y ^ 3 - y ^ 2 - 3 * y - c = 0 at the point (-1,6) is (x-(-1)) * (-4) - (y-6) * (123) = 0. The idea is, to calculate gradient (denoted by \u2207) of the function f(x,y)=x ^ 3 + 2 * x ^ 2 - 3 * x - y ^ 3 - y ^ 2 - 3 * y - c at the point (-1,6), then taking the dot product of it with the shifted positional vector of (x-(-1), y-6). Setting that equation equal to 0 gives us the equation of the tangent, which we have to show is equivalent with (x-(-1)) * (-4) - (y-6) * (123) = 0.\n1) Introduce the hypothesis, which is the dot product of the gradient w.r.t to the shifted positional vector equated to 0.\n2) Apply derivative rule of subtraction to split \u2207(x ^ 3 + 2 * x ^ 2 - 3 * x - y ^ 3 - y ^ 2 - 3 * y - c) = \u2207(x ^ 3 + 2 * x ^ 2 - 3 * x - y ^ 3 - y ^ 2 - 3 * y) - \u2207(c)\n3) Define a hypothesis that splits the shows \u2207(x ^ 3 + 2 * x ^ 2 - 3 * x - y ^ 3 - y ^ 2 - 3 * y) = \u2207(x ^ 3 + 2 * x ^ 2 - 3 * x) + \u2207(y ^ 3 + y ^ 2 + 3 * y). Assume the function is differentiable at (x ^ 3 + 2 * x ^ 2 - 3 * x) and (y ^ 3 + y ^ 2 + 3 * y)\n4) Using the hypothesis and rules of linear map, split the gradient \u2207(x ^ 3 + 2 * x ^ 2 - 3 * x - y ^ 3 - y ^ 2 - 3 * y - c) = \u2207(x ^ 3 + 2 * x ^ 2 - 3 * x) + \u2207(y ^ 3 + y ^ 2 + 3 * y) - \u2207(c)\n5) Show that \u2207(x ^ 3 + 2 * x ^ 2 - 3 * x) at (-1,6) dot product (x-(-1), y-6) = (x-(-1)) * (-4)\n  5.1) Using composition rules and derivative rules show that gradient w.r.t one variable is equal to simple derivative.\n  5.2) Calculate the derivative w.r.t x\n  5.3) Using rules of linear map and algebraic simplification, prove the equality\n  5.4) Prove the differentiability of x ^ 3 + 2 * x ^ 2 - 3 * x\n6) Show that \u2207(y ^ 3 + y ^ 2 + 3 * y) at (-1,6) dot product (x-(-1), y-6) = (y-6) * (123)\n  6.1) Using composition rules and derivative rules show that gradient w.r.t one variable is equal to simple derivative.\n  6.2) Calculate the derivative w.r.t y\n  6.3) Using rules of linear map and algebraic simplification, prove the equality\n  6.4) Prove the differentiability of y ^ 3 + y ^ 2 + 3 * y\n7) Show that \u2207(c) at (-1,6) dot product (x-(-1), y-6) = 0\n8) Using the previous hypothesis simplify \u2207(x ^ 3 + 2 * x ^ 2 - 3 * x - y ^ 3 - y ^ 2 - 3 * y - c)\n9) Prove differentiability of \u2207(x ^ 3 + 2 * x ^ 2 - 3 * x), \u2207(y ^ 3 + y ^ 2 + 3 * y), \u2207(x ^ 3 + 2 * x ^ 2 - 3 * x - y ^ 3 - y ^ 2 - 3 * y) and \u2207(c)"
    }
]
